
// Copyright 2020 ConsenSys Software Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
	
#include "textflag.h"
#include "funcdata.h"

TEXT ·mul(SB), NOSPLIT, $0-24

	// the algorithm is described here
	// https://hackmd.io/@zkteam/modular_multiplication
	// however, to benefit from the ADCX and ADOX carry chains
	// we split the inner loops in 2:
	// for i=0 to N-1
	// 		for j=0 to N-1
	// 		    (A,t[j])  := t[j] + x[j]*y[i] + A
	// 		m := t[0]*q'[0] mod W
	// 		C,_ := t[0] + m*q[0]
	// 		for j=1 to N-1
	// 		    (C,t[j-1]) := t[j] + m*q[j] + C
	// 		t[N-1] = C + A
	
    CMPB ·supportAdx(SB), $0x0000000000000001
    JNE l1
    MOVQ x+8(FP), R14
    MOVQ y+16(FP), R15
    XORQ DX, DX
    MOVQ 0(R15), DX
    MULXQ 0(R14), CX, BX
    MULXQ 8(R14), AX, BP
    ADOXQ AX, BX
    MULXQ 16(R14), AX, SI
    ADOXQ AX, BP
    MULXQ 24(R14), AX, DI
    ADOXQ AX, SI
    MULXQ 32(R14), AX, R8
    ADOXQ AX, DI
    MULXQ 40(R14), AX, R9
    ADOXQ AX, R8
    // add the last carries to R9
    MOVQ $0x0000000000000000, DX
    ADCXQ DX, R9
    ADOXQ DX, R9
    MOVQ CX, DX
    MULXQ ·qElementInv0(SB), DX, AX                        // m := t[0]*q'[0] mod W
    XORQ AX, AX
    // C,_ := t[0] + m*q[0]
    MULXQ ·qElement+0(SB), AX, R10
    ADCXQ CX, AX
    MOVQ R10, CX
    // for j=1 to N-1
    //     (C,t[j-1]) := t[j] + m*q[j] + C
    ADCXQ BX, CX
    MULXQ ·qElement+8(SB), AX, BX
    ADOXQ AX, CX
    ADCXQ BP, BX
    MULXQ ·qElement+16(SB), AX, BP
    ADOXQ AX, BX
    ADCXQ SI, BP
    MULXQ ·qElement+24(SB), AX, SI
    ADOXQ AX, BP
    ADCXQ DI, SI
    MULXQ ·qElement+32(SB), AX, DI
    ADOXQ AX, SI
    ADCXQ R8, DI
    MULXQ ·qElement+40(SB), AX, R8
    ADOXQ AX, DI
    MOVQ $0x0000000000000000, AX
    ADCXQ AX, R8
    ADOXQ R9, R8
    XORQ DX, DX
    MOVQ 8(R15), DX
    MULXQ 0(R14), AX, R9
    ADOXQ AX, CX
    ADCXQ R9, BX
    MULXQ 8(R14), AX, R9
    ADOXQ AX, BX
    ADCXQ R9, BP
    MULXQ 16(R14), AX, R9
    ADOXQ AX, BP
    ADCXQ R9, SI
    MULXQ 24(R14), AX, R9
    ADOXQ AX, SI
    ADCXQ R9, DI
    MULXQ 32(R14), AX, R9
    ADOXQ AX, DI
    ADCXQ R9, R8
    MULXQ 40(R14), AX, R9
    ADOXQ AX, R8
    // add the last carries to R9
    MOVQ $0x0000000000000000, DX
    ADCXQ DX, R9
    ADOXQ DX, R9
    MOVQ CX, DX
    MULXQ ·qElementInv0(SB), DX, AX                        // m := t[0]*q'[0] mod W
    XORQ AX, AX
    // C,_ := t[0] + m*q[0]
    MULXQ ·qElement+0(SB), AX, R11
    ADCXQ CX, AX
    MOVQ R11, CX
    // for j=1 to N-1
    //     (C,t[j-1]) := t[j] + m*q[j] + C
    ADCXQ BX, CX
    MULXQ ·qElement+8(SB), AX, BX
    ADOXQ AX, CX
    ADCXQ BP, BX
    MULXQ ·qElement+16(SB), AX, BP
    ADOXQ AX, BX
    ADCXQ SI, BP
    MULXQ ·qElement+24(SB), AX, SI
    ADOXQ AX, BP
    ADCXQ DI, SI
    MULXQ ·qElement+32(SB), AX, DI
    ADOXQ AX, SI
    ADCXQ R8, DI
    MULXQ ·qElement+40(SB), AX, R8
    ADOXQ AX, DI
    MOVQ $0x0000000000000000, AX
    ADCXQ AX, R8
    ADOXQ R9, R8
    XORQ DX, DX
    MOVQ 16(R15), DX
    MULXQ 0(R14), AX, R9
    ADOXQ AX, CX
    ADCXQ R9, BX
    MULXQ 8(R14), AX, R9
    ADOXQ AX, BX
    ADCXQ R9, BP
    MULXQ 16(R14), AX, R9
    ADOXQ AX, BP
    ADCXQ R9, SI
    MULXQ 24(R14), AX, R9
    ADOXQ AX, SI
    ADCXQ R9, DI
    MULXQ 32(R14), AX, R9
    ADOXQ AX, DI
    ADCXQ R9, R8
    MULXQ 40(R14), AX, R9
    ADOXQ AX, R8
    // add the last carries to R9
    MOVQ $0x0000000000000000, DX
    ADCXQ DX, R9
    ADOXQ DX, R9
    MOVQ CX, DX
    MULXQ ·qElementInv0(SB), DX, AX                        // m := t[0]*q'[0] mod W
    XORQ AX, AX
    // C,_ := t[0] + m*q[0]
    MULXQ ·qElement+0(SB), AX, R12
    ADCXQ CX, AX
    MOVQ R12, CX
    // for j=1 to N-1
    //     (C,t[j-1]) := t[j] + m*q[j] + C
    ADCXQ BX, CX
    MULXQ ·qElement+8(SB), AX, BX
    ADOXQ AX, CX
    ADCXQ BP, BX
    MULXQ ·qElement+16(SB), AX, BP
    ADOXQ AX, BX
    ADCXQ SI, BP
    MULXQ ·qElement+24(SB), AX, SI
    ADOXQ AX, BP
    ADCXQ DI, SI
    MULXQ ·qElement+32(SB), AX, DI
    ADOXQ AX, SI
    ADCXQ R8, DI
    MULXQ ·qElement+40(SB), AX, R8
    ADOXQ AX, DI
    MOVQ $0x0000000000000000, AX
    ADCXQ AX, R8
    ADOXQ R9, R8
    XORQ DX, DX
    MOVQ 24(R15), DX
    MULXQ 0(R14), AX, R9
    ADOXQ AX, CX
    ADCXQ R9, BX
    MULXQ 8(R14), AX, R9
    ADOXQ AX, BX
    ADCXQ R9, BP
    MULXQ 16(R14), AX, R9
    ADOXQ AX, BP
    ADCXQ R9, SI
    MULXQ 24(R14), AX, R9
    ADOXQ AX, SI
    ADCXQ R9, DI
    MULXQ 32(R14), AX, R9
    ADOXQ AX, DI
    ADCXQ R9, R8
    MULXQ 40(R14), AX, R9
    ADOXQ AX, R8
    // add the last carries to R9
    MOVQ $0x0000000000000000, DX
    ADCXQ DX, R9
    ADOXQ DX, R9
    MOVQ CX, DX
    MULXQ ·qElementInv0(SB), DX, AX                        // m := t[0]*q'[0] mod W
    XORQ AX, AX
    // C,_ := t[0] + m*q[0]
    MULXQ ·qElement+0(SB), AX, R13
    ADCXQ CX, AX
    MOVQ R13, CX
    // for j=1 to N-1
    //     (C,t[j-1]) := t[j] + m*q[j] + C
    ADCXQ BX, CX
    MULXQ ·qElement+8(SB), AX, BX
    ADOXQ AX, CX
    ADCXQ BP, BX
    MULXQ ·qElement+16(SB), AX, BP
    ADOXQ AX, BX
    ADCXQ SI, BP
    MULXQ ·qElement+24(SB), AX, SI
    ADOXQ AX, BP
    ADCXQ DI, SI
    MULXQ ·qElement+32(SB), AX, DI
    ADOXQ AX, SI
    ADCXQ R8, DI
    MULXQ ·qElement+40(SB), AX, R8
    ADOXQ AX, DI
    MOVQ $0x0000000000000000, AX
    ADCXQ AX, R8
    ADOXQ R9, R8
    XORQ DX, DX
    MOVQ 32(R15), DX
    MULXQ 0(R14), AX, R9
    ADOXQ AX, CX
    ADCXQ R9, BX
    MULXQ 8(R14), AX, R9
    ADOXQ AX, BX
    ADCXQ R9, BP
    MULXQ 16(R14), AX, R9
    ADOXQ AX, BP
    ADCXQ R9, SI
    MULXQ 24(R14), AX, R9
    ADOXQ AX, SI
    ADCXQ R9, DI
    MULXQ 32(R14), AX, R9
    ADOXQ AX, DI
    ADCXQ R9, R8
    MULXQ 40(R14), AX, R9
    ADOXQ AX, R8
    // add the last carries to R9
    MOVQ $0x0000000000000000, DX
    ADCXQ DX, R9
    ADOXQ DX, R9
    MOVQ CX, DX
    MULXQ ·qElementInv0(SB), DX, AX                        // m := t[0]*q'[0] mod W
    XORQ AX, AX
    // C,_ := t[0] + m*q[0]
    MULXQ ·qElement+0(SB), AX, R10
    ADCXQ CX, AX
    MOVQ R10, CX
    // for j=1 to N-1
    //     (C,t[j-1]) := t[j] + m*q[j] + C
    ADCXQ BX, CX
    MULXQ ·qElement+8(SB), AX, BX
    ADOXQ AX, CX
    ADCXQ BP, BX
    MULXQ ·qElement+16(SB), AX, BP
    ADOXQ AX, BX
    ADCXQ SI, BP
    MULXQ ·qElement+24(SB), AX, SI
    ADOXQ AX, BP
    ADCXQ DI, SI
    MULXQ ·qElement+32(SB), AX, DI
    ADOXQ AX, SI
    ADCXQ R8, DI
    MULXQ ·qElement+40(SB), AX, R8
    ADOXQ AX, DI
    MOVQ $0x0000000000000000, AX
    ADCXQ AX, R8
    ADOXQ R9, R8
    XORQ DX, DX
    MOVQ 40(R15), DX
    MULXQ 0(R14), AX, R9
    ADOXQ AX, CX
    ADCXQ R9, BX
    MULXQ 8(R14), AX, R9
    ADOXQ AX, BX
    ADCXQ R9, BP
    MULXQ 16(R14), AX, R9
    ADOXQ AX, BP
    ADCXQ R9, SI
    MULXQ 24(R14), AX, R9
    ADOXQ AX, SI
    ADCXQ R9, DI
    MULXQ 32(R14), AX, R9
    ADOXQ AX, DI
    ADCXQ R9, R8
    MULXQ 40(R14), AX, R9
    ADOXQ AX, R8
    // add the last carries to R9
    MOVQ $0x0000000000000000, DX
    ADCXQ DX, R9
    ADOXQ DX, R9
    MOVQ CX, DX
    MULXQ ·qElementInv0(SB), DX, AX                        // m := t[0]*q'[0] mod W
    XORQ AX, AX
    // C,_ := t[0] + m*q[0]
    MULXQ ·qElement+0(SB), AX, R11
    ADCXQ CX, AX
    MOVQ R11, CX
    // for j=1 to N-1
    //     (C,t[j-1]) := t[j] + m*q[j] + C
    ADCXQ BX, CX
    MULXQ ·qElement+8(SB), AX, BX
    ADOXQ AX, CX
    ADCXQ BP, BX
    MULXQ ·qElement+16(SB), AX, BP
    ADOXQ AX, BX
    ADCXQ SI, BP
    MULXQ ·qElement+24(SB), AX, SI
    ADOXQ AX, BP
    ADCXQ DI, SI
    MULXQ ·qElement+32(SB), AX, DI
    ADOXQ AX, SI
    ADCXQ R8, DI
    MULXQ ·qElement+40(SB), AX, R8
    ADOXQ AX, DI
    MOVQ $0x0000000000000000, AX
    ADCXQ AX, R8
    ADOXQ R9, R8
    MOVQ res+0(FP), R12
    MOVQ CX, R13
    MOVQ BX, R10
    MOVQ BP, R11
    MOVQ SI, R9
    MOVQ DI, R14
    MOVQ R8, R15
    SUBQ ·qElement+0(SB), R13
    SBBQ ·qElement+8(SB), R10
    SBBQ ·qElement+16(SB), R11
    SBBQ ·qElement+24(SB), R9
    SBBQ ·qElement+32(SB), R14
    SBBQ ·qElement+40(SB), R15
    CMOVQCC R13, CX
    CMOVQCC R10, BX
    CMOVQCC R11, BP
    CMOVQCC R9, SI
    CMOVQCC R14, DI
    CMOVQCC R15, R8
    MOVQ CX, 0(R12)
    MOVQ BX, 8(R12)
    MOVQ BP, 16(R12)
    MOVQ SI, 24(R12)
    MOVQ DI, 32(R12)
    MOVQ R8, 40(R12)
    RET
l1:
    MOVQ x+8(FP), R15
    MOVQ y+16(FP), R14
    MOVQ 0(R15), AX
    MOVQ 0(R14), R10
    MULQ R10
    MOVQ AX, CX
    MOVQ DX, R11
    MOVQ ·qElementInv0(SB), R12
    IMULQ CX, R12
    MOVQ $0x8508c00000000001, AX
    MULQ R12
    ADDQ CX, AX
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R9
    MOVQ 8(R15), AX
    MULQ R10
    MOVQ R11, BX
    ADDQ AX, BX
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ $0x170b5d4430000000, AX
    MULQ R12
    ADDQ BX, R9
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R9
    ADCQ $0x0000000000000000, DX
    MOVQ R9, CX
    MOVQ DX, R9
    MOVQ 16(R15), AX
    MULQ R10
    MOVQ R11, BP
    ADDQ AX, BP
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ $0x1ef3622fba094800, AX
    MULQ R12
    ADDQ BP, R9
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R9
    ADCQ $0x0000000000000000, DX
    MOVQ R9, BX
    MOVQ DX, R9
    MOVQ 24(R15), AX
    MULQ R10
    MOVQ R11, SI
    ADDQ AX, SI
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ $0x1a22d9f300f5138f, AX
    MULQ R12
    ADDQ SI, R9
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R9
    ADCQ $0x0000000000000000, DX
    MOVQ R9, BP
    MOVQ DX, R9
    MOVQ 32(R15), AX
    MULQ R10
    MOVQ R11, DI
    ADDQ AX, DI
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ $0xc63b05c06ca1493b, AX
    MULQ R12
    ADDQ DI, R9
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R9
    ADCQ $0x0000000000000000, DX
    MOVQ R9, SI
    MOVQ DX, R9
    MOVQ 40(R15), AX
    MULQ R10
    MOVQ R11, R8
    ADDQ AX, R8
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ $0x01ae3a4617c510ea, AX
    MULQ R12
    ADDQ R8, R9
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R9
    ADCQ $0x0000000000000000, DX
    MOVQ R9, DI
    MOVQ DX, R9
    ADDQ R9, R11
    MOVQ R11, R8
    MOVQ 0(R15), AX
    MOVQ 8(R14), R10
    MULQ R10
    ADDQ AX, CX
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ ·qElementInv0(SB), R12
    IMULQ CX, R12
    MOVQ $0x8508c00000000001, AX
    MULQ R12
    ADDQ CX, AX
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R9
    MOVQ 8(R15), AX
    MULQ R10
    ADDQ R11, BX
    ADCQ $0x0000000000000000, DX
    ADDQ AX, BX
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ $0x170b5d4430000000, AX
    MULQ R12
    ADDQ BX, R9
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R9
    ADCQ $0x0000000000000000, DX
    MOVQ R9, CX
    MOVQ DX, R9
    MOVQ 16(R15), AX
    MULQ R10
    ADDQ R11, BP
    ADCQ $0x0000000000000000, DX
    ADDQ AX, BP
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ $0x1ef3622fba094800, AX
    MULQ R12
    ADDQ BP, R9
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R9
    ADCQ $0x0000000000000000, DX
    MOVQ R9, BX
    MOVQ DX, R9
    MOVQ 24(R15), AX
    MULQ R10
    ADDQ R11, SI
    ADCQ $0x0000000000000000, DX
    ADDQ AX, SI
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ $0x1a22d9f300f5138f, AX
    MULQ R12
    ADDQ SI, R9
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R9
    ADCQ $0x0000000000000000, DX
    MOVQ R9, BP
    MOVQ DX, R9
    MOVQ 32(R15), AX
    MULQ R10
    ADDQ R11, DI
    ADCQ $0x0000000000000000, DX
    ADDQ AX, DI
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ $0xc63b05c06ca1493b, AX
    MULQ R12
    ADDQ DI, R9
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R9
    ADCQ $0x0000000000000000, DX
    MOVQ R9, SI
    MOVQ DX, R9
    MOVQ 40(R15), AX
    MULQ R10
    ADDQ R11, R8
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R8
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ $0x01ae3a4617c510ea, AX
    MULQ R12
    ADDQ R8, R9
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R9
    ADCQ $0x0000000000000000, DX
    MOVQ R9, DI
    MOVQ DX, R9
    ADDQ R9, R11
    MOVQ R11, R8
    MOVQ 0(R15), AX
    MOVQ 16(R14), R10
    MULQ R10
    ADDQ AX, CX
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ ·qElementInv0(SB), R12
    IMULQ CX, R12
    MOVQ $0x8508c00000000001, AX
    MULQ R12
    ADDQ CX, AX
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R9
    MOVQ 8(R15), AX
    MULQ R10
    ADDQ R11, BX
    ADCQ $0x0000000000000000, DX
    ADDQ AX, BX
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ $0x170b5d4430000000, AX
    MULQ R12
    ADDQ BX, R9
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R9
    ADCQ $0x0000000000000000, DX
    MOVQ R9, CX
    MOVQ DX, R9
    MOVQ 16(R15), AX
    MULQ R10
    ADDQ R11, BP
    ADCQ $0x0000000000000000, DX
    ADDQ AX, BP
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ $0x1ef3622fba094800, AX
    MULQ R12
    ADDQ BP, R9
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R9
    ADCQ $0x0000000000000000, DX
    MOVQ R9, BX
    MOVQ DX, R9
    MOVQ 24(R15), AX
    MULQ R10
    ADDQ R11, SI
    ADCQ $0x0000000000000000, DX
    ADDQ AX, SI
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ $0x1a22d9f300f5138f, AX
    MULQ R12
    ADDQ SI, R9
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R9
    ADCQ $0x0000000000000000, DX
    MOVQ R9, BP
    MOVQ DX, R9
    MOVQ 32(R15), AX
    MULQ R10
    ADDQ R11, DI
    ADCQ $0x0000000000000000, DX
    ADDQ AX, DI
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ $0xc63b05c06ca1493b, AX
    MULQ R12
    ADDQ DI, R9
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R9
    ADCQ $0x0000000000000000, DX
    MOVQ R9, SI
    MOVQ DX, R9
    MOVQ 40(R15), AX
    MULQ R10
    ADDQ R11, R8
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R8
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ $0x01ae3a4617c510ea, AX
    MULQ R12
    ADDQ R8, R9
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R9
    ADCQ $0x0000000000000000, DX
    MOVQ R9, DI
    MOVQ DX, R9
    ADDQ R9, R11
    MOVQ R11, R8
    MOVQ 0(R15), AX
    MOVQ 24(R14), R10
    MULQ R10
    ADDQ AX, CX
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ ·qElementInv0(SB), R12
    IMULQ CX, R12
    MOVQ $0x8508c00000000001, AX
    MULQ R12
    ADDQ CX, AX
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R9
    MOVQ 8(R15), AX
    MULQ R10
    ADDQ R11, BX
    ADCQ $0x0000000000000000, DX
    ADDQ AX, BX
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ $0x170b5d4430000000, AX
    MULQ R12
    ADDQ BX, R9
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R9
    ADCQ $0x0000000000000000, DX
    MOVQ R9, CX
    MOVQ DX, R9
    MOVQ 16(R15), AX
    MULQ R10
    ADDQ R11, BP
    ADCQ $0x0000000000000000, DX
    ADDQ AX, BP
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ $0x1ef3622fba094800, AX
    MULQ R12
    ADDQ BP, R9
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R9
    ADCQ $0x0000000000000000, DX
    MOVQ R9, BX
    MOVQ DX, R9
    MOVQ 24(R15), AX
    MULQ R10
    ADDQ R11, SI
    ADCQ $0x0000000000000000, DX
    ADDQ AX, SI
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ $0x1a22d9f300f5138f, AX
    MULQ R12
    ADDQ SI, R9
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R9
    ADCQ $0x0000000000000000, DX
    MOVQ R9, BP
    MOVQ DX, R9
    MOVQ 32(R15), AX
    MULQ R10
    ADDQ R11, DI
    ADCQ $0x0000000000000000, DX
    ADDQ AX, DI
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ $0xc63b05c06ca1493b, AX
    MULQ R12
    ADDQ DI, R9
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R9
    ADCQ $0x0000000000000000, DX
    MOVQ R9, SI
    MOVQ DX, R9
    MOVQ 40(R15), AX
    MULQ R10
    ADDQ R11, R8
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R8
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ $0x01ae3a4617c510ea, AX
    MULQ R12
    ADDQ R8, R9
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R9
    ADCQ $0x0000000000000000, DX
    MOVQ R9, DI
    MOVQ DX, R9
    ADDQ R9, R11
    MOVQ R11, R8
    MOVQ 0(R15), AX
    MOVQ 32(R14), R10
    MULQ R10
    ADDQ AX, CX
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ ·qElementInv0(SB), R12
    IMULQ CX, R12
    MOVQ $0x8508c00000000001, AX
    MULQ R12
    ADDQ CX, AX
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R9
    MOVQ 8(R15), AX
    MULQ R10
    ADDQ R11, BX
    ADCQ $0x0000000000000000, DX
    ADDQ AX, BX
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ $0x170b5d4430000000, AX
    MULQ R12
    ADDQ BX, R9
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R9
    ADCQ $0x0000000000000000, DX
    MOVQ R9, CX
    MOVQ DX, R9
    MOVQ 16(R15), AX
    MULQ R10
    ADDQ R11, BP
    ADCQ $0x0000000000000000, DX
    ADDQ AX, BP
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ $0x1ef3622fba094800, AX
    MULQ R12
    ADDQ BP, R9
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R9
    ADCQ $0x0000000000000000, DX
    MOVQ R9, BX
    MOVQ DX, R9
    MOVQ 24(R15), AX
    MULQ R10
    ADDQ R11, SI
    ADCQ $0x0000000000000000, DX
    ADDQ AX, SI
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ $0x1a22d9f300f5138f, AX
    MULQ R12
    ADDQ SI, R9
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R9
    ADCQ $0x0000000000000000, DX
    MOVQ R9, BP
    MOVQ DX, R9
    MOVQ 32(R15), AX
    MULQ R10
    ADDQ R11, DI
    ADCQ $0x0000000000000000, DX
    ADDQ AX, DI
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ $0xc63b05c06ca1493b, AX
    MULQ R12
    ADDQ DI, R9
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R9
    ADCQ $0x0000000000000000, DX
    MOVQ R9, SI
    MOVQ DX, R9
    MOVQ 40(R15), AX
    MULQ R10
    ADDQ R11, R8
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R8
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ $0x01ae3a4617c510ea, AX
    MULQ R12
    ADDQ R8, R9
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R9
    ADCQ $0x0000000000000000, DX
    MOVQ R9, DI
    MOVQ DX, R9
    ADDQ R9, R11
    MOVQ R11, R8
    MOVQ 0(R15), AX
    MOVQ 40(R14), R10
    MULQ R10
    ADDQ AX, CX
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ ·qElementInv0(SB), R12
    IMULQ CX, R12
    MOVQ $0x8508c00000000001, AX
    MULQ R12
    ADDQ CX, AX
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R9
    MOVQ 8(R15), AX
    MULQ R10
    ADDQ R11, BX
    ADCQ $0x0000000000000000, DX
    ADDQ AX, BX
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ $0x170b5d4430000000, AX
    MULQ R12
    ADDQ BX, R9
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R9
    ADCQ $0x0000000000000000, DX
    MOVQ R9, CX
    MOVQ DX, R9
    MOVQ 16(R15), AX
    MULQ R10
    ADDQ R11, BP
    ADCQ $0x0000000000000000, DX
    ADDQ AX, BP
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ $0x1ef3622fba094800, AX
    MULQ R12
    ADDQ BP, R9
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R9
    ADCQ $0x0000000000000000, DX
    MOVQ R9, BX
    MOVQ DX, R9
    MOVQ 24(R15), AX
    MULQ R10
    ADDQ R11, SI
    ADCQ $0x0000000000000000, DX
    ADDQ AX, SI
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ $0x1a22d9f300f5138f, AX
    MULQ R12
    ADDQ SI, R9
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R9
    ADCQ $0x0000000000000000, DX
    MOVQ R9, BP
    MOVQ DX, R9
    MOVQ 32(R15), AX
    MULQ R10
    ADDQ R11, DI
    ADCQ $0x0000000000000000, DX
    ADDQ AX, DI
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ $0xc63b05c06ca1493b, AX
    MULQ R12
    ADDQ DI, R9
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R9
    ADCQ $0x0000000000000000, DX
    MOVQ R9, SI
    MOVQ DX, R9
    MOVQ 40(R15), AX
    MULQ R10
    ADDQ R11, R8
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R8
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ $0x01ae3a4617c510ea, AX
    MULQ R12
    ADDQ R8, R9
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R9
    ADCQ $0x0000000000000000, DX
    MOVQ R9, DI
    MOVQ DX, R9
    ADDQ R9, R11
    MOVQ R11, R8
    MOVQ res+0(FP), R15
    MOVQ CX, R13
    MOVQ BX, R9
    MOVQ BP, R10
    MOVQ SI, R11
    MOVQ DI, R12
    MOVQ R8, R14
    SUBQ ·qElement+0(SB), R13
    SBBQ ·qElement+8(SB), R9
    SBBQ ·qElement+16(SB), R10
    SBBQ ·qElement+24(SB), R11
    SBBQ ·qElement+32(SB), R12
    SBBQ ·qElement+40(SB), R14
    CMOVQCC R13, CX
    CMOVQCC R9, BX
    CMOVQCC R10, BP
    CMOVQCC R11, SI
    CMOVQCC R12, DI
    CMOVQCC R14, R8
    MOVQ CX, 0(R15)
    MOVQ BX, 8(R15)
    MOVQ BP, 16(R15)
    MOVQ SI, 24(R15)
    MOVQ DI, 32(R15)
    MOVQ R8, 40(R15)
    RET

TEXT ·square(SB), NOSPLIT, $0-16

	// the algorithm is described here
	// https://hackmd.io/@zkteam/modular_multiplication
	// for i=0 to N-1
	// A, t[i] = x[i] * x[i] + t[i]
	// p = 0
	// for j=i+1 to N-1
	//     p,A,t[j] = 2*x[j]*x[i] + t[j] + (p,A)
	// m = t[0] * q'[0]
	// C, _ = t[0] + q[0]*m
	// for j=1 to N-1
	//     C, t[j-1] = q[j]*m +  t[j] + C
	// t[N-1] = C + A

	
    CMPB ·supportAdx(SB), $0x0000000000000001
    JNE l2
    MOVQ x+8(FP), DI
    XORQ AX, AX
    MOVQ 0(DI), DX
    MULXQ 8(DI), R9, R10
    MULXQ 16(DI), AX, R11
    ADCXQ AX, R10
    MULXQ 24(DI), AX, R12
    ADCXQ AX, R11
    MULXQ 32(DI), AX, R13
    ADCXQ AX, R12
    MULXQ 40(DI), AX, R8
    ADCXQ AX, R13
    MOVQ $0x0000000000000000, AX
    ADCXQ AX, R8
    XORQ AX, AX
    MULXQ DX, R14, DX
    ADCXQ R9, R9
    MOVQ R9, R15
    ADOXQ DX, R15
    ADCXQ R10, R10
    MOVQ R10, CX
    ADOXQ AX, CX
    ADCXQ R11, R11
    MOVQ R11, BX
    ADOXQ AX, BX
    ADCXQ R12, R12
    MOVQ R12, BP
    ADOXQ AX, BP
    ADCXQ R13, R13
    MOVQ R13, SI
    ADOXQ AX, SI
    ADCXQ R8, R8
    ADOXQ AX, R8
    MOVQ R14, DX
    MULXQ ·qElementInv0(SB), DX, AX                        // m := t[0]*q'[0] mod W
    XORQ AX, AX
    MULXQ ·qElement+0(SB), AX, R9
    ADCXQ R14, AX
    MOVQ R9, R14
    ADCXQ R15, R14
    MULXQ ·qElement+8(SB), AX, R15
    ADOXQ AX, R14
    ADCXQ CX, R15
    MULXQ ·qElement+16(SB), AX, CX
    ADOXQ AX, R15
    ADCXQ BX, CX
    MULXQ ·qElement+24(SB), AX, BX
    ADOXQ AX, CX
    ADCXQ BP, BX
    MULXQ ·qElement+32(SB), AX, BP
    ADOXQ AX, BX
    ADCXQ SI, BP
    MULXQ ·qElement+40(SB), AX, SI
    ADOXQ AX, BP
    MOVQ $0x0000000000000000, AX
    ADCXQ AX, SI
    ADOXQ R8, SI
    XORQ AX, AX
    MOVQ 8(DI), DX
    MULXQ 16(DI), R10, R11
    MULXQ 24(DI), AX, R12
    ADCXQ AX, R11
    MULXQ 32(DI), AX, R13
    ADCXQ AX, R12
    MULXQ 40(DI), AX, R8
    ADCXQ AX, R13
    MOVQ $0x0000000000000000, AX
    ADCXQ AX, R8
    XORQ AX, AX
    ADCXQ R10, R10
    ADOXQ R10, CX
    ADCXQ R11, R11
    ADOXQ R11, BX
    ADCXQ R12, R12
    ADOXQ R12, BP
    ADCXQ R13, R13
    ADOXQ R13, SI
    ADCXQ R8, R8
    ADOXQ AX, R8
    XORQ AX, AX
    MULXQ DX, AX, DX
    ADOXQ AX, R15
    MOVQ $0x0000000000000000, AX
    ADOXQ DX, CX
    ADOXQ AX, BX
    ADOXQ AX, BP
    ADOXQ AX, SI
    ADOXQ AX, R8
    MOVQ R14, DX
    MULXQ ·qElementInv0(SB), DX, AX                        // m := t[0]*q'[0] mod W
    XORQ AX, AX
    MULXQ ·qElement+0(SB), AX, R9
    ADCXQ R14, AX
    MOVQ R9, R14
    ADCXQ R15, R14
    MULXQ ·qElement+8(SB), AX, R15
    ADOXQ AX, R14
    ADCXQ CX, R15
    MULXQ ·qElement+16(SB), AX, CX
    ADOXQ AX, R15
    ADCXQ BX, CX
    MULXQ ·qElement+24(SB), AX, BX
    ADOXQ AX, CX
    ADCXQ BP, BX
    MULXQ ·qElement+32(SB), AX, BP
    ADOXQ AX, BX
    ADCXQ SI, BP
    MULXQ ·qElement+40(SB), AX, SI
    ADOXQ AX, BP
    MOVQ $0x0000000000000000, AX
    ADCXQ AX, SI
    ADOXQ R8, SI
    XORQ AX, AX
    MOVQ 16(DI), DX
    MULXQ 24(DI), R10, R11
    MULXQ 32(DI), AX, R12
    ADCXQ AX, R11
    MULXQ 40(DI), AX, R8
    ADCXQ AX, R12
    MOVQ $0x0000000000000000, AX
    ADCXQ AX, R8
    XORQ AX, AX
    ADCXQ R10, R10
    ADOXQ R10, BX
    ADCXQ R11, R11
    ADOXQ R11, BP
    ADCXQ R12, R12
    ADOXQ R12, SI
    ADCXQ R8, R8
    ADOXQ AX, R8
    XORQ AX, AX
    MULXQ DX, AX, DX
    ADOXQ AX, CX
    MOVQ $0x0000000000000000, AX
    ADOXQ DX, BX
    ADOXQ AX, BP
    ADOXQ AX, SI
    ADOXQ AX, R8
    MOVQ R14, DX
    MULXQ ·qElementInv0(SB), DX, AX                        // m := t[0]*q'[0] mod W
    XORQ AX, AX
    MULXQ ·qElement+0(SB), AX, R13
    ADCXQ R14, AX
    MOVQ R13, R14
    ADCXQ R15, R14
    MULXQ ·qElement+8(SB), AX, R15
    ADOXQ AX, R14
    ADCXQ CX, R15
    MULXQ ·qElement+16(SB), AX, CX
    ADOXQ AX, R15
    ADCXQ BX, CX
    MULXQ ·qElement+24(SB), AX, BX
    ADOXQ AX, CX
    ADCXQ BP, BX
    MULXQ ·qElement+32(SB), AX, BP
    ADOXQ AX, BX
    ADCXQ SI, BP
    MULXQ ·qElement+40(SB), AX, SI
    ADOXQ AX, BP
    MOVQ $0x0000000000000000, AX
    ADCXQ AX, SI
    ADOXQ R8, SI
    XORQ AX, AX
    MOVQ 24(DI), DX
    MULXQ 32(DI), R9, R10
    MULXQ 40(DI), AX, R8
    ADCXQ AX, R10
    MOVQ $0x0000000000000000, AX
    ADCXQ AX, R8
    XORQ AX, AX
    ADCXQ R9, R9
    ADOXQ R9, BP
    ADCXQ R10, R10
    ADOXQ R10, SI
    ADCXQ R8, R8
    ADOXQ AX, R8
    XORQ AX, AX
    MULXQ DX, AX, DX
    ADOXQ AX, BX
    MOVQ $0x0000000000000000, AX
    ADOXQ DX, BP
    ADOXQ AX, SI
    ADOXQ AX, R8
    MOVQ R14, DX
    MULXQ ·qElementInv0(SB), DX, AX                        // m := t[0]*q'[0] mod W
    XORQ AX, AX
    MULXQ ·qElement+0(SB), AX, R11
    ADCXQ R14, AX
    MOVQ R11, R14
    ADCXQ R15, R14
    MULXQ ·qElement+8(SB), AX, R15
    ADOXQ AX, R14
    ADCXQ CX, R15
    MULXQ ·qElement+16(SB), AX, CX
    ADOXQ AX, R15
    ADCXQ BX, CX
    MULXQ ·qElement+24(SB), AX, BX
    ADOXQ AX, CX
    ADCXQ BP, BX
    MULXQ ·qElement+32(SB), AX, BP
    ADOXQ AX, BX
    ADCXQ SI, BP
    MULXQ ·qElement+40(SB), AX, SI
    ADOXQ AX, BP
    MOVQ $0x0000000000000000, AX
    ADCXQ AX, SI
    ADOXQ R8, SI
    XORQ AX, AX
    MOVQ 32(DI), DX
    MULXQ 40(DI), R12, R8
    ADCXQ R12, R12
    ADOXQ R12, SI
    ADCXQ R8, R8
    ADOXQ AX, R8
    XORQ AX, AX
    MULXQ DX, AX, DX
    ADOXQ AX, BP
    MOVQ $0x0000000000000000, AX
    ADOXQ DX, SI
    ADOXQ AX, R8
    MOVQ R14, DX
    MULXQ ·qElementInv0(SB), DX, AX                        // m := t[0]*q'[0] mod W
    XORQ AX, AX
    MULXQ ·qElement+0(SB), AX, R13
    ADCXQ R14, AX
    MOVQ R13, R14
    ADCXQ R15, R14
    MULXQ ·qElement+8(SB), AX, R15
    ADOXQ AX, R14
    ADCXQ CX, R15
    MULXQ ·qElement+16(SB), AX, CX
    ADOXQ AX, R15
    ADCXQ BX, CX
    MULXQ ·qElement+24(SB), AX, BX
    ADOXQ AX, CX
    ADCXQ BP, BX
    MULXQ ·qElement+32(SB), AX, BP
    ADOXQ AX, BX
    ADCXQ SI, BP
    MULXQ ·qElement+40(SB), AX, SI
    ADOXQ AX, BP
    MOVQ $0x0000000000000000, AX
    ADCXQ AX, SI
    ADOXQ R8, SI
    XORQ AX, AX
    MOVQ 40(DI), DX
    MULXQ DX, AX, R8
    ADCXQ AX, SI
    MOVQ $0x0000000000000000, AX
    ADCXQ AX, R8
    MOVQ R14, DX
    MULXQ ·qElementInv0(SB), DX, AX                        // m := t[0]*q'[0] mod W
    XORQ AX, AX
    MULXQ ·qElement+0(SB), AX, R9
    ADCXQ R14, AX
    MOVQ R9, R14
    ADCXQ R15, R14
    MULXQ ·qElement+8(SB), AX, R15
    ADOXQ AX, R14
    ADCXQ CX, R15
    MULXQ ·qElement+16(SB), AX, CX
    ADOXQ AX, R15
    ADCXQ BX, CX
    MULXQ ·qElement+24(SB), AX, BX
    ADOXQ AX, CX
    ADCXQ BP, BX
    MULXQ ·qElement+32(SB), AX, BP
    ADOXQ AX, BX
    ADCXQ SI, BP
    MULXQ ·qElement+40(SB), AX, SI
    ADOXQ AX, BP
    MOVQ $0x0000000000000000, AX
    ADCXQ AX, SI
    ADOXQ R8, SI
    MOVQ res+0(FP), R10
    MOVQ R14, R11
    MOVQ R15, R12
    MOVQ CX, R13
    MOVQ BX, R9
    MOVQ BP, DI
    MOVQ SI, R8
    SUBQ ·qElement+0(SB), R11
    SBBQ ·qElement+8(SB), R12
    SBBQ ·qElement+16(SB), R13
    SBBQ ·qElement+24(SB), R9
    SBBQ ·qElement+32(SB), DI
    SBBQ ·qElement+40(SB), R8
    CMOVQCC R11, R14
    CMOVQCC R12, R15
    CMOVQCC R13, CX
    CMOVQCC R9, BX
    CMOVQCC DI, BP
    CMOVQCC R8, SI
    MOVQ R14, 0(R10)
    MOVQ R15, 8(R10)
    MOVQ CX, 16(R10)
    MOVQ BX, 24(R10)
    MOVQ BP, 32(R10)
    MOVQ SI, 40(R10)
    RET
l2:
    MOVQ x+8(FP), R15
    MOVQ x+8(FP), R14
    MOVQ 0(R15), AX
    MOVQ 0(R14), R10
    MULQ R10
    MOVQ AX, CX
    MOVQ DX, R11
    MOVQ ·qElementInv0(SB), R12
    IMULQ CX, R12
    MOVQ $0x8508c00000000001, AX
    MULQ R12
    ADDQ CX, AX
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R9
    MOVQ 8(R15), AX
    MULQ R10
    MOVQ R11, BX
    ADDQ AX, BX
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ $0x170b5d4430000000, AX
    MULQ R12
    ADDQ BX, R9
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R9
    ADCQ $0x0000000000000000, DX
    MOVQ R9, CX
    MOVQ DX, R9
    MOVQ 16(R15), AX
    MULQ R10
    MOVQ R11, BP
    ADDQ AX, BP
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ $0x1ef3622fba094800, AX
    MULQ R12
    ADDQ BP, R9
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R9
    ADCQ $0x0000000000000000, DX
    MOVQ R9, BX
    MOVQ DX, R9
    MOVQ 24(R15), AX
    MULQ R10
    MOVQ R11, SI
    ADDQ AX, SI
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ $0x1a22d9f300f5138f, AX
    MULQ R12
    ADDQ SI, R9
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R9
    ADCQ $0x0000000000000000, DX
    MOVQ R9, BP
    MOVQ DX, R9
    MOVQ 32(R15), AX
    MULQ R10
    MOVQ R11, DI
    ADDQ AX, DI
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ $0xc63b05c06ca1493b, AX
    MULQ R12
    ADDQ DI, R9
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R9
    ADCQ $0x0000000000000000, DX
    MOVQ R9, SI
    MOVQ DX, R9
    MOVQ 40(R15), AX
    MULQ R10
    MOVQ R11, R8
    ADDQ AX, R8
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ $0x01ae3a4617c510ea, AX
    MULQ R12
    ADDQ R8, R9
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R9
    ADCQ $0x0000000000000000, DX
    MOVQ R9, DI
    MOVQ DX, R9
    ADDQ R9, R11
    MOVQ R11, R8
    MOVQ 0(R15), AX
    MOVQ 8(R14), R10
    MULQ R10
    ADDQ AX, CX
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ ·qElementInv0(SB), R12
    IMULQ CX, R12
    MOVQ $0x8508c00000000001, AX
    MULQ R12
    ADDQ CX, AX
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R9
    MOVQ 8(R15), AX
    MULQ R10
    ADDQ R11, BX
    ADCQ $0x0000000000000000, DX
    ADDQ AX, BX
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ $0x170b5d4430000000, AX
    MULQ R12
    ADDQ BX, R9
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R9
    ADCQ $0x0000000000000000, DX
    MOVQ R9, CX
    MOVQ DX, R9
    MOVQ 16(R15), AX
    MULQ R10
    ADDQ R11, BP
    ADCQ $0x0000000000000000, DX
    ADDQ AX, BP
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ $0x1ef3622fba094800, AX
    MULQ R12
    ADDQ BP, R9
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R9
    ADCQ $0x0000000000000000, DX
    MOVQ R9, BX
    MOVQ DX, R9
    MOVQ 24(R15), AX
    MULQ R10
    ADDQ R11, SI
    ADCQ $0x0000000000000000, DX
    ADDQ AX, SI
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ $0x1a22d9f300f5138f, AX
    MULQ R12
    ADDQ SI, R9
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R9
    ADCQ $0x0000000000000000, DX
    MOVQ R9, BP
    MOVQ DX, R9
    MOVQ 32(R15), AX
    MULQ R10
    ADDQ R11, DI
    ADCQ $0x0000000000000000, DX
    ADDQ AX, DI
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ $0xc63b05c06ca1493b, AX
    MULQ R12
    ADDQ DI, R9
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R9
    ADCQ $0x0000000000000000, DX
    MOVQ R9, SI
    MOVQ DX, R9
    MOVQ 40(R15), AX
    MULQ R10
    ADDQ R11, R8
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R8
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ $0x01ae3a4617c510ea, AX
    MULQ R12
    ADDQ R8, R9
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R9
    ADCQ $0x0000000000000000, DX
    MOVQ R9, DI
    MOVQ DX, R9
    ADDQ R9, R11
    MOVQ R11, R8
    MOVQ 0(R15), AX
    MOVQ 16(R14), R10
    MULQ R10
    ADDQ AX, CX
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ ·qElementInv0(SB), R12
    IMULQ CX, R12
    MOVQ $0x8508c00000000001, AX
    MULQ R12
    ADDQ CX, AX
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R9
    MOVQ 8(R15), AX
    MULQ R10
    ADDQ R11, BX
    ADCQ $0x0000000000000000, DX
    ADDQ AX, BX
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ $0x170b5d4430000000, AX
    MULQ R12
    ADDQ BX, R9
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R9
    ADCQ $0x0000000000000000, DX
    MOVQ R9, CX
    MOVQ DX, R9
    MOVQ 16(R15), AX
    MULQ R10
    ADDQ R11, BP
    ADCQ $0x0000000000000000, DX
    ADDQ AX, BP
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ $0x1ef3622fba094800, AX
    MULQ R12
    ADDQ BP, R9
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R9
    ADCQ $0x0000000000000000, DX
    MOVQ R9, BX
    MOVQ DX, R9
    MOVQ 24(R15), AX
    MULQ R10
    ADDQ R11, SI
    ADCQ $0x0000000000000000, DX
    ADDQ AX, SI
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ $0x1a22d9f300f5138f, AX
    MULQ R12
    ADDQ SI, R9
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R9
    ADCQ $0x0000000000000000, DX
    MOVQ R9, BP
    MOVQ DX, R9
    MOVQ 32(R15), AX
    MULQ R10
    ADDQ R11, DI
    ADCQ $0x0000000000000000, DX
    ADDQ AX, DI
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ $0xc63b05c06ca1493b, AX
    MULQ R12
    ADDQ DI, R9
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R9
    ADCQ $0x0000000000000000, DX
    MOVQ R9, SI
    MOVQ DX, R9
    MOVQ 40(R15), AX
    MULQ R10
    ADDQ R11, R8
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R8
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ $0x01ae3a4617c510ea, AX
    MULQ R12
    ADDQ R8, R9
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R9
    ADCQ $0x0000000000000000, DX
    MOVQ R9, DI
    MOVQ DX, R9
    ADDQ R9, R11
    MOVQ R11, R8
    MOVQ 0(R15), AX
    MOVQ 24(R14), R10
    MULQ R10
    ADDQ AX, CX
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ ·qElementInv0(SB), R12
    IMULQ CX, R12
    MOVQ $0x8508c00000000001, AX
    MULQ R12
    ADDQ CX, AX
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R9
    MOVQ 8(R15), AX
    MULQ R10
    ADDQ R11, BX
    ADCQ $0x0000000000000000, DX
    ADDQ AX, BX
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ $0x170b5d4430000000, AX
    MULQ R12
    ADDQ BX, R9
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R9
    ADCQ $0x0000000000000000, DX
    MOVQ R9, CX
    MOVQ DX, R9
    MOVQ 16(R15), AX
    MULQ R10
    ADDQ R11, BP
    ADCQ $0x0000000000000000, DX
    ADDQ AX, BP
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ $0x1ef3622fba094800, AX
    MULQ R12
    ADDQ BP, R9
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R9
    ADCQ $0x0000000000000000, DX
    MOVQ R9, BX
    MOVQ DX, R9
    MOVQ 24(R15), AX
    MULQ R10
    ADDQ R11, SI
    ADCQ $0x0000000000000000, DX
    ADDQ AX, SI
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ $0x1a22d9f300f5138f, AX
    MULQ R12
    ADDQ SI, R9
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R9
    ADCQ $0x0000000000000000, DX
    MOVQ R9, BP
    MOVQ DX, R9
    MOVQ 32(R15), AX
    MULQ R10
    ADDQ R11, DI
    ADCQ $0x0000000000000000, DX
    ADDQ AX, DI
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ $0xc63b05c06ca1493b, AX
    MULQ R12
    ADDQ DI, R9
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R9
    ADCQ $0x0000000000000000, DX
    MOVQ R9, SI
    MOVQ DX, R9
    MOVQ 40(R15), AX
    MULQ R10
    ADDQ R11, R8
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R8
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ $0x01ae3a4617c510ea, AX
    MULQ R12
    ADDQ R8, R9
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R9
    ADCQ $0x0000000000000000, DX
    MOVQ R9, DI
    MOVQ DX, R9
    ADDQ R9, R11
    MOVQ R11, R8
    MOVQ 0(R15), AX
    MOVQ 32(R14), R10
    MULQ R10
    ADDQ AX, CX
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ ·qElementInv0(SB), R12
    IMULQ CX, R12
    MOVQ $0x8508c00000000001, AX
    MULQ R12
    ADDQ CX, AX
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R9
    MOVQ 8(R15), AX
    MULQ R10
    ADDQ R11, BX
    ADCQ $0x0000000000000000, DX
    ADDQ AX, BX
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ $0x170b5d4430000000, AX
    MULQ R12
    ADDQ BX, R9
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R9
    ADCQ $0x0000000000000000, DX
    MOVQ R9, CX
    MOVQ DX, R9
    MOVQ 16(R15), AX
    MULQ R10
    ADDQ R11, BP
    ADCQ $0x0000000000000000, DX
    ADDQ AX, BP
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ $0x1ef3622fba094800, AX
    MULQ R12
    ADDQ BP, R9
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R9
    ADCQ $0x0000000000000000, DX
    MOVQ R9, BX
    MOVQ DX, R9
    MOVQ 24(R15), AX
    MULQ R10
    ADDQ R11, SI
    ADCQ $0x0000000000000000, DX
    ADDQ AX, SI
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ $0x1a22d9f300f5138f, AX
    MULQ R12
    ADDQ SI, R9
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R9
    ADCQ $0x0000000000000000, DX
    MOVQ R9, BP
    MOVQ DX, R9
    MOVQ 32(R15), AX
    MULQ R10
    ADDQ R11, DI
    ADCQ $0x0000000000000000, DX
    ADDQ AX, DI
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ $0xc63b05c06ca1493b, AX
    MULQ R12
    ADDQ DI, R9
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R9
    ADCQ $0x0000000000000000, DX
    MOVQ R9, SI
    MOVQ DX, R9
    MOVQ 40(R15), AX
    MULQ R10
    ADDQ R11, R8
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R8
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ $0x01ae3a4617c510ea, AX
    MULQ R12
    ADDQ R8, R9
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R9
    ADCQ $0x0000000000000000, DX
    MOVQ R9, DI
    MOVQ DX, R9
    ADDQ R9, R11
    MOVQ R11, R8
    MOVQ 0(R15), AX
    MOVQ 40(R14), R10
    MULQ R10
    ADDQ AX, CX
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ ·qElementInv0(SB), R12
    IMULQ CX, R12
    MOVQ $0x8508c00000000001, AX
    MULQ R12
    ADDQ CX, AX
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R9
    MOVQ 8(R15), AX
    MULQ R10
    ADDQ R11, BX
    ADCQ $0x0000000000000000, DX
    ADDQ AX, BX
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ $0x170b5d4430000000, AX
    MULQ R12
    ADDQ BX, R9
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R9
    ADCQ $0x0000000000000000, DX
    MOVQ R9, CX
    MOVQ DX, R9
    MOVQ 16(R15), AX
    MULQ R10
    ADDQ R11, BP
    ADCQ $0x0000000000000000, DX
    ADDQ AX, BP
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ $0x1ef3622fba094800, AX
    MULQ R12
    ADDQ BP, R9
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R9
    ADCQ $0x0000000000000000, DX
    MOVQ R9, BX
    MOVQ DX, R9
    MOVQ 24(R15), AX
    MULQ R10
    ADDQ R11, SI
    ADCQ $0x0000000000000000, DX
    ADDQ AX, SI
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ $0x1a22d9f300f5138f, AX
    MULQ R12
    ADDQ SI, R9
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R9
    ADCQ $0x0000000000000000, DX
    MOVQ R9, BP
    MOVQ DX, R9
    MOVQ 32(R15), AX
    MULQ R10
    ADDQ R11, DI
    ADCQ $0x0000000000000000, DX
    ADDQ AX, DI
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ $0xc63b05c06ca1493b, AX
    MULQ R12
    ADDQ DI, R9
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R9
    ADCQ $0x0000000000000000, DX
    MOVQ R9, SI
    MOVQ DX, R9
    MOVQ 40(R15), AX
    MULQ R10
    ADDQ R11, R8
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R8
    ADCQ $0x0000000000000000, DX
    MOVQ DX, R11
    MOVQ $0x01ae3a4617c510ea, AX
    MULQ R12
    ADDQ R8, R9
    ADCQ $0x0000000000000000, DX
    ADDQ AX, R9
    ADCQ $0x0000000000000000, DX
    MOVQ R9, DI
    MOVQ DX, R9
    ADDQ R9, R11
    MOVQ R11, R8
    MOVQ res+0(FP), R15
    MOVQ CX, R13
    MOVQ BX, R9
    MOVQ BP, R10
    MOVQ SI, R11
    MOVQ DI, R12
    MOVQ R8, R14
    SUBQ ·qElement+0(SB), R13
    SBBQ ·qElement+8(SB), R9
    SBBQ ·qElement+16(SB), R10
    SBBQ ·qElement+24(SB), R11
    SBBQ ·qElement+32(SB), R12
    SBBQ ·qElement+40(SB), R14
    CMOVQCC R13, CX
    CMOVQCC R9, BX
    CMOVQCC R10, BP
    CMOVQCC R11, SI
    CMOVQCC R12, DI
    CMOVQCC R14, R8
    MOVQ CX, 0(R15)
    MOVQ BX, 8(R15)
    MOVQ BP, 16(R15)
    MOVQ SI, 24(R15)
    MOVQ DI, 32(R15)
    MOVQ R8, 40(R15)
    RET

TEXT ·fromMont(SB), $8-8
NO_LOCAL_POINTERS

	// the algorithm is described here
	// https://hackmd.io/@zkteam/modular_multiplication
	// when y = 1 we have: 
	// for i=0 to N-1
	// 		t[i] = x[i]
	// for i=0 to N-1
	// 		m := t[0]*q'[0] mod W
	// 		C,_ := t[0] + m*q[0]
	// 		for j=1 to N-1
	// 		    (C,t[j-1]) := t[j] + m*q[j] + C
	// 		t[N-1] = C
    CMPB ·supportAdx(SB), $0x0000000000000001
    JNE l3
    MOVQ res+0(FP), DI
    MOVQ 0(DI), R14
    MOVQ 8(DI), R15
    MOVQ 16(DI), CX
    MOVQ 24(DI), BX
    MOVQ 32(DI), BP
    MOVQ 40(DI), SI
    XORQ DX, DX
    MOVQ R14, DX
    MULXQ ·qElementInv0(SB), DX, AX                        // m := t[0]*q'[0] mod W
    XORQ AX, AX
    // C,_ := t[0] + m*q[0]
    MULXQ ·qElement+0(SB), AX, R8
    ADCXQ R14, AX
    MOVQ R8, R14
    // for j=1 to N-1
    //     (C,t[j-1]) := t[j] + m*q[j] + C
    ADCXQ R15, R14
    MULXQ ·qElement+8(SB), AX, R15
    ADOXQ AX, R14
    ADCXQ CX, R15
    MULXQ ·qElement+16(SB), AX, CX
    ADOXQ AX, R15
    ADCXQ BX, CX
    MULXQ ·qElement+24(SB), AX, BX
    ADOXQ AX, CX
    ADCXQ BP, BX
    MULXQ ·qElement+32(SB), AX, BP
    ADOXQ AX, BX
    ADCXQ SI, BP
    MULXQ ·qElement+40(SB), AX, SI
    ADOXQ AX, BP
    MOVQ $0x0000000000000000, AX
    ADCXQ AX, SI
    ADOXQ AX, SI
    XORQ DX, DX
    MOVQ R14, DX
    MULXQ ·qElementInv0(SB), DX, AX                        // m := t[0]*q'[0] mod W
    XORQ AX, AX
    // C,_ := t[0] + m*q[0]
    MULXQ ·qElement+0(SB), AX, R8
    ADCXQ R14, AX
    MOVQ R8, R14
    // for j=1 to N-1
    //     (C,t[j-1]) := t[j] + m*q[j] + C
    ADCXQ R15, R14
    MULXQ ·qElement+8(SB), AX, R15
    ADOXQ AX, R14
    ADCXQ CX, R15
    MULXQ ·qElement+16(SB), AX, CX
    ADOXQ AX, R15
    ADCXQ BX, CX
    MULXQ ·qElement+24(SB), AX, BX
    ADOXQ AX, CX
    ADCXQ BP, BX
    MULXQ ·qElement+32(SB), AX, BP
    ADOXQ AX, BX
    ADCXQ SI, BP
    MULXQ ·qElement+40(SB), AX, SI
    ADOXQ AX, BP
    MOVQ $0x0000000000000000, AX
    ADCXQ AX, SI
    ADOXQ AX, SI
    XORQ DX, DX
    MOVQ R14, DX
    MULXQ ·qElementInv0(SB), DX, AX                        // m := t[0]*q'[0] mod W
    XORQ AX, AX
    // C,_ := t[0] + m*q[0]
    MULXQ ·qElement+0(SB), AX, R8
    ADCXQ R14, AX
    MOVQ R8, R14
    // for j=1 to N-1
    //     (C,t[j-1]) := t[j] + m*q[j] + C
    ADCXQ R15, R14
    MULXQ ·qElement+8(SB), AX, R15
    ADOXQ AX, R14
    ADCXQ CX, R15
    MULXQ ·qElement+16(SB), AX, CX
    ADOXQ AX, R15
    ADCXQ BX, CX
    MULXQ ·qElement+24(SB), AX, BX
    ADOXQ AX, CX
    ADCXQ BP, BX
    MULXQ ·qElement+32(SB), AX, BP
    ADOXQ AX, BX
    ADCXQ SI, BP
    MULXQ ·qElement+40(SB), AX, SI
    ADOXQ AX, BP
    MOVQ $0x0000000000000000, AX
    ADCXQ AX, SI
    ADOXQ AX, SI
    XORQ DX, DX
    MOVQ R14, DX
    MULXQ ·qElementInv0(SB), DX, AX                        // m := t[0]*q'[0] mod W
    XORQ AX, AX
    // C,_ := t[0] + m*q[0]
    MULXQ ·qElement+0(SB), AX, R8
    ADCXQ R14, AX
    MOVQ R8, R14
    // for j=1 to N-1
    //     (C,t[j-1]) := t[j] + m*q[j] + C
    ADCXQ R15, R14
    MULXQ ·qElement+8(SB), AX, R15
    ADOXQ AX, R14
    ADCXQ CX, R15
    MULXQ ·qElement+16(SB), AX, CX
    ADOXQ AX, R15
    ADCXQ BX, CX
    MULXQ ·qElement+24(SB), AX, BX
    ADOXQ AX, CX
    ADCXQ BP, BX
    MULXQ ·qElement+32(SB), AX, BP
    ADOXQ AX, BX
    ADCXQ SI, BP
    MULXQ ·qElement+40(SB), AX, SI
    ADOXQ AX, BP
    MOVQ $0x0000000000000000, AX
    ADCXQ AX, SI
    ADOXQ AX, SI
    XORQ DX, DX
    MOVQ R14, DX
    MULXQ ·qElementInv0(SB), DX, AX                        // m := t[0]*q'[0] mod W
    XORQ AX, AX
    // C,_ := t[0] + m*q[0]
    MULXQ ·qElement+0(SB), AX, R8
    ADCXQ R14, AX
    MOVQ R8, R14
    // for j=1 to N-1
    //     (C,t[j-1]) := t[j] + m*q[j] + C
    ADCXQ R15, R14
    MULXQ ·qElement+8(SB), AX, R15
    ADOXQ AX, R14
    ADCXQ CX, R15
    MULXQ ·qElement+16(SB), AX, CX
    ADOXQ AX, R15
    ADCXQ BX, CX
    MULXQ ·qElement+24(SB), AX, BX
    ADOXQ AX, CX
    ADCXQ BP, BX
    MULXQ ·qElement+32(SB), AX, BP
    ADOXQ AX, BX
    ADCXQ SI, BP
    MULXQ ·qElement+40(SB), AX, SI
    ADOXQ AX, BP
    MOVQ $0x0000000000000000, AX
    ADCXQ AX, SI
    ADOXQ AX, SI
    XORQ DX, DX
    MOVQ R14, DX
    MULXQ ·qElementInv0(SB), DX, AX                        // m := t[0]*q'[0] mod W
    XORQ AX, AX
    // C,_ := t[0] + m*q[0]
    MULXQ ·qElement+0(SB), AX, R8
    ADCXQ R14, AX
    MOVQ R8, R14
    // for j=1 to N-1
    //     (C,t[j-1]) := t[j] + m*q[j] + C
    ADCXQ R15, R14
    MULXQ ·qElement+8(SB), AX, R15
    ADOXQ AX, R14
    ADCXQ CX, R15
    MULXQ ·qElement+16(SB), AX, CX
    ADOXQ AX, R15
    ADCXQ BX, CX
    MULXQ ·qElement+24(SB), AX, BX
    ADOXQ AX, CX
    ADCXQ BP, BX
    MULXQ ·qElement+32(SB), AX, BP
    ADOXQ AX, BX
    ADCXQ SI, BP
    MULXQ ·qElement+40(SB), AX, SI
    ADOXQ AX, BP
    MOVQ $0x0000000000000000, AX
    ADCXQ AX, SI
    ADOXQ AX, SI
    MOVQ R14, R9
    MOVQ R15, R10
    MOVQ CX, R11
    MOVQ BX, R12
    MOVQ BP, R13
    MOVQ SI, R8
    SUBQ ·qElement+0(SB), R9
    SBBQ ·qElement+8(SB), R10
    SBBQ ·qElement+16(SB), R11
    SBBQ ·qElement+24(SB), R12
    SBBQ ·qElement+32(SB), R13
    SBBQ ·qElement+40(SB), R8
    CMOVQCC R9, R14
    CMOVQCC R10, R15
    CMOVQCC R11, CX
    CMOVQCC R12, BX
    CMOVQCC R13, BP
    CMOVQCC R8, SI
    MOVQ R14, 0(DI)
    MOVQ R15, 8(DI)
    MOVQ CX, 16(DI)
    MOVQ BX, 24(DI)
    MOVQ BP, 32(DI)
    MOVQ SI, 40(DI)
    RET
l3:
    MOVQ res+0(FP), AX
    MOVQ AX, (SP)
CALL ·_fromMontGeneric(SB)
    RET

TEXT ·reduce(SB), NOSPLIT, $0-8
    MOVQ res+0(FP), AX
    MOVQ 0(AX), DX
    MOVQ 8(AX), CX
    MOVQ 16(AX), BX
    MOVQ 24(AX), BP
    MOVQ 32(AX), SI
    MOVQ 40(AX), DI
    MOVQ DX, R8
    MOVQ CX, R9
    MOVQ BX, R10
    MOVQ BP, R11
    MOVQ SI, R12
    MOVQ DI, R13
    SUBQ ·qElement+0(SB), R8
    SBBQ ·qElement+8(SB), R9
    SBBQ ·qElement+16(SB), R10
    SBBQ ·qElement+24(SB), R11
    SBBQ ·qElement+32(SB), R12
    SBBQ ·qElement+40(SB), R13
    CMOVQCC R8, DX
    CMOVQCC R9, CX
    CMOVQCC R10, BX
    CMOVQCC R11, BP
    CMOVQCC R12, SI
    CMOVQCC R13, DI
    MOVQ DX, 0(AX)
    MOVQ CX, 8(AX)
    MOVQ BX, 16(AX)
    MOVQ BP, 24(AX)
    MOVQ SI, 32(AX)
    MOVQ DI, 40(AX)
    RET

TEXT ·add(SB), NOSPLIT, $0-24
    MOVQ x+8(FP), AX
    MOVQ 0(AX), BX
    MOVQ 8(AX), BP
    MOVQ 16(AX), SI
    MOVQ 24(AX), DI
    MOVQ 32(AX), R8
    MOVQ 40(AX), R9
    MOVQ y+16(FP), DX
    ADDQ 0(DX), BX
    ADCQ 8(DX), BP
    ADCQ 16(DX), SI
    ADCQ 24(DX), DI
    ADCQ 32(DX), R8
    ADCQ 40(DX), R9
    MOVQ res+0(FP), CX
    MOVQ BX, R10
    MOVQ BP, R11
    MOVQ SI, R12
    MOVQ DI, R13
    MOVQ R8, R14
    MOVQ R9, R15
    SUBQ ·qElement+0(SB), R10
    SBBQ ·qElement+8(SB), R11
    SBBQ ·qElement+16(SB), R12
    SBBQ ·qElement+24(SB), R13
    SBBQ ·qElement+32(SB), R14
    SBBQ ·qElement+40(SB), R15
    CMOVQCC R10, BX
    CMOVQCC R11, BP
    CMOVQCC R12, SI
    CMOVQCC R13, DI
    CMOVQCC R14, R8
    CMOVQCC R15, R9
    MOVQ BX, 0(CX)
    MOVQ BP, 8(CX)
    MOVQ SI, 16(CX)
    MOVQ DI, 24(CX)
    MOVQ R8, 32(CX)
    MOVQ R9, 40(CX)
    RET

TEXT ·sub(SB), NOSPLIT, $0-24
    MOVQ x+8(FP), DI
    MOVQ 0(DI), AX
    MOVQ 8(DI), DX
    MOVQ 16(DI), CX
    MOVQ 24(DI), BX
    MOVQ 32(DI), BP
    MOVQ 40(DI), SI
    MOVQ y+16(FP), R8
    SUBQ 0(R8), AX
    SBBQ 8(R8), DX
    SBBQ 16(R8), CX
    SBBQ 24(R8), BX
    SBBQ 32(R8), BP
    SBBQ 40(R8), SI
    MOVQ $0x8508c00000000001, R9
    MOVQ $0x170b5d4430000000, R10
    MOVQ $0x1ef3622fba094800, R11
    MOVQ $0x1a22d9f300f5138f, R12
    MOVQ $0xc63b05c06ca1493b, R13
    MOVQ $0x01ae3a4617c510ea, R14
    MOVQ $0x0000000000000000, R15
    CMOVQCC R15, R9
    CMOVQCC R15, R10
    CMOVQCC R15, R11
    CMOVQCC R15, R12
    CMOVQCC R15, R13
    CMOVQCC R15, R14
    ADDQ R9, AX
    ADCQ R10, DX
    ADCQ R11, CX
    ADCQ R12, BX
    ADCQ R13, BP
    ADCQ R14, SI
    MOVQ res+0(FP), R15
    MOVQ AX, 0(R15)
    MOVQ DX, 8(R15)
    MOVQ CX, 16(R15)
    MOVQ BX, 24(R15)
    MOVQ BP, 32(R15)
    MOVQ SI, 40(R15)
    RET

TEXT ·double(SB), NOSPLIT, $0-16
    MOVQ res+0(FP), DX
    MOVQ x+8(FP), AX
    MOVQ 0(AX), CX
    MOVQ 8(AX), BX
    MOVQ 16(AX), BP
    MOVQ 24(AX), SI
    MOVQ 32(AX), DI
    MOVQ 40(AX), R8
    ADDQ CX, CX
    ADCQ BX, BX
    ADCQ BP, BP
    ADCQ SI, SI
    ADCQ DI, DI
    ADCQ R8, R8
    MOVQ CX, R9
    MOVQ BX, R10
    MOVQ BP, R11
    MOVQ SI, R12
    MOVQ DI, R13
    MOVQ R8, R14
    SUBQ ·qElement+0(SB), R9
    SBBQ ·qElement+8(SB), R10
    SBBQ ·qElement+16(SB), R11
    SBBQ ·qElement+24(SB), R12
    SBBQ ·qElement+32(SB), R13
    SBBQ ·qElement+40(SB), R14
    CMOVQCC R9, CX
    CMOVQCC R10, BX
    CMOVQCC R11, BP
    CMOVQCC R12, SI
    CMOVQCC R13, DI
    CMOVQCC R14, R8
    MOVQ CX, 0(DX)
    MOVQ BX, 8(DX)
    MOVQ BP, 16(DX)
    MOVQ SI, 24(DX)
    MOVQ DI, 32(DX)
    MOVQ R8, 40(DX)
    RET

TEXT ·neg(SB), NOSPLIT, $0-16
    MOVQ res+0(FP), DX
    MOVQ x+8(FP), AX
    MOVQ 0(AX), BX
    MOVQ 8(AX), BP
    MOVQ 16(AX), SI
    MOVQ 24(AX), DI
    MOVQ 32(AX), R8
    MOVQ 40(AX), R9
    MOVQ BX, AX
    ORQ BP, AX
    ORQ SI, AX
    ORQ DI, AX
    ORQ R8, AX
    ORQ R9, AX
    TESTQ AX, AX
    JNE l4
    MOVQ AX, 0(DX)
    MOVQ AX, 8(DX)
    MOVQ AX, 16(DX)
    RET
l4:
    MOVQ $0x8508c00000000001, CX
    SUBQ BX, CX
    MOVQ CX, 0(DX)
    MOVQ $0x170b5d4430000000, CX
    SBBQ BP, CX
    MOVQ CX, 8(DX)
    MOVQ $0x1ef3622fba094800, CX
    SBBQ SI, CX
    MOVQ CX, 16(DX)
    MOVQ $0x1a22d9f300f5138f, CX
    SBBQ DI, CX
    MOVQ CX, 24(DX)
    MOVQ $0xc63b05c06ca1493b, CX
    SBBQ R8, CX
    MOVQ CX, 32(DX)
    MOVQ $0x01ae3a4617c510ea, CX
    SBBQ R9, CX
    MOVQ CX, 40(DX)
    RET

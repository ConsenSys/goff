// Copyright 2020 ConsenSys AG
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// field modulus q =
//
// 7062857857371817289156996143271118839836053656983755176149357926330778232392667981129554362962481423963561939915356707889100501324217979728914576816618324387811510789017837611943458847044937240639160036160396176682211079204629434526720559401682035849193667718836995450614674926974513113479276989263203520396475326459527374593814995147383196679341860744399780470249692315139459237823719178343185623712412680582163601583897206942843137620733744415087051124250518351013543715060957571947907723911449440338795906384547756859
// Code generated by goff DO NOT EDIT
// Element27 are assumed to be in Montgomery form in all methods

// /!\ WARNING /!\
// this code has not been audited and is provided as-is. In particular,
// there is no security guarantees such as constant time implementation
// or side-channel attack resistance
// /!\ WARNING /!\

// Package generated (generated by goff) contains field arithmetics operations
package generated

import (
	"crypto/rand"
	"encoding/binary"
	"io"
	"math/big"
	"math/bits"
	"sync"
	"unsafe"
)

// Element27 represents a field element stored on 27 words (uint64)
// Element27 are assumed to be in Montgomery form in all methods
type Element27 [27]uint64

// Element27Limbs number of 64 bits words needed to represent Element27
const Element27Limbs = 27

// Element27Bits number bits needed to represent Element27
const Element27Bits = 1727

// SetUint64 z = v, sets z LSB to v (non-Montgomery form) and convert z to Montgomery form
func (z *Element27) SetUint64(v uint64) *Element27 {
	z[0] = v
	z[1] = 0
	z[2] = 0
	z[3] = 0
	z[4] = 0
	z[5] = 0
	z[6] = 0
	z[7] = 0
	z[8] = 0
	z[9] = 0
	z[10] = 0
	z[11] = 0
	z[12] = 0
	z[13] = 0
	z[14] = 0
	z[15] = 0
	z[16] = 0
	z[17] = 0
	z[18] = 0
	z[19] = 0
	z[20] = 0
	z[21] = 0
	z[22] = 0
	z[23] = 0
	z[24] = 0
	z[25] = 0
	z[26] = 0
	return z.ToMont()
}

// Set z = x
func (z *Element27) Set(x *Element27) *Element27 {
	z[0] = x[0]
	z[1] = x[1]
	z[2] = x[2]
	z[3] = x[3]
	z[4] = x[4]
	z[5] = x[5]
	z[6] = x[6]
	z[7] = x[7]
	z[8] = x[8]
	z[9] = x[9]
	z[10] = x[10]
	z[11] = x[11]
	z[12] = x[12]
	z[13] = x[13]
	z[14] = x[14]
	z[15] = x[15]
	z[16] = x[16]
	z[17] = x[17]
	z[18] = x[18]
	z[19] = x[19]
	z[20] = x[20]
	z[21] = x[21]
	z[22] = x[22]
	z[23] = x[23]
	z[24] = x[24]
	z[25] = x[25]
	z[26] = x[26]
	return z
}

// SetZero z = 0
func (z *Element27) SetZero() *Element27 {
	z[0] = 0
	z[1] = 0
	z[2] = 0
	z[3] = 0
	z[4] = 0
	z[5] = 0
	z[6] = 0
	z[7] = 0
	z[8] = 0
	z[9] = 0
	z[10] = 0
	z[11] = 0
	z[12] = 0
	z[13] = 0
	z[14] = 0
	z[15] = 0
	z[16] = 0
	z[17] = 0
	z[18] = 0
	z[19] = 0
	z[20] = 0
	z[21] = 0
	z[22] = 0
	z[23] = 0
	z[24] = 0
	z[25] = 0
	z[26] = 0
	return z
}

// SetOne z = 1 (in Montgomery form)
func (z *Element27) SetOne() *Element27 {
	z[0] = 12012260988369865098
	z[1] = 881099795388418004
	z[2] = 1978260171173028098
	z[3] = 155518545534662316
	z[4] = 16791267071807575396
	z[5] = 15961520562448949735
	z[6] = 10633193415439953050
	z[7] = 5090430033773561260
	z[8] = 10253692145374968738
	z[9] = 11244511834961085534
	z[10] = 18127457751216940952
	z[11] = 14998203758538386790
	z[12] = 7423775271793147912
	z[13] = 144491277602220416
	z[14] = 129707583657871575
	z[15] = 13753022715455251860
	z[16] = 3018990742926752255
	z[17] = 3284383480207829571
	z[18] = 4089397577217186730
	z[19] = 539613725847537876
	z[20] = 4961046070456251582
	z[21] = 4527257021537729146
	z[22] = 11643998567461453185
	z[23] = 4363271106220619822
	z[24] = 17340778676083608529
	z[25] = 13077967848903964979
	z[26] = 1224185248406318349
	return z
}

// Neg z = q - x
func (z *Element27) Neg(x *Element27) *Element27 {
	if x.IsZero() {
		return z.SetZero()
	}
	var borrow uint64
	z[0], borrow = bits.Sub64(12440613579524619067, x[0], 0)
	z[1], borrow = bits.Sub64(18006194176015342613, x[1], borrow)
	z[2], borrow = bits.Sub64(17457613988123037566, x[2], borrow)
	z[3], borrow = bits.Sub64(18368984800942220457, x[3], borrow)
	z[4], borrow = bits.Sub64(827738500950988109, x[4], borrow)
	z[5], borrow = bits.Sub64(10465983792485076748, x[5], borrow)
	z[6], borrow = bits.Sub64(13130147365989575090, x[6], borrow)
	z[7], borrow = bits.Sub64(15901529056822770985, x[7], borrow)
	z[8], borrow = bits.Sub64(13319898001022067246, x[8], borrow)
	z[9], borrow = bits.Sub64(12824488156229008848, x[9], borrow)
	z[10], borrow = bits.Sub64(9383015198101081139, x[10], borrow)
	z[11], borrow = bits.Sub64(10947642194440358220, x[11], borrow)
	z[12], borrow = bits.Sub64(14734856437812977659, x[12], borrow)
	z[13], borrow = bits.Sub64(9151126398053665599, x[13], borrow)
	z[14], borrow = bits.Sub64(18381890281880615828, x[14], borrow)
	z[15], borrow = bits.Sub64(2346860679127149877, x[15], borrow)
	z[16], borrow = bits.Sub64(7713876665391399680, x[16], borrow)
	z[17], borrow = bits.Sub64(16804552333605636830, x[17], borrow)
	z[18], borrow = bits.Sub64(16402045285100958250, x[18], borrow)
	z[19], borrow = bits.Sub64(18176937210785782677, x[19], borrow)
	z[20], borrow = bits.Sub64(15966221038481425824, x[20], borrow)
	z[21], borrow = bits.Sub64(6959743526085911234, x[21], borrow)
	z[22], borrow = bits.Sub64(12624744789978825023, x[22], borrow)
	z[23], borrow = bits.Sub64(7041736483744465896, x[23], borrow)
	z[24], borrow = bits.Sub64(552982698812971543, x[24], borrow)
	z[25], borrow = bits.Sub64(2684388112402793318, x[25], borrow)
	z[26], _ = bits.Sub64(8611279412651616633, x[26], borrow)
	return z
}

// Div z = x*y^-1 mod q
func (z *Element27) Div(x, y *Element27) *Element27 {
	var yInv Element27
	yInv.Inverse(y)
	z.Mul(x, &yInv)
	return z
}

// Equal returns z == x
func (z *Element27) Equal(x *Element27) bool {
	return (z[26] == x[26]) && (z[25] == x[25]) && (z[24] == x[24]) && (z[23] == x[23]) && (z[22] == x[22]) && (z[21] == x[21]) && (z[20] == x[20]) && (z[19] == x[19]) && (z[18] == x[18]) && (z[17] == x[17]) && (z[16] == x[16]) && (z[15] == x[15]) && (z[14] == x[14]) && (z[13] == x[13]) && (z[12] == x[12]) && (z[11] == x[11]) && (z[10] == x[10]) && (z[9] == x[9]) && (z[8] == x[8]) && (z[7] == x[7]) && (z[6] == x[6]) && (z[5] == x[5]) && (z[4] == x[4]) && (z[3] == x[3]) && (z[2] == x[2]) && (z[1] == x[1]) && (z[0] == x[0])
}

// IsZero returns z == 0
func (z *Element27) IsZero() bool {
	return (z[26] | z[25] | z[24] | z[23] | z[22] | z[21] | z[20] | z[19] | z[18] | z[17] | z[16] | z[15] | z[14] | z[13] | z[12] | z[11] | z[10] | z[9] | z[8] | z[7] | z[6] | z[5] | z[4] | z[3] | z[2] | z[1] | z[0]) == 0
}

// field modulus stored as big.Int
var _element27ModulusBigInt big.Int
var onceelement27Modulus sync.Once

func element27ModulusBigInt() *big.Int {
	onceelement27Modulus.Do(func() {
		_element27ModulusBigInt.SetString("7062857857371817289156996143271118839836053656983755176149357926330778232392667981129554362962481423963561939915356707889100501324217979728914576816618324387811510789017837611943458847044937240639160036160396176682211079204629434526720559401682035849193667718836995450614674926974513113479276989263203520396475326459527374593814995147383196679341860744399780470249692315139459237823719178343185623712412680582163601583897206942843137620733744415087051124250518351013543715060957571947907723911449440338795906384547756859", 10)
	})
	return &_element27ModulusBigInt
}

// Inverse z = x^-1 mod q
// note: allocates a big.Int (math/big)
func (z *Element27) Inverse(x *Element27) *Element27 {
	var _xNonMont big.Int
	x.ToBigIntRegular(&_xNonMont)
	_xNonMont.ModInverse(&_xNonMont, element27ModulusBigInt())
	z.SetBigInt(&_xNonMont)
	return z
}

// SetRandom sets z to a random element < q
func (z *Element27) SetRandom() *Element27 {
	bytes := make([]byte, 216)
	io.ReadFull(rand.Reader, bytes)
	z[0] = binary.BigEndian.Uint64(bytes[0:8])
	z[1] = binary.BigEndian.Uint64(bytes[8:16])
	z[2] = binary.BigEndian.Uint64(bytes[16:24])
	z[3] = binary.BigEndian.Uint64(bytes[24:32])
	z[4] = binary.BigEndian.Uint64(bytes[32:40])
	z[5] = binary.BigEndian.Uint64(bytes[40:48])
	z[6] = binary.BigEndian.Uint64(bytes[48:56])
	z[7] = binary.BigEndian.Uint64(bytes[56:64])
	z[8] = binary.BigEndian.Uint64(bytes[64:72])
	z[9] = binary.BigEndian.Uint64(bytes[72:80])
	z[10] = binary.BigEndian.Uint64(bytes[80:88])
	z[11] = binary.BigEndian.Uint64(bytes[88:96])
	z[12] = binary.BigEndian.Uint64(bytes[96:104])
	z[13] = binary.BigEndian.Uint64(bytes[104:112])
	z[14] = binary.BigEndian.Uint64(bytes[112:120])
	z[15] = binary.BigEndian.Uint64(bytes[120:128])
	z[16] = binary.BigEndian.Uint64(bytes[128:136])
	z[17] = binary.BigEndian.Uint64(bytes[136:144])
	z[18] = binary.BigEndian.Uint64(bytes[144:152])
	z[19] = binary.BigEndian.Uint64(bytes[152:160])
	z[20] = binary.BigEndian.Uint64(bytes[160:168])
	z[21] = binary.BigEndian.Uint64(bytes[168:176])
	z[22] = binary.BigEndian.Uint64(bytes[176:184])
	z[23] = binary.BigEndian.Uint64(bytes[184:192])
	z[24] = binary.BigEndian.Uint64(bytes[192:200])
	z[25] = binary.BigEndian.Uint64(bytes[200:208])
	z[26] = binary.BigEndian.Uint64(bytes[208:216])
	z[26] %= 8611279412651616633

	// if z > q --> z -= q
	// note: this is NOT constant time
	if !(z[26] < 8611279412651616633 || (z[26] == 8611279412651616633 && (z[25] < 2684388112402793318 || (z[25] == 2684388112402793318 && (z[24] < 552982698812971543 || (z[24] == 552982698812971543 && (z[23] < 7041736483744465896 || (z[23] == 7041736483744465896 && (z[22] < 12624744789978825023 || (z[22] == 12624744789978825023 && (z[21] < 6959743526085911234 || (z[21] == 6959743526085911234 && (z[20] < 15966221038481425824 || (z[20] == 15966221038481425824 && (z[19] < 18176937210785782677 || (z[19] == 18176937210785782677 && (z[18] < 16402045285100958250 || (z[18] == 16402045285100958250 && (z[17] < 16804552333605636830 || (z[17] == 16804552333605636830 && (z[16] < 7713876665391399680 || (z[16] == 7713876665391399680 && (z[15] < 2346860679127149877 || (z[15] == 2346860679127149877 && (z[14] < 18381890281880615828 || (z[14] == 18381890281880615828 && (z[13] < 9151126398053665599 || (z[13] == 9151126398053665599 && (z[12] < 14734856437812977659 || (z[12] == 14734856437812977659 && (z[11] < 10947642194440358220 || (z[11] == 10947642194440358220 && (z[10] < 9383015198101081139 || (z[10] == 9383015198101081139 && (z[9] < 12824488156229008848 || (z[9] == 12824488156229008848 && (z[8] < 13319898001022067246 || (z[8] == 13319898001022067246 && (z[7] < 15901529056822770985 || (z[7] == 15901529056822770985 && (z[6] < 13130147365989575090 || (z[6] == 13130147365989575090 && (z[5] < 10465983792485076748 || (z[5] == 10465983792485076748 && (z[4] < 827738500950988109 || (z[4] == 827738500950988109 && (z[3] < 18368984800942220457 || (z[3] == 18368984800942220457 && (z[2] < 17457613988123037566 || (z[2] == 17457613988123037566 && (z[1] < 18006194176015342613 || (z[1] == 18006194176015342613 && (z[0] < 12440613579524619067))))))))))))))))))))))))))))))))))))))))))))))))))))) {
		var b uint64
		z[0], b = bits.Sub64(z[0], 12440613579524619067, 0)
		z[1], b = bits.Sub64(z[1], 18006194176015342613, b)
		z[2], b = bits.Sub64(z[2], 17457613988123037566, b)
		z[3], b = bits.Sub64(z[3], 18368984800942220457, b)
		z[4], b = bits.Sub64(z[4], 827738500950988109, b)
		z[5], b = bits.Sub64(z[5], 10465983792485076748, b)
		z[6], b = bits.Sub64(z[6], 13130147365989575090, b)
		z[7], b = bits.Sub64(z[7], 15901529056822770985, b)
		z[8], b = bits.Sub64(z[8], 13319898001022067246, b)
		z[9], b = bits.Sub64(z[9], 12824488156229008848, b)
		z[10], b = bits.Sub64(z[10], 9383015198101081139, b)
		z[11], b = bits.Sub64(z[11], 10947642194440358220, b)
		z[12], b = bits.Sub64(z[12], 14734856437812977659, b)
		z[13], b = bits.Sub64(z[13], 9151126398053665599, b)
		z[14], b = bits.Sub64(z[14], 18381890281880615828, b)
		z[15], b = bits.Sub64(z[15], 2346860679127149877, b)
		z[16], b = bits.Sub64(z[16], 7713876665391399680, b)
		z[17], b = bits.Sub64(z[17], 16804552333605636830, b)
		z[18], b = bits.Sub64(z[18], 16402045285100958250, b)
		z[19], b = bits.Sub64(z[19], 18176937210785782677, b)
		z[20], b = bits.Sub64(z[20], 15966221038481425824, b)
		z[21], b = bits.Sub64(z[21], 6959743526085911234, b)
		z[22], b = bits.Sub64(z[22], 12624744789978825023, b)
		z[23], b = bits.Sub64(z[23], 7041736483744465896, b)
		z[24], b = bits.Sub64(z[24], 552982698812971543, b)
		z[25], b = bits.Sub64(z[25], 2684388112402793318, b)
		z[26], _ = bits.Sub64(z[26], 8611279412651616633, b)
	}

	return z
}

// Add z = x + y mod q
func (z *Element27) Add(x, y *Element27) *Element27 {
	var carry uint64

	z[0], carry = bits.Add64(x[0], y[0], 0)
	z[1], carry = bits.Add64(x[1], y[1], carry)
	z[2], carry = bits.Add64(x[2], y[2], carry)
	z[3], carry = bits.Add64(x[3], y[3], carry)
	z[4], carry = bits.Add64(x[4], y[4], carry)
	z[5], carry = bits.Add64(x[5], y[5], carry)
	z[6], carry = bits.Add64(x[6], y[6], carry)
	z[7], carry = bits.Add64(x[7], y[7], carry)
	z[8], carry = bits.Add64(x[8], y[8], carry)
	z[9], carry = bits.Add64(x[9], y[9], carry)
	z[10], carry = bits.Add64(x[10], y[10], carry)
	z[11], carry = bits.Add64(x[11], y[11], carry)
	z[12], carry = bits.Add64(x[12], y[12], carry)
	z[13], carry = bits.Add64(x[13], y[13], carry)
	z[14], carry = bits.Add64(x[14], y[14], carry)
	z[15], carry = bits.Add64(x[15], y[15], carry)
	z[16], carry = bits.Add64(x[16], y[16], carry)
	z[17], carry = bits.Add64(x[17], y[17], carry)
	z[18], carry = bits.Add64(x[18], y[18], carry)
	z[19], carry = bits.Add64(x[19], y[19], carry)
	z[20], carry = bits.Add64(x[20], y[20], carry)
	z[21], carry = bits.Add64(x[21], y[21], carry)
	z[22], carry = bits.Add64(x[22], y[22], carry)
	z[23], carry = bits.Add64(x[23], y[23], carry)
	z[24], carry = bits.Add64(x[24], y[24], carry)
	z[25], carry = bits.Add64(x[25], y[25], carry)
	z[26], carry = bits.Add64(x[26], y[26], carry)
	// if we overflowed the last addition, z >= q
	// if z >= q, z = z - q
	if carry != 0 {
		// we overflowed, so z >= q
		z[0], carry = bits.Sub64(z[0], 12440613579524619067, 0)
		z[1], carry = bits.Sub64(z[1], 18006194176015342613, carry)
		z[2], carry = bits.Sub64(z[2], 17457613988123037566, carry)
		z[3], carry = bits.Sub64(z[3], 18368984800942220457, carry)
		z[4], carry = bits.Sub64(z[4], 827738500950988109, carry)
		z[5], carry = bits.Sub64(z[5], 10465983792485076748, carry)
		z[6], carry = bits.Sub64(z[6], 13130147365989575090, carry)
		z[7], carry = bits.Sub64(z[7], 15901529056822770985, carry)
		z[8], carry = bits.Sub64(z[8], 13319898001022067246, carry)
		z[9], carry = bits.Sub64(z[9], 12824488156229008848, carry)
		z[10], carry = bits.Sub64(z[10], 9383015198101081139, carry)
		z[11], carry = bits.Sub64(z[11], 10947642194440358220, carry)
		z[12], carry = bits.Sub64(z[12], 14734856437812977659, carry)
		z[13], carry = bits.Sub64(z[13], 9151126398053665599, carry)
		z[14], carry = bits.Sub64(z[14], 18381890281880615828, carry)
		z[15], carry = bits.Sub64(z[15], 2346860679127149877, carry)
		z[16], carry = bits.Sub64(z[16], 7713876665391399680, carry)
		z[17], carry = bits.Sub64(z[17], 16804552333605636830, carry)
		z[18], carry = bits.Sub64(z[18], 16402045285100958250, carry)
		z[19], carry = bits.Sub64(z[19], 18176937210785782677, carry)
		z[20], carry = bits.Sub64(z[20], 15966221038481425824, carry)
		z[21], carry = bits.Sub64(z[21], 6959743526085911234, carry)
		z[22], carry = bits.Sub64(z[22], 12624744789978825023, carry)
		z[23], carry = bits.Sub64(z[23], 7041736483744465896, carry)
		z[24], carry = bits.Sub64(z[24], 552982698812971543, carry)
		z[25], carry = bits.Sub64(z[25], 2684388112402793318, carry)
		z[26], carry = bits.Sub64(z[26], 8611279412651616633, carry)
		return z
	}

	// if z > q --> z -= q
	// note: this is NOT constant time
	if !(z[26] < 8611279412651616633 || (z[26] == 8611279412651616633 && (z[25] < 2684388112402793318 || (z[25] == 2684388112402793318 && (z[24] < 552982698812971543 || (z[24] == 552982698812971543 && (z[23] < 7041736483744465896 || (z[23] == 7041736483744465896 && (z[22] < 12624744789978825023 || (z[22] == 12624744789978825023 && (z[21] < 6959743526085911234 || (z[21] == 6959743526085911234 && (z[20] < 15966221038481425824 || (z[20] == 15966221038481425824 && (z[19] < 18176937210785782677 || (z[19] == 18176937210785782677 && (z[18] < 16402045285100958250 || (z[18] == 16402045285100958250 && (z[17] < 16804552333605636830 || (z[17] == 16804552333605636830 && (z[16] < 7713876665391399680 || (z[16] == 7713876665391399680 && (z[15] < 2346860679127149877 || (z[15] == 2346860679127149877 && (z[14] < 18381890281880615828 || (z[14] == 18381890281880615828 && (z[13] < 9151126398053665599 || (z[13] == 9151126398053665599 && (z[12] < 14734856437812977659 || (z[12] == 14734856437812977659 && (z[11] < 10947642194440358220 || (z[11] == 10947642194440358220 && (z[10] < 9383015198101081139 || (z[10] == 9383015198101081139 && (z[9] < 12824488156229008848 || (z[9] == 12824488156229008848 && (z[8] < 13319898001022067246 || (z[8] == 13319898001022067246 && (z[7] < 15901529056822770985 || (z[7] == 15901529056822770985 && (z[6] < 13130147365989575090 || (z[6] == 13130147365989575090 && (z[5] < 10465983792485076748 || (z[5] == 10465983792485076748 && (z[4] < 827738500950988109 || (z[4] == 827738500950988109 && (z[3] < 18368984800942220457 || (z[3] == 18368984800942220457 && (z[2] < 17457613988123037566 || (z[2] == 17457613988123037566 && (z[1] < 18006194176015342613 || (z[1] == 18006194176015342613 && (z[0] < 12440613579524619067))))))))))))))))))))))))))))))))))))))))))))))))))))) {
		var b uint64
		z[0], b = bits.Sub64(z[0], 12440613579524619067, 0)
		z[1], b = bits.Sub64(z[1], 18006194176015342613, b)
		z[2], b = bits.Sub64(z[2], 17457613988123037566, b)
		z[3], b = bits.Sub64(z[3], 18368984800942220457, b)
		z[4], b = bits.Sub64(z[4], 827738500950988109, b)
		z[5], b = bits.Sub64(z[5], 10465983792485076748, b)
		z[6], b = bits.Sub64(z[6], 13130147365989575090, b)
		z[7], b = bits.Sub64(z[7], 15901529056822770985, b)
		z[8], b = bits.Sub64(z[8], 13319898001022067246, b)
		z[9], b = bits.Sub64(z[9], 12824488156229008848, b)
		z[10], b = bits.Sub64(z[10], 9383015198101081139, b)
		z[11], b = bits.Sub64(z[11], 10947642194440358220, b)
		z[12], b = bits.Sub64(z[12], 14734856437812977659, b)
		z[13], b = bits.Sub64(z[13], 9151126398053665599, b)
		z[14], b = bits.Sub64(z[14], 18381890281880615828, b)
		z[15], b = bits.Sub64(z[15], 2346860679127149877, b)
		z[16], b = bits.Sub64(z[16], 7713876665391399680, b)
		z[17], b = bits.Sub64(z[17], 16804552333605636830, b)
		z[18], b = bits.Sub64(z[18], 16402045285100958250, b)
		z[19], b = bits.Sub64(z[19], 18176937210785782677, b)
		z[20], b = bits.Sub64(z[20], 15966221038481425824, b)
		z[21], b = bits.Sub64(z[21], 6959743526085911234, b)
		z[22], b = bits.Sub64(z[22], 12624744789978825023, b)
		z[23], b = bits.Sub64(z[23], 7041736483744465896, b)
		z[24], b = bits.Sub64(z[24], 552982698812971543, b)
		z[25], b = bits.Sub64(z[25], 2684388112402793318, b)
		z[26], _ = bits.Sub64(z[26], 8611279412651616633, b)
	}
	return z
}

// AddAssign z = z + x mod q
func (z *Element27) AddAssign(x *Element27) *Element27 {
	var carry uint64

	z[0], carry = bits.Add64(z[0], x[0], 0)
	z[1], carry = bits.Add64(z[1], x[1], carry)
	z[2], carry = bits.Add64(z[2], x[2], carry)
	z[3], carry = bits.Add64(z[3], x[3], carry)
	z[4], carry = bits.Add64(z[4], x[4], carry)
	z[5], carry = bits.Add64(z[5], x[5], carry)
	z[6], carry = bits.Add64(z[6], x[6], carry)
	z[7], carry = bits.Add64(z[7], x[7], carry)
	z[8], carry = bits.Add64(z[8], x[8], carry)
	z[9], carry = bits.Add64(z[9], x[9], carry)
	z[10], carry = bits.Add64(z[10], x[10], carry)
	z[11], carry = bits.Add64(z[11], x[11], carry)
	z[12], carry = bits.Add64(z[12], x[12], carry)
	z[13], carry = bits.Add64(z[13], x[13], carry)
	z[14], carry = bits.Add64(z[14], x[14], carry)
	z[15], carry = bits.Add64(z[15], x[15], carry)
	z[16], carry = bits.Add64(z[16], x[16], carry)
	z[17], carry = bits.Add64(z[17], x[17], carry)
	z[18], carry = bits.Add64(z[18], x[18], carry)
	z[19], carry = bits.Add64(z[19], x[19], carry)
	z[20], carry = bits.Add64(z[20], x[20], carry)
	z[21], carry = bits.Add64(z[21], x[21], carry)
	z[22], carry = bits.Add64(z[22], x[22], carry)
	z[23], carry = bits.Add64(z[23], x[23], carry)
	z[24], carry = bits.Add64(z[24], x[24], carry)
	z[25], carry = bits.Add64(z[25], x[25], carry)
	z[26], carry = bits.Add64(z[26], x[26], carry)
	// if we overflowed the last addition, z >= q
	// if z >= q, z = z - q
	if carry != 0 {
		// we overflowed, so z >= q
		z[0], carry = bits.Sub64(z[0], 12440613579524619067, 0)
		z[1], carry = bits.Sub64(z[1], 18006194176015342613, carry)
		z[2], carry = bits.Sub64(z[2], 17457613988123037566, carry)
		z[3], carry = bits.Sub64(z[3], 18368984800942220457, carry)
		z[4], carry = bits.Sub64(z[4], 827738500950988109, carry)
		z[5], carry = bits.Sub64(z[5], 10465983792485076748, carry)
		z[6], carry = bits.Sub64(z[6], 13130147365989575090, carry)
		z[7], carry = bits.Sub64(z[7], 15901529056822770985, carry)
		z[8], carry = bits.Sub64(z[8], 13319898001022067246, carry)
		z[9], carry = bits.Sub64(z[9], 12824488156229008848, carry)
		z[10], carry = bits.Sub64(z[10], 9383015198101081139, carry)
		z[11], carry = bits.Sub64(z[11], 10947642194440358220, carry)
		z[12], carry = bits.Sub64(z[12], 14734856437812977659, carry)
		z[13], carry = bits.Sub64(z[13], 9151126398053665599, carry)
		z[14], carry = bits.Sub64(z[14], 18381890281880615828, carry)
		z[15], carry = bits.Sub64(z[15], 2346860679127149877, carry)
		z[16], carry = bits.Sub64(z[16], 7713876665391399680, carry)
		z[17], carry = bits.Sub64(z[17], 16804552333605636830, carry)
		z[18], carry = bits.Sub64(z[18], 16402045285100958250, carry)
		z[19], carry = bits.Sub64(z[19], 18176937210785782677, carry)
		z[20], carry = bits.Sub64(z[20], 15966221038481425824, carry)
		z[21], carry = bits.Sub64(z[21], 6959743526085911234, carry)
		z[22], carry = bits.Sub64(z[22], 12624744789978825023, carry)
		z[23], carry = bits.Sub64(z[23], 7041736483744465896, carry)
		z[24], carry = bits.Sub64(z[24], 552982698812971543, carry)
		z[25], carry = bits.Sub64(z[25], 2684388112402793318, carry)
		z[26], carry = bits.Sub64(z[26], 8611279412651616633, carry)
		return z
	}

	// if z > q --> z -= q
	// note: this is NOT constant time
	if !(z[26] < 8611279412651616633 || (z[26] == 8611279412651616633 && (z[25] < 2684388112402793318 || (z[25] == 2684388112402793318 && (z[24] < 552982698812971543 || (z[24] == 552982698812971543 && (z[23] < 7041736483744465896 || (z[23] == 7041736483744465896 && (z[22] < 12624744789978825023 || (z[22] == 12624744789978825023 && (z[21] < 6959743526085911234 || (z[21] == 6959743526085911234 && (z[20] < 15966221038481425824 || (z[20] == 15966221038481425824 && (z[19] < 18176937210785782677 || (z[19] == 18176937210785782677 && (z[18] < 16402045285100958250 || (z[18] == 16402045285100958250 && (z[17] < 16804552333605636830 || (z[17] == 16804552333605636830 && (z[16] < 7713876665391399680 || (z[16] == 7713876665391399680 && (z[15] < 2346860679127149877 || (z[15] == 2346860679127149877 && (z[14] < 18381890281880615828 || (z[14] == 18381890281880615828 && (z[13] < 9151126398053665599 || (z[13] == 9151126398053665599 && (z[12] < 14734856437812977659 || (z[12] == 14734856437812977659 && (z[11] < 10947642194440358220 || (z[11] == 10947642194440358220 && (z[10] < 9383015198101081139 || (z[10] == 9383015198101081139 && (z[9] < 12824488156229008848 || (z[9] == 12824488156229008848 && (z[8] < 13319898001022067246 || (z[8] == 13319898001022067246 && (z[7] < 15901529056822770985 || (z[7] == 15901529056822770985 && (z[6] < 13130147365989575090 || (z[6] == 13130147365989575090 && (z[5] < 10465983792485076748 || (z[5] == 10465983792485076748 && (z[4] < 827738500950988109 || (z[4] == 827738500950988109 && (z[3] < 18368984800942220457 || (z[3] == 18368984800942220457 && (z[2] < 17457613988123037566 || (z[2] == 17457613988123037566 && (z[1] < 18006194176015342613 || (z[1] == 18006194176015342613 && (z[0] < 12440613579524619067))))))))))))))))))))))))))))))))))))))))))))))))))))) {
		var b uint64
		z[0], b = bits.Sub64(z[0], 12440613579524619067, 0)
		z[1], b = bits.Sub64(z[1], 18006194176015342613, b)
		z[2], b = bits.Sub64(z[2], 17457613988123037566, b)
		z[3], b = bits.Sub64(z[3], 18368984800942220457, b)
		z[4], b = bits.Sub64(z[4], 827738500950988109, b)
		z[5], b = bits.Sub64(z[5], 10465983792485076748, b)
		z[6], b = bits.Sub64(z[6], 13130147365989575090, b)
		z[7], b = bits.Sub64(z[7], 15901529056822770985, b)
		z[8], b = bits.Sub64(z[8], 13319898001022067246, b)
		z[9], b = bits.Sub64(z[9], 12824488156229008848, b)
		z[10], b = bits.Sub64(z[10], 9383015198101081139, b)
		z[11], b = bits.Sub64(z[11], 10947642194440358220, b)
		z[12], b = bits.Sub64(z[12], 14734856437812977659, b)
		z[13], b = bits.Sub64(z[13], 9151126398053665599, b)
		z[14], b = bits.Sub64(z[14], 18381890281880615828, b)
		z[15], b = bits.Sub64(z[15], 2346860679127149877, b)
		z[16], b = bits.Sub64(z[16], 7713876665391399680, b)
		z[17], b = bits.Sub64(z[17], 16804552333605636830, b)
		z[18], b = bits.Sub64(z[18], 16402045285100958250, b)
		z[19], b = bits.Sub64(z[19], 18176937210785782677, b)
		z[20], b = bits.Sub64(z[20], 15966221038481425824, b)
		z[21], b = bits.Sub64(z[21], 6959743526085911234, b)
		z[22], b = bits.Sub64(z[22], 12624744789978825023, b)
		z[23], b = bits.Sub64(z[23], 7041736483744465896, b)
		z[24], b = bits.Sub64(z[24], 552982698812971543, b)
		z[25], b = bits.Sub64(z[25], 2684388112402793318, b)
		z[26], _ = bits.Sub64(z[26], 8611279412651616633, b)
	}
	return z
}

// Double z = x + x mod q, aka Lsh 1
func (z *Element27) Double(x *Element27) *Element27 {
	var carry uint64

	z[0], carry = bits.Add64(x[0], x[0], 0)
	z[1], carry = bits.Add64(x[1], x[1], carry)
	z[2], carry = bits.Add64(x[2], x[2], carry)
	z[3], carry = bits.Add64(x[3], x[3], carry)
	z[4], carry = bits.Add64(x[4], x[4], carry)
	z[5], carry = bits.Add64(x[5], x[5], carry)
	z[6], carry = bits.Add64(x[6], x[6], carry)
	z[7], carry = bits.Add64(x[7], x[7], carry)
	z[8], carry = bits.Add64(x[8], x[8], carry)
	z[9], carry = bits.Add64(x[9], x[9], carry)
	z[10], carry = bits.Add64(x[10], x[10], carry)
	z[11], carry = bits.Add64(x[11], x[11], carry)
	z[12], carry = bits.Add64(x[12], x[12], carry)
	z[13], carry = bits.Add64(x[13], x[13], carry)
	z[14], carry = bits.Add64(x[14], x[14], carry)
	z[15], carry = bits.Add64(x[15], x[15], carry)
	z[16], carry = bits.Add64(x[16], x[16], carry)
	z[17], carry = bits.Add64(x[17], x[17], carry)
	z[18], carry = bits.Add64(x[18], x[18], carry)
	z[19], carry = bits.Add64(x[19], x[19], carry)
	z[20], carry = bits.Add64(x[20], x[20], carry)
	z[21], carry = bits.Add64(x[21], x[21], carry)
	z[22], carry = bits.Add64(x[22], x[22], carry)
	z[23], carry = bits.Add64(x[23], x[23], carry)
	z[24], carry = bits.Add64(x[24], x[24], carry)
	z[25], carry = bits.Add64(x[25], x[25], carry)
	z[26], carry = bits.Add64(x[26], x[26], carry)
	// if we overflowed the last addition, z >= q
	// if z >= q, z = z - q
	if carry != 0 {
		// we overflowed, so z >= q
		z[0], carry = bits.Sub64(z[0], 12440613579524619067, 0)
		z[1], carry = bits.Sub64(z[1], 18006194176015342613, carry)
		z[2], carry = bits.Sub64(z[2], 17457613988123037566, carry)
		z[3], carry = bits.Sub64(z[3], 18368984800942220457, carry)
		z[4], carry = bits.Sub64(z[4], 827738500950988109, carry)
		z[5], carry = bits.Sub64(z[5], 10465983792485076748, carry)
		z[6], carry = bits.Sub64(z[6], 13130147365989575090, carry)
		z[7], carry = bits.Sub64(z[7], 15901529056822770985, carry)
		z[8], carry = bits.Sub64(z[8], 13319898001022067246, carry)
		z[9], carry = bits.Sub64(z[9], 12824488156229008848, carry)
		z[10], carry = bits.Sub64(z[10], 9383015198101081139, carry)
		z[11], carry = bits.Sub64(z[11], 10947642194440358220, carry)
		z[12], carry = bits.Sub64(z[12], 14734856437812977659, carry)
		z[13], carry = bits.Sub64(z[13], 9151126398053665599, carry)
		z[14], carry = bits.Sub64(z[14], 18381890281880615828, carry)
		z[15], carry = bits.Sub64(z[15], 2346860679127149877, carry)
		z[16], carry = bits.Sub64(z[16], 7713876665391399680, carry)
		z[17], carry = bits.Sub64(z[17], 16804552333605636830, carry)
		z[18], carry = bits.Sub64(z[18], 16402045285100958250, carry)
		z[19], carry = bits.Sub64(z[19], 18176937210785782677, carry)
		z[20], carry = bits.Sub64(z[20], 15966221038481425824, carry)
		z[21], carry = bits.Sub64(z[21], 6959743526085911234, carry)
		z[22], carry = bits.Sub64(z[22], 12624744789978825023, carry)
		z[23], carry = bits.Sub64(z[23], 7041736483744465896, carry)
		z[24], carry = bits.Sub64(z[24], 552982698812971543, carry)
		z[25], carry = bits.Sub64(z[25], 2684388112402793318, carry)
		z[26], carry = bits.Sub64(z[26], 8611279412651616633, carry)
		return z
	}

	// if z > q --> z -= q
	// note: this is NOT constant time
	if !(z[26] < 8611279412651616633 || (z[26] == 8611279412651616633 && (z[25] < 2684388112402793318 || (z[25] == 2684388112402793318 && (z[24] < 552982698812971543 || (z[24] == 552982698812971543 && (z[23] < 7041736483744465896 || (z[23] == 7041736483744465896 && (z[22] < 12624744789978825023 || (z[22] == 12624744789978825023 && (z[21] < 6959743526085911234 || (z[21] == 6959743526085911234 && (z[20] < 15966221038481425824 || (z[20] == 15966221038481425824 && (z[19] < 18176937210785782677 || (z[19] == 18176937210785782677 && (z[18] < 16402045285100958250 || (z[18] == 16402045285100958250 && (z[17] < 16804552333605636830 || (z[17] == 16804552333605636830 && (z[16] < 7713876665391399680 || (z[16] == 7713876665391399680 && (z[15] < 2346860679127149877 || (z[15] == 2346860679127149877 && (z[14] < 18381890281880615828 || (z[14] == 18381890281880615828 && (z[13] < 9151126398053665599 || (z[13] == 9151126398053665599 && (z[12] < 14734856437812977659 || (z[12] == 14734856437812977659 && (z[11] < 10947642194440358220 || (z[11] == 10947642194440358220 && (z[10] < 9383015198101081139 || (z[10] == 9383015198101081139 && (z[9] < 12824488156229008848 || (z[9] == 12824488156229008848 && (z[8] < 13319898001022067246 || (z[8] == 13319898001022067246 && (z[7] < 15901529056822770985 || (z[7] == 15901529056822770985 && (z[6] < 13130147365989575090 || (z[6] == 13130147365989575090 && (z[5] < 10465983792485076748 || (z[5] == 10465983792485076748 && (z[4] < 827738500950988109 || (z[4] == 827738500950988109 && (z[3] < 18368984800942220457 || (z[3] == 18368984800942220457 && (z[2] < 17457613988123037566 || (z[2] == 17457613988123037566 && (z[1] < 18006194176015342613 || (z[1] == 18006194176015342613 && (z[0] < 12440613579524619067))))))))))))))))))))))))))))))))))))))))))))))))))))) {
		var b uint64
		z[0], b = bits.Sub64(z[0], 12440613579524619067, 0)
		z[1], b = bits.Sub64(z[1], 18006194176015342613, b)
		z[2], b = bits.Sub64(z[2], 17457613988123037566, b)
		z[3], b = bits.Sub64(z[3], 18368984800942220457, b)
		z[4], b = bits.Sub64(z[4], 827738500950988109, b)
		z[5], b = bits.Sub64(z[5], 10465983792485076748, b)
		z[6], b = bits.Sub64(z[6], 13130147365989575090, b)
		z[7], b = bits.Sub64(z[7], 15901529056822770985, b)
		z[8], b = bits.Sub64(z[8], 13319898001022067246, b)
		z[9], b = bits.Sub64(z[9], 12824488156229008848, b)
		z[10], b = bits.Sub64(z[10], 9383015198101081139, b)
		z[11], b = bits.Sub64(z[11], 10947642194440358220, b)
		z[12], b = bits.Sub64(z[12], 14734856437812977659, b)
		z[13], b = bits.Sub64(z[13], 9151126398053665599, b)
		z[14], b = bits.Sub64(z[14], 18381890281880615828, b)
		z[15], b = bits.Sub64(z[15], 2346860679127149877, b)
		z[16], b = bits.Sub64(z[16], 7713876665391399680, b)
		z[17], b = bits.Sub64(z[17], 16804552333605636830, b)
		z[18], b = bits.Sub64(z[18], 16402045285100958250, b)
		z[19], b = bits.Sub64(z[19], 18176937210785782677, b)
		z[20], b = bits.Sub64(z[20], 15966221038481425824, b)
		z[21], b = bits.Sub64(z[21], 6959743526085911234, b)
		z[22], b = bits.Sub64(z[22], 12624744789978825023, b)
		z[23], b = bits.Sub64(z[23], 7041736483744465896, b)
		z[24], b = bits.Sub64(z[24], 552982698812971543, b)
		z[25], b = bits.Sub64(z[25], 2684388112402793318, b)
		z[26], _ = bits.Sub64(z[26], 8611279412651616633, b)
	}
	return z
}

// Sub  z = x - y mod q
func (z *Element27) Sub(x, y *Element27) *Element27 {
	var b uint64
	z[0], b = bits.Sub64(x[0], y[0], 0)
	z[1], b = bits.Sub64(x[1], y[1], b)
	z[2], b = bits.Sub64(x[2], y[2], b)
	z[3], b = bits.Sub64(x[3], y[3], b)
	z[4], b = bits.Sub64(x[4], y[4], b)
	z[5], b = bits.Sub64(x[5], y[5], b)
	z[6], b = bits.Sub64(x[6], y[6], b)
	z[7], b = bits.Sub64(x[7], y[7], b)
	z[8], b = bits.Sub64(x[8], y[8], b)
	z[9], b = bits.Sub64(x[9], y[9], b)
	z[10], b = bits.Sub64(x[10], y[10], b)
	z[11], b = bits.Sub64(x[11], y[11], b)
	z[12], b = bits.Sub64(x[12], y[12], b)
	z[13], b = bits.Sub64(x[13], y[13], b)
	z[14], b = bits.Sub64(x[14], y[14], b)
	z[15], b = bits.Sub64(x[15], y[15], b)
	z[16], b = bits.Sub64(x[16], y[16], b)
	z[17], b = bits.Sub64(x[17], y[17], b)
	z[18], b = bits.Sub64(x[18], y[18], b)
	z[19], b = bits.Sub64(x[19], y[19], b)
	z[20], b = bits.Sub64(x[20], y[20], b)
	z[21], b = bits.Sub64(x[21], y[21], b)
	z[22], b = bits.Sub64(x[22], y[22], b)
	z[23], b = bits.Sub64(x[23], y[23], b)
	z[24], b = bits.Sub64(x[24], y[24], b)
	z[25], b = bits.Sub64(x[25], y[25], b)
	z[26], b = bits.Sub64(x[26], y[26], b)
	if b != 0 {
		var c uint64
		z[0], c = bits.Add64(z[0], 12440613579524619067, 0)
		z[1], c = bits.Add64(z[1], 18006194176015342613, c)
		z[2], c = bits.Add64(z[2], 17457613988123037566, c)
		z[3], c = bits.Add64(z[3], 18368984800942220457, c)
		z[4], c = bits.Add64(z[4], 827738500950988109, c)
		z[5], c = bits.Add64(z[5], 10465983792485076748, c)
		z[6], c = bits.Add64(z[6], 13130147365989575090, c)
		z[7], c = bits.Add64(z[7], 15901529056822770985, c)
		z[8], c = bits.Add64(z[8], 13319898001022067246, c)
		z[9], c = bits.Add64(z[9], 12824488156229008848, c)
		z[10], c = bits.Add64(z[10], 9383015198101081139, c)
		z[11], c = bits.Add64(z[11], 10947642194440358220, c)
		z[12], c = bits.Add64(z[12], 14734856437812977659, c)
		z[13], c = bits.Add64(z[13], 9151126398053665599, c)
		z[14], c = bits.Add64(z[14], 18381890281880615828, c)
		z[15], c = bits.Add64(z[15], 2346860679127149877, c)
		z[16], c = bits.Add64(z[16], 7713876665391399680, c)
		z[17], c = bits.Add64(z[17], 16804552333605636830, c)
		z[18], c = bits.Add64(z[18], 16402045285100958250, c)
		z[19], c = bits.Add64(z[19], 18176937210785782677, c)
		z[20], c = bits.Add64(z[20], 15966221038481425824, c)
		z[21], c = bits.Add64(z[21], 6959743526085911234, c)
		z[22], c = bits.Add64(z[22], 12624744789978825023, c)
		z[23], c = bits.Add64(z[23], 7041736483744465896, c)
		z[24], c = bits.Add64(z[24], 552982698812971543, c)
		z[25], c = bits.Add64(z[25], 2684388112402793318, c)
		z[26], _ = bits.Add64(z[26], 8611279412651616633, c)
	}
	return z
}

// SubAssign  z = z - x mod q
func (z *Element27) SubAssign(x *Element27) *Element27 {
	var b uint64
	z[0], b = bits.Sub64(z[0], x[0], 0)
	z[1], b = bits.Sub64(z[1], x[1], b)
	z[2], b = bits.Sub64(z[2], x[2], b)
	z[3], b = bits.Sub64(z[3], x[3], b)
	z[4], b = bits.Sub64(z[4], x[4], b)
	z[5], b = bits.Sub64(z[5], x[5], b)
	z[6], b = bits.Sub64(z[6], x[6], b)
	z[7], b = bits.Sub64(z[7], x[7], b)
	z[8], b = bits.Sub64(z[8], x[8], b)
	z[9], b = bits.Sub64(z[9], x[9], b)
	z[10], b = bits.Sub64(z[10], x[10], b)
	z[11], b = bits.Sub64(z[11], x[11], b)
	z[12], b = bits.Sub64(z[12], x[12], b)
	z[13], b = bits.Sub64(z[13], x[13], b)
	z[14], b = bits.Sub64(z[14], x[14], b)
	z[15], b = bits.Sub64(z[15], x[15], b)
	z[16], b = bits.Sub64(z[16], x[16], b)
	z[17], b = bits.Sub64(z[17], x[17], b)
	z[18], b = bits.Sub64(z[18], x[18], b)
	z[19], b = bits.Sub64(z[19], x[19], b)
	z[20], b = bits.Sub64(z[20], x[20], b)
	z[21], b = bits.Sub64(z[21], x[21], b)
	z[22], b = bits.Sub64(z[22], x[22], b)
	z[23], b = bits.Sub64(z[23], x[23], b)
	z[24], b = bits.Sub64(z[24], x[24], b)
	z[25], b = bits.Sub64(z[25], x[25], b)
	z[26], b = bits.Sub64(z[26], x[26], b)
	if b != 0 {
		var c uint64
		z[0], c = bits.Add64(z[0], 12440613579524619067, 0)
		z[1], c = bits.Add64(z[1], 18006194176015342613, c)
		z[2], c = bits.Add64(z[2], 17457613988123037566, c)
		z[3], c = bits.Add64(z[3], 18368984800942220457, c)
		z[4], c = bits.Add64(z[4], 827738500950988109, c)
		z[5], c = bits.Add64(z[5], 10465983792485076748, c)
		z[6], c = bits.Add64(z[6], 13130147365989575090, c)
		z[7], c = bits.Add64(z[7], 15901529056822770985, c)
		z[8], c = bits.Add64(z[8], 13319898001022067246, c)
		z[9], c = bits.Add64(z[9], 12824488156229008848, c)
		z[10], c = bits.Add64(z[10], 9383015198101081139, c)
		z[11], c = bits.Add64(z[11], 10947642194440358220, c)
		z[12], c = bits.Add64(z[12], 14734856437812977659, c)
		z[13], c = bits.Add64(z[13], 9151126398053665599, c)
		z[14], c = bits.Add64(z[14], 18381890281880615828, c)
		z[15], c = bits.Add64(z[15], 2346860679127149877, c)
		z[16], c = bits.Add64(z[16], 7713876665391399680, c)
		z[17], c = bits.Add64(z[17], 16804552333605636830, c)
		z[18], c = bits.Add64(z[18], 16402045285100958250, c)
		z[19], c = bits.Add64(z[19], 18176937210785782677, c)
		z[20], c = bits.Add64(z[20], 15966221038481425824, c)
		z[21], c = bits.Add64(z[21], 6959743526085911234, c)
		z[22], c = bits.Add64(z[22], 12624744789978825023, c)
		z[23], c = bits.Add64(z[23], 7041736483744465896, c)
		z[24], c = bits.Add64(z[24], 552982698812971543, c)
		z[25], c = bits.Add64(z[25], 2684388112402793318, c)
		z[26], _ = bits.Add64(z[26], 8611279412651616633, c)
	}
	return z
}

// Exp z = x^exponent mod q
// (not optimized)
// exponent (non-montgomery form) is ordered from least significant word to most significant word
func (z *Element27) Exp(x Element27, exponent ...uint64) *Element27 {
	r := 0
	msb := 0
	for i := len(exponent) - 1; i >= 0; i-- {
		if exponent[i] == 0 {
			r++
		} else {
			msb = (i * 64) + bits.Len64(exponent[i])
			break
		}
	}
	exponent = exponent[:len(exponent)-r]
	if len(exponent) == 0 {
		return z.SetOne()
	}

	z.Set(&x)

	l := msb - 2
	for i := l; i >= 0; i-- {
		z.Square(z)
		if exponent[i/64]&(1<<uint(i%64)) != 0 {
			z.MulAssign(&x)
		}
	}
	return z
}

// FromMont converts z in place (i.e. mutates) from Montgomery to regular representation
// sets and returns z = z * 1
func (z *Element27) FromMont() *Element27 {

	// the following lines implement z = z * 1
	// with a modified CIOS montgomery multiplication
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 6626265420794567181
		C := madd0(m, 12440613579524619067, z[0])
		C, z[0] = madd2(m, 18006194176015342613, z[1], C)
		C, z[1] = madd2(m, 17457613988123037566, z[2], C)
		C, z[2] = madd2(m, 18368984800942220457, z[3], C)
		C, z[3] = madd2(m, 827738500950988109, z[4], C)
		C, z[4] = madd2(m, 10465983792485076748, z[5], C)
		C, z[5] = madd2(m, 13130147365989575090, z[6], C)
		C, z[6] = madd2(m, 15901529056822770985, z[7], C)
		C, z[7] = madd2(m, 13319898001022067246, z[8], C)
		C, z[8] = madd2(m, 12824488156229008848, z[9], C)
		C, z[9] = madd2(m, 9383015198101081139, z[10], C)
		C, z[10] = madd2(m, 10947642194440358220, z[11], C)
		C, z[11] = madd2(m, 14734856437812977659, z[12], C)
		C, z[12] = madd2(m, 9151126398053665599, z[13], C)
		C, z[13] = madd2(m, 18381890281880615828, z[14], C)
		C, z[14] = madd2(m, 2346860679127149877, z[15], C)
		C, z[15] = madd2(m, 7713876665391399680, z[16], C)
		C, z[16] = madd2(m, 16804552333605636830, z[17], C)
		C, z[17] = madd2(m, 16402045285100958250, z[18], C)
		C, z[18] = madd2(m, 18176937210785782677, z[19], C)
		C, z[19] = madd2(m, 15966221038481425824, z[20], C)
		C, z[20] = madd2(m, 6959743526085911234, z[21], C)
		C, z[21] = madd2(m, 12624744789978825023, z[22], C)
		C, z[22] = madd2(m, 7041736483744465896, z[23], C)
		C, z[23] = madd2(m, 552982698812971543, z[24], C)
		C, z[24] = madd2(m, 2684388112402793318, z[25], C)
		C, z[25] = madd2(m, 8611279412651616633, z[26], C)
		z[26] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 6626265420794567181
		C := madd0(m, 12440613579524619067, z[0])
		C, z[0] = madd2(m, 18006194176015342613, z[1], C)
		C, z[1] = madd2(m, 17457613988123037566, z[2], C)
		C, z[2] = madd2(m, 18368984800942220457, z[3], C)
		C, z[3] = madd2(m, 827738500950988109, z[4], C)
		C, z[4] = madd2(m, 10465983792485076748, z[5], C)
		C, z[5] = madd2(m, 13130147365989575090, z[6], C)
		C, z[6] = madd2(m, 15901529056822770985, z[7], C)
		C, z[7] = madd2(m, 13319898001022067246, z[8], C)
		C, z[8] = madd2(m, 12824488156229008848, z[9], C)
		C, z[9] = madd2(m, 9383015198101081139, z[10], C)
		C, z[10] = madd2(m, 10947642194440358220, z[11], C)
		C, z[11] = madd2(m, 14734856437812977659, z[12], C)
		C, z[12] = madd2(m, 9151126398053665599, z[13], C)
		C, z[13] = madd2(m, 18381890281880615828, z[14], C)
		C, z[14] = madd2(m, 2346860679127149877, z[15], C)
		C, z[15] = madd2(m, 7713876665391399680, z[16], C)
		C, z[16] = madd2(m, 16804552333605636830, z[17], C)
		C, z[17] = madd2(m, 16402045285100958250, z[18], C)
		C, z[18] = madd2(m, 18176937210785782677, z[19], C)
		C, z[19] = madd2(m, 15966221038481425824, z[20], C)
		C, z[20] = madd2(m, 6959743526085911234, z[21], C)
		C, z[21] = madd2(m, 12624744789978825023, z[22], C)
		C, z[22] = madd2(m, 7041736483744465896, z[23], C)
		C, z[23] = madd2(m, 552982698812971543, z[24], C)
		C, z[24] = madd2(m, 2684388112402793318, z[25], C)
		C, z[25] = madd2(m, 8611279412651616633, z[26], C)
		z[26] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 6626265420794567181
		C := madd0(m, 12440613579524619067, z[0])
		C, z[0] = madd2(m, 18006194176015342613, z[1], C)
		C, z[1] = madd2(m, 17457613988123037566, z[2], C)
		C, z[2] = madd2(m, 18368984800942220457, z[3], C)
		C, z[3] = madd2(m, 827738500950988109, z[4], C)
		C, z[4] = madd2(m, 10465983792485076748, z[5], C)
		C, z[5] = madd2(m, 13130147365989575090, z[6], C)
		C, z[6] = madd2(m, 15901529056822770985, z[7], C)
		C, z[7] = madd2(m, 13319898001022067246, z[8], C)
		C, z[8] = madd2(m, 12824488156229008848, z[9], C)
		C, z[9] = madd2(m, 9383015198101081139, z[10], C)
		C, z[10] = madd2(m, 10947642194440358220, z[11], C)
		C, z[11] = madd2(m, 14734856437812977659, z[12], C)
		C, z[12] = madd2(m, 9151126398053665599, z[13], C)
		C, z[13] = madd2(m, 18381890281880615828, z[14], C)
		C, z[14] = madd2(m, 2346860679127149877, z[15], C)
		C, z[15] = madd2(m, 7713876665391399680, z[16], C)
		C, z[16] = madd2(m, 16804552333605636830, z[17], C)
		C, z[17] = madd2(m, 16402045285100958250, z[18], C)
		C, z[18] = madd2(m, 18176937210785782677, z[19], C)
		C, z[19] = madd2(m, 15966221038481425824, z[20], C)
		C, z[20] = madd2(m, 6959743526085911234, z[21], C)
		C, z[21] = madd2(m, 12624744789978825023, z[22], C)
		C, z[22] = madd2(m, 7041736483744465896, z[23], C)
		C, z[23] = madd2(m, 552982698812971543, z[24], C)
		C, z[24] = madd2(m, 2684388112402793318, z[25], C)
		C, z[25] = madd2(m, 8611279412651616633, z[26], C)
		z[26] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 6626265420794567181
		C := madd0(m, 12440613579524619067, z[0])
		C, z[0] = madd2(m, 18006194176015342613, z[1], C)
		C, z[1] = madd2(m, 17457613988123037566, z[2], C)
		C, z[2] = madd2(m, 18368984800942220457, z[3], C)
		C, z[3] = madd2(m, 827738500950988109, z[4], C)
		C, z[4] = madd2(m, 10465983792485076748, z[5], C)
		C, z[5] = madd2(m, 13130147365989575090, z[6], C)
		C, z[6] = madd2(m, 15901529056822770985, z[7], C)
		C, z[7] = madd2(m, 13319898001022067246, z[8], C)
		C, z[8] = madd2(m, 12824488156229008848, z[9], C)
		C, z[9] = madd2(m, 9383015198101081139, z[10], C)
		C, z[10] = madd2(m, 10947642194440358220, z[11], C)
		C, z[11] = madd2(m, 14734856437812977659, z[12], C)
		C, z[12] = madd2(m, 9151126398053665599, z[13], C)
		C, z[13] = madd2(m, 18381890281880615828, z[14], C)
		C, z[14] = madd2(m, 2346860679127149877, z[15], C)
		C, z[15] = madd2(m, 7713876665391399680, z[16], C)
		C, z[16] = madd2(m, 16804552333605636830, z[17], C)
		C, z[17] = madd2(m, 16402045285100958250, z[18], C)
		C, z[18] = madd2(m, 18176937210785782677, z[19], C)
		C, z[19] = madd2(m, 15966221038481425824, z[20], C)
		C, z[20] = madd2(m, 6959743526085911234, z[21], C)
		C, z[21] = madd2(m, 12624744789978825023, z[22], C)
		C, z[22] = madd2(m, 7041736483744465896, z[23], C)
		C, z[23] = madd2(m, 552982698812971543, z[24], C)
		C, z[24] = madd2(m, 2684388112402793318, z[25], C)
		C, z[25] = madd2(m, 8611279412651616633, z[26], C)
		z[26] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 6626265420794567181
		C := madd0(m, 12440613579524619067, z[0])
		C, z[0] = madd2(m, 18006194176015342613, z[1], C)
		C, z[1] = madd2(m, 17457613988123037566, z[2], C)
		C, z[2] = madd2(m, 18368984800942220457, z[3], C)
		C, z[3] = madd2(m, 827738500950988109, z[4], C)
		C, z[4] = madd2(m, 10465983792485076748, z[5], C)
		C, z[5] = madd2(m, 13130147365989575090, z[6], C)
		C, z[6] = madd2(m, 15901529056822770985, z[7], C)
		C, z[7] = madd2(m, 13319898001022067246, z[8], C)
		C, z[8] = madd2(m, 12824488156229008848, z[9], C)
		C, z[9] = madd2(m, 9383015198101081139, z[10], C)
		C, z[10] = madd2(m, 10947642194440358220, z[11], C)
		C, z[11] = madd2(m, 14734856437812977659, z[12], C)
		C, z[12] = madd2(m, 9151126398053665599, z[13], C)
		C, z[13] = madd2(m, 18381890281880615828, z[14], C)
		C, z[14] = madd2(m, 2346860679127149877, z[15], C)
		C, z[15] = madd2(m, 7713876665391399680, z[16], C)
		C, z[16] = madd2(m, 16804552333605636830, z[17], C)
		C, z[17] = madd2(m, 16402045285100958250, z[18], C)
		C, z[18] = madd2(m, 18176937210785782677, z[19], C)
		C, z[19] = madd2(m, 15966221038481425824, z[20], C)
		C, z[20] = madd2(m, 6959743526085911234, z[21], C)
		C, z[21] = madd2(m, 12624744789978825023, z[22], C)
		C, z[22] = madd2(m, 7041736483744465896, z[23], C)
		C, z[23] = madd2(m, 552982698812971543, z[24], C)
		C, z[24] = madd2(m, 2684388112402793318, z[25], C)
		C, z[25] = madd2(m, 8611279412651616633, z[26], C)
		z[26] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 6626265420794567181
		C := madd0(m, 12440613579524619067, z[0])
		C, z[0] = madd2(m, 18006194176015342613, z[1], C)
		C, z[1] = madd2(m, 17457613988123037566, z[2], C)
		C, z[2] = madd2(m, 18368984800942220457, z[3], C)
		C, z[3] = madd2(m, 827738500950988109, z[4], C)
		C, z[4] = madd2(m, 10465983792485076748, z[5], C)
		C, z[5] = madd2(m, 13130147365989575090, z[6], C)
		C, z[6] = madd2(m, 15901529056822770985, z[7], C)
		C, z[7] = madd2(m, 13319898001022067246, z[8], C)
		C, z[8] = madd2(m, 12824488156229008848, z[9], C)
		C, z[9] = madd2(m, 9383015198101081139, z[10], C)
		C, z[10] = madd2(m, 10947642194440358220, z[11], C)
		C, z[11] = madd2(m, 14734856437812977659, z[12], C)
		C, z[12] = madd2(m, 9151126398053665599, z[13], C)
		C, z[13] = madd2(m, 18381890281880615828, z[14], C)
		C, z[14] = madd2(m, 2346860679127149877, z[15], C)
		C, z[15] = madd2(m, 7713876665391399680, z[16], C)
		C, z[16] = madd2(m, 16804552333605636830, z[17], C)
		C, z[17] = madd2(m, 16402045285100958250, z[18], C)
		C, z[18] = madd2(m, 18176937210785782677, z[19], C)
		C, z[19] = madd2(m, 15966221038481425824, z[20], C)
		C, z[20] = madd2(m, 6959743526085911234, z[21], C)
		C, z[21] = madd2(m, 12624744789978825023, z[22], C)
		C, z[22] = madd2(m, 7041736483744465896, z[23], C)
		C, z[23] = madd2(m, 552982698812971543, z[24], C)
		C, z[24] = madd2(m, 2684388112402793318, z[25], C)
		C, z[25] = madd2(m, 8611279412651616633, z[26], C)
		z[26] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 6626265420794567181
		C := madd0(m, 12440613579524619067, z[0])
		C, z[0] = madd2(m, 18006194176015342613, z[1], C)
		C, z[1] = madd2(m, 17457613988123037566, z[2], C)
		C, z[2] = madd2(m, 18368984800942220457, z[3], C)
		C, z[3] = madd2(m, 827738500950988109, z[4], C)
		C, z[4] = madd2(m, 10465983792485076748, z[5], C)
		C, z[5] = madd2(m, 13130147365989575090, z[6], C)
		C, z[6] = madd2(m, 15901529056822770985, z[7], C)
		C, z[7] = madd2(m, 13319898001022067246, z[8], C)
		C, z[8] = madd2(m, 12824488156229008848, z[9], C)
		C, z[9] = madd2(m, 9383015198101081139, z[10], C)
		C, z[10] = madd2(m, 10947642194440358220, z[11], C)
		C, z[11] = madd2(m, 14734856437812977659, z[12], C)
		C, z[12] = madd2(m, 9151126398053665599, z[13], C)
		C, z[13] = madd2(m, 18381890281880615828, z[14], C)
		C, z[14] = madd2(m, 2346860679127149877, z[15], C)
		C, z[15] = madd2(m, 7713876665391399680, z[16], C)
		C, z[16] = madd2(m, 16804552333605636830, z[17], C)
		C, z[17] = madd2(m, 16402045285100958250, z[18], C)
		C, z[18] = madd2(m, 18176937210785782677, z[19], C)
		C, z[19] = madd2(m, 15966221038481425824, z[20], C)
		C, z[20] = madd2(m, 6959743526085911234, z[21], C)
		C, z[21] = madd2(m, 12624744789978825023, z[22], C)
		C, z[22] = madd2(m, 7041736483744465896, z[23], C)
		C, z[23] = madd2(m, 552982698812971543, z[24], C)
		C, z[24] = madd2(m, 2684388112402793318, z[25], C)
		C, z[25] = madd2(m, 8611279412651616633, z[26], C)
		z[26] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 6626265420794567181
		C := madd0(m, 12440613579524619067, z[0])
		C, z[0] = madd2(m, 18006194176015342613, z[1], C)
		C, z[1] = madd2(m, 17457613988123037566, z[2], C)
		C, z[2] = madd2(m, 18368984800942220457, z[3], C)
		C, z[3] = madd2(m, 827738500950988109, z[4], C)
		C, z[4] = madd2(m, 10465983792485076748, z[5], C)
		C, z[5] = madd2(m, 13130147365989575090, z[6], C)
		C, z[6] = madd2(m, 15901529056822770985, z[7], C)
		C, z[7] = madd2(m, 13319898001022067246, z[8], C)
		C, z[8] = madd2(m, 12824488156229008848, z[9], C)
		C, z[9] = madd2(m, 9383015198101081139, z[10], C)
		C, z[10] = madd2(m, 10947642194440358220, z[11], C)
		C, z[11] = madd2(m, 14734856437812977659, z[12], C)
		C, z[12] = madd2(m, 9151126398053665599, z[13], C)
		C, z[13] = madd2(m, 18381890281880615828, z[14], C)
		C, z[14] = madd2(m, 2346860679127149877, z[15], C)
		C, z[15] = madd2(m, 7713876665391399680, z[16], C)
		C, z[16] = madd2(m, 16804552333605636830, z[17], C)
		C, z[17] = madd2(m, 16402045285100958250, z[18], C)
		C, z[18] = madd2(m, 18176937210785782677, z[19], C)
		C, z[19] = madd2(m, 15966221038481425824, z[20], C)
		C, z[20] = madd2(m, 6959743526085911234, z[21], C)
		C, z[21] = madd2(m, 12624744789978825023, z[22], C)
		C, z[22] = madd2(m, 7041736483744465896, z[23], C)
		C, z[23] = madd2(m, 552982698812971543, z[24], C)
		C, z[24] = madd2(m, 2684388112402793318, z[25], C)
		C, z[25] = madd2(m, 8611279412651616633, z[26], C)
		z[26] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 6626265420794567181
		C := madd0(m, 12440613579524619067, z[0])
		C, z[0] = madd2(m, 18006194176015342613, z[1], C)
		C, z[1] = madd2(m, 17457613988123037566, z[2], C)
		C, z[2] = madd2(m, 18368984800942220457, z[3], C)
		C, z[3] = madd2(m, 827738500950988109, z[4], C)
		C, z[4] = madd2(m, 10465983792485076748, z[5], C)
		C, z[5] = madd2(m, 13130147365989575090, z[6], C)
		C, z[6] = madd2(m, 15901529056822770985, z[7], C)
		C, z[7] = madd2(m, 13319898001022067246, z[8], C)
		C, z[8] = madd2(m, 12824488156229008848, z[9], C)
		C, z[9] = madd2(m, 9383015198101081139, z[10], C)
		C, z[10] = madd2(m, 10947642194440358220, z[11], C)
		C, z[11] = madd2(m, 14734856437812977659, z[12], C)
		C, z[12] = madd2(m, 9151126398053665599, z[13], C)
		C, z[13] = madd2(m, 18381890281880615828, z[14], C)
		C, z[14] = madd2(m, 2346860679127149877, z[15], C)
		C, z[15] = madd2(m, 7713876665391399680, z[16], C)
		C, z[16] = madd2(m, 16804552333605636830, z[17], C)
		C, z[17] = madd2(m, 16402045285100958250, z[18], C)
		C, z[18] = madd2(m, 18176937210785782677, z[19], C)
		C, z[19] = madd2(m, 15966221038481425824, z[20], C)
		C, z[20] = madd2(m, 6959743526085911234, z[21], C)
		C, z[21] = madd2(m, 12624744789978825023, z[22], C)
		C, z[22] = madd2(m, 7041736483744465896, z[23], C)
		C, z[23] = madd2(m, 552982698812971543, z[24], C)
		C, z[24] = madd2(m, 2684388112402793318, z[25], C)
		C, z[25] = madd2(m, 8611279412651616633, z[26], C)
		z[26] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 6626265420794567181
		C := madd0(m, 12440613579524619067, z[0])
		C, z[0] = madd2(m, 18006194176015342613, z[1], C)
		C, z[1] = madd2(m, 17457613988123037566, z[2], C)
		C, z[2] = madd2(m, 18368984800942220457, z[3], C)
		C, z[3] = madd2(m, 827738500950988109, z[4], C)
		C, z[4] = madd2(m, 10465983792485076748, z[5], C)
		C, z[5] = madd2(m, 13130147365989575090, z[6], C)
		C, z[6] = madd2(m, 15901529056822770985, z[7], C)
		C, z[7] = madd2(m, 13319898001022067246, z[8], C)
		C, z[8] = madd2(m, 12824488156229008848, z[9], C)
		C, z[9] = madd2(m, 9383015198101081139, z[10], C)
		C, z[10] = madd2(m, 10947642194440358220, z[11], C)
		C, z[11] = madd2(m, 14734856437812977659, z[12], C)
		C, z[12] = madd2(m, 9151126398053665599, z[13], C)
		C, z[13] = madd2(m, 18381890281880615828, z[14], C)
		C, z[14] = madd2(m, 2346860679127149877, z[15], C)
		C, z[15] = madd2(m, 7713876665391399680, z[16], C)
		C, z[16] = madd2(m, 16804552333605636830, z[17], C)
		C, z[17] = madd2(m, 16402045285100958250, z[18], C)
		C, z[18] = madd2(m, 18176937210785782677, z[19], C)
		C, z[19] = madd2(m, 15966221038481425824, z[20], C)
		C, z[20] = madd2(m, 6959743526085911234, z[21], C)
		C, z[21] = madd2(m, 12624744789978825023, z[22], C)
		C, z[22] = madd2(m, 7041736483744465896, z[23], C)
		C, z[23] = madd2(m, 552982698812971543, z[24], C)
		C, z[24] = madd2(m, 2684388112402793318, z[25], C)
		C, z[25] = madd2(m, 8611279412651616633, z[26], C)
		z[26] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 6626265420794567181
		C := madd0(m, 12440613579524619067, z[0])
		C, z[0] = madd2(m, 18006194176015342613, z[1], C)
		C, z[1] = madd2(m, 17457613988123037566, z[2], C)
		C, z[2] = madd2(m, 18368984800942220457, z[3], C)
		C, z[3] = madd2(m, 827738500950988109, z[4], C)
		C, z[4] = madd2(m, 10465983792485076748, z[5], C)
		C, z[5] = madd2(m, 13130147365989575090, z[6], C)
		C, z[6] = madd2(m, 15901529056822770985, z[7], C)
		C, z[7] = madd2(m, 13319898001022067246, z[8], C)
		C, z[8] = madd2(m, 12824488156229008848, z[9], C)
		C, z[9] = madd2(m, 9383015198101081139, z[10], C)
		C, z[10] = madd2(m, 10947642194440358220, z[11], C)
		C, z[11] = madd2(m, 14734856437812977659, z[12], C)
		C, z[12] = madd2(m, 9151126398053665599, z[13], C)
		C, z[13] = madd2(m, 18381890281880615828, z[14], C)
		C, z[14] = madd2(m, 2346860679127149877, z[15], C)
		C, z[15] = madd2(m, 7713876665391399680, z[16], C)
		C, z[16] = madd2(m, 16804552333605636830, z[17], C)
		C, z[17] = madd2(m, 16402045285100958250, z[18], C)
		C, z[18] = madd2(m, 18176937210785782677, z[19], C)
		C, z[19] = madd2(m, 15966221038481425824, z[20], C)
		C, z[20] = madd2(m, 6959743526085911234, z[21], C)
		C, z[21] = madd2(m, 12624744789978825023, z[22], C)
		C, z[22] = madd2(m, 7041736483744465896, z[23], C)
		C, z[23] = madd2(m, 552982698812971543, z[24], C)
		C, z[24] = madd2(m, 2684388112402793318, z[25], C)
		C, z[25] = madd2(m, 8611279412651616633, z[26], C)
		z[26] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 6626265420794567181
		C := madd0(m, 12440613579524619067, z[0])
		C, z[0] = madd2(m, 18006194176015342613, z[1], C)
		C, z[1] = madd2(m, 17457613988123037566, z[2], C)
		C, z[2] = madd2(m, 18368984800942220457, z[3], C)
		C, z[3] = madd2(m, 827738500950988109, z[4], C)
		C, z[4] = madd2(m, 10465983792485076748, z[5], C)
		C, z[5] = madd2(m, 13130147365989575090, z[6], C)
		C, z[6] = madd2(m, 15901529056822770985, z[7], C)
		C, z[7] = madd2(m, 13319898001022067246, z[8], C)
		C, z[8] = madd2(m, 12824488156229008848, z[9], C)
		C, z[9] = madd2(m, 9383015198101081139, z[10], C)
		C, z[10] = madd2(m, 10947642194440358220, z[11], C)
		C, z[11] = madd2(m, 14734856437812977659, z[12], C)
		C, z[12] = madd2(m, 9151126398053665599, z[13], C)
		C, z[13] = madd2(m, 18381890281880615828, z[14], C)
		C, z[14] = madd2(m, 2346860679127149877, z[15], C)
		C, z[15] = madd2(m, 7713876665391399680, z[16], C)
		C, z[16] = madd2(m, 16804552333605636830, z[17], C)
		C, z[17] = madd2(m, 16402045285100958250, z[18], C)
		C, z[18] = madd2(m, 18176937210785782677, z[19], C)
		C, z[19] = madd2(m, 15966221038481425824, z[20], C)
		C, z[20] = madd2(m, 6959743526085911234, z[21], C)
		C, z[21] = madd2(m, 12624744789978825023, z[22], C)
		C, z[22] = madd2(m, 7041736483744465896, z[23], C)
		C, z[23] = madd2(m, 552982698812971543, z[24], C)
		C, z[24] = madd2(m, 2684388112402793318, z[25], C)
		C, z[25] = madd2(m, 8611279412651616633, z[26], C)
		z[26] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 6626265420794567181
		C := madd0(m, 12440613579524619067, z[0])
		C, z[0] = madd2(m, 18006194176015342613, z[1], C)
		C, z[1] = madd2(m, 17457613988123037566, z[2], C)
		C, z[2] = madd2(m, 18368984800942220457, z[3], C)
		C, z[3] = madd2(m, 827738500950988109, z[4], C)
		C, z[4] = madd2(m, 10465983792485076748, z[5], C)
		C, z[5] = madd2(m, 13130147365989575090, z[6], C)
		C, z[6] = madd2(m, 15901529056822770985, z[7], C)
		C, z[7] = madd2(m, 13319898001022067246, z[8], C)
		C, z[8] = madd2(m, 12824488156229008848, z[9], C)
		C, z[9] = madd2(m, 9383015198101081139, z[10], C)
		C, z[10] = madd2(m, 10947642194440358220, z[11], C)
		C, z[11] = madd2(m, 14734856437812977659, z[12], C)
		C, z[12] = madd2(m, 9151126398053665599, z[13], C)
		C, z[13] = madd2(m, 18381890281880615828, z[14], C)
		C, z[14] = madd2(m, 2346860679127149877, z[15], C)
		C, z[15] = madd2(m, 7713876665391399680, z[16], C)
		C, z[16] = madd2(m, 16804552333605636830, z[17], C)
		C, z[17] = madd2(m, 16402045285100958250, z[18], C)
		C, z[18] = madd2(m, 18176937210785782677, z[19], C)
		C, z[19] = madd2(m, 15966221038481425824, z[20], C)
		C, z[20] = madd2(m, 6959743526085911234, z[21], C)
		C, z[21] = madd2(m, 12624744789978825023, z[22], C)
		C, z[22] = madd2(m, 7041736483744465896, z[23], C)
		C, z[23] = madd2(m, 552982698812971543, z[24], C)
		C, z[24] = madd2(m, 2684388112402793318, z[25], C)
		C, z[25] = madd2(m, 8611279412651616633, z[26], C)
		z[26] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 6626265420794567181
		C := madd0(m, 12440613579524619067, z[0])
		C, z[0] = madd2(m, 18006194176015342613, z[1], C)
		C, z[1] = madd2(m, 17457613988123037566, z[2], C)
		C, z[2] = madd2(m, 18368984800942220457, z[3], C)
		C, z[3] = madd2(m, 827738500950988109, z[4], C)
		C, z[4] = madd2(m, 10465983792485076748, z[5], C)
		C, z[5] = madd2(m, 13130147365989575090, z[6], C)
		C, z[6] = madd2(m, 15901529056822770985, z[7], C)
		C, z[7] = madd2(m, 13319898001022067246, z[8], C)
		C, z[8] = madd2(m, 12824488156229008848, z[9], C)
		C, z[9] = madd2(m, 9383015198101081139, z[10], C)
		C, z[10] = madd2(m, 10947642194440358220, z[11], C)
		C, z[11] = madd2(m, 14734856437812977659, z[12], C)
		C, z[12] = madd2(m, 9151126398053665599, z[13], C)
		C, z[13] = madd2(m, 18381890281880615828, z[14], C)
		C, z[14] = madd2(m, 2346860679127149877, z[15], C)
		C, z[15] = madd2(m, 7713876665391399680, z[16], C)
		C, z[16] = madd2(m, 16804552333605636830, z[17], C)
		C, z[17] = madd2(m, 16402045285100958250, z[18], C)
		C, z[18] = madd2(m, 18176937210785782677, z[19], C)
		C, z[19] = madd2(m, 15966221038481425824, z[20], C)
		C, z[20] = madd2(m, 6959743526085911234, z[21], C)
		C, z[21] = madd2(m, 12624744789978825023, z[22], C)
		C, z[22] = madd2(m, 7041736483744465896, z[23], C)
		C, z[23] = madd2(m, 552982698812971543, z[24], C)
		C, z[24] = madd2(m, 2684388112402793318, z[25], C)
		C, z[25] = madd2(m, 8611279412651616633, z[26], C)
		z[26] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 6626265420794567181
		C := madd0(m, 12440613579524619067, z[0])
		C, z[0] = madd2(m, 18006194176015342613, z[1], C)
		C, z[1] = madd2(m, 17457613988123037566, z[2], C)
		C, z[2] = madd2(m, 18368984800942220457, z[3], C)
		C, z[3] = madd2(m, 827738500950988109, z[4], C)
		C, z[4] = madd2(m, 10465983792485076748, z[5], C)
		C, z[5] = madd2(m, 13130147365989575090, z[6], C)
		C, z[6] = madd2(m, 15901529056822770985, z[7], C)
		C, z[7] = madd2(m, 13319898001022067246, z[8], C)
		C, z[8] = madd2(m, 12824488156229008848, z[9], C)
		C, z[9] = madd2(m, 9383015198101081139, z[10], C)
		C, z[10] = madd2(m, 10947642194440358220, z[11], C)
		C, z[11] = madd2(m, 14734856437812977659, z[12], C)
		C, z[12] = madd2(m, 9151126398053665599, z[13], C)
		C, z[13] = madd2(m, 18381890281880615828, z[14], C)
		C, z[14] = madd2(m, 2346860679127149877, z[15], C)
		C, z[15] = madd2(m, 7713876665391399680, z[16], C)
		C, z[16] = madd2(m, 16804552333605636830, z[17], C)
		C, z[17] = madd2(m, 16402045285100958250, z[18], C)
		C, z[18] = madd2(m, 18176937210785782677, z[19], C)
		C, z[19] = madd2(m, 15966221038481425824, z[20], C)
		C, z[20] = madd2(m, 6959743526085911234, z[21], C)
		C, z[21] = madd2(m, 12624744789978825023, z[22], C)
		C, z[22] = madd2(m, 7041736483744465896, z[23], C)
		C, z[23] = madd2(m, 552982698812971543, z[24], C)
		C, z[24] = madd2(m, 2684388112402793318, z[25], C)
		C, z[25] = madd2(m, 8611279412651616633, z[26], C)
		z[26] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 6626265420794567181
		C := madd0(m, 12440613579524619067, z[0])
		C, z[0] = madd2(m, 18006194176015342613, z[1], C)
		C, z[1] = madd2(m, 17457613988123037566, z[2], C)
		C, z[2] = madd2(m, 18368984800942220457, z[3], C)
		C, z[3] = madd2(m, 827738500950988109, z[4], C)
		C, z[4] = madd2(m, 10465983792485076748, z[5], C)
		C, z[5] = madd2(m, 13130147365989575090, z[6], C)
		C, z[6] = madd2(m, 15901529056822770985, z[7], C)
		C, z[7] = madd2(m, 13319898001022067246, z[8], C)
		C, z[8] = madd2(m, 12824488156229008848, z[9], C)
		C, z[9] = madd2(m, 9383015198101081139, z[10], C)
		C, z[10] = madd2(m, 10947642194440358220, z[11], C)
		C, z[11] = madd2(m, 14734856437812977659, z[12], C)
		C, z[12] = madd2(m, 9151126398053665599, z[13], C)
		C, z[13] = madd2(m, 18381890281880615828, z[14], C)
		C, z[14] = madd2(m, 2346860679127149877, z[15], C)
		C, z[15] = madd2(m, 7713876665391399680, z[16], C)
		C, z[16] = madd2(m, 16804552333605636830, z[17], C)
		C, z[17] = madd2(m, 16402045285100958250, z[18], C)
		C, z[18] = madd2(m, 18176937210785782677, z[19], C)
		C, z[19] = madd2(m, 15966221038481425824, z[20], C)
		C, z[20] = madd2(m, 6959743526085911234, z[21], C)
		C, z[21] = madd2(m, 12624744789978825023, z[22], C)
		C, z[22] = madd2(m, 7041736483744465896, z[23], C)
		C, z[23] = madd2(m, 552982698812971543, z[24], C)
		C, z[24] = madd2(m, 2684388112402793318, z[25], C)
		C, z[25] = madd2(m, 8611279412651616633, z[26], C)
		z[26] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 6626265420794567181
		C := madd0(m, 12440613579524619067, z[0])
		C, z[0] = madd2(m, 18006194176015342613, z[1], C)
		C, z[1] = madd2(m, 17457613988123037566, z[2], C)
		C, z[2] = madd2(m, 18368984800942220457, z[3], C)
		C, z[3] = madd2(m, 827738500950988109, z[4], C)
		C, z[4] = madd2(m, 10465983792485076748, z[5], C)
		C, z[5] = madd2(m, 13130147365989575090, z[6], C)
		C, z[6] = madd2(m, 15901529056822770985, z[7], C)
		C, z[7] = madd2(m, 13319898001022067246, z[8], C)
		C, z[8] = madd2(m, 12824488156229008848, z[9], C)
		C, z[9] = madd2(m, 9383015198101081139, z[10], C)
		C, z[10] = madd2(m, 10947642194440358220, z[11], C)
		C, z[11] = madd2(m, 14734856437812977659, z[12], C)
		C, z[12] = madd2(m, 9151126398053665599, z[13], C)
		C, z[13] = madd2(m, 18381890281880615828, z[14], C)
		C, z[14] = madd2(m, 2346860679127149877, z[15], C)
		C, z[15] = madd2(m, 7713876665391399680, z[16], C)
		C, z[16] = madd2(m, 16804552333605636830, z[17], C)
		C, z[17] = madd2(m, 16402045285100958250, z[18], C)
		C, z[18] = madd2(m, 18176937210785782677, z[19], C)
		C, z[19] = madd2(m, 15966221038481425824, z[20], C)
		C, z[20] = madd2(m, 6959743526085911234, z[21], C)
		C, z[21] = madd2(m, 12624744789978825023, z[22], C)
		C, z[22] = madd2(m, 7041736483744465896, z[23], C)
		C, z[23] = madd2(m, 552982698812971543, z[24], C)
		C, z[24] = madd2(m, 2684388112402793318, z[25], C)
		C, z[25] = madd2(m, 8611279412651616633, z[26], C)
		z[26] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 6626265420794567181
		C := madd0(m, 12440613579524619067, z[0])
		C, z[0] = madd2(m, 18006194176015342613, z[1], C)
		C, z[1] = madd2(m, 17457613988123037566, z[2], C)
		C, z[2] = madd2(m, 18368984800942220457, z[3], C)
		C, z[3] = madd2(m, 827738500950988109, z[4], C)
		C, z[4] = madd2(m, 10465983792485076748, z[5], C)
		C, z[5] = madd2(m, 13130147365989575090, z[6], C)
		C, z[6] = madd2(m, 15901529056822770985, z[7], C)
		C, z[7] = madd2(m, 13319898001022067246, z[8], C)
		C, z[8] = madd2(m, 12824488156229008848, z[9], C)
		C, z[9] = madd2(m, 9383015198101081139, z[10], C)
		C, z[10] = madd2(m, 10947642194440358220, z[11], C)
		C, z[11] = madd2(m, 14734856437812977659, z[12], C)
		C, z[12] = madd2(m, 9151126398053665599, z[13], C)
		C, z[13] = madd2(m, 18381890281880615828, z[14], C)
		C, z[14] = madd2(m, 2346860679127149877, z[15], C)
		C, z[15] = madd2(m, 7713876665391399680, z[16], C)
		C, z[16] = madd2(m, 16804552333605636830, z[17], C)
		C, z[17] = madd2(m, 16402045285100958250, z[18], C)
		C, z[18] = madd2(m, 18176937210785782677, z[19], C)
		C, z[19] = madd2(m, 15966221038481425824, z[20], C)
		C, z[20] = madd2(m, 6959743526085911234, z[21], C)
		C, z[21] = madd2(m, 12624744789978825023, z[22], C)
		C, z[22] = madd2(m, 7041736483744465896, z[23], C)
		C, z[23] = madd2(m, 552982698812971543, z[24], C)
		C, z[24] = madd2(m, 2684388112402793318, z[25], C)
		C, z[25] = madd2(m, 8611279412651616633, z[26], C)
		z[26] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 6626265420794567181
		C := madd0(m, 12440613579524619067, z[0])
		C, z[0] = madd2(m, 18006194176015342613, z[1], C)
		C, z[1] = madd2(m, 17457613988123037566, z[2], C)
		C, z[2] = madd2(m, 18368984800942220457, z[3], C)
		C, z[3] = madd2(m, 827738500950988109, z[4], C)
		C, z[4] = madd2(m, 10465983792485076748, z[5], C)
		C, z[5] = madd2(m, 13130147365989575090, z[6], C)
		C, z[6] = madd2(m, 15901529056822770985, z[7], C)
		C, z[7] = madd2(m, 13319898001022067246, z[8], C)
		C, z[8] = madd2(m, 12824488156229008848, z[9], C)
		C, z[9] = madd2(m, 9383015198101081139, z[10], C)
		C, z[10] = madd2(m, 10947642194440358220, z[11], C)
		C, z[11] = madd2(m, 14734856437812977659, z[12], C)
		C, z[12] = madd2(m, 9151126398053665599, z[13], C)
		C, z[13] = madd2(m, 18381890281880615828, z[14], C)
		C, z[14] = madd2(m, 2346860679127149877, z[15], C)
		C, z[15] = madd2(m, 7713876665391399680, z[16], C)
		C, z[16] = madd2(m, 16804552333605636830, z[17], C)
		C, z[17] = madd2(m, 16402045285100958250, z[18], C)
		C, z[18] = madd2(m, 18176937210785782677, z[19], C)
		C, z[19] = madd2(m, 15966221038481425824, z[20], C)
		C, z[20] = madd2(m, 6959743526085911234, z[21], C)
		C, z[21] = madd2(m, 12624744789978825023, z[22], C)
		C, z[22] = madd2(m, 7041736483744465896, z[23], C)
		C, z[23] = madd2(m, 552982698812971543, z[24], C)
		C, z[24] = madd2(m, 2684388112402793318, z[25], C)
		C, z[25] = madd2(m, 8611279412651616633, z[26], C)
		z[26] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 6626265420794567181
		C := madd0(m, 12440613579524619067, z[0])
		C, z[0] = madd2(m, 18006194176015342613, z[1], C)
		C, z[1] = madd2(m, 17457613988123037566, z[2], C)
		C, z[2] = madd2(m, 18368984800942220457, z[3], C)
		C, z[3] = madd2(m, 827738500950988109, z[4], C)
		C, z[4] = madd2(m, 10465983792485076748, z[5], C)
		C, z[5] = madd2(m, 13130147365989575090, z[6], C)
		C, z[6] = madd2(m, 15901529056822770985, z[7], C)
		C, z[7] = madd2(m, 13319898001022067246, z[8], C)
		C, z[8] = madd2(m, 12824488156229008848, z[9], C)
		C, z[9] = madd2(m, 9383015198101081139, z[10], C)
		C, z[10] = madd2(m, 10947642194440358220, z[11], C)
		C, z[11] = madd2(m, 14734856437812977659, z[12], C)
		C, z[12] = madd2(m, 9151126398053665599, z[13], C)
		C, z[13] = madd2(m, 18381890281880615828, z[14], C)
		C, z[14] = madd2(m, 2346860679127149877, z[15], C)
		C, z[15] = madd2(m, 7713876665391399680, z[16], C)
		C, z[16] = madd2(m, 16804552333605636830, z[17], C)
		C, z[17] = madd2(m, 16402045285100958250, z[18], C)
		C, z[18] = madd2(m, 18176937210785782677, z[19], C)
		C, z[19] = madd2(m, 15966221038481425824, z[20], C)
		C, z[20] = madd2(m, 6959743526085911234, z[21], C)
		C, z[21] = madd2(m, 12624744789978825023, z[22], C)
		C, z[22] = madd2(m, 7041736483744465896, z[23], C)
		C, z[23] = madd2(m, 552982698812971543, z[24], C)
		C, z[24] = madd2(m, 2684388112402793318, z[25], C)
		C, z[25] = madd2(m, 8611279412651616633, z[26], C)
		z[26] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 6626265420794567181
		C := madd0(m, 12440613579524619067, z[0])
		C, z[0] = madd2(m, 18006194176015342613, z[1], C)
		C, z[1] = madd2(m, 17457613988123037566, z[2], C)
		C, z[2] = madd2(m, 18368984800942220457, z[3], C)
		C, z[3] = madd2(m, 827738500950988109, z[4], C)
		C, z[4] = madd2(m, 10465983792485076748, z[5], C)
		C, z[5] = madd2(m, 13130147365989575090, z[6], C)
		C, z[6] = madd2(m, 15901529056822770985, z[7], C)
		C, z[7] = madd2(m, 13319898001022067246, z[8], C)
		C, z[8] = madd2(m, 12824488156229008848, z[9], C)
		C, z[9] = madd2(m, 9383015198101081139, z[10], C)
		C, z[10] = madd2(m, 10947642194440358220, z[11], C)
		C, z[11] = madd2(m, 14734856437812977659, z[12], C)
		C, z[12] = madd2(m, 9151126398053665599, z[13], C)
		C, z[13] = madd2(m, 18381890281880615828, z[14], C)
		C, z[14] = madd2(m, 2346860679127149877, z[15], C)
		C, z[15] = madd2(m, 7713876665391399680, z[16], C)
		C, z[16] = madd2(m, 16804552333605636830, z[17], C)
		C, z[17] = madd2(m, 16402045285100958250, z[18], C)
		C, z[18] = madd2(m, 18176937210785782677, z[19], C)
		C, z[19] = madd2(m, 15966221038481425824, z[20], C)
		C, z[20] = madd2(m, 6959743526085911234, z[21], C)
		C, z[21] = madd2(m, 12624744789978825023, z[22], C)
		C, z[22] = madd2(m, 7041736483744465896, z[23], C)
		C, z[23] = madd2(m, 552982698812971543, z[24], C)
		C, z[24] = madd2(m, 2684388112402793318, z[25], C)
		C, z[25] = madd2(m, 8611279412651616633, z[26], C)
		z[26] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 6626265420794567181
		C := madd0(m, 12440613579524619067, z[0])
		C, z[0] = madd2(m, 18006194176015342613, z[1], C)
		C, z[1] = madd2(m, 17457613988123037566, z[2], C)
		C, z[2] = madd2(m, 18368984800942220457, z[3], C)
		C, z[3] = madd2(m, 827738500950988109, z[4], C)
		C, z[4] = madd2(m, 10465983792485076748, z[5], C)
		C, z[5] = madd2(m, 13130147365989575090, z[6], C)
		C, z[6] = madd2(m, 15901529056822770985, z[7], C)
		C, z[7] = madd2(m, 13319898001022067246, z[8], C)
		C, z[8] = madd2(m, 12824488156229008848, z[9], C)
		C, z[9] = madd2(m, 9383015198101081139, z[10], C)
		C, z[10] = madd2(m, 10947642194440358220, z[11], C)
		C, z[11] = madd2(m, 14734856437812977659, z[12], C)
		C, z[12] = madd2(m, 9151126398053665599, z[13], C)
		C, z[13] = madd2(m, 18381890281880615828, z[14], C)
		C, z[14] = madd2(m, 2346860679127149877, z[15], C)
		C, z[15] = madd2(m, 7713876665391399680, z[16], C)
		C, z[16] = madd2(m, 16804552333605636830, z[17], C)
		C, z[17] = madd2(m, 16402045285100958250, z[18], C)
		C, z[18] = madd2(m, 18176937210785782677, z[19], C)
		C, z[19] = madd2(m, 15966221038481425824, z[20], C)
		C, z[20] = madd2(m, 6959743526085911234, z[21], C)
		C, z[21] = madd2(m, 12624744789978825023, z[22], C)
		C, z[22] = madd2(m, 7041736483744465896, z[23], C)
		C, z[23] = madd2(m, 552982698812971543, z[24], C)
		C, z[24] = madd2(m, 2684388112402793318, z[25], C)
		C, z[25] = madd2(m, 8611279412651616633, z[26], C)
		z[26] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 6626265420794567181
		C := madd0(m, 12440613579524619067, z[0])
		C, z[0] = madd2(m, 18006194176015342613, z[1], C)
		C, z[1] = madd2(m, 17457613988123037566, z[2], C)
		C, z[2] = madd2(m, 18368984800942220457, z[3], C)
		C, z[3] = madd2(m, 827738500950988109, z[4], C)
		C, z[4] = madd2(m, 10465983792485076748, z[5], C)
		C, z[5] = madd2(m, 13130147365989575090, z[6], C)
		C, z[6] = madd2(m, 15901529056822770985, z[7], C)
		C, z[7] = madd2(m, 13319898001022067246, z[8], C)
		C, z[8] = madd2(m, 12824488156229008848, z[9], C)
		C, z[9] = madd2(m, 9383015198101081139, z[10], C)
		C, z[10] = madd2(m, 10947642194440358220, z[11], C)
		C, z[11] = madd2(m, 14734856437812977659, z[12], C)
		C, z[12] = madd2(m, 9151126398053665599, z[13], C)
		C, z[13] = madd2(m, 18381890281880615828, z[14], C)
		C, z[14] = madd2(m, 2346860679127149877, z[15], C)
		C, z[15] = madd2(m, 7713876665391399680, z[16], C)
		C, z[16] = madd2(m, 16804552333605636830, z[17], C)
		C, z[17] = madd2(m, 16402045285100958250, z[18], C)
		C, z[18] = madd2(m, 18176937210785782677, z[19], C)
		C, z[19] = madd2(m, 15966221038481425824, z[20], C)
		C, z[20] = madd2(m, 6959743526085911234, z[21], C)
		C, z[21] = madd2(m, 12624744789978825023, z[22], C)
		C, z[22] = madd2(m, 7041736483744465896, z[23], C)
		C, z[23] = madd2(m, 552982698812971543, z[24], C)
		C, z[24] = madd2(m, 2684388112402793318, z[25], C)
		C, z[25] = madd2(m, 8611279412651616633, z[26], C)
		z[26] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 6626265420794567181
		C := madd0(m, 12440613579524619067, z[0])
		C, z[0] = madd2(m, 18006194176015342613, z[1], C)
		C, z[1] = madd2(m, 17457613988123037566, z[2], C)
		C, z[2] = madd2(m, 18368984800942220457, z[3], C)
		C, z[3] = madd2(m, 827738500950988109, z[4], C)
		C, z[4] = madd2(m, 10465983792485076748, z[5], C)
		C, z[5] = madd2(m, 13130147365989575090, z[6], C)
		C, z[6] = madd2(m, 15901529056822770985, z[7], C)
		C, z[7] = madd2(m, 13319898001022067246, z[8], C)
		C, z[8] = madd2(m, 12824488156229008848, z[9], C)
		C, z[9] = madd2(m, 9383015198101081139, z[10], C)
		C, z[10] = madd2(m, 10947642194440358220, z[11], C)
		C, z[11] = madd2(m, 14734856437812977659, z[12], C)
		C, z[12] = madd2(m, 9151126398053665599, z[13], C)
		C, z[13] = madd2(m, 18381890281880615828, z[14], C)
		C, z[14] = madd2(m, 2346860679127149877, z[15], C)
		C, z[15] = madd2(m, 7713876665391399680, z[16], C)
		C, z[16] = madd2(m, 16804552333605636830, z[17], C)
		C, z[17] = madd2(m, 16402045285100958250, z[18], C)
		C, z[18] = madd2(m, 18176937210785782677, z[19], C)
		C, z[19] = madd2(m, 15966221038481425824, z[20], C)
		C, z[20] = madd2(m, 6959743526085911234, z[21], C)
		C, z[21] = madd2(m, 12624744789978825023, z[22], C)
		C, z[22] = madd2(m, 7041736483744465896, z[23], C)
		C, z[23] = madd2(m, 552982698812971543, z[24], C)
		C, z[24] = madd2(m, 2684388112402793318, z[25], C)
		C, z[25] = madd2(m, 8611279412651616633, z[26], C)
		z[26] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 6626265420794567181
		C := madd0(m, 12440613579524619067, z[0])
		C, z[0] = madd2(m, 18006194176015342613, z[1], C)
		C, z[1] = madd2(m, 17457613988123037566, z[2], C)
		C, z[2] = madd2(m, 18368984800942220457, z[3], C)
		C, z[3] = madd2(m, 827738500950988109, z[4], C)
		C, z[4] = madd2(m, 10465983792485076748, z[5], C)
		C, z[5] = madd2(m, 13130147365989575090, z[6], C)
		C, z[6] = madd2(m, 15901529056822770985, z[7], C)
		C, z[7] = madd2(m, 13319898001022067246, z[8], C)
		C, z[8] = madd2(m, 12824488156229008848, z[9], C)
		C, z[9] = madd2(m, 9383015198101081139, z[10], C)
		C, z[10] = madd2(m, 10947642194440358220, z[11], C)
		C, z[11] = madd2(m, 14734856437812977659, z[12], C)
		C, z[12] = madd2(m, 9151126398053665599, z[13], C)
		C, z[13] = madd2(m, 18381890281880615828, z[14], C)
		C, z[14] = madd2(m, 2346860679127149877, z[15], C)
		C, z[15] = madd2(m, 7713876665391399680, z[16], C)
		C, z[16] = madd2(m, 16804552333605636830, z[17], C)
		C, z[17] = madd2(m, 16402045285100958250, z[18], C)
		C, z[18] = madd2(m, 18176937210785782677, z[19], C)
		C, z[19] = madd2(m, 15966221038481425824, z[20], C)
		C, z[20] = madd2(m, 6959743526085911234, z[21], C)
		C, z[21] = madd2(m, 12624744789978825023, z[22], C)
		C, z[22] = madd2(m, 7041736483744465896, z[23], C)
		C, z[23] = madd2(m, 552982698812971543, z[24], C)
		C, z[24] = madd2(m, 2684388112402793318, z[25], C)
		C, z[25] = madd2(m, 8611279412651616633, z[26], C)
		z[26] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 6626265420794567181
		C := madd0(m, 12440613579524619067, z[0])
		C, z[0] = madd2(m, 18006194176015342613, z[1], C)
		C, z[1] = madd2(m, 17457613988123037566, z[2], C)
		C, z[2] = madd2(m, 18368984800942220457, z[3], C)
		C, z[3] = madd2(m, 827738500950988109, z[4], C)
		C, z[4] = madd2(m, 10465983792485076748, z[5], C)
		C, z[5] = madd2(m, 13130147365989575090, z[6], C)
		C, z[6] = madd2(m, 15901529056822770985, z[7], C)
		C, z[7] = madd2(m, 13319898001022067246, z[8], C)
		C, z[8] = madd2(m, 12824488156229008848, z[9], C)
		C, z[9] = madd2(m, 9383015198101081139, z[10], C)
		C, z[10] = madd2(m, 10947642194440358220, z[11], C)
		C, z[11] = madd2(m, 14734856437812977659, z[12], C)
		C, z[12] = madd2(m, 9151126398053665599, z[13], C)
		C, z[13] = madd2(m, 18381890281880615828, z[14], C)
		C, z[14] = madd2(m, 2346860679127149877, z[15], C)
		C, z[15] = madd2(m, 7713876665391399680, z[16], C)
		C, z[16] = madd2(m, 16804552333605636830, z[17], C)
		C, z[17] = madd2(m, 16402045285100958250, z[18], C)
		C, z[18] = madd2(m, 18176937210785782677, z[19], C)
		C, z[19] = madd2(m, 15966221038481425824, z[20], C)
		C, z[20] = madd2(m, 6959743526085911234, z[21], C)
		C, z[21] = madd2(m, 12624744789978825023, z[22], C)
		C, z[22] = madd2(m, 7041736483744465896, z[23], C)
		C, z[23] = madd2(m, 552982698812971543, z[24], C)
		C, z[24] = madd2(m, 2684388112402793318, z[25], C)
		C, z[25] = madd2(m, 8611279412651616633, z[26], C)
		z[26] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 6626265420794567181
		C := madd0(m, 12440613579524619067, z[0])
		C, z[0] = madd2(m, 18006194176015342613, z[1], C)
		C, z[1] = madd2(m, 17457613988123037566, z[2], C)
		C, z[2] = madd2(m, 18368984800942220457, z[3], C)
		C, z[3] = madd2(m, 827738500950988109, z[4], C)
		C, z[4] = madd2(m, 10465983792485076748, z[5], C)
		C, z[5] = madd2(m, 13130147365989575090, z[6], C)
		C, z[6] = madd2(m, 15901529056822770985, z[7], C)
		C, z[7] = madd2(m, 13319898001022067246, z[8], C)
		C, z[8] = madd2(m, 12824488156229008848, z[9], C)
		C, z[9] = madd2(m, 9383015198101081139, z[10], C)
		C, z[10] = madd2(m, 10947642194440358220, z[11], C)
		C, z[11] = madd2(m, 14734856437812977659, z[12], C)
		C, z[12] = madd2(m, 9151126398053665599, z[13], C)
		C, z[13] = madd2(m, 18381890281880615828, z[14], C)
		C, z[14] = madd2(m, 2346860679127149877, z[15], C)
		C, z[15] = madd2(m, 7713876665391399680, z[16], C)
		C, z[16] = madd2(m, 16804552333605636830, z[17], C)
		C, z[17] = madd2(m, 16402045285100958250, z[18], C)
		C, z[18] = madd2(m, 18176937210785782677, z[19], C)
		C, z[19] = madd2(m, 15966221038481425824, z[20], C)
		C, z[20] = madd2(m, 6959743526085911234, z[21], C)
		C, z[21] = madd2(m, 12624744789978825023, z[22], C)
		C, z[22] = madd2(m, 7041736483744465896, z[23], C)
		C, z[23] = madd2(m, 552982698812971543, z[24], C)
		C, z[24] = madd2(m, 2684388112402793318, z[25], C)
		C, z[25] = madd2(m, 8611279412651616633, z[26], C)
		z[26] = C
	}

	// if z > q --> z -= q
	// note: this is NOT constant time
	if !(z[26] < 8611279412651616633 || (z[26] == 8611279412651616633 && (z[25] < 2684388112402793318 || (z[25] == 2684388112402793318 && (z[24] < 552982698812971543 || (z[24] == 552982698812971543 && (z[23] < 7041736483744465896 || (z[23] == 7041736483744465896 && (z[22] < 12624744789978825023 || (z[22] == 12624744789978825023 && (z[21] < 6959743526085911234 || (z[21] == 6959743526085911234 && (z[20] < 15966221038481425824 || (z[20] == 15966221038481425824 && (z[19] < 18176937210785782677 || (z[19] == 18176937210785782677 && (z[18] < 16402045285100958250 || (z[18] == 16402045285100958250 && (z[17] < 16804552333605636830 || (z[17] == 16804552333605636830 && (z[16] < 7713876665391399680 || (z[16] == 7713876665391399680 && (z[15] < 2346860679127149877 || (z[15] == 2346860679127149877 && (z[14] < 18381890281880615828 || (z[14] == 18381890281880615828 && (z[13] < 9151126398053665599 || (z[13] == 9151126398053665599 && (z[12] < 14734856437812977659 || (z[12] == 14734856437812977659 && (z[11] < 10947642194440358220 || (z[11] == 10947642194440358220 && (z[10] < 9383015198101081139 || (z[10] == 9383015198101081139 && (z[9] < 12824488156229008848 || (z[9] == 12824488156229008848 && (z[8] < 13319898001022067246 || (z[8] == 13319898001022067246 && (z[7] < 15901529056822770985 || (z[7] == 15901529056822770985 && (z[6] < 13130147365989575090 || (z[6] == 13130147365989575090 && (z[5] < 10465983792485076748 || (z[5] == 10465983792485076748 && (z[4] < 827738500950988109 || (z[4] == 827738500950988109 && (z[3] < 18368984800942220457 || (z[3] == 18368984800942220457 && (z[2] < 17457613988123037566 || (z[2] == 17457613988123037566 && (z[1] < 18006194176015342613 || (z[1] == 18006194176015342613 && (z[0] < 12440613579524619067))))))))))))))))))))))))))))))))))))))))))))))))))))) {
		var b uint64
		z[0], b = bits.Sub64(z[0], 12440613579524619067, 0)
		z[1], b = bits.Sub64(z[1], 18006194176015342613, b)
		z[2], b = bits.Sub64(z[2], 17457613988123037566, b)
		z[3], b = bits.Sub64(z[3], 18368984800942220457, b)
		z[4], b = bits.Sub64(z[4], 827738500950988109, b)
		z[5], b = bits.Sub64(z[5], 10465983792485076748, b)
		z[6], b = bits.Sub64(z[6], 13130147365989575090, b)
		z[7], b = bits.Sub64(z[7], 15901529056822770985, b)
		z[8], b = bits.Sub64(z[8], 13319898001022067246, b)
		z[9], b = bits.Sub64(z[9], 12824488156229008848, b)
		z[10], b = bits.Sub64(z[10], 9383015198101081139, b)
		z[11], b = bits.Sub64(z[11], 10947642194440358220, b)
		z[12], b = bits.Sub64(z[12], 14734856437812977659, b)
		z[13], b = bits.Sub64(z[13], 9151126398053665599, b)
		z[14], b = bits.Sub64(z[14], 18381890281880615828, b)
		z[15], b = bits.Sub64(z[15], 2346860679127149877, b)
		z[16], b = bits.Sub64(z[16], 7713876665391399680, b)
		z[17], b = bits.Sub64(z[17], 16804552333605636830, b)
		z[18], b = bits.Sub64(z[18], 16402045285100958250, b)
		z[19], b = bits.Sub64(z[19], 18176937210785782677, b)
		z[20], b = bits.Sub64(z[20], 15966221038481425824, b)
		z[21], b = bits.Sub64(z[21], 6959743526085911234, b)
		z[22], b = bits.Sub64(z[22], 12624744789978825023, b)
		z[23], b = bits.Sub64(z[23], 7041736483744465896, b)
		z[24], b = bits.Sub64(z[24], 552982698812971543, b)
		z[25], b = bits.Sub64(z[25], 2684388112402793318, b)
		z[26], _ = bits.Sub64(z[26], 8611279412651616633, b)
	}
	return z
}

// ToMont converts z to Montgomery form
// sets and returns z = z * r^2
func (z *Element27) ToMont() *Element27 {
	var rSquare = Element27{
		17401694471561657991,
		18038866931187349002,
		12295216366189706335,
		6731925111439672627,
		4536072529387722788,
		3928741628608683648,
		10409805706763315972,
		876147537860761622,
		7158973775532435136,
		8584626138575369692,
		11980294652265275508,
		10133721907123997365,
		98745222503763655,
		8801586625449266247,
		13209416365832891425,
		16584757682302696705,
		6680799379449921615,
		17587774894216998606,
		15662443505346222758,
		8168380311997377573,
		7752699586903148854,
		15631026834411135511,
		2523871950978663594,
		5017722400488604264,
		3529745215098760822,
		11248093917618266879,
		6602812953816428789,
	}
	return z.MulAssign(&rSquare)
}

// ToRegular returns z in regular form (doesn't mutate z)
func (z Element27) ToRegular() Element27 {
	return *z.FromMont()
}

// String returns the string form of an Element27 in Montgomery form
func (z *Element27) String() string {
	var _z big.Int
	return z.ToBigIntRegular(&_z).String()
}

// ToBigInt returns z as a big.Int in Montgomery form
func (z *Element27) ToBigInt(res *big.Int) *big.Int {
	bits := (*[27]big.Word)(unsafe.Pointer(z))
	return res.SetBits(bits[:])
}

// ToBigIntRegular returns z as a big.Int in regular form
func (z Element27) ToBigIntRegular(res *big.Int) *big.Int {
	z.FromMont()
	bits := (*[27]big.Word)(unsafe.Pointer(&z))
	return res.SetBits(bits[:])
}

// SetBigInt sets z to v (regular form) and returns z in Montgomery form
func (z *Element27) SetBigInt(v *big.Int) *Element27 {
	z.SetZero()

	zero := big.NewInt(0)
	q := element27ModulusBigInt()

	// copy input
	vv := new(big.Int).Set(v)

	// while v < 0, v+=q
	for vv.Cmp(zero) == -1 {
		vv.Add(vv, q)
	}
	// while v > q, v-=q
	for vv.Cmp(q) == 1 {
		vv.Sub(vv, q)
	}
	// if v == q, return 0
	if vv.Cmp(q) == 0 {
		return z
	}
	// v should
	vBits := vv.Bits()
	for i := 0; i < len(vBits); i++ {
		z[i] = uint64(vBits[i])
	}
	return z.ToMont()
}

// SetString creates a big.Int with s (in base 10) and calls SetBigInt on z
func (z *Element27) SetString(s string) *Element27 {
	x, ok := new(big.Int).SetString(s, 10)
	if !ok {
		panic("Element27.SetString failed -> can't parse number in base10 into a big.Int")
	}
	return z.SetBigInt(x)
}

// Mul z = x * y mod q
// see https://hackmd.io/@zkteam/modular_multiplication
func (z *Element27) Mul(x, y *Element27) *Element27 {

	var t [28]uint64
	var D uint64
	var m, C uint64
	// -----------------------------------
	// First loop

	C, t[0] = bits.Mul64(y[0], x[0])
	C, t[1] = madd1(y[0], x[1], C)
	C, t[2] = madd1(y[0], x[2], C)
	C, t[3] = madd1(y[0], x[3], C)
	C, t[4] = madd1(y[0], x[4], C)
	C, t[5] = madd1(y[0], x[5], C)
	C, t[6] = madd1(y[0], x[6], C)
	C, t[7] = madd1(y[0], x[7], C)
	C, t[8] = madd1(y[0], x[8], C)
	C, t[9] = madd1(y[0], x[9], C)
	C, t[10] = madd1(y[0], x[10], C)
	C, t[11] = madd1(y[0], x[11], C)
	C, t[12] = madd1(y[0], x[12], C)
	C, t[13] = madd1(y[0], x[13], C)
	C, t[14] = madd1(y[0], x[14], C)
	C, t[15] = madd1(y[0], x[15], C)
	C, t[16] = madd1(y[0], x[16], C)
	C, t[17] = madd1(y[0], x[17], C)
	C, t[18] = madd1(y[0], x[18], C)
	C, t[19] = madd1(y[0], x[19], C)
	C, t[20] = madd1(y[0], x[20], C)
	C, t[21] = madd1(y[0], x[21], C)
	C, t[22] = madd1(y[0], x[22], C)
	C, t[23] = madd1(y[0], x[23], C)
	C, t[24] = madd1(y[0], x[24], C)
	C, t[25] = madd1(y[0], x[25], C)
	C, t[26] = madd1(y[0], x[26], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6626265420794567181

	// -----------------------------------
	// Second loop
	C = madd0(m, 12440613579524619067, t[0])

	C, t[0] = madd2(m, 18006194176015342613, t[1], C)

	C, t[1] = madd2(m, 17457613988123037566, t[2], C)

	C, t[2] = madd2(m, 18368984800942220457, t[3], C)

	C, t[3] = madd2(m, 827738500950988109, t[4], C)

	C, t[4] = madd2(m, 10465983792485076748, t[5], C)

	C, t[5] = madd2(m, 13130147365989575090, t[6], C)

	C, t[6] = madd2(m, 15901529056822770985, t[7], C)

	C, t[7] = madd2(m, 13319898001022067246, t[8], C)

	C, t[8] = madd2(m, 12824488156229008848, t[9], C)

	C, t[9] = madd2(m, 9383015198101081139, t[10], C)

	C, t[10] = madd2(m, 10947642194440358220, t[11], C)

	C, t[11] = madd2(m, 14734856437812977659, t[12], C)

	C, t[12] = madd2(m, 9151126398053665599, t[13], C)

	C, t[13] = madd2(m, 18381890281880615828, t[14], C)

	C, t[14] = madd2(m, 2346860679127149877, t[15], C)

	C, t[15] = madd2(m, 7713876665391399680, t[16], C)

	C, t[16] = madd2(m, 16804552333605636830, t[17], C)

	C, t[17] = madd2(m, 16402045285100958250, t[18], C)

	C, t[18] = madd2(m, 18176937210785782677, t[19], C)

	C, t[19] = madd2(m, 15966221038481425824, t[20], C)

	C, t[20] = madd2(m, 6959743526085911234, t[21], C)

	C, t[21] = madd2(m, 12624744789978825023, t[22], C)

	C, t[22] = madd2(m, 7041736483744465896, t[23], C)

	C, t[23] = madd2(m, 552982698812971543, t[24], C)

	C, t[24] = madd2(m, 2684388112402793318, t[25], C)

	C, t[25] = madd3(m, 8611279412651616633, t[26], C, t[27])

	t[26], t[27] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[1], x[0], t[0])
	C, t[1] = madd2(y[1], x[1], t[1], C)
	C, t[2] = madd2(y[1], x[2], t[2], C)
	C, t[3] = madd2(y[1], x[3], t[3], C)
	C, t[4] = madd2(y[1], x[4], t[4], C)
	C, t[5] = madd2(y[1], x[5], t[5], C)
	C, t[6] = madd2(y[1], x[6], t[6], C)
	C, t[7] = madd2(y[1], x[7], t[7], C)
	C, t[8] = madd2(y[1], x[8], t[8], C)
	C, t[9] = madd2(y[1], x[9], t[9], C)
	C, t[10] = madd2(y[1], x[10], t[10], C)
	C, t[11] = madd2(y[1], x[11], t[11], C)
	C, t[12] = madd2(y[1], x[12], t[12], C)
	C, t[13] = madd2(y[1], x[13], t[13], C)
	C, t[14] = madd2(y[1], x[14], t[14], C)
	C, t[15] = madd2(y[1], x[15], t[15], C)
	C, t[16] = madd2(y[1], x[16], t[16], C)
	C, t[17] = madd2(y[1], x[17], t[17], C)
	C, t[18] = madd2(y[1], x[18], t[18], C)
	C, t[19] = madd2(y[1], x[19], t[19], C)
	C, t[20] = madd2(y[1], x[20], t[20], C)
	C, t[21] = madd2(y[1], x[21], t[21], C)
	C, t[22] = madd2(y[1], x[22], t[22], C)
	C, t[23] = madd2(y[1], x[23], t[23], C)
	C, t[24] = madd2(y[1], x[24], t[24], C)
	C, t[25] = madd2(y[1], x[25], t[25], C)
	C, t[26] = madd2(y[1], x[26], t[26], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6626265420794567181

	// -----------------------------------
	// Second loop
	C = madd0(m, 12440613579524619067, t[0])

	C, t[0] = madd2(m, 18006194176015342613, t[1], C)

	C, t[1] = madd2(m, 17457613988123037566, t[2], C)

	C, t[2] = madd2(m, 18368984800942220457, t[3], C)

	C, t[3] = madd2(m, 827738500950988109, t[4], C)

	C, t[4] = madd2(m, 10465983792485076748, t[5], C)

	C, t[5] = madd2(m, 13130147365989575090, t[6], C)

	C, t[6] = madd2(m, 15901529056822770985, t[7], C)

	C, t[7] = madd2(m, 13319898001022067246, t[8], C)

	C, t[8] = madd2(m, 12824488156229008848, t[9], C)

	C, t[9] = madd2(m, 9383015198101081139, t[10], C)

	C, t[10] = madd2(m, 10947642194440358220, t[11], C)

	C, t[11] = madd2(m, 14734856437812977659, t[12], C)

	C, t[12] = madd2(m, 9151126398053665599, t[13], C)

	C, t[13] = madd2(m, 18381890281880615828, t[14], C)

	C, t[14] = madd2(m, 2346860679127149877, t[15], C)

	C, t[15] = madd2(m, 7713876665391399680, t[16], C)

	C, t[16] = madd2(m, 16804552333605636830, t[17], C)

	C, t[17] = madd2(m, 16402045285100958250, t[18], C)

	C, t[18] = madd2(m, 18176937210785782677, t[19], C)

	C, t[19] = madd2(m, 15966221038481425824, t[20], C)

	C, t[20] = madd2(m, 6959743526085911234, t[21], C)

	C, t[21] = madd2(m, 12624744789978825023, t[22], C)

	C, t[22] = madd2(m, 7041736483744465896, t[23], C)

	C, t[23] = madd2(m, 552982698812971543, t[24], C)

	C, t[24] = madd2(m, 2684388112402793318, t[25], C)

	C, t[25] = madd3(m, 8611279412651616633, t[26], C, t[27])

	t[26], t[27] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[2], x[0], t[0])
	C, t[1] = madd2(y[2], x[1], t[1], C)
	C, t[2] = madd2(y[2], x[2], t[2], C)
	C, t[3] = madd2(y[2], x[3], t[3], C)
	C, t[4] = madd2(y[2], x[4], t[4], C)
	C, t[5] = madd2(y[2], x[5], t[5], C)
	C, t[6] = madd2(y[2], x[6], t[6], C)
	C, t[7] = madd2(y[2], x[7], t[7], C)
	C, t[8] = madd2(y[2], x[8], t[8], C)
	C, t[9] = madd2(y[2], x[9], t[9], C)
	C, t[10] = madd2(y[2], x[10], t[10], C)
	C, t[11] = madd2(y[2], x[11], t[11], C)
	C, t[12] = madd2(y[2], x[12], t[12], C)
	C, t[13] = madd2(y[2], x[13], t[13], C)
	C, t[14] = madd2(y[2], x[14], t[14], C)
	C, t[15] = madd2(y[2], x[15], t[15], C)
	C, t[16] = madd2(y[2], x[16], t[16], C)
	C, t[17] = madd2(y[2], x[17], t[17], C)
	C, t[18] = madd2(y[2], x[18], t[18], C)
	C, t[19] = madd2(y[2], x[19], t[19], C)
	C, t[20] = madd2(y[2], x[20], t[20], C)
	C, t[21] = madd2(y[2], x[21], t[21], C)
	C, t[22] = madd2(y[2], x[22], t[22], C)
	C, t[23] = madd2(y[2], x[23], t[23], C)
	C, t[24] = madd2(y[2], x[24], t[24], C)
	C, t[25] = madd2(y[2], x[25], t[25], C)
	C, t[26] = madd2(y[2], x[26], t[26], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6626265420794567181

	// -----------------------------------
	// Second loop
	C = madd0(m, 12440613579524619067, t[0])

	C, t[0] = madd2(m, 18006194176015342613, t[1], C)

	C, t[1] = madd2(m, 17457613988123037566, t[2], C)

	C, t[2] = madd2(m, 18368984800942220457, t[3], C)

	C, t[3] = madd2(m, 827738500950988109, t[4], C)

	C, t[4] = madd2(m, 10465983792485076748, t[5], C)

	C, t[5] = madd2(m, 13130147365989575090, t[6], C)

	C, t[6] = madd2(m, 15901529056822770985, t[7], C)

	C, t[7] = madd2(m, 13319898001022067246, t[8], C)

	C, t[8] = madd2(m, 12824488156229008848, t[9], C)

	C, t[9] = madd2(m, 9383015198101081139, t[10], C)

	C, t[10] = madd2(m, 10947642194440358220, t[11], C)

	C, t[11] = madd2(m, 14734856437812977659, t[12], C)

	C, t[12] = madd2(m, 9151126398053665599, t[13], C)

	C, t[13] = madd2(m, 18381890281880615828, t[14], C)

	C, t[14] = madd2(m, 2346860679127149877, t[15], C)

	C, t[15] = madd2(m, 7713876665391399680, t[16], C)

	C, t[16] = madd2(m, 16804552333605636830, t[17], C)

	C, t[17] = madd2(m, 16402045285100958250, t[18], C)

	C, t[18] = madd2(m, 18176937210785782677, t[19], C)

	C, t[19] = madd2(m, 15966221038481425824, t[20], C)

	C, t[20] = madd2(m, 6959743526085911234, t[21], C)

	C, t[21] = madd2(m, 12624744789978825023, t[22], C)

	C, t[22] = madd2(m, 7041736483744465896, t[23], C)

	C, t[23] = madd2(m, 552982698812971543, t[24], C)

	C, t[24] = madd2(m, 2684388112402793318, t[25], C)

	C, t[25] = madd3(m, 8611279412651616633, t[26], C, t[27])

	t[26], t[27] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[3], x[0], t[0])
	C, t[1] = madd2(y[3], x[1], t[1], C)
	C, t[2] = madd2(y[3], x[2], t[2], C)
	C, t[3] = madd2(y[3], x[3], t[3], C)
	C, t[4] = madd2(y[3], x[4], t[4], C)
	C, t[5] = madd2(y[3], x[5], t[5], C)
	C, t[6] = madd2(y[3], x[6], t[6], C)
	C, t[7] = madd2(y[3], x[7], t[7], C)
	C, t[8] = madd2(y[3], x[8], t[8], C)
	C, t[9] = madd2(y[3], x[9], t[9], C)
	C, t[10] = madd2(y[3], x[10], t[10], C)
	C, t[11] = madd2(y[3], x[11], t[11], C)
	C, t[12] = madd2(y[3], x[12], t[12], C)
	C, t[13] = madd2(y[3], x[13], t[13], C)
	C, t[14] = madd2(y[3], x[14], t[14], C)
	C, t[15] = madd2(y[3], x[15], t[15], C)
	C, t[16] = madd2(y[3], x[16], t[16], C)
	C, t[17] = madd2(y[3], x[17], t[17], C)
	C, t[18] = madd2(y[3], x[18], t[18], C)
	C, t[19] = madd2(y[3], x[19], t[19], C)
	C, t[20] = madd2(y[3], x[20], t[20], C)
	C, t[21] = madd2(y[3], x[21], t[21], C)
	C, t[22] = madd2(y[3], x[22], t[22], C)
	C, t[23] = madd2(y[3], x[23], t[23], C)
	C, t[24] = madd2(y[3], x[24], t[24], C)
	C, t[25] = madd2(y[3], x[25], t[25], C)
	C, t[26] = madd2(y[3], x[26], t[26], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6626265420794567181

	// -----------------------------------
	// Second loop
	C = madd0(m, 12440613579524619067, t[0])

	C, t[0] = madd2(m, 18006194176015342613, t[1], C)

	C, t[1] = madd2(m, 17457613988123037566, t[2], C)

	C, t[2] = madd2(m, 18368984800942220457, t[3], C)

	C, t[3] = madd2(m, 827738500950988109, t[4], C)

	C, t[4] = madd2(m, 10465983792485076748, t[5], C)

	C, t[5] = madd2(m, 13130147365989575090, t[6], C)

	C, t[6] = madd2(m, 15901529056822770985, t[7], C)

	C, t[7] = madd2(m, 13319898001022067246, t[8], C)

	C, t[8] = madd2(m, 12824488156229008848, t[9], C)

	C, t[9] = madd2(m, 9383015198101081139, t[10], C)

	C, t[10] = madd2(m, 10947642194440358220, t[11], C)

	C, t[11] = madd2(m, 14734856437812977659, t[12], C)

	C, t[12] = madd2(m, 9151126398053665599, t[13], C)

	C, t[13] = madd2(m, 18381890281880615828, t[14], C)

	C, t[14] = madd2(m, 2346860679127149877, t[15], C)

	C, t[15] = madd2(m, 7713876665391399680, t[16], C)

	C, t[16] = madd2(m, 16804552333605636830, t[17], C)

	C, t[17] = madd2(m, 16402045285100958250, t[18], C)

	C, t[18] = madd2(m, 18176937210785782677, t[19], C)

	C, t[19] = madd2(m, 15966221038481425824, t[20], C)

	C, t[20] = madd2(m, 6959743526085911234, t[21], C)

	C, t[21] = madd2(m, 12624744789978825023, t[22], C)

	C, t[22] = madd2(m, 7041736483744465896, t[23], C)

	C, t[23] = madd2(m, 552982698812971543, t[24], C)

	C, t[24] = madd2(m, 2684388112402793318, t[25], C)

	C, t[25] = madd3(m, 8611279412651616633, t[26], C, t[27])

	t[26], t[27] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[4], x[0], t[0])
	C, t[1] = madd2(y[4], x[1], t[1], C)
	C, t[2] = madd2(y[4], x[2], t[2], C)
	C, t[3] = madd2(y[4], x[3], t[3], C)
	C, t[4] = madd2(y[4], x[4], t[4], C)
	C, t[5] = madd2(y[4], x[5], t[5], C)
	C, t[6] = madd2(y[4], x[6], t[6], C)
	C, t[7] = madd2(y[4], x[7], t[7], C)
	C, t[8] = madd2(y[4], x[8], t[8], C)
	C, t[9] = madd2(y[4], x[9], t[9], C)
	C, t[10] = madd2(y[4], x[10], t[10], C)
	C, t[11] = madd2(y[4], x[11], t[11], C)
	C, t[12] = madd2(y[4], x[12], t[12], C)
	C, t[13] = madd2(y[4], x[13], t[13], C)
	C, t[14] = madd2(y[4], x[14], t[14], C)
	C, t[15] = madd2(y[4], x[15], t[15], C)
	C, t[16] = madd2(y[4], x[16], t[16], C)
	C, t[17] = madd2(y[4], x[17], t[17], C)
	C, t[18] = madd2(y[4], x[18], t[18], C)
	C, t[19] = madd2(y[4], x[19], t[19], C)
	C, t[20] = madd2(y[4], x[20], t[20], C)
	C, t[21] = madd2(y[4], x[21], t[21], C)
	C, t[22] = madd2(y[4], x[22], t[22], C)
	C, t[23] = madd2(y[4], x[23], t[23], C)
	C, t[24] = madd2(y[4], x[24], t[24], C)
	C, t[25] = madd2(y[4], x[25], t[25], C)
	C, t[26] = madd2(y[4], x[26], t[26], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6626265420794567181

	// -----------------------------------
	// Second loop
	C = madd0(m, 12440613579524619067, t[0])

	C, t[0] = madd2(m, 18006194176015342613, t[1], C)

	C, t[1] = madd2(m, 17457613988123037566, t[2], C)

	C, t[2] = madd2(m, 18368984800942220457, t[3], C)

	C, t[3] = madd2(m, 827738500950988109, t[4], C)

	C, t[4] = madd2(m, 10465983792485076748, t[5], C)

	C, t[5] = madd2(m, 13130147365989575090, t[6], C)

	C, t[6] = madd2(m, 15901529056822770985, t[7], C)

	C, t[7] = madd2(m, 13319898001022067246, t[8], C)

	C, t[8] = madd2(m, 12824488156229008848, t[9], C)

	C, t[9] = madd2(m, 9383015198101081139, t[10], C)

	C, t[10] = madd2(m, 10947642194440358220, t[11], C)

	C, t[11] = madd2(m, 14734856437812977659, t[12], C)

	C, t[12] = madd2(m, 9151126398053665599, t[13], C)

	C, t[13] = madd2(m, 18381890281880615828, t[14], C)

	C, t[14] = madd2(m, 2346860679127149877, t[15], C)

	C, t[15] = madd2(m, 7713876665391399680, t[16], C)

	C, t[16] = madd2(m, 16804552333605636830, t[17], C)

	C, t[17] = madd2(m, 16402045285100958250, t[18], C)

	C, t[18] = madd2(m, 18176937210785782677, t[19], C)

	C, t[19] = madd2(m, 15966221038481425824, t[20], C)

	C, t[20] = madd2(m, 6959743526085911234, t[21], C)

	C, t[21] = madd2(m, 12624744789978825023, t[22], C)

	C, t[22] = madd2(m, 7041736483744465896, t[23], C)

	C, t[23] = madd2(m, 552982698812971543, t[24], C)

	C, t[24] = madd2(m, 2684388112402793318, t[25], C)

	C, t[25] = madd3(m, 8611279412651616633, t[26], C, t[27])

	t[26], t[27] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[5], x[0], t[0])
	C, t[1] = madd2(y[5], x[1], t[1], C)
	C, t[2] = madd2(y[5], x[2], t[2], C)
	C, t[3] = madd2(y[5], x[3], t[3], C)
	C, t[4] = madd2(y[5], x[4], t[4], C)
	C, t[5] = madd2(y[5], x[5], t[5], C)
	C, t[6] = madd2(y[5], x[6], t[6], C)
	C, t[7] = madd2(y[5], x[7], t[7], C)
	C, t[8] = madd2(y[5], x[8], t[8], C)
	C, t[9] = madd2(y[5], x[9], t[9], C)
	C, t[10] = madd2(y[5], x[10], t[10], C)
	C, t[11] = madd2(y[5], x[11], t[11], C)
	C, t[12] = madd2(y[5], x[12], t[12], C)
	C, t[13] = madd2(y[5], x[13], t[13], C)
	C, t[14] = madd2(y[5], x[14], t[14], C)
	C, t[15] = madd2(y[5], x[15], t[15], C)
	C, t[16] = madd2(y[5], x[16], t[16], C)
	C, t[17] = madd2(y[5], x[17], t[17], C)
	C, t[18] = madd2(y[5], x[18], t[18], C)
	C, t[19] = madd2(y[5], x[19], t[19], C)
	C, t[20] = madd2(y[5], x[20], t[20], C)
	C, t[21] = madd2(y[5], x[21], t[21], C)
	C, t[22] = madd2(y[5], x[22], t[22], C)
	C, t[23] = madd2(y[5], x[23], t[23], C)
	C, t[24] = madd2(y[5], x[24], t[24], C)
	C, t[25] = madd2(y[5], x[25], t[25], C)
	C, t[26] = madd2(y[5], x[26], t[26], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6626265420794567181

	// -----------------------------------
	// Second loop
	C = madd0(m, 12440613579524619067, t[0])

	C, t[0] = madd2(m, 18006194176015342613, t[1], C)

	C, t[1] = madd2(m, 17457613988123037566, t[2], C)

	C, t[2] = madd2(m, 18368984800942220457, t[3], C)

	C, t[3] = madd2(m, 827738500950988109, t[4], C)

	C, t[4] = madd2(m, 10465983792485076748, t[5], C)

	C, t[5] = madd2(m, 13130147365989575090, t[6], C)

	C, t[6] = madd2(m, 15901529056822770985, t[7], C)

	C, t[7] = madd2(m, 13319898001022067246, t[8], C)

	C, t[8] = madd2(m, 12824488156229008848, t[9], C)

	C, t[9] = madd2(m, 9383015198101081139, t[10], C)

	C, t[10] = madd2(m, 10947642194440358220, t[11], C)

	C, t[11] = madd2(m, 14734856437812977659, t[12], C)

	C, t[12] = madd2(m, 9151126398053665599, t[13], C)

	C, t[13] = madd2(m, 18381890281880615828, t[14], C)

	C, t[14] = madd2(m, 2346860679127149877, t[15], C)

	C, t[15] = madd2(m, 7713876665391399680, t[16], C)

	C, t[16] = madd2(m, 16804552333605636830, t[17], C)

	C, t[17] = madd2(m, 16402045285100958250, t[18], C)

	C, t[18] = madd2(m, 18176937210785782677, t[19], C)

	C, t[19] = madd2(m, 15966221038481425824, t[20], C)

	C, t[20] = madd2(m, 6959743526085911234, t[21], C)

	C, t[21] = madd2(m, 12624744789978825023, t[22], C)

	C, t[22] = madd2(m, 7041736483744465896, t[23], C)

	C, t[23] = madd2(m, 552982698812971543, t[24], C)

	C, t[24] = madd2(m, 2684388112402793318, t[25], C)

	C, t[25] = madd3(m, 8611279412651616633, t[26], C, t[27])

	t[26], t[27] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[6], x[0], t[0])
	C, t[1] = madd2(y[6], x[1], t[1], C)
	C, t[2] = madd2(y[6], x[2], t[2], C)
	C, t[3] = madd2(y[6], x[3], t[3], C)
	C, t[4] = madd2(y[6], x[4], t[4], C)
	C, t[5] = madd2(y[6], x[5], t[5], C)
	C, t[6] = madd2(y[6], x[6], t[6], C)
	C, t[7] = madd2(y[6], x[7], t[7], C)
	C, t[8] = madd2(y[6], x[8], t[8], C)
	C, t[9] = madd2(y[6], x[9], t[9], C)
	C, t[10] = madd2(y[6], x[10], t[10], C)
	C, t[11] = madd2(y[6], x[11], t[11], C)
	C, t[12] = madd2(y[6], x[12], t[12], C)
	C, t[13] = madd2(y[6], x[13], t[13], C)
	C, t[14] = madd2(y[6], x[14], t[14], C)
	C, t[15] = madd2(y[6], x[15], t[15], C)
	C, t[16] = madd2(y[6], x[16], t[16], C)
	C, t[17] = madd2(y[6], x[17], t[17], C)
	C, t[18] = madd2(y[6], x[18], t[18], C)
	C, t[19] = madd2(y[6], x[19], t[19], C)
	C, t[20] = madd2(y[6], x[20], t[20], C)
	C, t[21] = madd2(y[6], x[21], t[21], C)
	C, t[22] = madd2(y[6], x[22], t[22], C)
	C, t[23] = madd2(y[6], x[23], t[23], C)
	C, t[24] = madd2(y[6], x[24], t[24], C)
	C, t[25] = madd2(y[6], x[25], t[25], C)
	C, t[26] = madd2(y[6], x[26], t[26], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6626265420794567181

	// -----------------------------------
	// Second loop
	C = madd0(m, 12440613579524619067, t[0])

	C, t[0] = madd2(m, 18006194176015342613, t[1], C)

	C, t[1] = madd2(m, 17457613988123037566, t[2], C)

	C, t[2] = madd2(m, 18368984800942220457, t[3], C)

	C, t[3] = madd2(m, 827738500950988109, t[4], C)

	C, t[4] = madd2(m, 10465983792485076748, t[5], C)

	C, t[5] = madd2(m, 13130147365989575090, t[6], C)

	C, t[6] = madd2(m, 15901529056822770985, t[7], C)

	C, t[7] = madd2(m, 13319898001022067246, t[8], C)

	C, t[8] = madd2(m, 12824488156229008848, t[9], C)

	C, t[9] = madd2(m, 9383015198101081139, t[10], C)

	C, t[10] = madd2(m, 10947642194440358220, t[11], C)

	C, t[11] = madd2(m, 14734856437812977659, t[12], C)

	C, t[12] = madd2(m, 9151126398053665599, t[13], C)

	C, t[13] = madd2(m, 18381890281880615828, t[14], C)

	C, t[14] = madd2(m, 2346860679127149877, t[15], C)

	C, t[15] = madd2(m, 7713876665391399680, t[16], C)

	C, t[16] = madd2(m, 16804552333605636830, t[17], C)

	C, t[17] = madd2(m, 16402045285100958250, t[18], C)

	C, t[18] = madd2(m, 18176937210785782677, t[19], C)

	C, t[19] = madd2(m, 15966221038481425824, t[20], C)

	C, t[20] = madd2(m, 6959743526085911234, t[21], C)

	C, t[21] = madd2(m, 12624744789978825023, t[22], C)

	C, t[22] = madd2(m, 7041736483744465896, t[23], C)

	C, t[23] = madd2(m, 552982698812971543, t[24], C)

	C, t[24] = madd2(m, 2684388112402793318, t[25], C)

	C, t[25] = madd3(m, 8611279412651616633, t[26], C, t[27])

	t[26], t[27] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[7], x[0], t[0])
	C, t[1] = madd2(y[7], x[1], t[1], C)
	C, t[2] = madd2(y[7], x[2], t[2], C)
	C, t[3] = madd2(y[7], x[3], t[3], C)
	C, t[4] = madd2(y[7], x[4], t[4], C)
	C, t[5] = madd2(y[7], x[5], t[5], C)
	C, t[6] = madd2(y[7], x[6], t[6], C)
	C, t[7] = madd2(y[7], x[7], t[7], C)
	C, t[8] = madd2(y[7], x[8], t[8], C)
	C, t[9] = madd2(y[7], x[9], t[9], C)
	C, t[10] = madd2(y[7], x[10], t[10], C)
	C, t[11] = madd2(y[7], x[11], t[11], C)
	C, t[12] = madd2(y[7], x[12], t[12], C)
	C, t[13] = madd2(y[7], x[13], t[13], C)
	C, t[14] = madd2(y[7], x[14], t[14], C)
	C, t[15] = madd2(y[7], x[15], t[15], C)
	C, t[16] = madd2(y[7], x[16], t[16], C)
	C, t[17] = madd2(y[7], x[17], t[17], C)
	C, t[18] = madd2(y[7], x[18], t[18], C)
	C, t[19] = madd2(y[7], x[19], t[19], C)
	C, t[20] = madd2(y[7], x[20], t[20], C)
	C, t[21] = madd2(y[7], x[21], t[21], C)
	C, t[22] = madd2(y[7], x[22], t[22], C)
	C, t[23] = madd2(y[7], x[23], t[23], C)
	C, t[24] = madd2(y[7], x[24], t[24], C)
	C, t[25] = madd2(y[7], x[25], t[25], C)
	C, t[26] = madd2(y[7], x[26], t[26], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6626265420794567181

	// -----------------------------------
	// Second loop
	C = madd0(m, 12440613579524619067, t[0])

	C, t[0] = madd2(m, 18006194176015342613, t[1], C)

	C, t[1] = madd2(m, 17457613988123037566, t[2], C)

	C, t[2] = madd2(m, 18368984800942220457, t[3], C)

	C, t[3] = madd2(m, 827738500950988109, t[4], C)

	C, t[4] = madd2(m, 10465983792485076748, t[5], C)

	C, t[5] = madd2(m, 13130147365989575090, t[6], C)

	C, t[6] = madd2(m, 15901529056822770985, t[7], C)

	C, t[7] = madd2(m, 13319898001022067246, t[8], C)

	C, t[8] = madd2(m, 12824488156229008848, t[9], C)

	C, t[9] = madd2(m, 9383015198101081139, t[10], C)

	C, t[10] = madd2(m, 10947642194440358220, t[11], C)

	C, t[11] = madd2(m, 14734856437812977659, t[12], C)

	C, t[12] = madd2(m, 9151126398053665599, t[13], C)

	C, t[13] = madd2(m, 18381890281880615828, t[14], C)

	C, t[14] = madd2(m, 2346860679127149877, t[15], C)

	C, t[15] = madd2(m, 7713876665391399680, t[16], C)

	C, t[16] = madd2(m, 16804552333605636830, t[17], C)

	C, t[17] = madd2(m, 16402045285100958250, t[18], C)

	C, t[18] = madd2(m, 18176937210785782677, t[19], C)

	C, t[19] = madd2(m, 15966221038481425824, t[20], C)

	C, t[20] = madd2(m, 6959743526085911234, t[21], C)

	C, t[21] = madd2(m, 12624744789978825023, t[22], C)

	C, t[22] = madd2(m, 7041736483744465896, t[23], C)

	C, t[23] = madd2(m, 552982698812971543, t[24], C)

	C, t[24] = madd2(m, 2684388112402793318, t[25], C)

	C, t[25] = madd3(m, 8611279412651616633, t[26], C, t[27])

	t[26], t[27] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[8], x[0], t[0])
	C, t[1] = madd2(y[8], x[1], t[1], C)
	C, t[2] = madd2(y[8], x[2], t[2], C)
	C, t[3] = madd2(y[8], x[3], t[3], C)
	C, t[4] = madd2(y[8], x[4], t[4], C)
	C, t[5] = madd2(y[8], x[5], t[5], C)
	C, t[6] = madd2(y[8], x[6], t[6], C)
	C, t[7] = madd2(y[8], x[7], t[7], C)
	C, t[8] = madd2(y[8], x[8], t[8], C)
	C, t[9] = madd2(y[8], x[9], t[9], C)
	C, t[10] = madd2(y[8], x[10], t[10], C)
	C, t[11] = madd2(y[8], x[11], t[11], C)
	C, t[12] = madd2(y[8], x[12], t[12], C)
	C, t[13] = madd2(y[8], x[13], t[13], C)
	C, t[14] = madd2(y[8], x[14], t[14], C)
	C, t[15] = madd2(y[8], x[15], t[15], C)
	C, t[16] = madd2(y[8], x[16], t[16], C)
	C, t[17] = madd2(y[8], x[17], t[17], C)
	C, t[18] = madd2(y[8], x[18], t[18], C)
	C, t[19] = madd2(y[8], x[19], t[19], C)
	C, t[20] = madd2(y[8], x[20], t[20], C)
	C, t[21] = madd2(y[8], x[21], t[21], C)
	C, t[22] = madd2(y[8], x[22], t[22], C)
	C, t[23] = madd2(y[8], x[23], t[23], C)
	C, t[24] = madd2(y[8], x[24], t[24], C)
	C, t[25] = madd2(y[8], x[25], t[25], C)
	C, t[26] = madd2(y[8], x[26], t[26], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6626265420794567181

	// -----------------------------------
	// Second loop
	C = madd0(m, 12440613579524619067, t[0])

	C, t[0] = madd2(m, 18006194176015342613, t[1], C)

	C, t[1] = madd2(m, 17457613988123037566, t[2], C)

	C, t[2] = madd2(m, 18368984800942220457, t[3], C)

	C, t[3] = madd2(m, 827738500950988109, t[4], C)

	C, t[4] = madd2(m, 10465983792485076748, t[5], C)

	C, t[5] = madd2(m, 13130147365989575090, t[6], C)

	C, t[6] = madd2(m, 15901529056822770985, t[7], C)

	C, t[7] = madd2(m, 13319898001022067246, t[8], C)

	C, t[8] = madd2(m, 12824488156229008848, t[9], C)

	C, t[9] = madd2(m, 9383015198101081139, t[10], C)

	C, t[10] = madd2(m, 10947642194440358220, t[11], C)

	C, t[11] = madd2(m, 14734856437812977659, t[12], C)

	C, t[12] = madd2(m, 9151126398053665599, t[13], C)

	C, t[13] = madd2(m, 18381890281880615828, t[14], C)

	C, t[14] = madd2(m, 2346860679127149877, t[15], C)

	C, t[15] = madd2(m, 7713876665391399680, t[16], C)

	C, t[16] = madd2(m, 16804552333605636830, t[17], C)

	C, t[17] = madd2(m, 16402045285100958250, t[18], C)

	C, t[18] = madd2(m, 18176937210785782677, t[19], C)

	C, t[19] = madd2(m, 15966221038481425824, t[20], C)

	C, t[20] = madd2(m, 6959743526085911234, t[21], C)

	C, t[21] = madd2(m, 12624744789978825023, t[22], C)

	C, t[22] = madd2(m, 7041736483744465896, t[23], C)

	C, t[23] = madd2(m, 552982698812971543, t[24], C)

	C, t[24] = madd2(m, 2684388112402793318, t[25], C)

	C, t[25] = madd3(m, 8611279412651616633, t[26], C, t[27])

	t[26], t[27] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[9], x[0], t[0])
	C, t[1] = madd2(y[9], x[1], t[1], C)
	C, t[2] = madd2(y[9], x[2], t[2], C)
	C, t[3] = madd2(y[9], x[3], t[3], C)
	C, t[4] = madd2(y[9], x[4], t[4], C)
	C, t[5] = madd2(y[9], x[5], t[5], C)
	C, t[6] = madd2(y[9], x[6], t[6], C)
	C, t[7] = madd2(y[9], x[7], t[7], C)
	C, t[8] = madd2(y[9], x[8], t[8], C)
	C, t[9] = madd2(y[9], x[9], t[9], C)
	C, t[10] = madd2(y[9], x[10], t[10], C)
	C, t[11] = madd2(y[9], x[11], t[11], C)
	C, t[12] = madd2(y[9], x[12], t[12], C)
	C, t[13] = madd2(y[9], x[13], t[13], C)
	C, t[14] = madd2(y[9], x[14], t[14], C)
	C, t[15] = madd2(y[9], x[15], t[15], C)
	C, t[16] = madd2(y[9], x[16], t[16], C)
	C, t[17] = madd2(y[9], x[17], t[17], C)
	C, t[18] = madd2(y[9], x[18], t[18], C)
	C, t[19] = madd2(y[9], x[19], t[19], C)
	C, t[20] = madd2(y[9], x[20], t[20], C)
	C, t[21] = madd2(y[9], x[21], t[21], C)
	C, t[22] = madd2(y[9], x[22], t[22], C)
	C, t[23] = madd2(y[9], x[23], t[23], C)
	C, t[24] = madd2(y[9], x[24], t[24], C)
	C, t[25] = madd2(y[9], x[25], t[25], C)
	C, t[26] = madd2(y[9], x[26], t[26], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6626265420794567181

	// -----------------------------------
	// Second loop
	C = madd0(m, 12440613579524619067, t[0])

	C, t[0] = madd2(m, 18006194176015342613, t[1], C)

	C, t[1] = madd2(m, 17457613988123037566, t[2], C)

	C, t[2] = madd2(m, 18368984800942220457, t[3], C)

	C, t[3] = madd2(m, 827738500950988109, t[4], C)

	C, t[4] = madd2(m, 10465983792485076748, t[5], C)

	C, t[5] = madd2(m, 13130147365989575090, t[6], C)

	C, t[6] = madd2(m, 15901529056822770985, t[7], C)

	C, t[7] = madd2(m, 13319898001022067246, t[8], C)

	C, t[8] = madd2(m, 12824488156229008848, t[9], C)

	C, t[9] = madd2(m, 9383015198101081139, t[10], C)

	C, t[10] = madd2(m, 10947642194440358220, t[11], C)

	C, t[11] = madd2(m, 14734856437812977659, t[12], C)

	C, t[12] = madd2(m, 9151126398053665599, t[13], C)

	C, t[13] = madd2(m, 18381890281880615828, t[14], C)

	C, t[14] = madd2(m, 2346860679127149877, t[15], C)

	C, t[15] = madd2(m, 7713876665391399680, t[16], C)

	C, t[16] = madd2(m, 16804552333605636830, t[17], C)

	C, t[17] = madd2(m, 16402045285100958250, t[18], C)

	C, t[18] = madd2(m, 18176937210785782677, t[19], C)

	C, t[19] = madd2(m, 15966221038481425824, t[20], C)

	C, t[20] = madd2(m, 6959743526085911234, t[21], C)

	C, t[21] = madd2(m, 12624744789978825023, t[22], C)

	C, t[22] = madd2(m, 7041736483744465896, t[23], C)

	C, t[23] = madd2(m, 552982698812971543, t[24], C)

	C, t[24] = madd2(m, 2684388112402793318, t[25], C)

	C, t[25] = madd3(m, 8611279412651616633, t[26], C, t[27])

	t[26], t[27] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[10], x[0], t[0])
	C, t[1] = madd2(y[10], x[1], t[1], C)
	C, t[2] = madd2(y[10], x[2], t[2], C)
	C, t[3] = madd2(y[10], x[3], t[3], C)
	C, t[4] = madd2(y[10], x[4], t[4], C)
	C, t[5] = madd2(y[10], x[5], t[5], C)
	C, t[6] = madd2(y[10], x[6], t[6], C)
	C, t[7] = madd2(y[10], x[7], t[7], C)
	C, t[8] = madd2(y[10], x[8], t[8], C)
	C, t[9] = madd2(y[10], x[9], t[9], C)
	C, t[10] = madd2(y[10], x[10], t[10], C)
	C, t[11] = madd2(y[10], x[11], t[11], C)
	C, t[12] = madd2(y[10], x[12], t[12], C)
	C, t[13] = madd2(y[10], x[13], t[13], C)
	C, t[14] = madd2(y[10], x[14], t[14], C)
	C, t[15] = madd2(y[10], x[15], t[15], C)
	C, t[16] = madd2(y[10], x[16], t[16], C)
	C, t[17] = madd2(y[10], x[17], t[17], C)
	C, t[18] = madd2(y[10], x[18], t[18], C)
	C, t[19] = madd2(y[10], x[19], t[19], C)
	C, t[20] = madd2(y[10], x[20], t[20], C)
	C, t[21] = madd2(y[10], x[21], t[21], C)
	C, t[22] = madd2(y[10], x[22], t[22], C)
	C, t[23] = madd2(y[10], x[23], t[23], C)
	C, t[24] = madd2(y[10], x[24], t[24], C)
	C, t[25] = madd2(y[10], x[25], t[25], C)
	C, t[26] = madd2(y[10], x[26], t[26], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6626265420794567181

	// -----------------------------------
	// Second loop
	C = madd0(m, 12440613579524619067, t[0])

	C, t[0] = madd2(m, 18006194176015342613, t[1], C)

	C, t[1] = madd2(m, 17457613988123037566, t[2], C)

	C, t[2] = madd2(m, 18368984800942220457, t[3], C)

	C, t[3] = madd2(m, 827738500950988109, t[4], C)

	C, t[4] = madd2(m, 10465983792485076748, t[5], C)

	C, t[5] = madd2(m, 13130147365989575090, t[6], C)

	C, t[6] = madd2(m, 15901529056822770985, t[7], C)

	C, t[7] = madd2(m, 13319898001022067246, t[8], C)

	C, t[8] = madd2(m, 12824488156229008848, t[9], C)

	C, t[9] = madd2(m, 9383015198101081139, t[10], C)

	C, t[10] = madd2(m, 10947642194440358220, t[11], C)

	C, t[11] = madd2(m, 14734856437812977659, t[12], C)

	C, t[12] = madd2(m, 9151126398053665599, t[13], C)

	C, t[13] = madd2(m, 18381890281880615828, t[14], C)

	C, t[14] = madd2(m, 2346860679127149877, t[15], C)

	C, t[15] = madd2(m, 7713876665391399680, t[16], C)

	C, t[16] = madd2(m, 16804552333605636830, t[17], C)

	C, t[17] = madd2(m, 16402045285100958250, t[18], C)

	C, t[18] = madd2(m, 18176937210785782677, t[19], C)

	C, t[19] = madd2(m, 15966221038481425824, t[20], C)

	C, t[20] = madd2(m, 6959743526085911234, t[21], C)

	C, t[21] = madd2(m, 12624744789978825023, t[22], C)

	C, t[22] = madd2(m, 7041736483744465896, t[23], C)

	C, t[23] = madd2(m, 552982698812971543, t[24], C)

	C, t[24] = madd2(m, 2684388112402793318, t[25], C)

	C, t[25] = madd3(m, 8611279412651616633, t[26], C, t[27])

	t[26], t[27] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[11], x[0], t[0])
	C, t[1] = madd2(y[11], x[1], t[1], C)
	C, t[2] = madd2(y[11], x[2], t[2], C)
	C, t[3] = madd2(y[11], x[3], t[3], C)
	C, t[4] = madd2(y[11], x[4], t[4], C)
	C, t[5] = madd2(y[11], x[5], t[5], C)
	C, t[6] = madd2(y[11], x[6], t[6], C)
	C, t[7] = madd2(y[11], x[7], t[7], C)
	C, t[8] = madd2(y[11], x[8], t[8], C)
	C, t[9] = madd2(y[11], x[9], t[9], C)
	C, t[10] = madd2(y[11], x[10], t[10], C)
	C, t[11] = madd2(y[11], x[11], t[11], C)
	C, t[12] = madd2(y[11], x[12], t[12], C)
	C, t[13] = madd2(y[11], x[13], t[13], C)
	C, t[14] = madd2(y[11], x[14], t[14], C)
	C, t[15] = madd2(y[11], x[15], t[15], C)
	C, t[16] = madd2(y[11], x[16], t[16], C)
	C, t[17] = madd2(y[11], x[17], t[17], C)
	C, t[18] = madd2(y[11], x[18], t[18], C)
	C, t[19] = madd2(y[11], x[19], t[19], C)
	C, t[20] = madd2(y[11], x[20], t[20], C)
	C, t[21] = madd2(y[11], x[21], t[21], C)
	C, t[22] = madd2(y[11], x[22], t[22], C)
	C, t[23] = madd2(y[11], x[23], t[23], C)
	C, t[24] = madd2(y[11], x[24], t[24], C)
	C, t[25] = madd2(y[11], x[25], t[25], C)
	C, t[26] = madd2(y[11], x[26], t[26], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6626265420794567181

	// -----------------------------------
	// Second loop
	C = madd0(m, 12440613579524619067, t[0])

	C, t[0] = madd2(m, 18006194176015342613, t[1], C)

	C, t[1] = madd2(m, 17457613988123037566, t[2], C)

	C, t[2] = madd2(m, 18368984800942220457, t[3], C)

	C, t[3] = madd2(m, 827738500950988109, t[4], C)

	C, t[4] = madd2(m, 10465983792485076748, t[5], C)

	C, t[5] = madd2(m, 13130147365989575090, t[6], C)

	C, t[6] = madd2(m, 15901529056822770985, t[7], C)

	C, t[7] = madd2(m, 13319898001022067246, t[8], C)

	C, t[8] = madd2(m, 12824488156229008848, t[9], C)

	C, t[9] = madd2(m, 9383015198101081139, t[10], C)

	C, t[10] = madd2(m, 10947642194440358220, t[11], C)

	C, t[11] = madd2(m, 14734856437812977659, t[12], C)

	C, t[12] = madd2(m, 9151126398053665599, t[13], C)

	C, t[13] = madd2(m, 18381890281880615828, t[14], C)

	C, t[14] = madd2(m, 2346860679127149877, t[15], C)

	C, t[15] = madd2(m, 7713876665391399680, t[16], C)

	C, t[16] = madd2(m, 16804552333605636830, t[17], C)

	C, t[17] = madd2(m, 16402045285100958250, t[18], C)

	C, t[18] = madd2(m, 18176937210785782677, t[19], C)

	C, t[19] = madd2(m, 15966221038481425824, t[20], C)

	C, t[20] = madd2(m, 6959743526085911234, t[21], C)

	C, t[21] = madd2(m, 12624744789978825023, t[22], C)

	C, t[22] = madd2(m, 7041736483744465896, t[23], C)

	C, t[23] = madd2(m, 552982698812971543, t[24], C)

	C, t[24] = madd2(m, 2684388112402793318, t[25], C)

	C, t[25] = madd3(m, 8611279412651616633, t[26], C, t[27])

	t[26], t[27] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[12], x[0], t[0])
	C, t[1] = madd2(y[12], x[1], t[1], C)
	C, t[2] = madd2(y[12], x[2], t[2], C)
	C, t[3] = madd2(y[12], x[3], t[3], C)
	C, t[4] = madd2(y[12], x[4], t[4], C)
	C, t[5] = madd2(y[12], x[5], t[5], C)
	C, t[6] = madd2(y[12], x[6], t[6], C)
	C, t[7] = madd2(y[12], x[7], t[7], C)
	C, t[8] = madd2(y[12], x[8], t[8], C)
	C, t[9] = madd2(y[12], x[9], t[9], C)
	C, t[10] = madd2(y[12], x[10], t[10], C)
	C, t[11] = madd2(y[12], x[11], t[11], C)
	C, t[12] = madd2(y[12], x[12], t[12], C)
	C, t[13] = madd2(y[12], x[13], t[13], C)
	C, t[14] = madd2(y[12], x[14], t[14], C)
	C, t[15] = madd2(y[12], x[15], t[15], C)
	C, t[16] = madd2(y[12], x[16], t[16], C)
	C, t[17] = madd2(y[12], x[17], t[17], C)
	C, t[18] = madd2(y[12], x[18], t[18], C)
	C, t[19] = madd2(y[12], x[19], t[19], C)
	C, t[20] = madd2(y[12], x[20], t[20], C)
	C, t[21] = madd2(y[12], x[21], t[21], C)
	C, t[22] = madd2(y[12], x[22], t[22], C)
	C, t[23] = madd2(y[12], x[23], t[23], C)
	C, t[24] = madd2(y[12], x[24], t[24], C)
	C, t[25] = madd2(y[12], x[25], t[25], C)
	C, t[26] = madd2(y[12], x[26], t[26], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6626265420794567181

	// -----------------------------------
	// Second loop
	C = madd0(m, 12440613579524619067, t[0])

	C, t[0] = madd2(m, 18006194176015342613, t[1], C)

	C, t[1] = madd2(m, 17457613988123037566, t[2], C)

	C, t[2] = madd2(m, 18368984800942220457, t[3], C)

	C, t[3] = madd2(m, 827738500950988109, t[4], C)

	C, t[4] = madd2(m, 10465983792485076748, t[5], C)

	C, t[5] = madd2(m, 13130147365989575090, t[6], C)

	C, t[6] = madd2(m, 15901529056822770985, t[7], C)

	C, t[7] = madd2(m, 13319898001022067246, t[8], C)

	C, t[8] = madd2(m, 12824488156229008848, t[9], C)

	C, t[9] = madd2(m, 9383015198101081139, t[10], C)

	C, t[10] = madd2(m, 10947642194440358220, t[11], C)

	C, t[11] = madd2(m, 14734856437812977659, t[12], C)

	C, t[12] = madd2(m, 9151126398053665599, t[13], C)

	C, t[13] = madd2(m, 18381890281880615828, t[14], C)

	C, t[14] = madd2(m, 2346860679127149877, t[15], C)

	C, t[15] = madd2(m, 7713876665391399680, t[16], C)

	C, t[16] = madd2(m, 16804552333605636830, t[17], C)

	C, t[17] = madd2(m, 16402045285100958250, t[18], C)

	C, t[18] = madd2(m, 18176937210785782677, t[19], C)

	C, t[19] = madd2(m, 15966221038481425824, t[20], C)

	C, t[20] = madd2(m, 6959743526085911234, t[21], C)

	C, t[21] = madd2(m, 12624744789978825023, t[22], C)

	C, t[22] = madd2(m, 7041736483744465896, t[23], C)

	C, t[23] = madd2(m, 552982698812971543, t[24], C)

	C, t[24] = madd2(m, 2684388112402793318, t[25], C)

	C, t[25] = madd3(m, 8611279412651616633, t[26], C, t[27])

	t[26], t[27] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[13], x[0], t[0])
	C, t[1] = madd2(y[13], x[1], t[1], C)
	C, t[2] = madd2(y[13], x[2], t[2], C)
	C, t[3] = madd2(y[13], x[3], t[3], C)
	C, t[4] = madd2(y[13], x[4], t[4], C)
	C, t[5] = madd2(y[13], x[5], t[5], C)
	C, t[6] = madd2(y[13], x[6], t[6], C)
	C, t[7] = madd2(y[13], x[7], t[7], C)
	C, t[8] = madd2(y[13], x[8], t[8], C)
	C, t[9] = madd2(y[13], x[9], t[9], C)
	C, t[10] = madd2(y[13], x[10], t[10], C)
	C, t[11] = madd2(y[13], x[11], t[11], C)
	C, t[12] = madd2(y[13], x[12], t[12], C)
	C, t[13] = madd2(y[13], x[13], t[13], C)
	C, t[14] = madd2(y[13], x[14], t[14], C)
	C, t[15] = madd2(y[13], x[15], t[15], C)
	C, t[16] = madd2(y[13], x[16], t[16], C)
	C, t[17] = madd2(y[13], x[17], t[17], C)
	C, t[18] = madd2(y[13], x[18], t[18], C)
	C, t[19] = madd2(y[13], x[19], t[19], C)
	C, t[20] = madd2(y[13], x[20], t[20], C)
	C, t[21] = madd2(y[13], x[21], t[21], C)
	C, t[22] = madd2(y[13], x[22], t[22], C)
	C, t[23] = madd2(y[13], x[23], t[23], C)
	C, t[24] = madd2(y[13], x[24], t[24], C)
	C, t[25] = madd2(y[13], x[25], t[25], C)
	C, t[26] = madd2(y[13], x[26], t[26], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6626265420794567181

	// -----------------------------------
	// Second loop
	C = madd0(m, 12440613579524619067, t[0])

	C, t[0] = madd2(m, 18006194176015342613, t[1], C)

	C, t[1] = madd2(m, 17457613988123037566, t[2], C)

	C, t[2] = madd2(m, 18368984800942220457, t[3], C)

	C, t[3] = madd2(m, 827738500950988109, t[4], C)

	C, t[4] = madd2(m, 10465983792485076748, t[5], C)

	C, t[5] = madd2(m, 13130147365989575090, t[6], C)

	C, t[6] = madd2(m, 15901529056822770985, t[7], C)

	C, t[7] = madd2(m, 13319898001022067246, t[8], C)

	C, t[8] = madd2(m, 12824488156229008848, t[9], C)

	C, t[9] = madd2(m, 9383015198101081139, t[10], C)

	C, t[10] = madd2(m, 10947642194440358220, t[11], C)

	C, t[11] = madd2(m, 14734856437812977659, t[12], C)

	C, t[12] = madd2(m, 9151126398053665599, t[13], C)

	C, t[13] = madd2(m, 18381890281880615828, t[14], C)

	C, t[14] = madd2(m, 2346860679127149877, t[15], C)

	C, t[15] = madd2(m, 7713876665391399680, t[16], C)

	C, t[16] = madd2(m, 16804552333605636830, t[17], C)

	C, t[17] = madd2(m, 16402045285100958250, t[18], C)

	C, t[18] = madd2(m, 18176937210785782677, t[19], C)

	C, t[19] = madd2(m, 15966221038481425824, t[20], C)

	C, t[20] = madd2(m, 6959743526085911234, t[21], C)

	C, t[21] = madd2(m, 12624744789978825023, t[22], C)

	C, t[22] = madd2(m, 7041736483744465896, t[23], C)

	C, t[23] = madd2(m, 552982698812971543, t[24], C)

	C, t[24] = madd2(m, 2684388112402793318, t[25], C)

	C, t[25] = madd3(m, 8611279412651616633, t[26], C, t[27])

	t[26], t[27] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[14], x[0], t[0])
	C, t[1] = madd2(y[14], x[1], t[1], C)
	C, t[2] = madd2(y[14], x[2], t[2], C)
	C, t[3] = madd2(y[14], x[3], t[3], C)
	C, t[4] = madd2(y[14], x[4], t[4], C)
	C, t[5] = madd2(y[14], x[5], t[5], C)
	C, t[6] = madd2(y[14], x[6], t[6], C)
	C, t[7] = madd2(y[14], x[7], t[7], C)
	C, t[8] = madd2(y[14], x[8], t[8], C)
	C, t[9] = madd2(y[14], x[9], t[9], C)
	C, t[10] = madd2(y[14], x[10], t[10], C)
	C, t[11] = madd2(y[14], x[11], t[11], C)
	C, t[12] = madd2(y[14], x[12], t[12], C)
	C, t[13] = madd2(y[14], x[13], t[13], C)
	C, t[14] = madd2(y[14], x[14], t[14], C)
	C, t[15] = madd2(y[14], x[15], t[15], C)
	C, t[16] = madd2(y[14], x[16], t[16], C)
	C, t[17] = madd2(y[14], x[17], t[17], C)
	C, t[18] = madd2(y[14], x[18], t[18], C)
	C, t[19] = madd2(y[14], x[19], t[19], C)
	C, t[20] = madd2(y[14], x[20], t[20], C)
	C, t[21] = madd2(y[14], x[21], t[21], C)
	C, t[22] = madd2(y[14], x[22], t[22], C)
	C, t[23] = madd2(y[14], x[23], t[23], C)
	C, t[24] = madd2(y[14], x[24], t[24], C)
	C, t[25] = madd2(y[14], x[25], t[25], C)
	C, t[26] = madd2(y[14], x[26], t[26], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6626265420794567181

	// -----------------------------------
	// Second loop
	C = madd0(m, 12440613579524619067, t[0])

	C, t[0] = madd2(m, 18006194176015342613, t[1], C)

	C, t[1] = madd2(m, 17457613988123037566, t[2], C)

	C, t[2] = madd2(m, 18368984800942220457, t[3], C)

	C, t[3] = madd2(m, 827738500950988109, t[4], C)

	C, t[4] = madd2(m, 10465983792485076748, t[5], C)

	C, t[5] = madd2(m, 13130147365989575090, t[6], C)

	C, t[6] = madd2(m, 15901529056822770985, t[7], C)

	C, t[7] = madd2(m, 13319898001022067246, t[8], C)

	C, t[8] = madd2(m, 12824488156229008848, t[9], C)

	C, t[9] = madd2(m, 9383015198101081139, t[10], C)

	C, t[10] = madd2(m, 10947642194440358220, t[11], C)

	C, t[11] = madd2(m, 14734856437812977659, t[12], C)

	C, t[12] = madd2(m, 9151126398053665599, t[13], C)

	C, t[13] = madd2(m, 18381890281880615828, t[14], C)

	C, t[14] = madd2(m, 2346860679127149877, t[15], C)

	C, t[15] = madd2(m, 7713876665391399680, t[16], C)

	C, t[16] = madd2(m, 16804552333605636830, t[17], C)

	C, t[17] = madd2(m, 16402045285100958250, t[18], C)

	C, t[18] = madd2(m, 18176937210785782677, t[19], C)

	C, t[19] = madd2(m, 15966221038481425824, t[20], C)

	C, t[20] = madd2(m, 6959743526085911234, t[21], C)

	C, t[21] = madd2(m, 12624744789978825023, t[22], C)

	C, t[22] = madd2(m, 7041736483744465896, t[23], C)

	C, t[23] = madd2(m, 552982698812971543, t[24], C)

	C, t[24] = madd2(m, 2684388112402793318, t[25], C)

	C, t[25] = madd3(m, 8611279412651616633, t[26], C, t[27])

	t[26], t[27] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[15], x[0], t[0])
	C, t[1] = madd2(y[15], x[1], t[1], C)
	C, t[2] = madd2(y[15], x[2], t[2], C)
	C, t[3] = madd2(y[15], x[3], t[3], C)
	C, t[4] = madd2(y[15], x[4], t[4], C)
	C, t[5] = madd2(y[15], x[5], t[5], C)
	C, t[6] = madd2(y[15], x[6], t[6], C)
	C, t[7] = madd2(y[15], x[7], t[7], C)
	C, t[8] = madd2(y[15], x[8], t[8], C)
	C, t[9] = madd2(y[15], x[9], t[9], C)
	C, t[10] = madd2(y[15], x[10], t[10], C)
	C, t[11] = madd2(y[15], x[11], t[11], C)
	C, t[12] = madd2(y[15], x[12], t[12], C)
	C, t[13] = madd2(y[15], x[13], t[13], C)
	C, t[14] = madd2(y[15], x[14], t[14], C)
	C, t[15] = madd2(y[15], x[15], t[15], C)
	C, t[16] = madd2(y[15], x[16], t[16], C)
	C, t[17] = madd2(y[15], x[17], t[17], C)
	C, t[18] = madd2(y[15], x[18], t[18], C)
	C, t[19] = madd2(y[15], x[19], t[19], C)
	C, t[20] = madd2(y[15], x[20], t[20], C)
	C, t[21] = madd2(y[15], x[21], t[21], C)
	C, t[22] = madd2(y[15], x[22], t[22], C)
	C, t[23] = madd2(y[15], x[23], t[23], C)
	C, t[24] = madd2(y[15], x[24], t[24], C)
	C, t[25] = madd2(y[15], x[25], t[25], C)
	C, t[26] = madd2(y[15], x[26], t[26], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6626265420794567181

	// -----------------------------------
	// Second loop
	C = madd0(m, 12440613579524619067, t[0])

	C, t[0] = madd2(m, 18006194176015342613, t[1], C)

	C, t[1] = madd2(m, 17457613988123037566, t[2], C)

	C, t[2] = madd2(m, 18368984800942220457, t[3], C)

	C, t[3] = madd2(m, 827738500950988109, t[4], C)

	C, t[4] = madd2(m, 10465983792485076748, t[5], C)

	C, t[5] = madd2(m, 13130147365989575090, t[6], C)

	C, t[6] = madd2(m, 15901529056822770985, t[7], C)

	C, t[7] = madd2(m, 13319898001022067246, t[8], C)

	C, t[8] = madd2(m, 12824488156229008848, t[9], C)

	C, t[9] = madd2(m, 9383015198101081139, t[10], C)

	C, t[10] = madd2(m, 10947642194440358220, t[11], C)

	C, t[11] = madd2(m, 14734856437812977659, t[12], C)

	C, t[12] = madd2(m, 9151126398053665599, t[13], C)

	C, t[13] = madd2(m, 18381890281880615828, t[14], C)

	C, t[14] = madd2(m, 2346860679127149877, t[15], C)

	C, t[15] = madd2(m, 7713876665391399680, t[16], C)

	C, t[16] = madd2(m, 16804552333605636830, t[17], C)

	C, t[17] = madd2(m, 16402045285100958250, t[18], C)

	C, t[18] = madd2(m, 18176937210785782677, t[19], C)

	C, t[19] = madd2(m, 15966221038481425824, t[20], C)

	C, t[20] = madd2(m, 6959743526085911234, t[21], C)

	C, t[21] = madd2(m, 12624744789978825023, t[22], C)

	C, t[22] = madd2(m, 7041736483744465896, t[23], C)

	C, t[23] = madd2(m, 552982698812971543, t[24], C)

	C, t[24] = madd2(m, 2684388112402793318, t[25], C)

	C, t[25] = madd3(m, 8611279412651616633, t[26], C, t[27])

	t[26], t[27] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[16], x[0], t[0])
	C, t[1] = madd2(y[16], x[1], t[1], C)
	C, t[2] = madd2(y[16], x[2], t[2], C)
	C, t[3] = madd2(y[16], x[3], t[3], C)
	C, t[4] = madd2(y[16], x[4], t[4], C)
	C, t[5] = madd2(y[16], x[5], t[5], C)
	C, t[6] = madd2(y[16], x[6], t[6], C)
	C, t[7] = madd2(y[16], x[7], t[7], C)
	C, t[8] = madd2(y[16], x[8], t[8], C)
	C, t[9] = madd2(y[16], x[9], t[9], C)
	C, t[10] = madd2(y[16], x[10], t[10], C)
	C, t[11] = madd2(y[16], x[11], t[11], C)
	C, t[12] = madd2(y[16], x[12], t[12], C)
	C, t[13] = madd2(y[16], x[13], t[13], C)
	C, t[14] = madd2(y[16], x[14], t[14], C)
	C, t[15] = madd2(y[16], x[15], t[15], C)
	C, t[16] = madd2(y[16], x[16], t[16], C)
	C, t[17] = madd2(y[16], x[17], t[17], C)
	C, t[18] = madd2(y[16], x[18], t[18], C)
	C, t[19] = madd2(y[16], x[19], t[19], C)
	C, t[20] = madd2(y[16], x[20], t[20], C)
	C, t[21] = madd2(y[16], x[21], t[21], C)
	C, t[22] = madd2(y[16], x[22], t[22], C)
	C, t[23] = madd2(y[16], x[23], t[23], C)
	C, t[24] = madd2(y[16], x[24], t[24], C)
	C, t[25] = madd2(y[16], x[25], t[25], C)
	C, t[26] = madd2(y[16], x[26], t[26], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6626265420794567181

	// -----------------------------------
	// Second loop
	C = madd0(m, 12440613579524619067, t[0])

	C, t[0] = madd2(m, 18006194176015342613, t[1], C)

	C, t[1] = madd2(m, 17457613988123037566, t[2], C)

	C, t[2] = madd2(m, 18368984800942220457, t[3], C)

	C, t[3] = madd2(m, 827738500950988109, t[4], C)

	C, t[4] = madd2(m, 10465983792485076748, t[5], C)

	C, t[5] = madd2(m, 13130147365989575090, t[6], C)

	C, t[6] = madd2(m, 15901529056822770985, t[7], C)

	C, t[7] = madd2(m, 13319898001022067246, t[8], C)

	C, t[8] = madd2(m, 12824488156229008848, t[9], C)

	C, t[9] = madd2(m, 9383015198101081139, t[10], C)

	C, t[10] = madd2(m, 10947642194440358220, t[11], C)

	C, t[11] = madd2(m, 14734856437812977659, t[12], C)

	C, t[12] = madd2(m, 9151126398053665599, t[13], C)

	C, t[13] = madd2(m, 18381890281880615828, t[14], C)

	C, t[14] = madd2(m, 2346860679127149877, t[15], C)

	C, t[15] = madd2(m, 7713876665391399680, t[16], C)

	C, t[16] = madd2(m, 16804552333605636830, t[17], C)

	C, t[17] = madd2(m, 16402045285100958250, t[18], C)

	C, t[18] = madd2(m, 18176937210785782677, t[19], C)

	C, t[19] = madd2(m, 15966221038481425824, t[20], C)

	C, t[20] = madd2(m, 6959743526085911234, t[21], C)

	C, t[21] = madd2(m, 12624744789978825023, t[22], C)

	C, t[22] = madd2(m, 7041736483744465896, t[23], C)

	C, t[23] = madd2(m, 552982698812971543, t[24], C)

	C, t[24] = madd2(m, 2684388112402793318, t[25], C)

	C, t[25] = madd3(m, 8611279412651616633, t[26], C, t[27])

	t[26], t[27] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[17], x[0], t[0])
	C, t[1] = madd2(y[17], x[1], t[1], C)
	C, t[2] = madd2(y[17], x[2], t[2], C)
	C, t[3] = madd2(y[17], x[3], t[3], C)
	C, t[4] = madd2(y[17], x[4], t[4], C)
	C, t[5] = madd2(y[17], x[5], t[5], C)
	C, t[6] = madd2(y[17], x[6], t[6], C)
	C, t[7] = madd2(y[17], x[7], t[7], C)
	C, t[8] = madd2(y[17], x[8], t[8], C)
	C, t[9] = madd2(y[17], x[9], t[9], C)
	C, t[10] = madd2(y[17], x[10], t[10], C)
	C, t[11] = madd2(y[17], x[11], t[11], C)
	C, t[12] = madd2(y[17], x[12], t[12], C)
	C, t[13] = madd2(y[17], x[13], t[13], C)
	C, t[14] = madd2(y[17], x[14], t[14], C)
	C, t[15] = madd2(y[17], x[15], t[15], C)
	C, t[16] = madd2(y[17], x[16], t[16], C)
	C, t[17] = madd2(y[17], x[17], t[17], C)
	C, t[18] = madd2(y[17], x[18], t[18], C)
	C, t[19] = madd2(y[17], x[19], t[19], C)
	C, t[20] = madd2(y[17], x[20], t[20], C)
	C, t[21] = madd2(y[17], x[21], t[21], C)
	C, t[22] = madd2(y[17], x[22], t[22], C)
	C, t[23] = madd2(y[17], x[23], t[23], C)
	C, t[24] = madd2(y[17], x[24], t[24], C)
	C, t[25] = madd2(y[17], x[25], t[25], C)
	C, t[26] = madd2(y[17], x[26], t[26], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6626265420794567181

	// -----------------------------------
	// Second loop
	C = madd0(m, 12440613579524619067, t[0])

	C, t[0] = madd2(m, 18006194176015342613, t[1], C)

	C, t[1] = madd2(m, 17457613988123037566, t[2], C)

	C, t[2] = madd2(m, 18368984800942220457, t[3], C)

	C, t[3] = madd2(m, 827738500950988109, t[4], C)

	C, t[4] = madd2(m, 10465983792485076748, t[5], C)

	C, t[5] = madd2(m, 13130147365989575090, t[6], C)

	C, t[6] = madd2(m, 15901529056822770985, t[7], C)

	C, t[7] = madd2(m, 13319898001022067246, t[8], C)

	C, t[8] = madd2(m, 12824488156229008848, t[9], C)

	C, t[9] = madd2(m, 9383015198101081139, t[10], C)

	C, t[10] = madd2(m, 10947642194440358220, t[11], C)

	C, t[11] = madd2(m, 14734856437812977659, t[12], C)

	C, t[12] = madd2(m, 9151126398053665599, t[13], C)

	C, t[13] = madd2(m, 18381890281880615828, t[14], C)

	C, t[14] = madd2(m, 2346860679127149877, t[15], C)

	C, t[15] = madd2(m, 7713876665391399680, t[16], C)

	C, t[16] = madd2(m, 16804552333605636830, t[17], C)

	C, t[17] = madd2(m, 16402045285100958250, t[18], C)

	C, t[18] = madd2(m, 18176937210785782677, t[19], C)

	C, t[19] = madd2(m, 15966221038481425824, t[20], C)

	C, t[20] = madd2(m, 6959743526085911234, t[21], C)

	C, t[21] = madd2(m, 12624744789978825023, t[22], C)

	C, t[22] = madd2(m, 7041736483744465896, t[23], C)

	C, t[23] = madd2(m, 552982698812971543, t[24], C)

	C, t[24] = madd2(m, 2684388112402793318, t[25], C)

	C, t[25] = madd3(m, 8611279412651616633, t[26], C, t[27])

	t[26], t[27] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[18], x[0], t[0])
	C, t[1] = madd2(y[18], x[1], t[1], C)
	C, t[2] = madd2(y[18], x[2], t[2], C)
	C, t[3] = madd2(y[18], x[3], t[3], C)
	C, t[4] = madd2(y[18], x[4], t[4], C)
	C, t[5] = madd2(y[18], x[5], t[5], C)
	C, t[6] = madd2(y[18], x[6], t[6], C)
	C, t[7] = madd2(y[18], x[7], t[7], C)
	C, t[8] = madd2(y[18], x[8], t[8], C)
	C, t[9] = madd2(y[18], x[9], t[9], C)
	C, t[10] = madd2(y[18], x[10], t[10], C)
	C, t[11] = madd2(y[18], x[11], t[11], C)
	C, t[12] = madd2(y[18], x[12], t[12], C)
	C, t[13] = madd2(y[18], x[13], t[13], C)
	C, t[14] = madd2(y[18], x[14], t[14], C)
	C, t[15] = madd2(y[18], x[15], t[15], C)
	C, t[16] = madd2(y[18], x[16], t[16], C)
	C, t[17] = madd2(y[18], x[17], t[17], C)
	C, t[18] = madd2(y[18], x[18], t[18], C)
	C, t[19] = madd2(y[18], x[19], t[19], C)
	C, t[20] = madd2(y[18], x[20], t[20], C)
	C, t[21] = madd2(y[18], x[21], t[21], C)
	C, t[22] = madd2(y[18], x[22], t[22], C)
	C, t[23] = madd2(y[18], x[23], t[23], C)
	C, t[24] = madd2(y[18], x[24], t[24], C)
	C, t[25] = madd2(y[18], x[25], t[25], C)
	C, t[26] = madd2(y[18], x[26], t[26], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6626265420794567181

	// -----------------------------------
	// Second loop
	C = madd0(m, 12440613579524619067, t[0])

	C, t[0] = madd2(m, 18006194176015342613, t[1], C)

	C, t[1] = madd2(m, 17457613988123037566, t[2], C)

	C, t[2] = madd2(m, 18368984800942220457, t[3], C)

	C, t[3] = madd2(m, 827738500950988109, t[4], C)

	C, t[4] = madd2(m, 10465983792485076748, t[5], C)

	C, t[5] = madd2(m, 13130147365989575090, t[6], C)

	C, t[6] = madd2(m, 15901529056822770985, t[7], C)

	C, t[7] = madd2(m, 13319898001022067246, t[8], C)

	C, t[8] = madd2(m, 12824488156229008848, t[9], C)

	C, t[9] = madd2(m, 9383015198101081139, t[10], C)

	C, t[10] = madd2(m, 10947642194440358220, t[11], C)

	C, t[11] = madd2(m, 14734856437812977659, t[12], C)

	C, t[12] = madd2(m, 9151126398053665599, t[13], C)

	C, t[13] = madd2(m, 18381890281880615828, t[14], C)

	C, t[14] = madd2(m, 2346860679127149877, t[15], C)

	C, t[15] = madd2(m, 7713876665391399680, t[16], C)

	C, t[16] = madd2(m, 16804552333605636830, t[17], C)

	C, t[17] = madd2(m, 16402045285100958250, t[18], C)

	C, t[18] = madd2(m, 18176937210785782677, t[19], C)

	C, t[19] = madd2(m, 15966221038481425824, t[20], C)

	C, t[20] = madd2(m, 6959743526085911234, t[21], C)

	C, t[21] = madd2(m, 12624744789978825023, t[22], C)

	C, t[22] = madd2(m, 7041736483744465896, t[23], C)

	C, t[23] = madd2(m, 552982698812971543, t[24], C)

	C, t[24] = madd2(m, 2684388112402793318, t[25], C)

	C, t[25] = madd3(m, 8611279412651616633, t[26], C, t[27])

	t[26], t[27] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[19], x[0], t[0])
	C, t[1] = madd2(y[19], x[1], t[1], C)
	C, t[2] = madd2(y[19], x[2], t[2], C)
	C, t[3] = madd2(y[19], x[3], t[3], C)
	C, t[4] = madd2(y[19], x[4], t[4], C)
	C, t[5] = madd2(y[19], x[5], t[5], C)
	C, t[6] = madd2(y[19], x[6], t[6], C)
	C, t[7] = madd2(y[19], x[7], t[7], C)
	C, t[8] = madd2(y[19], x[8], t[8], C)
	C, t[9] = madd2(y[19], x[9], t[9], C)
	C, t[10] = madd2(y[19], x[10], t[10], C)
	C, t[11] = madd2(y[19], x[11], t[11], C)
	C, t[12] = madd2(y[19], x[12], t[12], C)
	C, t[13] = madd2(y[19], x[13], t[13], C)
	C, t[14] = madd2(y[19], x[14], t[14], C)
	C, t[15] = madd2(y[19], x[15], t[15], C)
	C, t[16] = madd2(y[19], x[16], t[16], C)
	C, t[17] = madd2(y[19], x[17], t[17], C)
	C, t[18] = madd2(y[19], x[18], t[18], C)
	C, t[19] = madd2(y[19], x[19], t[19], C)
	C, t[20] = madd2(y[19], x[20], t[20], C)
	C, t[21] = madd2(y[19], x[21], t[21], C)
	C, t[22] = madd2(y[19], x[22], t[22], C)
	C, t[23] = madd2(y[19], x[23], t[23], C)
	C, t[24] = madd2(y[19], x[24], t[24], C)
	C, t[25] = madd2(y[19], x[25], t[25], C)
	C, t[26] = madd2(y[19], x[26], t[26], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6626265420794567181

	// -----------------------------------
	// Second loop
	C = madd0(m, 12440613579524619067, t[0])

	C, t[0] = madd2(m, 18006194176015342613, t[1], C)

	C, t[1] = madd2(m, 17457613988123037566, t[2], C)

	C, t[2] = madd2(m, 18368984800942220457, t[3], C)

	C, t[3] = madd2(m, 827738500950988109, t[4], C)

	C, t[4] = madd2(m, 10465983792485076748, t[5], C)

	C, t[5] = madd2(m, 13130147365989575090, t[6], C)

	C, t[6] = madd2(m, 15901529056822770985, t[7], C)

	C, t[7] = madd2(m, 13319898001022067246, t[8], C)

	C, t[8] = madd2(m, 12824488156229008848, t[9], C)

	C, t[9] = madd2(m, 9383015198101081139, t[10], C)

	C, t[10] = madd2(m, 10947642194440358220, t[11], C)

	C, t[11] = madd2(m, 14734856437812977659, t[12], C)

	C, t[12] = madd2(m, 9151126398053665599, t[13], C)

	C, t[13] = madd2(m, 18381890281880615828, t[14], C)

	C, t[14] = madd2(m, 2346860679127149877, t[15], C)

	C, t[15] = madd2(m, 7713876665391399680, t[16], C)

	C, t[16] = madd2(m, 16804552333605636830, t[17], C)

	C, t[17] = madd2(m, 16402045285100958250, t[18], C)

	C, t[18] = madd2(m, 18176937210785782677, t[19], C)

	C, t[19] = madd2(m, 15966221038481425824, t[20], C)

	C, t[20] = madd2(m, 6959743526085911234, t[21], C)

	C, t[21] = madd2(m, 12624744789978825023, t[22], C)

	C, t[22] = madd2(m, 7041736483744465896, t[23], C)

	C, t[23] = madd2(m, 552982698812971543, t[24], C)

	C, t[24] = madd2(m, 2684388112402793318, t[25], C)

	C, t[25] = madd3(m, 8611279412651616633, t[26], C, t[27])

	t[26], t[27] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[20], x[0], t[0])
	C, t[1] = madd2(y[20], x[1], t[1], C)
	C, t[2] = madd2(y[20], x[2], t[2], C)
	C, t[3] = madd2(y[20], x[3], t[3], C)
	C, t[4] = madd2(y[20], x[4], t[4], C)
	C, t[5] = madd2(y[20], x[5], t[5], C)
	C, t[6] = madd2(y[20], x[6], t[6], C)
	C, t[7] = madd2(y[20], x[7], t[7], C)
	C, t[8] = madd2(y[20], x[8], t[8], C)
	C, t[9] = madd2(y[20], x[9], t[9], C)
	C, t[10] = madd2(y[20], x[10], t[10], C)
	C, t[11] = madd2(y[20], x[11], t[11], C)
	C, t[12] = madd2(y[20], x[12], t[12], C)
	C, t[13] = madd2(y[20], x[13], t[13], C)
	C, t[14] = madd2(y[20], x[14], t[14], C)
	C, t[15] = madd2(y[20], x[15], t[15], C)
	C, t[16] = madd2(y[20], x[16], t[16], C)
	C, t[17] = madd2(y[20], x[17], t[17], C)
	C, t[18] = madd2(y[20], x[18], t[18], C)
	C, t[19] = madd2(y[20], x[19], t[19], C)
	C, t[20] = madd2(y[20], x[20], t[20], C)
	C, t[21] = madd2(y[20], x[21], t[21], C)
	C, t[22] = madd2(y[20], x[22], t[22], C)
	C, t[23] = madd2(y[20], x[23], t[23], C)
	C, t[24] = madd2(y[20], x[24], t[24], C)
	C, t[25] = madd2(y[20], x[25], t[25], C)
	C, t[26] = madd2(y[20], x[26], t[26], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6626265420794567181

	// -----------------------------------
	// Second loop
	C = madd0(m, 12440613579524619067, t[0])

	C, t[0] = madd2(m, 18006194176015342613, t[1], C)

	C, t[1] = madd2(m, 17457613988123037566, t[2], C)

	C, t[2] = madd2(m, 18368984800942220457, t[3], C)

	C, t[3] = madd2(m, 827738500950988109, t[4], C)

	C, t[4] = madd2(m, 10465983792485076748, t[5], C)

	C, t[5] = madd2(m, 13130147365989575090, t[6], C)

	C, t[6] = madd2(m, 15901529056822770985, t[7], C)

	C, t[7] = madd2(m, 13319898001022067246, t[8], C)

	C, t[8] = madd2(m, 12824488156229008848, t[9], C)

	C, t[9] = madd2(m, 9383015198101081139, t[10], C)

	C, t[10] = madd2(m, 10947642194440358220, t[11], C)

	C, t[11] = madd2(m, 14734856437812977659, t[12], C)

	C, t[12] = madd2(m, 9151126398053665599, t[13], C)

	C, t[13] = madd2(m, 18381890281880615828, t[14], C)

	C, t[14] = madd2(m, 2346860679127149877, t[15], C)

	C, t[15] = madd2(m, 7713876665391399680, t[16], C)

	C, t[16] = madd2(m, 16804552333605636830, t[17], C)

	C, t[17] = madd2(m, 16402045285100958250, t[18], C)

	C, t[18] = madd2(m, 18176937210785782677, t[19], C)

	C, t[19] = madd2(m, 15966221038481425824, t[20], C)

	C, t[20] = madd2(m, 6959743526085911234, t[21], C)

	C, t[21] = madd2(m, 12624744789978825023, t[22], C)

	C, t[22] = madd2(m, 7041736483744465896, t[23], C)

	C, t[23] = madd2(m, 552982698812971543, t[24], C)

	C, t[24] = madd2(m, 2684388112402793318, t[25], C)

	C, t[25] = madd3(m, 8611279412651616633, t[26], C, t[27])

	t[26], t[27] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[21], x[0], t[0])
	C, t[1] = madd2(y[21], x[1], t[1], C)
	C, t[2] = madd2(y[21], x[2], t[2], C)
	C, t[3] = madd2(y[21], x[3], t[3], C)
	C, t[4] = madd2(y[21], x[4], t[4], C)
	C, t[5] = madd2(y[21], x[5], t[5], C)
	C, t[6] = madd2(y[21], x[6], t[6], C)
	C, t[7] = madd2(y[21], x[7], t[7], C)
	C, t[8] = madd2(y[21], x[8], t[8], C)
	C, t[9] = madd2(y[21], x[9], t[9], C)
	C, t[10] = madd2(y[21], x[10], t[10], C)
	C, t[11] = madd2(y[21], x[11], t[11], C)
	C, t[12] = madd2(y[21], x[12], t[12], C)
	C, t[13] = madd2(y[21], x[13], t[13], C)
	C, t[14] = madd2(y[21], x[14], t[14], C)
	C, t[15] = madd2(y[21], x[15], t[15], C)
	C, t[16] = madd2(y[21], x[16], t[16], C)
	C, t[17] = madd2(y[21], x[17], t[17], C)
	C, t[18] = madd2(y[21], x[18], t[18], C)
	C, t[19] = madd2(y[21], x[19], t[19], C)
	C, t[20] = madd2(y[21], x[20], t[20], C)
	C, t[21] = madd2(y[21], x[21], t[21], C)
	C, t[22] = madd2(y[21], x[22], t[22], C)
	C, t[23] = madd2(y[21], x[23], t[23], C)
	C, t[24] = madd2(y[21], x[24], t[24], C)
	C, t[25] = madd2(y[21], x[25], t[25], C)
	C, t[26] = madd2(y[21], x[26], t[26], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6626265420794567181

	// -----------------------------------
	// Second loop
	C = madd0(m, 12440613579524619067, t[0])

	C, t[0] = madd2(m, 18006194176015342613, t[1], C)

	C, t[1] = madd2(m, 17457613988123037566, t[2], C)

	C, t[2] = madd2(m, 18368984800942220457, t[3], C)

	C, t[3] = madd2(m, 827738500950988109, t[4], C)

	C, t[4] = madd2(m, 10465983792485076748, t[5], C)

	C, t[5] = madd2(m, 13130147365989575090, t[6], C)

	C, t[6] = madd2(m, 15901529056822770985, t[7], C)

	C, t[7] = madd2(m, 13319898001022067246, t[8], C)

	C, t[8] = madd2(m, 12824488156229008848, t[9], C)

	C, t[9] = madd2(m, 9383015198101081139, t[10], C)

	C, t[10] = madd2(m, 10947642194440358220, t[11], C)

	C, t[11] = madd2(m, 14734856437812977659, t[12], C)

	C, t[12] = madd2(m, 9151126398053665599, t[13], C)

	C, t[13] = madd2(m, 18381890281880615828, t[14], C)

	C, t[14] = madd2(m, 2346860679127149877, t[15], C)

	C, t[15] = madd2(m, 7713876665391399680, t[16], C)

	C, t[16] = madd2(m, 16804552333605636830, t[17], C)

	C, t[17] = madd2(m, 16402045285100958250, t[18], C)

	C, t[18] = madd2(m, 18176937210785782677, t[19], C)

	C, t[19] = madd2(m, 15966221038481425824, t[20], C)

	C, t[20] = madd2(m, 6959743526085911234, t[21], C)

	C, t[21] = madd2(m, 12624744789978825023, t[22], C)

	C, t[22] = madd2(m, 7041736483744465896, t[23], C)

	C, t[23] = madd2(m, 552982698812971543, t[24], C)

	C, t[24] = madd2(m, 2684388112402793318, t[25], C)

	C, t[25] = madd3(m, 8611279412651616633, t[26], C, t[27])

	t[26], t[27] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[22], x[0], t[0])
	C, t[1] = madd2(y[22], x[1], t[1], C)
	C, t[2] = madd2(y[22], x[2], t[2], C)
	C, t[3] = madd2(y[22], x[3], t[3], C)
	C, t[4] = madd2(y[22], x[4], t[4], C)
	C, t[5] = madd2(y[22], x[5], t[5], C)
	C, t[6] = madd2(y[22], x[6], t[6], C)
	C, t[7] = madd2(y[22], x[7], t[7], C)
	C, t[8] = madd2(y[22], x[8], t[8], C)
	C, t[9] = madd2(y[22], x[9], t[9], C)
	C, t[10] = madd2(y[22], x[10], t[10], C)
	C, t[11] = madd2(y[22], x[11], t[11], C)
	C, t[12] = madd2(y[22], x[12], t[12], C)
	C, t[13] = madd2(y[22], x[13], t[13], C)
	C, t[14] = madd2(y[22], x[14], t[14], C)
	C, t[15] = madd2(y[22], x[15], t[15], C)
	C, t[16] = madd2(y[22], x[16], t[16], C)
	C, t[17] = madd2(y[22], x[17], t[17], C)
	C, t[18] = madd2(y[22], x[18], t[18], C)
	C, t[19] = madd2(y[22], x[19], t[19], C)
	C, t[20] = madd2(y[22], x[20], t[20], C)
	C, t[21] = madd2(y[22], x[21], t[21], C)
	C, t[22] = madd2(y[22], x[22], t[22], C)
	C, t[23] = madd2(y[22], x[23], t[23], C)
	C, t[24] = madd2(y[22], x[24], t[24], C)
	C, t[25] = madd2(y[22], x[25], t[25], C)
	C, t[26] = madd2(y[22], x[26], t[26], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6626265420794567181

	// -----------------------------------
	// Second loop
	C = madd0(m, 12440613579524619067, t[0])

	C, t[0] = madd2(m, 18006194176015342613, t[1], C)

	C, t[1] = madd2(m, 17457613988123037566, t[2], C)

	C, t[2] = madd2(m, 18368984800942220457, t[3], C)

	C, t[3] = madd2(m, 827738500950988109, t[4], C)

	C, t[4] = madd2(m, 10465983792485076748, t[5], C)

	C, t[5] = madd2(m, 13130147365989575090, t[6], C)

	C, t[6] = madd2(m, 15901529056822770985, t[7], C)

	C, t[7] = madd2(m, 13319898001022067246, t[8], C)

	C, t[8] = madd2(m, 12824488156229008848, t[9], C)

	C, t[9] = madd2(m, 9383015198101081139, t[10], C)

	C, t[10] = madd2(m, 10947642194440358220, t[11], C)

	C, t[11] = madd2(m, 14734856437812977659, t[12], C)

	C, t[12] = madd2(m, 9151126398053665599, t[13], C)

	C, t[13] = madd2(m, 18381890281880615828, t[14], C)

	C, t[14] = madd2(m, 2346860679127149877, t[15], C)

	C, t[15] = madd2(m, 7713876665391399680, t[16], C)

	C, t[16] = madd2(m, 16804552333605636830, t[17], C)

	C, t[17] = madd2(m, 16402045285100958250, t[18], C)

	C, t[18] = madd2(m, 18176937210785782677, t[19], C)

	C, t[19] = madd2(m, 15966221038481425824, t[20], C)

	C, t[20] = madd2(m, 6959743526085911234, t[21], C)

	C, t[21] = madd2(m, 12624744789978825023, t[22], C)

	C, t[22] = madd2(m, 7041736483744465896, t[23], C)

	C, t[23] = madd2(m, 552982698812971543, t[24], C)

	C, t[24] = madd2(m, 2684388112402793318, t[25], C)

	C, t[25] = madd3(m, 8611279412651616633, t[26], C, t[27])

	t[26], t[27] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[23], x[0], t[0])
	C, t[1] = madd2(y[23], x[1], t[1], C)
	C, t[2] = madd2(y[23], x[2], t[2], C)
	C, t[3] = madd2(y[23], x[3], t[3], C)
	C, t[4] = madd2(y[23], x[4], t[4], C)
	C, t[5] = madd2(y[23], x[5], t[5], C)
	C, t[6] = madd2(y[23], x[6], t[6], C)
	C, t[7] = madd2(y[23], x[7], t[7], C)
	C, t[8] = madd2(y[23], x[8], t[8], C)
	C, t[9] = madd2(y[23], x[9], t[9], C)
	C, t[10] = madd2(y[23], x[10], t[10], C)
	C, t[11] = madd2(y[23], x[11], t[11], C)
	C, t[12] = madd2(y[23], x[12], t[12], C)
	C, t[13] = madd2(y[23], x[13], t[13], C)
	C, t[14] = madd2(y[23], x[14], t[14], C)
	C, t[15] = madd2(y[23], x[15], t[15], C)
	C, t[16] = madd2(y[23], x[16], t[16], C)
	C, t[17] = madd2(y[23], x[17], t[17], C)
	C, t[18] = madd2(y[23], x[18], t[18], C)
	C, t[19] = madd2(y[23], x[19], t[19], C)
	C, t[20] = madd2(y[23], x[20], t[20], C)
	C, t[21] = madd2(y[23], x[21], t[21], C)
	C, t[22] = madd2(y[23], x[22], t[22], C)
	C, t[23] = madd2(y[23], x[23], t[23], C)
	C, t[24] = madd2(y[23], x[24], t[24], C)
	C, t[25] = madd2(y[23], x[25], t[25], C)
	C, t[26] = madd2(y[23], x[26], t[26], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6626265420794567181

	// -----------------------------------
	// Second loop
	C = madd0(m, 12440613579524619067, t[0])

	C, t[0] = madd2(m, 18006194176015342613, t[1], C)

	C, t[1] = madd2(m, 17457613988123037566, t[2], C)

	C, t[2] = madd2(m, 18368984800942220457, t[3], C)

	C, t[3] = madd2(m, 827738500950988109, t[4], C)

	C, t[4] = madd2(m, 10465983792485076748, t[5], C)

	C, t[5] = madd2(m, 13130147365989575090, t[6], C)

	C, t[6] = madd2(m, 15901529056822770985, t[7], C)

	C, t[7] = madd2(m, 13319898001022067246, t[8], C)

	C, t[8] = madd2(m, 12824488156229008848, t[9], C)

	C, t[9] = madd2(m, 9383015198101081139, t[10], C)

	C, t[10] = madd2(m, 10947642194440358220, t[11], C)

	C, t[11] = madd2(m, 14734856437812977659, t[12], C)

	C, t[12] = madd2(m, 9151126398053665599, t[13], C)

	C, t[13] = madd2(m, 18381890281880615828, t[14], C)

	C, t[14] = madd2(m, 2346860679127149877, t[15], C)

	C, t[15] = madd2(m, 7713876665391399680, t[16], C)

	C, t[16] = madd2(m, 16804552333605636830, t[17], C)

	C, t[17] = madd2(m, 16402045285100958250, t[18], C)

	C, t[18] = madd2(m, 18176937210785782677, t[19], C)

	C, t[19] = madd2(m, 15966221038481425824, t[20], C)

	C, t[20] = madd2(m, 6959743526085911234, t[21], C)

	C, t[21] = madd2(m, 12624744789978825023, t[22], C)

	C, t[22] = madd2(m, 7041736483744465896, t[23], C)

	C, t[23] = madd2(m, 552982698812971543, t[24], C)

	C, t[24] = madd2(m, 2684388112402793318, t[25], C)

	C, t[25] = madd3(m, 8611279412651616633, t[26], C, t[27])

	t[26], t[27] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[24], x[0], t[0])
	C, t[1] = madd2(y[24], x[1], t[1], C)
	C, t[2] = madd2(y[24], x[2], t[2], C)
	C, t[3] = madd2(y[24], x[3], t[3], C)
	C, t[4] = madd2(y[24], x[4], t[4], C)
	C, t[5] = madd2(y[24], x[5], t[5], C)
	C, t[6] = madd2(y[24], x[6], t[6], C)
	C, t[7] = madd2(y[24], x[7], t[7], C)
	C, t[8] = madd2(y[24], x[8], t[8], C)
	C, t[9] = madd2(y[24], x[9], t[9], C)
	C, t[10] = madd2(y[24], x[10], t[10], C)
	C, t[11] = madd2(y[24], x[11], t[11], C)
	C, t[12] = madd2(y[24], x[12], t[12], C)
	C, t[13] = madd2(y[24], x[13], t[13], C)
	C, t[14] = madd2(y[24], x[14], t[14], C)
	C, t[15] = madd2(y[24], x[15], t[15], C)
	C, t[16] = madd2(y[24], x[16], t[16], C)
	C, t[17] = madd2(y[24], x[17], t[17], C)
	C, t[18] = madd2(y[24], x[18], t[18], C)
	C, t[19] = madd2(y[24], x[19], t[19], C)
	C, t[20] = madd2(y[24], x[20], t[20], C)
	C, t[21] = madd2(y[24], x[21], t[21], C)
	C, t[22] = madd2(y[24], x[22], t[22], C)
	C, t[23] = madd2(y[24], x[23], t[23], C)
	C, t[24] = madd2(y[24], x[24], t[24], C)
	C, t[25] = madd2(y[24], x[25], t[25], C)
	C, t[26] = madd2(y[24], x[26], t[26], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6626265420794567181

	// -----------------------------------
	// Second loop
	C = madd0(m, 12440613579524619067, t[0])

	C, t[0] = madd2(m, 18006194176015342613, t[1], C)

	C, t[1] = madd2(m, 17457613988123037566, t[2], C)

	C, t[2] = madd2(m, 18368984800942220457, t[3], C)

	C, t[3] = madd2(m, 827738500950988109, t[4], C)

	C, t[4] = madd2(m, 10465983792485076748, t[5], C)

	C, t[5] = madd2(m, 13130147365989575090, t[6], C)

	C, t[6] = madd2(m, 15901529056822770985, t[7], C)

	C, t[7] = madd2(m, 13319898001022067246, t[8], C)

	C, t[8] = madd2(m, 12824488156229008848, t[9], C)

	C, t[9] = madd2(m, 9383015198101081139, t[10], C)

	C, t[10] = madd2(m, 10947642194440358220, t[11], C)

	C, t[11] = madd2(m, 14734856437812977659, t[12], C)

	C, t[12] = madd2(m, 9151126398053665599, t[13], C)

	C, t[13] = madd2(m, 18381890281880615828, t[14], C)

	C, t[14] = madd2(m, 2346860679127149877, t[15], C)

	C, t[15] = madd2(m, 7713876665391399680, t[16], C)

	C, t[16] = madd2(m, 16804552333605636830, t[17], C)

	C, t[17] = madd2(m, 16402045285100958250, t[18], C)

	C, t[18] = madd2(m, 18176937210785782677, t[19], C)

	C, t[19] = madd2(m, 15966221038481425824, t[20], C)

	C, t[20] = madd2(m, 6959743526085911234, t[21], C)

	C, t[21] = madd2(m, 12624744789978825023, t[22], C)

	C, t[22] = madd2(m, 7041736483744465896, t[23], C)

	C, t[23] = madd2(m, 552982698812971543, t[24], C)

	C, t[24] = madd2(m, 2684388112402793318, t[25], C)

	C, t[25] = madd3(m, 8611279412651616633, t[26], C, t[27])

	t[26], t[27] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[25], x[0], t[0])
	C, t[1] = madd2(y[25], x[1], t[1], C)
	C, t[2] = madd2(y[25], x[2], t[2], C)
	C, t[3] = madd2(y[25], x[3], t[3], C)
	C, t[4] = madd2(y[25], x[4], t[4], C)
	C, t[5] = madd2(y[25], x[5], t[5], C)
	C, t[6] = madd2(y[25], x[6], t[6], C)
	C, t[7] = madd2(y[25], x[7], t[7], C)
	C, t[8] = madd2(y[25], x[8], t[8], C)
	C, t[9] = madd2(y[25], x[9], t[9], C)
	C, t[10] = madd2(y[25], x[10], t[10], C)
	C, t[11] = madd2(y[25], x[11], t[11], C)
	C, t[12] = madd2(y[25], x[12], t[12], C)
	C, t[13] = madd2(y[25], x[13], t[13], C)
	C, t[14] = madd2(y[25], x[14], t[14], C)
	C, t[15] = madd2(y[25], x[15], t[15], C)
	C, t[16] = madd2(y[25], x[16], t[16], C)
	C, t[17] = madd2(y[25], x[17], t[17], C)
	C, t[18] = madd2(y[25], x[18], t[18], C)
	C, t[19] = madd2(y[25], x[19], t[19], C)
	C, t[20] = madd2(y[25], x[20], t[20], C)
	C, t[21] = madd2(y[25], x[21], t[21], C)
	C, t[22] = madd2(y[25], x[22], t[22], C)
	C, t[23] = madd2(y[25], x[23], t[23], C)
	C, t[24] = madd2(y[25], x[24], t[24], C)
	C, t[25] = madd2(y[25], x[25], t[25], C)
	C, t[26] = madd2(y[25], x[26], t[26], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6626265420794567181

	// -----------------------------------
	// Second loop
	C = madd0(m, 12440613579524619067, t[0])

	C, t[0] = madd2(m, 18006194176015342613, t[1], C)

	C, t[1] = madd2(m, 17457613988123037566, t[2], C)

	C, t[2] = madd2(m, 18368984800942220457, t[3], C)

	C, t[3] = madd2(m, 827738500950988109, t[4], C)

	C, t[4] = madd2(m, 10465983792485076748, t[5], C)

	C, t[5] = madd2(m, 13130147365989575090, t[6], C)

	C, t[6] = madd2(m, 15901529056822770985, t[7], C)

	C, t[7] = madd2(m, 13319898001022067246, t[8], C)

	C, t[8] = madd2(m, 12824488156229008848, t[9], C)

	C, t[9] = madd2(m, 9383015198101081139, t[10], C)

	C, t[10] = madd2(m, 10947642194440358220, t[11], C)

	C, t[11] = madd2(m, 14734856437812977659, t[12], C)

	C, t[12] = madd2(m, 9151126398053665599, t[13], C)

	C, t[13] = madd2(m, 18381890281880615828, t[14], C)

	C, t[14] = madd2(m, 2346860679127149877, t[15], C)

	C, t[15] = madd2(m, 7713876665391399680, t[16], C)

	C, t[16] = madd2(m, 16804552333605636830, t[17], C)

	C, t[17] = madd2(m, 16402045285100958250, t[18], C)

	C, t[18] = madd2(m, 18176937210785782677, t[19], C)

	C, t[19] = madd2(m, 15966221038481425824, t[20], C)

	C, t[20] = madd2(m, 6959743526085911234, t[21], C)

	C, t[21] = madd2(m, 12624744789978825023, t[22], C)

	C, t[22] = madd2(m, 7041736483744465896, t[23], C)

	C, t[23] = madd2(m, 552982698812971543, t[24], C)

	C, t[24] = madd2(m, 2684388112402793318, t[25], C)

	C, t[25] = madd3(m, 8611279412651616633, t[26], C, t[27])

	t[26], t[27] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[26], x[0], t[0])
	C, t[1] = madd2(y[26], x[1], t[1], C)
	C, t[2] = madd2(y[26], x[2], t[2], C)
	C, t[3] = madd2(y[26], x[3], t[3], C)
	C, t[4] = madd2(y[26], x[4], t[4], C)
	C, t[5] = madd2(y[26], x[5], t[5], C)
	C, t[6] = madd2(y[26], x[6], t[6], C)
	C, t[7] = madd2(y[26], x[7], t[7], C)
	C, t[8] = madd2(y[26], x[8], t[8], C)
	C, t[9] = madd2(y[26], x[9], t[9], C)
	C, t[10] = madd2(y[26], x[10], t[10], C)
	C, t[11] = madd2(y[26], x[11], t[11], C)
	C, t[12] = madd2(y[26], x[12], t[12], C)
	C, t[13] = madd2(y[26], x[13], t[13], C)
	C, t[14] = madd2(y[26], x[14], t[14], C)
	C, t[15] = madd2(y[26], x[15], t[15], C)
	C, t[16] = madd2(y[26], x[16], t[16], C)
	C, t[17] = madd2(y[26], x[17], t[17], C)
	C, t[18] = madd2(y[26], x[18], t[18], C)
	C, t[19] = madd2(y[26], x[19], t[19], C)
	C, t[20] = madd2(y[26], x[20], t[20], C)
	C, t[21] = madd2(y[26], x[21], t[21], C)
	C, t[22] = madd2(y[26], x[22], t[22], C)
	C, t[23] = madd2(y[26], x[23], t[23], C)
	C, t[24] = madd2(y[26], x[24], t[24], C)
	C, t[25] = madd2(y[26], x[25], t[25], C)
	C, t[26] = madd2(y[26], x[26], t[26], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6626265420794567181

	// -----------------------------------
	// Second loop
	C = madd0(m, 12440613579524619067, t[0])

	C, t[0] = madd2(m, 18006194176015342613, t[1], C)

	C, t[1] = madd2(m, 17457613988123037566, t[2], C)

	C, t[2] = madd2(m, 18368984800942220457, t[3], C)

	C, t[3] = madd2(m, 827738500950988109, t[4], C)

	C, t[4] = madd2(m, 10465983792485076748, t[5], C)

	C, t[5] = madd2(m, 13130147365989575090, t[6], C)

	C, t[6] = madd2(m, 15901529056822770985, t[7], C)

	C, t[7] = madd2(m, 13319898001022067246, t[8], C)

	C, t[8] = madd2(m, 12824488156229008848, t[9], C)

	C, t[9] = madd2(m, 9383015198101081139, t[10], C)

	C, t[10] = madd2(m, 10947642194440358220, t[11], C)

	C, t[11] = madd2(m, 14734856437812977659, t[12], C)

	C, t[12] = madd2(m, 9151126398053665599, t[13], C)

	C, t[13] = madd2(m, 18381890281880615828, t[14], C)

	C, t[14] = madd2(m, 2346860679127149877, t[15], C)

	C, t[15] = madd2(m, 7713876665391399680, t[16], C)

	C, t[16] = madd2(m, 16804552333605636830, t[17], C)

	C, t[17] = madd2(m, 16402045285100958250, t[18], C)

	C, t[18] = madd2(m, 18176937210785782677, t[19], C)

	C, t[19] = madd2(m, 15966221038481425824, t[20], C)

	C, t[20] = madd2(m, 6959743526085911234, t[21], C)

	C, t[21] = madd2(m, 12624744789978825023, t[22], C)

	C, t[22] = madd2(m, 7041736483744465896, t[23], C)

	C, t[23] = madd2(m, 552982698812971543, t[24], C)

	C, t[24] = madd2(m, 2684388112402793318, t[25], C)

	C, t[25] = madd3(m, 8611279412651616633, t[26], C, t[27])

	t[26], t[27] = bits.Add64(D, C, 0)

	if t[27] != 0 {
		// we need to reduce, we have a result on 28 words
		var b uint64
		z[0], b = bits.Sub64(t[0], 12440613579524619067, 0)
		z[1], b = bits.Sub64(t[1], 18006194176015342613, b)
		z[2], b = bits.Sub64(t[2], 17457613988123037566, b)
		z[3], b = bits.Sub64(t[3], 18368984800942220457, b)
		z[4], b = bits.Sub64(t[4], 827738500950988109, b)
		z[5], b = bits.Sub64(t[5], 10465983792485076748, b)
		z[6], b = bits.Sub64(t[6], 13130147365989575090, b)
		z[7], b = bits.Sub64(t[7], 15901529056822770985, b)
		z[8], b = bits.Sub64(t[8], 13319898001022067246, b)
		z[9], b = bits.Sub64(t[9], 12824488156229008848, b)
		z[10], b = bits.Sub64(t[10], 9383015198101081139, b)
		z[11], b = bits.Sub64(t[11], 10947642194440358220, b)
		z[12], b = bits.Sub64(t[12], 14734856437812977659, b)
		z[13], b = bits.Sub64(t[13], 9151126398053665599, b)
		z[14], b = bits.Sub64(t[14], 18381890281880615828, b)
		z[15], b = bits.Sub64(t[15], 2346860679127149877, b)
		z[16], b = bits.Sub64(t[16], 7713876665391399680, b)
		z[17], b = bits.Sub64(t[17], 16804552333605636830, b)
		z[18], b = bits.Sub64(t[18], 16402045285100958250, b)
		z[19], b = bits.Sub64(t[19], 18176937210785782677, b)
		z[20], b = bits.Sub64(t[20], 15966221038481425824, b)
		z[21], b = bits.Sub64(t[21], 6959743526085911234, b)
		z[22], b = bits.Sub64(t[22], 12624744789978825023, b)
		z[23], b = bits.Sub64(t[23], 7041736483744465896, b)
		z[24], b = bits.Sub64(t[24], 552982698812971543, b)
		z[25], b = bits.Sub64(t[25], 2684388112402793318, b)
		z[26], _ = bits.Sub64(t[26], 8611279412651616633, b)
		return z
	}

	// copy t into z
	z[0] = t[0]
	z[1] = t[1]
	z[2] = t[2]
	z[3] = t[3]
	z[4] = t[4]
	z[5] = t[5]
	z[6] = t[6]
	z[7] = t[7]
	z[8] = t[8]
	z[9] = t[9]
	z[10] = t[10]
	z[11] = t[11]
	z[12] = t[12]
	z[13] = t[13]
	z[14] = t[14]
	z[15] = t[15]
	z[16] = t[16]
	z[17] = t[17]
	z[18] = t[18]
	z[19] = t[19]
	z[20] = t[20]
	z[21] = t[21]
	z[22] = t[22]
	z[23] = t[23]
	z[24] = t[24]
	z[25] = t[25]
	z[26] = t[26]

	// if z > q --> z -= q
	// note: this is NOT constant time
	if !(z[26] < 8611279412651616633 || (z[26] == 8611279412651616633 && (z[25] < 2684388112402793318 || (z[25] == 2684388112402793318 && (z[24] < 552982698812971543 || (z[24] == 552982698812971543 && (z[23] < 7041736483744465896 || (z[23] == 7041736483744465896 && (z[22] < 12624744789978825023 || (z[22] == 12624744789978825023 && (z[21] < 6959743526085911234 || (z[21] == 6959743526085911234 && (z[20] < 15966221038481425824 || (z[20] == 15966221038481425824 && (z[19] < 18176937210785782677 || (z[19] == 18176937210785782677 && (z[18] < 16402045285100958250 || (z[18] == 16402045285100958250 && (z[17] < 16804552333605636830 || (z[17] == 16804552333605636830 && (z[16] < 7713876665391399680 || (z[16] == 7713876665391399680 && (z[15] < 2346860679127149877 || (z[15] == 2346860679127149877 && (z[14] < 18381890281880615828 || (z[14] == 18381890281880615828 && (z[13] < 9151126398053665599 || (z[13] == 9151126398053665599 && (z[12] < 14734856437812977659 || (z[12] == 14734856437812977659 && (z[11] < 10947642194440358220 || (z[11] == 10947642194440358220 && (z[10] < 9383015198101081139 || (z[10] == 9383015198101081139 && (z[9] < 12824488156229008848 || (z[9] == 12824488156229008848 && (z[8] < 13319898001022067246 || (z[8] == 13319898001022067246 && (z[7] < 15901529056822770985 || (z[7] == 15901529056822770985 && (z[6] < 13130147365989575090 || (z[6] == 13130147365989575090 && (z[5] < 10465983792485076748 || (z[5] == 10465983792485076748 && (z[4] < 827738500950988109 || (z[4] == 827738500950988109 && (z[3] < 18368984800942220457 || (z[3] == 18368984800942220457 && (z[2] < 17457613988123037566 || (z[2] == 17457613988123037566 && (z[1] < 18006194176015342613 || (z[1] == 18006194176015342613 && (z[0] < 12440613579524619067))))))))))))))))))))))))))))))))))))))))))))))))))))) {
		var b uint64
		z[0], b = bits.Sub64(z[0], 12440613579524619067, 0)
		z[1], b = bits.Sub64(z[1], 18006194176015342613, b)
		z[2], b = bits.Sub64(z[2], 17457613988123037566, b)
		z[3], b = bits.Sub64(z[3], 18368984800942220457, b)
		z[4], b = bits.Sub64(z[4], 827738500950988109, b)
		z[5], b = bits.Sub64(z[5], 10465983792485076748, b)
		z[6], b = bits.Sub64(z[6], 13130147365989575090, b)
		z[7], b = bits.Sub64(z[7], 15901529056822770985, b)
		z[8], b = bits.Sub64(z[8], 13319898001022067246, b)
		z[9], b = bits.Sub64(z[9], 12824488156229008848, b)
		z[10], b = bits.Sub64(z[10], 9383015198101081139, b)
		z[11], b = bits.Sub64(z[11], 10947642194440358220, b)
		z[12], b = bits.Sub64(z[12], 14734856437812977659, b)
		z[13], b = bits.Sub64(z[13], 9151126398053665599, b)
		z[14], b = bits.Sub64(z[14], 18381890281880615828, b)
		z[15], b = bits.Sub64(z[15], 2346860679127149877, b)
		z[16], b = bits.Sub64(z[16], 7713876665391399680, b)
		z[17], b = bits.Sub64(z[17], 16804552333605636830, b)
		z[18], b = bits.Sub64(z[18], 16402045285100958250, b)
		z[19], b = bits.Sub64(z[19], 18176937210785782677, b)
		z[20], b = bits.Sub64(z[20], 15966221038481425824, b)
		z[21], b = bits.Sub64(z[21], 6959743526085911234, b)
		z[22], b = bits.Sub64(z[22], 12624744789978825023, b)
		z[23], b = bits.Sub64(z[23], 7041736483744465896, b)
		z[24], b = bits.Sub64(z[24], 552982698812971543, b)
		z[25], b = bits.Sub64(z[25], 2684388112402793318, b)
		z[26], _ = bits.Sub64(z[26], 8611279412651616633, b)
	}
	return z
}

// MulAssign z = z * x mod q
// see https://hackmd.io/@zkteam/modular_multiplication
func (z *Element27) MulAssign(x *Element27) *Element27 {

	var t [28]uint64
	var D uint64
	var m, C uint64
	// -----------------------------------
	// First loop

	C, t[0] = bits.Mul64(x[0], z[0])
	C, t[1] = madd1(x[0], z[1], C)
	C, t[2] = madd1(x[0], z[2], C)
	C, t[3] = madd1(x[0], z[3], C)
	C, t[4] = madd1(x[0], z[4], C)
	C, t[5] = madd1(x[0], z[5], C)
	C, t[6] = madd1(x[0], z[6], C)
	C, t[7] = madd1(x[0], z[7], C)
	C, t[8] = madd1(x[0], z[8], C)
	C, t[9] = madd1(x[0], z[9], C)
	C, t[10] = madd1(x[0], z[10], C)
	C, t[11] = madd1(x[0], z[11], C)
	C, t[12] = madd1(x[0], z[12], C)
	C, t[13] = madd1(x[0], z[13], C)
	C, t[14] = madd1(x[0], z[14], C)
	C, t[15] = madd1(x[0], z[15], C)
	C, t[16] = madd1(x[0], z[16], C)
	C, t[17] = madd1(x[0], z[17], C)
	C, t[18] = madd1(x[0], z[18], C)
	C, t[19] = madd1(x[0], z[19], C)
	C, t[20] = madd1(x[0], z[20], C)
	C, t[21] = madd1(x[0], z[21], C)
	C, t[22] = madd1(x[0], z[22], C)
	C, t[23] = madd1(x[0], z[23], C)
	C, t[24] = madd1(x[0], z[24], C)
	C, t[25] = madd1(x[0], z[25], C)
	C, t[26] = madd1(x[0], z[26], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6626265420794567181

	// -----------------------------------
	// Second loop
	C = madd0(m, 12440613579524619067, t[0])

	C, t[0] = madd2(m, 18006194176015342613, t[1], C)

	C, t[1] = madd2(m, 17457613988123037566, t[2], C)

	C, t[2] = madd2(m, 18368984800942220457, t[3], C)

	C, t[3] = madd2(m, 827738500950988109, t[4], C)

	C, t[4] = madd2(m, 10465983792485076748, t[5], C)

	C, t[5] = madd2(m, 13130147365989575090, t[6], C)

	C, t[6] = madd2(m, 15901529056822770985, t[7], C)

	C, t[7] = madd2(m, 13319898001022067246, t[8], C)

	C, t[8] = madd2(m, 12824488156229008848, t[9], C)

	C, t[9] = madd2(m, 9383015198101081139, t[10], C)

	C, t[10] = madd2(m, 10947642194440358220, t[11], C)

	C, t[11] = madd2(m, 14734856437812977659, t[12], C)

	C, t[12] = madd2(m, 9151126398053665599, t[13], C)

	C, t[13] = madd2(m, 18381890281880615828, t[14], C)

	C, t[14] = madd2(m, 2346860679127149877, t[15], C)

	C, t[15] = madd2(m, 7713876665391399680, t[16], C)

	C, t[16] = madd2(m, 16804552333605636830, t[17], C)

	C, t[17] = madd2(m, 16402045285100958250, t[18], C)

	C, t[18] = madd2(m, 18176937210785782677, t[19], C)

	C, t[19] = madd2(m, 15966221038481425824, t[20], C)

	C, t[20] = madd2(m, 6959743526085911234, t[21], C)

	C, t[21] = madd2(m, 12624744789978825023, t[22], C)

	C, t[22] = madd2(m, 7041736483744465896, t[23], C)

	C, t[23] = madd2(m, 552982698812971543, t[24], C)

	C, t[24] = madd2(m, 2684388112402793318, t[25], C)

	C, t[25] = madd3(m, 8611279412651616633, t[26], C, t[27])

	t[26], t[27] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[1], z[0], t[0])
	C, t[1] = madd2(x[1], z[1], t[1], C)
	C, t[2] = madd2(x[1], z[2], t[2], C)
	C, t[3] = madd2(x[1], z[3], t[3], C)
	C, t[4] = madd2(x[1], z[4], t[4], C)
	C, t[5] = madd2(x[1], z[5], t[5], C)
	C, t[6] = madd2(x[1], z[6], t[6], C)
	C, t[7] = madd2(x[1], z[7], t[7], C)
	C, t[8] = madd2(x[1], z[8], t[8], C)
	C, t[9] = madd2(x[1], z[9], t[9], C)
	C, t[10] = madd2(x[1], z[10], t[10], C)
	C, t[11] = madd2(x[1], z[11], t[11], C)
	C, t[12] = madd2(x[1], z[12], t[12], C)
	C, t[13] = madd2(x[1], z[13], t[13], C)
	C, t[14] = madd2(x[1], z[14], t[14], C)
	C, t[15] = madd2(x[1], z[15], t[15], C)
	C, t[16] = madd2(x[1], z[16], t[16], C)
	C, t[17] = madd2(x[1], z[17], t[17], C)
	C, t[18] = madd2(x[1], z[18], t[18], C)
	C, t[19] = madd2(x[1], z[19], t[19], C)
	C, t[20] = madd2(x[1], z[20], t[20], C)
	C, t[21] = madd2(x[1], z[21], t[21], C)
	C, t[22] = madd2(x[1], z[22], t[22], C)
	C, t[23] = madd2(x[1], z[23], t[23], C)
	C, t[24] = madd2(x[1], z[24], t[24], C)
	C, t[25] = madd2(x[1], z[25], t[25], C)
	C, t[26] = madd2(x[1], z[26], t[26], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6626265420794567181

	// -----------------------------------
	// Second loop
	C = madd0(m, 12440613579524619067, t[0])

	C, t[0] = madd2(m, 18006194176015342613, t[1], C)

	C, t[1] = madd2(m, 17457613988123037566, t[2], C)

	C, t[2] = madd2(m, 18368984800942220457, t[3], C)

	C, t[3] = madd2(m, 827738500950988109, t[4], C)

	C, t[4] = madd2(m, 10465983792485076748, t[5], C)

	C, t[5] = madd2(m, 13130147365989575090, t[6], C)

	C, t[6] = madd2(m, 15901529056822770985, t[7], C)

	C, t[7] = madd2(m, 13319898001022067246, t[8], C)

	C, t[8] = madd2(m, 12824488156229008848, t[9], C)

	C, t[9] = madd2(m, 9383015198101081139, t[10], C)

	C, t[10] = madd2(m, 10947642194440358220, t[11], C)

	C, t[11] = madd2(m, 14734856437812977659, t[12], C)

	C, t[12] = madd2(m, 9151126398053665599, t[13], C)

	C, t[13] = madd2(m, 18381890281880615828, t[14], C)

	C, t[14] = madd2(m, 2346860679127149877, t[15], C)

	C, t[15] = madd2(m, 7713876665391399680, t[16], C)

	C, t[16] = madd2(m, 16804552333605636830, t[17], C)

	C, t[17] = madd2(m, 16402045285100958250, t[18], C)

	C, t[18] = madd2(m, 18176937210785782677, t[19], C)

	C, t[19] = madd2(m, 15966221038481425824, t[20], C)

	C, t[20] = madd2(m, 6959743526085911234, t[21], C)

	C, t[21] = madd2(m, 12624744789978825023, t[22], C)

	C, t[22] = madd2(m, 7041736483744465896, t[23], C)

	C, t[23] = madd2(m, 552982698812971543, t[24], C)

	C, t[24] = madd2(m, 2684388112402793318, t[25], C)

	C, t[25] = madd3(m, 8611279412651616633, t[26], C, t[27])

	t[26], t[27] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[2], z[0], t[0])
	C, t[1] = madd2(x[2], z[1], t[1], C)
	C, t[2] = madd2(x[2], z[2], t[2], C)
	C, t[3] = madd2(x[2], z[3], t[3], C)
	C, t[4] = madd2(x[2], z[4], t[4], C)
	C, t[5] = madd2(x[2], z[5], t[5], C)
	C, t[6] = madd2(x[2], z[6], t[6], C)
	C, t[7] = madd2(x[2], z[7], t[7], C)
	C, t[8] = madd2(x[2], z[8], t[8], C)
	C, t[9] = madd2(x[2], z[9], t[9], C)
	C, t[10] = madd2(x[2], z[10], t[10], C)
	C, t[11] = madd2(x[2], z[11], t[11], C)
	C, t[12] = madd2(x[2], z[12], t[12], C)
	C, t[13] = madd2(x[2], z[13], t[13], C)
	C, t[14] = madd2(x[2], z[14], t[14], C)
	C, t[15] = madd2(x[2], z[15], t[15], C)
	C, t[16] = madd2(x[2], z[16], t[16], C)
	C, t[17] = madd2(x[2], z[17], t[17], C)
	C, t[18] = madd2(x[2], z[18], t[18], C)
	C, t[19] = madd2(x[2], z[19], t[19], C)
	C, t[20] = madd2(x[2], z[20], t[20], C)
	C, t[21] = madd2(x[2], z[21], t[21], C)
	C, t[22] = madd2(x[2], z[22], t[22], C)
	C, t[23] = madd2(x[2], z[23], t[23], C)
	C, t[24] = madd2(x[2], z[24], t[24], C)
	C, t[25] = madd2(x[2], z[25], t[25], C)
	C, t[26] = madd2(x[2], z[26], t[26], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6626265420794567181

	// -----------------------------------
	// Second loop
	C = madd0(m, 12440613579524619067, t[0])

	C, t[0] = madd2(m, 18006194176015342613, t[1], C)

	C, t[1] = madd2(m, 17457613988123037566, t[2], C)

	C, t[2] = madd2(m, 18368984800942220457, t[3], C)

	C, t[3] = madd2(m, 827738500950988109, t[4], C)

	C, t[4] = madd2(m, 10465983792485076748, t[5], C)

	C, t[5] = madd2(m, 13130147365989575090, t[6], C)

	C, t[6] = madd2(m, 15901529056822770985, t[7], C)

	C, t[7] = madd2(m, 13319898001022067246, t[8], C)

	C, t[8] = madd2(m, 12824488156229008848, t[9], C)

	C, t[9] = madd2(m, 9383015198101081139, t[10], C)

	C, t[10] = madd2(m, 10947642194440358220, t[11], C)

	C, t[11] = madd2(m, 14734856437812977659, t[12], C)

	C, t[12] = madd2(m, 9151126398053665599, t[13], C)

	C, t[13] = madd2(m, 18381890281880615828, t[14], C)

	C, t[14] = madd2(m, 2346860679127149877, t[15], C)

	C, t[15] = madd2(m, 7713876665391399680, t[16], C)

	C, t[16] = madd2(m, 16804552333605636830, t[17], C)

	C, t[17] = madd2(m, 16402045285100958250, t[18], C)

	C, t[18] = madd2(m, 18176937210785782677, t[19], C)

	C, t[19] = madd2(m, 15966221038481425824, t[20], C)

	C, t[20] = madd2(m, 6959743526085911234, t[21], C)

	C, t[21] = madd2(m, 12624744789978825023, t[22], C)

	C, t[22] = madd2(m, 7041736483744465896, t[23], C)

	C, t[23] = madd2(m, 552982698812971543, t[24], C)

	C, t[24] = madd2(m, 2684388112402793318, t[25], C)

	C, t[25] = madd3(m, 8611279412651616633, t[26], C, t[27])

	t[26], t[27] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[3], z[0], t[0])
	C, t[1] = madd2(x[3], z[1], t[1], C)
	C, t[2] = madd2(x[3], z[2], t[2], C)
	C, t[3] = madd2(x[3], z[3], t[3], C)
	C, t[4] = madd2(x[3], z[4], t[4], C)
	C, t[5] = madd2(x[3], z[5], t[5], C)
	C, t[6] = madd2(x[3], z[6], t[6], C)
	C, t[7] = madd2(x[3], z[7], t[7], C)
	C, t[8] = madd2(x[3], z[8], t[8], C)
	C, t[9] = madd2(x[3], z[9], t[9], C)
	C, t[10] = madd2(x[3], z[10], t[10], C)
	C, t[11] = madd2(x[3], z[11], t[11], C)
	C, t[12] = madd2(x[3], z[12], t[12], C)
	C, t[13] = madd2(x[3], z[13], t[13], C)
	C, t[14] = madd2(x[3], z[14], t[14], C)
	C, t[15] = madd2(x[3], z[15], t[15], C)
	C, t[16] = madd2(x[3], z[16], t[16], C)
	C, t[17] = madd2(x[3], z[17], t[17], C)
	C, t[18] = madd2(x[3], z[18], t[18], C)
	C, t[19] = madd2(x[3], z[19], t[19], C)
	C, t[20] = madd2(x[3], z[20], t[20], C)
	C, t[21] = madd2(x[3], z[21], t[21], C)
	C, t[22] = madd2(x[3], z[22], t[22], C)
	C, t[23] = madd2(x[3], z[23], t[23], C)
	C, t[24] = madd2(x[3], z[24], t[24], C)
	C, t[25] = madd2(x[3], z[25], t[25], C)
	C, t[26] = madd2(x[3], z[26], t[26], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6626265420794567181

	// -----------------------------------
	// Second loop
	C = madd0(m, 12440613579524619067, t[0])

	C, t[0] = madd2(m, 18006194176015342613, t[1], C)

	C, t[1] = madd2(m, 17457613988123037566, t[2], C)

	C, t[2] = madd2(m, 18368984800942220457, t[3], C)

	C, t[3] = madd2(m, 827738500950988109, t[4], C)

	C, t[4] = madd2(m, 10465983792485076748, t[5], C)

	C, t[5] = madd2(m, 13130147365989575090, t[6], C)

	C, t[6] = madd2(m, 15901529056822770985, t[7], C)

	C, t[7] = madd2(m, 13319898001022067246, t[8], C)

	C, t[8] = madd2(m, 12824488156229008848, t[9], C)

	C, t[9] = madd2(m, 9383015198101081139, t[10], C)

	C, t[10] = madd2(m, 10947642194440358220, t[11], C)

	C, t[11] = madd2(m, 14734856437812977659, t[12], C)

	C, t[12] = madd2(m, 9151126398053665599, t[13], C)

	C, t[13] = madd2(m, 18381890281880615828, t[14], C)

	C, t[14] = madd2(m, 2346860679127149877, t[15], C)

	C, t[15] = madd2(m, 7713876665391399680, t[16], C)

	C, t[16] = madd2(m, 16804552333605636830, t[17], C)

	C, t[17] = madd2(m, 16402045285100958250, t[18], C)

	C, t[18] = madd2(m, 18176937210785782677, t[19], C)

	C, t[19] = madd2(m, 15966221038481425824, t[20], C)

	C, t[20] = madd2(m, 6959743526085911234, t[21], C)

	C, t[21] = madd2(m, 12624744789978825023, t[22], C)

	C, t[22] = madd2(m, 7041736483744465896, t[23], C)

	C, t[23] = madd2(m, 552982698812971543, t[24], C)

	C, t[24] = madd2(m, 2684388112402793318, t[25], C)

	C, t[25] = madd3(m, 8611279412651616633, t[26], C, t[27])

	t[26], t[27] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[4], z[0], t[0])
	C, t[1] = madd2(x[4], z[1], t[1], C)
	C, t[2] = madd2(x[4], z[2], t[2], C)
	C, t[3] = madd2(x[4], z[3], t[3], C)
	C, t[4] = madd2(x[4], z[4], t[4], C)
	C, t[5] = madd2(x[4], z[5], t[5], C)
	C, t[6] = madd2(x[4], z[6], t[6], C)
	C, t[7] = madd2(x[4], z[7], t[7], C)
	C, t[8] = madd2(x[4], z[8], t[8], C)
	C, t[9] = madd2(x[4], z[9], t[9], C)
	C, t[10] = madd2(x[4], z[10], t[10], C)
	C, t[11] = madd2(x[4], z[11], t[11], C)
	C, t[12] = madd2(x[4], z[12], t[12], C)
	C, t[13] = madd2(x[4], z[13], t[13], C)
	C, t[14] = madd2(x[4], z[14], t[14], C)
	C, t[15] = madd2(x[4], z[15], t[15], C)
	C, t[16] = madd2(x[4], z[16], t[16], C)
	C, t[17] = madd2(x[4], z[17], t[17], C)
	C, t[18] = madd2(x[4], z[18], t[18], C)
	C, t[19] = madd2(x[4], z[19], t[19], C)
	C, t[20] = madd2(x[4], z[20], t[20], C)
	C, t[21] = madd2(x[4], z[21], t[21], C)
	C, t[22] = madd2(x[4], z[22], t[22], C)
	C, t[23] = madd2(x[4], z[23], t[23], C)
	C, t[24] = madd2(x[4], z[24], t[24], C)
	C, t[25] = madd2(x[4], z[25], t[25], C)
	C, t[26] = madd2(x[4], z[26], t[26], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6626265420794567181

	// -----------------------------------
	// Second loop
	C = madd0(m, 12440613579524619067, t[0])

	C, t[0] = madd2(m, 18006194176015342613, t[1], C)

	C, t[1] = madd2(m, 17457613988123037566, t[2], C)

	C, t[2] = madd2(m, 18368984800942220457, t[3], C)

	C, t[3] = madd2(m, 827738500950988109, t[4], C)

	C, t[4] = madd2(m, 10465983792485076748, t[5], C)

	C, t[5] = madd2(m, 13130147365989575090, t[6], C)

	C, t[6] = madd2(m, 15901529056822770985, t[7], C)

	C, t[7] = madd2(m, 13319898001022067246, t[8], C)

	C, t[8] = madd2(m, 12824488156229008848, t[9], C)

	C, t[9] = madd2(m, 9383015198101081139, t[10], C)

	C, t[10] = madd2(m, 10947642194440358220, t[11], C)

	C, t[11] = madd2(m, 14734856437812977659, t[12], C)

	C, t[12] = madd2(m, 9151126398053665599, t[13], C)

	C, t[13] = madd2(m, 18381890281880615828, t[14], C)

	C, t[14] = madd2(m, 2346860679127149877, t[15], C)

	C, t[15] = madd2(m, 7713876665391399680, t[16], C)

	C, t[16] = madd2(m, 16804552333605636830, t[17], C)

	C, t[17] = madd2(m, 16402045285100958250, t[18], C)

	C, t[18] = madd2(m, 18176937210785782677, t[19], C)

	C, t[19] = madd2(m, 15966221038481425824, t[20], C)

	C, t[20] = madd2(m, 6959743526085911234, t[21], C)

	C, t[21] = madd2(m, 12624744789978825023, t[22], C)

	C, t[22] = madd2(m, 7041736483744465896, t[23], C)

	C, t[23] = madd2(m, 552982698812971543, t[24], C)

	C, t[24] = madd2(m, 2684388112402793318, t[25], C)

	C, t[25] = madd3(m, 8611279412651616633, t[26], C, t[27])

	t[26], t[27] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[5], z[0], t[0])
	C, t[1] = madd2(x[5], z[1], t[1], C)
	C, t[2] = madd2(x[5], z[2], t[2], C)
	C, t[3] = madd2(x[5], z[3], t[3], C)
	C, t[4] = madd2(x[5], z[4], t[4], C)
	C, t[5] = madd2(x[5], z[5], t[5], C)
	C, t[6] = madd2(x[5], z[6], t[6], C)
	C, t[7] = madd2(x[5], z[7], t[7], C)
	C, t[8] = madd2(x[5], z[8], t[8], C)
	C, t[9] = madd2(x[5], z[9], t[9], C)
	C, t[10] = madd2(x[5], z[10], t[10], C)
	C, t[11] = madd2(x[5], z[11], t[11], C)
	C, t[12] = madd2(x[5], z[12], t[12], C)
	C, t[13] = madd2(x[5], z[13], t[13], C)
	C, t[14] = madd2(x[5], z[14], t[14], C)
	C, t[15] = madd2(x[5], z[15], t[15], C)
	C, t[16] = madd2(x[5], z[16], t[16], C)
	C, t[17] = madd2(x[5], z[17], t[17], C)
	C, t[18] = madd2(x[5], z[18], t[18], C)
	C, t[19] = madd2(x[5], z[19], t[19], C)
	C, t[20] = madd2(x[5], z[20], t[20], C)
	C, t[21] = madd2(x[5], z[21], t[21], C)
	C, t[22] = madd2(x[5], z[22], t[22], C)
	C, t[23] = madd2(x[5], z[23], t[23], C)
	C, t[24] = madd2(x[5], z[24], t[24], C)
	C, t[25] = madd2(x[5], z[25], t[25], C)
	C, t[26] = madd2(x[5], z[26], t[26], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6626265420794567181

	// -----------------------------------
	// Second loop
	C = madd0(m, 12440613579524619067, t[0])

	C, t[0] = madd2(m, 18006194176015342613, t[1], C)

	C, t[1] = madd2(m, 17457613988123037566, t[2], C)

	C, t[2] = madd2(m, 18368984800942220457, t[3], C)

	C, t[3] = madd2(m, 827738500950988109, t[4], C)

	C, t[4] = madd2(m, 10465983792485076748, t[5], C)

	C, t[5] = madd2(m, 13130147365989575090, t[6], C)

	C, t[6] = madd2(m, 15901529056822770985, t[7], C)

	C, t[7] = madd2(m, 13319898001022067246, t[8], C)

	C, t[8] = madd2(m, 12824488156229008848, t[9], C)

	C, t[9] = madd2(m, 9383015198101081139, t[10], C)

	C, t[10] = madd2(m, 10947642194440358220, t[11], C)

	C, t[11] = madd2(m, 14734856437812977659, t[12], C)

	C, t[12] = madd2(m, 9151126398053665599, t[13], C)

	C, t[13] = madd2(m, 18381890281880615828, t[14], C)

	C, t[14] = madd2(m, 2346860679127149877, t[15], C)

	C, t[15] = madd2(m, 7713876665391399680, t[16], C)

	C, t[16] = madd2(m, 16804552333605636830, t[17], C)

	C, t[17] = madd2(m, 16402045285100958250, t[18], C)

	C, t[18] = madd2(m, 18176937210785782677, t[19], C)

	C, t[19] = madd2(m, 15966221038481425824, t[20], C)

	C, t[20] = madd2(m, 6959743526085911234, t[21], C)

	C, t[21] = madd2(m, 12624744789978825023, t[22], C)

	C, t[22] = madd2(m, 7041736483744465896, t[23], C)

	C, t[23] = madd2(m, 552982698812971543, t[24], C)

	C, t[24] = madd2(m, 2684388112402793318, t[25], C)

	C, t[25] = madd3(m, 8611279412651616633, t[26], C, t[27])

	t[26], t[27] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[6], z[0], t[0])
	C, t[1] = madd2(x[6], z[1], t[1], C)
	C, t[2] = madd2(x[6], z[2], t[2], C)
	C, t[3] = madd2(x[6], z[3], t[3], C)
	C, t[4] = madd2(x[6], z[4], t[4], C)
	C, t[5] = madd2(x[6], z[5], t[5], C)
	C, t[6] = madd2(x[6], z[6], t[6], C)
	C, t[7] = madd2(x[6], z[7], t[7], C)
	C, t[8] = madd2(x[6], z[8], t[8], C)
	C, t[9] = madd2(x[6], z[9], t[9], C)
	C, t[10] = madd2(x[6], z[10], t[10], C)
	C, t[11] = madd2(x[6], z[11], t[11], C)
	C, t[12] = madd2(x[6], z[12], t[12], C)
	C, t[13] = madd2(x[6], z[13], t[13], C)
	C, t[14] = madd2(x[6], z[14], t[14], C)
	C, t[15] = madd2(x[6], z[15], t[15], C)
	C, t[16] = madd2(x[6], z[16], t[16], C)
	C, t[17] = madd2(x[6], z[17], t[17], C)
	C, t[18] = madd2(x[6], z[18], t[18], C)
	C, t[19] = madd2(x[6], z[19], t[19], C)
	C, t[20] = madd2(x[6], z[20], t[20], C)
	C, t[21] = madd2(x[6], z[21], t[21], C)
	C, t[22] = madd2(x[6], z[22], t[22], C)
	C, t[23] = madd2(x[6], z[23], t[23], C)
	C, t[24] = madd2(x[6], z[24], t[24], C)
	C, t[25] = madd2(x[6], z[25], t[25], C)
	C, t[26] = madd2(x[6], z[26], t[26], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6626265420794567181

	// -----------------------------------
	// Second loop
	C = madd0(m, 12440613579524619067, t[0])

	C, t[0] = madd2(m, 18006194176015342613, t[1], C)

	C, t[1] = madd2(m, 17457613988123037566, t[2], C)

	C, t[2] = madd2(m, 18368984800942220457, t[3], C)

	C, t[3] = madd2(m, 827738500950988109, t[4], C)

	C, t[4] = madd2(m, 10465983792485076748, t[5], C)

	C, t[5] = madd2(m, 13130147365989575090, t[6], C)

	C, t[6] = madd2(m, 15901529056822770985, t[7], C)

	C, t[7] = madd2(m, 13319898001022067246, t[8], C)

	C, t[8] = madd2(m, 12824488156229008848, t[9], C)

	C, t[9] = madd2(m, 9383015198101081139, t[10], C)

	C, t[10] = madd2(m, 10947642194440358220, t[11], C)

	C, t[11] = madd2(m, 14734856437812977659, t[12], C)

	C, t[12] = madd2(m, 9151126398053665599, t[13], C)

	C, t[13] = madd2(m, 18381890281880615828, t[14], C)

	C, t[14] = madd2(m, 2346860679127149877, t[15], C)

	C, t[15] = madd2(m, 7713876665391399680, t[16], C)

	C, t[16] = madd2(m, 16804552333605636830, t[17], C)

	C, t[17] = madd2(m, 16402045285100958250, t[18], C)

	C, t[18] = madd2(m, 18176937210785782677, t[19], C)

	C, t[19] = madd2(m, 15966221038481425824, t[20], C)

	C, t[20] = madd2(m, 6959743526085911234, t[21], C)

	C, t[21] = madd2(m, 12624744789978825023, t[22], C)

	C, t[22] = madd2(m, 7041736483744465896, t[23], C)

	C, t[23] = madd2(m, 552982698812971543, t[24], C)

	C, t[24] = madd2(m, 2684388112402793318, t[25], C)

	C, t[25] = madd3(m, 8611279412651616633, t[26], C, t[27])

	t[26], t[27] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[7], z[0], t[0])
	C, t[1] = madd2(x[7], z[1], t[1], C)
	C, t[2] = madd2(x[7], z[2], t[2], C)
	C, t[3] = madd2(x[7], z[3], t[3], C)
	C, t[4] = madd2(x[7], z[4], t[4], C)
	C, t[5] = madd2(x[7], z[5], t[5], C)
	C, t[6] = madd2(x[7], z[6], t[6], C)
	C, t[7] = madd2(x[7], z[7], t[7], C)
	C, t[8] = madd2(x[7], z[8], t[8], C)
	C, t[9] = madd2(x[7], z[9], t[9], C)
	C, t[10] = madd2(x[7], z[10], t[10], C)
	C, t[11] = madd2(x[7], z[11], t[11], C)
	C, t[12] = madd2(x[7], z[12], t[12], C)
	C, t[13] = madd2(x[7], z[13], t[13], C)
	C, t[14] = madd2(x[7], z[14], t[14], C)
	C, t[15] = madd2(x[7], z[15], t[15], C)
	C, t[16] = madd2(x[7], z[16], t[16], C)
	C, t[17] = madd2(x[7], z[17], t[17], C)
	C, t[18] = madd2(x[7], z[18], t[18], C)
	C, t[19] = madd2(x[7], z[19], t[19], C)
	C, t[20] = madd2(x[7], z[20], t[20], C)
	C, t[21] = madd2(x[7], z[21], t[21], C)
	C, t[22] = madd2(x[7], z[22], t[22], C)
	C, t[23] = madd2(x[7], z[23], t[23], C)
	C, t[24] = madd2(x[7], z[24], t[24], C)
	C, t[25] = madd2(x[7], z[25], t[25], C)
	C, t[26] = madd2(x[7], z[26], t[26], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6626265420794567181

	// -----------------------------------
	// Second loop
	C = madd0(m, 12440613579524619067, t[0])

	C, t[0] = madd2(m, 18006194176015342613, t[1], C)

	C, t[1] = madd2(m, 17457613988123037566, t[2], C)

	C, t[2] = madd2(m, 18368984800942220457, t[3], C)

	C, t[3] = madd2(m, 827738500950988109, t[4], C)

	C, t[4] = madd2(m, 10465983792485076748, t[5], C)

	C, t[5] = madd2(m, 13130147365989575090, t[6], C)

	C, t[6] = madd2(m, 15901529056822770985, t[7], C)

	C, t[7] = madd2(m, 13319898001022067246, t[8], C)

	C, t[8] = madd2(m, 12824488156229008848, t[9], C)

	C, t[9] = madd2(m, 9383015198101081139, t[10], C)

	C, t[10] = madd2(m, 10947642194440358220, t[11], C)

	C, t[11] = madd2(m, 14734856437812977659, t[12], C)

	C, t[12] = madd2(m, 9151126398053665599, t[13], C)

	C, t[13] = madd2(m, 18381890281880615828, t[14], C)

	C, t[14] = madd2(m, 2346860679127149877, t[15], C)

	C, t[15] = madd2(m, 7713876665391399680, t[16], C)

	C, t[16] = madd2(m, 16804552333605636830, t[17], C)

	C, t[17] = madd2(m, 16402045285100958250, t[18], C)

	C, t[18] = madd2(m, 18176937210785782677, t[19], C)

	C, t[19] = madd2(m, 15966221038481425824, t[20], C)

	C, t[20] = madd2(m, 6959743526085911234, t[21], C)

	C, t[21] = madd2(m, 12624744789978825023, t[22], C)

	C, t[22] = madd2(m, 7041736483744465896, t[23], C)

	C, t[23] = madd2(m, 552982698812971543, t[24], C)

	C, t[24] = madd2(m, 2684388112402793318, t[25], C)

	C, t[25] = madd3(m, 8611279412651616633, t[26], C, t[27])

	t[26], t[27] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[8], z[0], t[0])
	C, t[1] = madd2(x[8], z[1], t[1], C)
	C, t[2] = madd2(x[8], z[2], t[2], C)
	C, t[3] = madd2(x[8], z[3], t[3], C)
	C, t[4] = madd2(x[8], z[4], t[4], C)
	C, t[5] = madd2(x[8], z[5], t[5], C)
	C, t[6] = madd2(x[8], z[6], t[6], C)
	C, t[7] = madd2(x[8], z[7], t[7], C)
	C, t[8] = madd2(x[8], z[8], t[8], C)
	C, t[9] = madd2(x[8], z[9], t[9], C)
	C, t[10] = madd2(x[8], z[10], t[10], C)
	C, t[11] = madd2(x[8], z[11], t[11], C)
	C, t[12] = madd2(x[8], z[12], t[12], C)
	C, t[13] = madd2(x[8], z[13], t[13], C)
	C, t[14] = madd2(x[8], z[14], t[14], C)
	C, t[15] = madd2(x[8], z[15], t[15], C)
	C, t[16] = madd2(x[8], z[16], t[16], C)
	C, t[17] = madd2(x[8], z[17], t[17], C)
	C, t[18] = madd2(x[8], z[18], t[18], C)
	C, t[19] = madd2(x[8], z[19], t[19], C)
	C, t[20] = madd2(x[8], z[20], t[20], C)
	C, t[21] = madd2(x[8], z[21], t[21], C)
	C, t[22] = madd2(x[8], z[22], t[22], C)
	C, t[23] = madd2(x[8], z[23], t[23], C)
	C, t[24] = madd2(x[8], z[24], t[24], C)
	C, t[25] = madd2(x[8], z[25], t[25], C)
	C, t[26] = madd2(x[8], z[26], t[26], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6626265420794567181

	// -----------------------------------
	// Second loop
	C = madd0(m, 12440613579524619067, t[0])

	C, t[0] = madd2(m, 18006194176015342613, t[1], C)

	C, t[1] = madd2(m, 17457613988123037566, t[2], C)

	C, t[2] = madd2(m, 18368984800942220457, t[3], C)

	C, t[3] = madd2(m, 827738500950988109, t[4], C)

	C, t[4] = madd2(m, 10465983792485076748, t[5], C)

	C, t[5] = madd2(m, 13130147365989575090, t[6], C)

	C, t[6] = madd2(m, 15901529056822770985, t[7], C)

	C, t[7] = madd2(m, 13319898001022067246, t[8], C)

	C, t[8] = madd2(m, 12824488156229008848, t[9], C)

	C, t[9] = madd2(m, 9383015198101081139, t[10], C)

	C, t[10] = madd2(m, 10947642194440358220, t[11], C)

	C, t[11] = madd2(m, 14734856437812977659, t[12], C)

	C, t[12] = madd2(m, 9151126398053665599, t[13], C)

	C, t[13] = madd2(m, 18381890281880615828, t[14], C)

	C, t[14] = madd2(m, 2346860679127149877, t[15], C)

	C, t[15] = madd2(m, 7713876665391399680, t[16], C)

	C, t[16] = madd2(m, 16804552333605636830, t[17], C)

	C, t[17] = madd2(m, 16402045285100958250, t[18], C)

	C, t[18] = madd2(m, 18176937210785782677, t[19], C)

	C, t[19] = madd2(m, 15966221038481425824, t[20], C)

	C, t[20] = madd2(m, 6959743526085911234, t[21], C)

	C, t[21] = madd2(m, 12624744789978825023, t[22], C)

	C, t[22] = madd2(m, 7041736483744465896, t[23], C)

	C, t[23] = madd2(m, 552982698812971543, t[24], C)

	C, t[24] = madd2(m, 2684388112402793318, t[25], C)

	C, t[25] = madd3(m, 8611279412651616633, t[26], C, t[27])

	t[26], t[27] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[9], z[0], t[0])
	C, t[1] = madd2(x[9], z[1], t[1], C)
	C, t[2] = madd2(x[9], z[2], t[2], C)
	C, t[3] = madd2(x[9], z[3], t[3], C)
	C, t[4] = madd2(x[9], z[4], t[4], C)
	C, t[5] = madd2(x[9], z[5], t[5], C)
	C, t[6] = madd2(x[9], z[6], t[6], C)
	C, t[7] = madd2(x[9], z[7], t[7], C)
	C, t[8] = madd2(x[9], z[8], t[8], C)
	C, t[9] = madd2(x[9], z[9], t[9], C)
	C, t[10] = madd2(x[9], z[10], t[10], C)
	C, t[11] = madd2(x[9], z[11], t[11], C)
	C, t[12] = madd2(x[9], z[12], t[12], C)
	C, t[13] = madd2(x[9], z[13], t[13], C)
	C, t[14] = madd2(x[9], z[14], t[14], C)
	C, t[15] = madd2(x[9], z[15], t[15], C)
	C, t[16] = madd2(x[9], z[16], t[16], C)
	C, t[17] = madd2(x[9], z[17], t[17], C)
	C, t[18] = madd2(x[9], z[18], t[18], C)
	C, t[19] = madd2(x[9], z[19], t[19], C)
	C, t[20] = madd2(x[9], z[20], t[20], C)
	C, t[21] = madd2(x[9], z[21], t[21], C)
	C, t[22] = madd2(x[9], z[22], t[22], C)
	C, t[23] = madd2(x[9], z[23], t[23], C)
	C, t[24] = madd2(x[9], z[24], t[24], C)
	C, t[25] = madd2(x[9], z[25], t[25], C)
	C, t[26] = madd2(x[9], z[26], t[26], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6626265420794567181

	// -----------------------------------
	// Second loop
	C = madd0(m, 12440613579524619067, t[0])

	C, t[0] = madd2(m, 18006194176015342613, t[1], C)

	C, t[1] = madd2(m, 17457613988123037566, t[2], C)

	C, t[2] = madd2(m, 18368984800942220457, t[3], C)

	C, t[3] = madd2(m, 827738500950988109, t[4], C)

	C, t[4] = madd2(m, 10465983792485076748, t[5], C)

	C, t[5] = madd2(m, 13130147365989575090, t[6], C)

	C, t[6] = madd2(m, 15901529056822770985, t[7], C)

	C, t[7] = madd2(m, 13319898001022067246, t[8], C)

	C, t[8] = madd2(m, 12824488156229008848, t[9], C)

	C, t[9] = madd2(m, 9383015198101081139, t[10], C)

	C, t[10] = madd2(m, 10947642194440358220, t[11], C)

	C, t[11] = madd2(m, 14734856437812977659, t[12], C)

	C, t[12] = madd2(m, 9151126398053665599, t[13], C)

	C, t[13] = madd2(m, 18381890281880615828, t[14], C)

	C, t[14] = madd2(m, 2346860679127149877, t[15], C)

	C, t[15] = madd2(m, 7713876665391399680, t[16], C)

	C, t[16] = madd2(m, 16804552333605636830, t[17], C)

	C, t[17] = madd2(m, 16402045285100958250, t[18], C)

	C, t[18] = madd2(m, 18176937210785782677, t[19], C)

	C, t[19] = madd2(m, 15966221038481425824, t[20], C)

	C, t[20] = madd2(m, 6959743526085911234, t[21], C)

	C, t[21] = madd2(m, 12624744789978825023, t[22], C)

	C, t[22] = madd2(m, 7041736483744465896, t[23], C)

	C, t[23] = madd2(m, 552982698812971543, t[24], C)

	C, t[24] = madd2(m, 2684388112402793318, t[25], C)

	C, t[25] = madd3(m, 8611279412651616633, t[26], C, t[27])

	t[26], t[27] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[10], z[0], t[0])
	C, t[1] = madd2(x[10], z[1], t[1], C)
	C, t[2] = madd2(x[10], z[2], t[2], C)
	C, t[3] = madd2(x[10], z[3], t[3], C)
	C, t[4] = madd2(x[10], z[4], t[4], C)
	C, t[5] = madd2(x[10], z[5], t[5], C)
	C, t[6] = madd2(x[10], z[6], t[6], C)
	C, t[7] = madd2(x[10], z[7], t[7], C)
	C, t[8] = madd2(x[10], z[8], t[8], C)
	C, t[9] = madd2(x[10], z[9], t[9], C)
	C, t[10] = madd2(x[10], z[10], t[10], C)
	C, t[11] = madd2(x[10], z[11], t[11], C)
	C, t[12] = madd2(x[10], z[12], t[12], C)
	C, t[13] = madd2(x[10], z[13], t[13], C)
	C, t[14] = madd2(x[10], z[14], t[14], C)
	C, t[15] = madd2(x[10], z[15], t[15], C)
	C, t[16] = madd2(x[10], z[16], t[16], C)
	C, t[17] = madd2(x[10], z[17], t[17], C)
	C, t[18] = madd2(x[10], z[18], t[18], C)
	C, t[19] = madd2(x[10], z[19], t[19], C)
	C, t[20] = madd2(x[10], z[20], t[20], C)
	C, t[21] = madd2(x[10], z[21], t[21], C)
	C, t[22] = madd2(x[10], z[22], t[22], C)
	C, t[23] = madd2(x[10], z[23], t[23], C)
	C, t[24] = madd2(x[10], z[24], t[24], C)
	C, t[25] = madd2(x[10], z[25], t[25], C)
	C, t[26] = madd2(x[10], z[26], t[26], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6626265420794567181

	// -----------------------------------
	// Second loop
	C = madd0(m, 12440613579524619067, t[0])

	C, t[0] = madd2(m, 18006194176015342613, t[1], C)

	C, t[1] = madd2(m, 17457613988123037566, t[2], C)

	C, t[2] = madd2(m, 18368984800942220457, t[3], C)

	C, t[3] = madd2(m, 827738500950988109, t[4], C)

	C, t[4] = madd2(m, 10465983792485076748, t[5], C)

	C, t[5] = madd2(m, 13130147365989575090, t[6], C)

	C, t[6] = madd2(m, 15901529056822770985, t[7], C)

	C, t[7] = madd2(m, 13319898001022067246, t[8], C)

	C, t[8] = madd2(m, 12824488156229008848, t[9], C)

	C, t[9] = madd2(m, 9383015198101081139, t[10], C)

	C, t[10] = madd2(m, 10947642194440358220, t[11], C)

	C, t[11] = madd2(m, 14734856437812977659, t[12], C)

	C, t[12] = madd2(m, 9151126398053665599, t[13], C)

	C, t[13] = madd2(m, 18381890281880615828, t[14], C)

	C, t[14] = madd2(m, 2346860679127149877, t[15], C)

	C, t[15] = madd2(m, 7713876665391399680, t[16], C)

	C, t[16] = madd2(m, 16804552333605636830, t[17], C)

	C, t[17] = madd2(m, 16402045285100958250, t[18], C)

	C, t[18] = madd2(m, 18176937210785782677, t[19], C)

	C, t[19] = madd2(m, 15966221038481425824, t[20], C)

	C, t[20] = madd2(m, 6959743526085911234, t[21], C)

	C, t[21] = madd2(m, 12624744789978825023, t[22], C)

	C, t[22] = madd2(m, 7041736483744465896, t[23], C)

	C, t[23] = madd2(m, 552982698812971543, t[24], C)

	C, t[24] = madd2(m, 2684388112402793318, t[25], C)

	C, t[25] = madd3(m, 8611279412651616633, t[26], C, t[27])

	t[26], t[27] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[11], z[0], t[0])
	C, t[1] = madd2(x[11], z[1], t[1], C)
	C, t[2] = madd2(x[11], z[2], t[2], C)
	C, t[3] = madd2(x[11], z[3], t[3], C)
	C, t[4] = madd2(x[11], z[4], t[4], C)
	C, t[5] = madd2(x[11], z[5], t[5], C)
	C, t[6] = madd2(x[11], z[6], t[6], C)
	C, t[7] = madd2(x[11], z[7], t[7], C)
	C, t[8] = madd2(x[11], z[8], t[8], C)
	C, t[9] = madd2(x[11], z[9], t[9], C)
	C, t[10] = madd2(x[11], z[10], t[10], C)
	C, t[11] = madd2(x[11], z[11], t[11], C)
	C, t[12] = madd2(x[11], z[12], t[12], C)
	C, t[13] = madd2(x[11], z[13], t[13], C)
	C, t[14] = madd2(x[11], z[14], t[14], C)
	C, t[15] = madd2(x[11], z[15], t[15], C)
	C, t[16] = madd2(x[11], z[16], t[16], C)
	C, t[17] = madd2(x[11], z[17], t[17], C)
	C, t[18] = madd2(x[11], z[18], t[18], C)
	C, t[19] = madd2(x[11], z[19], t[19], C)
	C, t[20] = madd2(x[11], z[20], t[20], C)
	C, t[21] = madd2(x[11], z[21], t[21], C)
	C, t[22] = madd2(x[11], z[22], t[22], C)
	C, t[23] = madd2(x[11], z[23], t[23], C)
	C, t[24] = madd2(x[11], z[24], t[24], C)
	C, t[25] = madd2(x[11], z[25], t[25], C)
	C, t[26] = madd2(x[11], z[26], t[26], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6626265420794567181

	// -----------------------------------
	// Second loop
	C = madd0(m, 12440613579524619067, t[0])

	C, t[0] = madd2(m, 18006194176015342613, t[1], C)

	C, t[1] = madd2(m, 17457613988123037566, t[2], C)

	C, t[2] = madd2(m, 18368984800942220457, t[3], C)

	C, t[3] = madd2(m, 827738500950988109, t[4], C)

	C, t[4] = madd2(m, 10465983792485076748, t[5], C)

	C, t[5] = madd2(m, 13130147365989575090, t[6], C)

	C, t[6] = madd2(m, 15901529056822770985, t[7], C)

	C, t[7] = madd2(m, 13319898001022067246, t[8], C)

	C, t[8] = madd2(m, 12824488156229008848, t[9], C)

	C, t[9] = madd2(m, 9383015198101081139, t[10], C)

	C, t[10] = madd2(m, 10947642194440358220, t[11], C)

	C, t[11] = madd2(m, 14734856437812977659, t[12], C)

	C, t[12] = madd2(m, 9151126398053665599, t[13], C)

	C, t[13] = madd2(m, 18381890281880615828, t[14], C)

	C, t[14] = madd2(m, 2346860679127149877, t[15], C)

	C, t[15] = madd2(m, 7713876665391399680, t[16], C)

	C, t[16] = madd2(m, 16804552333605636830, t[17], C)

	C, t[17] = madd2(m, 16402045285100958250, t[18], C)

	C, t[18] = madd2(m, 18176937210785782677, t[19], C)

	C, t[19] = madd2(m, 15966221038481425824, t[20], C)

	C, t[20] = madd2(m, 6959743526085911234, t[21], C)

	C, t[21] = madd2(m, 12624744789978825023, t[22], C)

	C, t[22] = madd2(m, 7041736483744465896, t[23], C)

	C, t[23] = madd2(m, 552982698812971543, t[24], C)

	C, t[24] = madd2(m, 2684388112402793318, t[25], C)

	C, t[25] = madd3(m, 8611279412651616633, t[26], C, t[27])

	t[26], t[27] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[12], z[0], t[0])
	C, t[1] = madd2(x[12], z[1], t[1], C)
	C, t[2] = madd2(x[12], z[2], t[2], C)
	C, t[3] = madd2(x[12], z[3], t[3], C)
	C, t[4] = madd2(x[12], z[4], t[4], C)
	C, t[5] = madd2(x[12], z[5], t[5], C)
	C, t[6] = madd2(x[12], z[6], t[6], C)
	C, t[7] = madd2(x[12], z[7], t[7], C)
	C, t[8] = madd2(x[12], z[8], t[8], C)
	C, t[9] = madd2(x[12], z[9], t[9], C)
	C, t[10] = madd2(x[12], z[10], t[10], C)
	C, t[11] = madd2(x[12], z[11], t[11], C)
	C, t[12] = madd2(x[12], z[12], t[12], C)
	C, t[13] = madd2(x[12], z[13], t[13], C)
	C, t[14] = madd2(x[12], z[14], t[14], C)
	C, t[15] = madd2(x[12], z[15], t[15], C)
	C, t[16] = madd2(x[12], z[16], t[16], C)
	C, t[17] = madd2(x[12], z[17], t[17], C)
	C, t[18] = madd2(x[12], z[18], t[18], C)
	C, t[19] = madd2(x[12], z[19], t[19], C)
	C, t[20] = madd2(x[12], z[20], t[20], C)
	C, t[21] = madd2(x[12], z[21], t[21], C)
	C, t[22] = madd2(x[12], z[22], t[22], C)
	C, t[23] = madd2(x[12], z[23], t[23], C)
	C, t[24] = madd2(x[12], z[24], t[24], C)
	C, t[25] = madd2(x[12], z[25], t[25], C)
	C, t[26] = madd2(x[12], z[26], t[26], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6626265420794567181

	// -----------------------------------
	// Second loop
	C = madd0(m, 12440613579524619067, t[0])

	C, t[0] = madd2(m, 18006194176015342613, t[1], C)

	C, t[1] = madd2(m, 17457613988123037566, t[2], C)

	C, t[2] = madd2(m, 18368984800942220457, t[3], C)

	C, t[3] = madd2(m, 827738500950988109, t[4], C)

	C, t[4] = madd2(m, 10465983792485076748, t[5], C)

	C, t[5] = madd2(m, 13130147365989575090, t[6], C)

	C, t[6] = madd2(m, 15901529056822770985, t[7], C)

	C, t[7] = madd2(m, 13319898001022067246, t[8], C)

	C, t[8] = madd2(m, 12824488156229008848, t[9], C)

	C, t[9] = madd2(m, 9383015198101081139, t[10], C)

	C, t[10] = madd2(m, 10947642194440358220, t[11], C)

	C, t[11] = madd2(m, 14734856437812977659, t[12], C)

	C, t[12] = madd2(m, 9151126398053665599, t[13], C)

	C, t[13] = madd2(m, 18381890281880615828, t[14], C)

	C, t[14] = madd2(m, 2346860679127149877, t[15], C)

	C, t[15] = madd2(m, 7713876665391399680, t[16], C)

	C, t[16] = madd2(m, 16804552333605636830, t[17], C)

	C, t[17] = madd2(m, 16402045285100958250, t[18], C)

	C, t[18] = madd2(m, 18176937210785782677, t[19], C)

	C, t[19] = madd2(m, 15966221038481425824, t[20], C)

	C, t[20] = madd2(m, 6959743526085911234, t[21], C)

	C, t[21] = madd2(m, 12624744789978825023, t[22], C)

	C, t[22] = madd2(m, 7041736483744465896, t[23], C)

	C, t[23] = madd2(m, 552982698812971543, t[24], C)

	C, t[24] = madd2(m, 2684388112402793318, t[25], C)

	C, t[25] = madd3(m, 8611279412651616633, t[26], C, t[27])

	t[26], t[27] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[13], z[0], t[0])
	C, t[1] = madd2(x[13], z[1], t[1], C)
	C, t[2] = madd2(x[13], z[2], t[2], C)
	C, t[3] = madd2(x[13], z[3], t[3], C)
	C, t[4] = madd2(x[13], z[4], t[4], C)
	C, t[5] = madd2(x[13], z[5], t[5], C)
	C, t[6] = madd2(x[13], z[6], t[6], C)
	C, t[7] = madd2(x[13], z[7], t[7], C)
	C, t[8] = madd2(x[13], z[8], t[8], C)
	C, t[9] = madd2(x[13], z[9], t[9], C)
	C, t[10] = madd2(x[13], z[10], t[10], C)
	C, t[11] = madd2(x[13], z[11], t[11], C)
	C, t[12] = madd2(x[13], z[12], t[12], C)
	C, t[13] = madd2(x[13], z[13], t[13], C)
	C, t[14] = madd2(x[13], z[14], t[14], C)
	C, t[15] = madd2(x[13], z[15], t[15], C)
	C, t[16] = madd2(x[13], z[16], t[16], C)
	C, t[17] = madd2(x[13], z[17], t[17], C)
	C, t[18] = madd2(x[13], z[18], t[18], C)
	C, t[19] = madd2(x[13], z[19], t[19], C)
	C, t[20] = madd2(x[13], z[20], t[20], C)
	C, t[21] = madd2(x[13], z[21], t[21], C)
	C, t[22] = madd2(x[13], z[22], t[22], C)
	C, t[23] = madd2(x[13], z[23], t[23], C)
	C, t[24] = madd2(x[13], z[24], t[24], C)
	C, t[25] = madd2(x[13], z[25], t[25], C)
	C, t[26] = madd2(x[13], z[26], t[26], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6626265420794567181

	// -----------------------------------
	// Second loop
	C = madd0(m, 12440613579524619067, t[0])

	C, t[0] = madd2(m, 18006194176015342613, t[1], C)

	C, t[1] = madd2(m, 17457613988123037566, t[2], C)

	C, t[2] = madd2(m, 18368984800942220457, t[3], C)

	C, t[3] = madd2(m, 827738500950988109, t[4], C)

	C, t[4] = madd2(m, 10465983792485076748, t[5], C)

	C, t[5] = madd2(m, 13130147365989575090, t[6], C)

	C, t[6] = madd2(m, 15901529056822770985, t[7], C)

	C, t[7] = madd2(m, 13319898001022067246, t[8], C)

	C, t[8] = madd2(m, 12824488156229008848, t[9], C)

	C, t[9] = madd2(m, 9383015198101081139, t[10], C)

	C, t[10] = madd2(m, 10947642194440358220, t[11], C)

	C, t[11] = madd2(m, 14734856437812977659, t[12], C)

	C, t[12] = madd2(m, 9151126398053665599, t[13], C)

	C, t[13] = madd2(m, 18381890281880615828, t[14], C)

	C, t[14] = madd2(m, 2346860679127149877, t[15], C)

	C, t[15] = madd2(m, 7713876665391399680, t[16], C)

	C, t[16] = madd2(m, 16804552333605636830, t[17], C)

	C, t[17] = madd2(m, 16402045285100958250, t[18], C)

	C, t[18] = madd2(m, 18176937210785782677, t[19], C)

	C, t[19] = madd2(m, 15966221038481425824, t[20], C)

	C, t[20] = madd2(m, 6959743526085911234, t[21], C)

	C, t[21] = madd2(m, 12624744789978825023, t[22], C)

	C, t[22] = madd2(m, 7041736483744465896, t[23], C)

	C, t[23] = madd2(m, 552982698812971543, t[24], C)

	C, t[24] = madd2(m, 2684388112402793318, t[25], C)

	C, t[25] = madd3(m, 8611279412651616633, t[26], C, t[27])

	t[26], t[27] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[14], z[0], t[0])
	C, t[1] = madd2(x[14], z[1], t[1], C)
	C, t[2] = madd2(x[14], z[2], t[2], C)
	C, t[3] = madd2(x[14], z[3], t[3], C)
	C, t[4] = madd2(x[14], z[4], t[4], C)
	C, t[5] = madd2(x[14], z[5], t[5], C)
	C, t[6] = madd2(x[14], z[6], t[6], C)
	C, t[7] = madd2(x[14], z[7], t[7], C)
	C, t[8] = madd2(x[14], z[8], t[8], C)
	C, t[9] = madd2(x[14], z[9], t[9], C)
	C, t[10] = madd2(x[14], z[10], t[10], C)
	C, t[11] = madd2(x[14], z[11], t[11], C)
	C, t[12] = madd2(x[14], z[12], t[12], C)
	C, t[13] = madd2(x[14], z[13], t[13], C)
	C, t[14] = madd2(x[14], z[14], t[14], C)
	C, t[15] = madd2(x[14], z[15], t[15], C)
	C, t[16] = madd2(x[14], z[16], t[16], C)
	C, t[17] = madd2(x[14], z[17], t[17], C)
	C, t[18] = madd2(x[14], z[18], t[18], C)
	C, t[19] = madd2(x[14], z[19], t[19], C)
	C, t[20] = madd2(x[14], z[20], t[20], C)
	C, t[21] = madd2(x[14], z[21], t[21], C)
	C, t[22] = madd2(x[14], z[22], t[22], C)
	C, t[23] = madd2(x[14], z[23], t[23], C)
	C, t[24] = madd2(x[14], z[24], t[24], C)
	C, t[25] = madd2(x[14], z[25], t[25], C)
	C, t[26] = madd2(x[14], z[26], t[26], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6626265420794567181

	// -----------------------------------
	// Second loop
	C = madd0(m, 12440613579524619067, t[0])

	C, t[0] = madd2(m, 18006194176015342613, t[1], C)

	C, t[1] = madd2(m, 17457613988123037566, t[2], C)

	C, t[2] = madd2(m, 18368984800942220457, t[3], C)

	C, t[3] = madd2(m, 827738500950988109, t[4], C)

	C, t[4] = madd2(m, 10465983792485076748, t[5], C)

	C, t[5] = madd2(m, 13130147365989575090, t[6], C)

	C, t[6] = madd2(m, 15901529056822770985, t[7], C)

	C, t[7] = madd2(m, 13319898001022067246, t[8], C)

	C, t[8] = madd2(m, 12824488156229008848, t[9], C)

	C, t[9] = madd2(m, 9383015198101081139, t[10], C)

	C, t[10] = madd2(m, 10947642194440358220, t[11], C)

	C, t[11] = madd2(m, 14734856437812977659, t[12], C)

	C, t[12] = madd2(m, 9151126398053665599, t[13], C)

	C, t[13] = madd2(m, 18381890281880615828, t[14], C)

	C, t[14] = madd2(m, 2346860679127149877, t[15], C)

	C, t[15] = madd2(m, 7713876665391399680, t[16], C)

	C, t[16] = madd2(m, 16804552333605636830, t[17], C)

	C, t[17] = madd2(m, 16402045285100958250, t[18], C)

	C, t[18] = madd2(m, 18176937210785782677, t[19], C)

	C, t[19] = madd2(m, 15966221038481425824, t[20], C)

	C, t[20] = madd2(m, 6959743526085911234, t[21], C)

	C, t[21] = madd2(m, 12624744789978825023, t[22], C)

	C, t[22] = madd2(m, 7041736483744465896, t[23], C)

	C, t[23] = madd2(m, 552982698812971543, t[24], C)

	C, t[24] = madd2(m, 2684388112402793318, t[25], C)

	C, t[25] = madd3(m, 8611279412651616633, t[26], C, t[27])

	t[26], t[27] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[15], z[0], t[0])
	C, t[1] = madd2(x[15], z[1], t[1], C)
	C, t[2] = madd2(x[15], z[2], t[2], C)
	C, t[3] = madd2(x[15], z[3], t[3], C)
	C, t[4] = madd2(x[15], z[4], t[4], C)
	C, t[5] = madd2(x[15], z[5], t[5], C)
	C, t[6] = madd2(x[15], z[6], t[6], C)
	C, t[7] = madd2(x[15], z[7], t[7], C)
	C, t[8] = madd2(x[15], z[8], t[8], C)
	C, t[9] = madd2(x[15], z[9], t[9], C)
	C, t[10] = madd2(x[15], z[10], t[10], C)
	C, t[11] = madd2(x[15], z[11], t[11], C)
	C, t[12] = madd2(x[15], z[12], t[12], C)
	C, t[13] = madd2(x[15], z[13], t[13], C)
	C, t[14] = madd2(x[15], z[14], t[14], C)
	C, t[15] = madd2(x[15], z[15], t[15], C)
	C, t[16] = madd2(x[15], z[16], t[16], C)
	C, t[17] = madd2(x[15], z[17], t[17], C)
	C, t[18] = madd2(x[15], z[18], t[18], C)
	C, t[19] = madd2(x[15], z[19], t[19], C)
	C, t[20] = madd2(x[15], z[20], t[20], C)
	C, t[21] = madd2(x[15], z[21], t[21], C)
	C, t[22] = madd2(x[15], z[22], t[22], C)
	C, t[23] = madd2(x[15], z[23], t[23], C)
	C, t[24] = madd2(x[15], z[24], t[24], C)
	C, t[25] = madd2(x[15], z[25], t[25], C)
	C, t[26] = madd2(x[15], z[26], t[26], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6626265420794567181

	// -----------------------------------
	// Second loop
	C = madd0(m, 12440613579524619067, t[0])

	C, t[0] = madd2(m, 18006194176015342613, t[1], C)

	C, t[1] = madd2(m, 17457613988123037566, t[2], C)

	C, t[2] = madd2(m, 18368984800942220457, t[3], C)

	C, t[3] = madd2(m, 827738500950988109, t[4], C)

	C, t[4] = madd2(m, 10465983792485076748, t[5], C)

	C, t[5] = madd2(m, 13130147365989575090, t[6], C)

	C, t[6] = madd2(m, 15901529056822770985, t[7], C)

	C, t[7] = madd2(m, 13319898001022067246, t[8], C)

	C, t[8] = madd2(m, 12824488156229008848, t[9], C)

	C, t[9] = madd2(m, 9383015198101081139, t[10], C)

	C, t[10] = madd2(m, 10947642194440358220, t[11], C)

	C, t[11] = madd2(m, 14734856437812977659, t[12], C)

	C, t[12] = madd2(m, 9151126398053665599, t[13], C)

	C, t[13] = madd2(m, 18381890281880615828, t[14], C)

	C, t[14] = madd2(m, 2346860679127149877, t[15], C)

	C, t[15] = madd2(m, 7713876665391399680, t[16], C)

	C, t[16] = madd2(m, 16804552333605636830, t[17], C)

	C, t[17] = madd2(m, 16402045285100958250, t[18], C)

	C, t[18] = madd2(m, 18176937210785782677, t[19], C)

	C, t[19] = madd2(m, 15966221038481425824, t[20], C)

	C, t[20] = madd2(m, 6959743526085911234, t[21], C)

	C, t[21] = madd2(m, 12624744789978825023, t[22], C)

	C, t[22] = madd2(m, 7041736483744465896, t[23], C)

	C, t[23] = madd2(m, 552982698812971543, t[24], C)

	C, t[24] = madd2(m, 2684388112402793318, t[25], C)

	C, t[25] = madd3(m, 8611279412651616633, t[26], C, t[27])

	t[26], t[27] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[16], z[0], t[0])
	C, t[1] = madd2(x[16], z[1], t[1], C)
	C, t[2] = madd2(x[16], z[2], t[2], C)
	C, t[3] = madd2(x[16], z[3], t[3], C)
	C, t[4] = madd2(x[16], z[4], t[4], C)
	C, t[5] = madd2(x[16], z[5], t[5], C)
	C, t[6] = madd2(x[16], z[6], t[6], C)
	C, t[7] = madd2(x[16], z[7], t[7], C)
	C, t[8] = madd2(x[16], z[8], t[8], C)
	C, t[9] = madd2(x[16], z[9], t[9], C)
	C, t[10] = madd2(x[16], z[10], t[10], C)
	C, t[11] = madd2(x[16], z[11], t[11], C)
	C, t[12] = madd2(x[16], z[12], t[12], C)
	C, t[13] = madd2(x[16], z[13], t[13], C)
	C, t[14] = madd2(x[16], z[14], t[14], C)
	C, t[15] = madd2(x[16], z[15], t[15], C)
	C, t[16] = madd2(x[16], z[16], t[16], C)
	C, t[17] = madd2(x[16], z[17], t[17], C)
	C, t[18] = madd2(x[16], z[18], t[18], C)
	C, t[19] = madd2(x[16], z[19], t[19], C)
	C, t[20] = madd2(x[16], z[20], t[20], C)
	C, t[21] = madd2(x[16], z[21], t[21], C)
	C, t[22] = madd2(x[16], z[22], t[22], C)
	C, t[23] = madd2(x[16], z[23], t[23], C)
	C, t[24] = madd2(x[16], z[24], t[24], C)
	C, t[25] = madd2(x[16], z[25], t[25], C)
	C, t[26] = madd2(x[16], z[26], t[26], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6626265420794567181

	// -----------------------------------
	// Second loop
	C = madd0(m, 12440613579524619067, t[0])

	C, t[0] = madd2(m, 18006194176015342613, t[1], C)

	C, t[1] = madd2(m, 17457613988123037566, t[2], C)

	C, t[2] = madd2(m, 18368984800942220457, t[3], C)

	C, t[3] = madd2(m, 827738500950988109, t[4], C)

	C, t[4] = madd2(m, 10465983792485076748, t[5], C)

	C, t[5] = madd2(m, 13130147365989575090, t[6], C)

	C, t[6] = madd2(m, 15901529056822770985, t[7], C)

	C, t[7] = madd2(m, 13319898001022067246, t[8], C)

	C, t[8] = madd2(m, 12824488156229008848, t[9], C)

	C, t[9] = madd2(m, 9383015198101081139, t[10], C)

	C, t[10] = madd2(m, 10947642194440358220, t[11], C)

	C, t[11] = madd2(m, 14734856437812977659, t[12], C)

	C, t[12] = madd2(m, 9151126398053665599, t[13], C)

	C, t[13] = madd2(m, 18381890281880615828, t[14], C)

	C, t[14] = madd2(m, 2346860679127149877, t[15], C)

	C, t[15] = madd2(m, 7713876665391399680, t[16], C)

	C, t[16] = madd2(m, 16804552333605636830, t[17], C)

	C, t[17] = madd2(m, 16402045285100958250, t[18], C)

	C, t[18] = madd2(m, 18176937210785782677, t[19], C)

	C, t[19] = madd2(m, 15966221038481425824, t[20], C)

	C, t[20] = madd2(m, 6959743526085911234, t[21], C)

	C, t[21] = madd2(m, 12624744789978825023, t[22], C)

	C, t[22] = madd2(m, 7041736483744465896, t[23], C)

	C, t[23] = madd2(m, 552982698812971543, t[24], C)

	C, t[24] = madd2(m, 2684388112402793318, t[25], C)

	C, t[25] = madd3(m, 8611279412651616633, t[26], C, t[27])

	t[26], t[27] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[17], z[0], t[0])
	C, t[1] = madd2(x[17], z[1], t[1], C)
	C, t[2] = madd2(x[17], z[2], t[2], C)
	C, t[3] = madd2(x[17], z[3], t[3], C)
	C, t[4] = madd2(x[17], z[4], t[4], C)
	C, t[5] = madd2(x[17], z[5], t[5], C)
	C, t[6] = madd2(x[17], z[6], t[6], C)
	C, t[7] = madd2(x[17], z[7], t[7], C)
	C, t[8] = madd2(x[17], z[8], t[8], C)
	C, t[9] = madd2(x[17], z[9], t[9], C)
	C, t[10] = madd2(x[17], z[10], t[10], C)
	C, t[11] = madd2(x[17], z[11], t[11], C)
	C, t[12] = madd2(x[17], z[12], t[12], C)
	C, t[13] = madd2(x[17], z[13], t[13], C)
	C, t[14] = madd2(x[17], z[14], t[14], C)
	C, t[15] = madd2(x[17], z[15], t[15], C)
	C, t[16] = madd2(x[17], z[16], t[16], C)
	C, t[17] = madd2(x[17], z[17], t[17], C)
	C, t[18] = madd2(x[17], z[18], t[18], C)
	C, t[19] = madd2(x[17], z[19], t[19], C)
	C, t[20] = madd2(x[17], z[20], t[20], C)
	C, t[21] = madd2(x[17], z[21], t[21], C)
	C, t[22] = madd2(x[17], z[22], t[22], C)
	C, t[23] = madd2(x[17], z[23], t[23], C)
	C, t[24] = madd2(x[17], z[24], t[24], C)
	C, t[25] = madd2(x[17], z[25], t[25], C)
	C, t[26] = madd2(x[17], z[26], t[26], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6626265420794567181

	// -----------------------------------
	// Second loop
	C = madd0(m, 12440613579524619067, t[0])

	C, t[0] = madd2(m, 18006194176015342613, t[1], C)

	C, t[1] = madd2(m, 17457613988123037566, t[2], C)

	C, t[2] = madd2(m, 18368984800942220457, t[3], C)

	C, t[3] = madd2(m, 827738500950988109, t[4], C)

	C, t[4] = madd2(m, 10465983792485076748, t[5], C)

	C, t[5] = madd2(m, 13130147365989575090, t[6], C)

	C, t[6] = madd2(m, 15901529056822770985, t[7], C)

	C, t[7] = madd2(m, 13319898001022067246, t[8], C)

	C, t[8] = madd2(m, 12824488156229008848, t[9], C)

	C, t[9] = madd2(m, 9383015198101081139, t[10], C)

	C, t[10] = madd2(m, 10947642194440358220, t[11], C)

	C, t[11] = madd2(m, 14734856437812977659, t[12], C)

	C, t[12] = madd2(m, 9151126398053665599, t[13], C)

	C, t[13] = madd2(m, 18381890281880615828, t[14], C)

	C, t[14] = madd2(m, 2346860679127149877, t[15], C)

	C, t[15] = madd2(m, 7713876665391399680, t[16], C)

	C, t[16] = madd2(m, 16804552333605636830, t[17], C)

	C, t[17] = madd2(m, 16402045285100958250, t[18], C)

	C, t[18] = madd2(m, 18176937210785782677, t[19], C)

	C, t[19] = madd2(m, 15966221038481425824, t[20], C)

	C, t[20] = madd2(m, 6959743526085911234, t[21], C)

	C, t[21] = madd2(m, 12624744789978825023, t[22], C)

	C, t[22] = madd2(m, 7041736483744465896, t[23], C)

	C, t[23] = madd2(m, 552982698812971543, t[24], C)

	C, t[24] = madd2(m, 2684388112402793318, t[25], C)

	C, t[25] = madd3(m, 8611279412651616633, t[26], C, t[27])

	t[26], t[27] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[18], z[0], t[0])
	C, t[1] = madd2(x[18], z[1], t[1], C)
	C, t[2] = madd2(x[18], z[2], t[2], C)
	C, t[3] = madd2(x[18], z[3], t[3], C)
	C, t[4] = madd2(x[18], z[4], t[4], C)
	C, t[5] = madd2(x[18], z[5], t[5], C)
	C, t[6] = madd2(x[18], z[6], t[6], C)
	C, t[7] = madd2(x[18], z[7], t[7], C)
	C, t[8] = madd2(x[18], z[8], t[8], C)
	C, t[9] = madd2(x[18], z[9], t[9], C)
	C, t[10] = madd2(x[18], z[10], t[10], C)
	C, t[11] = madd2(x[18], z[11], t[11], C)
	C, t[12] = madd2(x[18], z[12], t[12], C)
	C, t[13] = madd2(x[18], z[13], t[13], C)
	C, t[14] = madd2(x[18], z[14], t[14], C)
	C, t[15] = madd2(x[18], z[15], t[15], C)
	C, t[16] = madd2(x[18], z[16], t[16], C)
	C, t[17] = madd2(x[18], z[17], t[17], C)
	C, t[18] = madd2(x[18], z[18], t[18], C)
	C, t[19] = madd2(x[18], z[19], t[19], C)
	C, t[20] = madd2(x[18], z[20], t[20], C)
	C, t[21] = madd2(x[18], z[21], t[21], C)
	C, t[22] = madd2(x[18], z[22], t[22], C)
	C, t[23] = madd2(x[18], z[23], t[23], C)
	C, t[24] = madd2(x[18], z[24], t[24], C)
	C, t[25] = madd2(x[18], z[25], t[25], C)
	C, t[26] = madd2(x[18], z[26], t[26], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6626265420794567181

	// -----------------------------------
	// Second loop
	C = madd0(m, 12440613579524619067, t[0])

	C, t[0] = madd2(m, 18006194176015342613, t[1], C)

	C, t[1] = madd2(m, 17457613988123037566, t[2], C)

	C, t[2] = madd2(m, 18368984800942220457, t[3], C)

	C, t[3] = madd2(m, 827738500950988109, t[4], C)

	C, t[4] = madd2(m, 10465983792485076748, t[5], C)

	C, t[5] = madd2(m, 13130147365989575090, t[6], C)

	C, t[6] = madd2(m, 15901529056822770985, t[7], C)

	C, t[7] = madd2(m, 13319898001022067246, t[8], C)

	C, t[8] = madd2(m, 12824488156229008848, t[9], C)

	C, t[9] = madd2(m, 9383015198101081139, t[10], C)

	C, t[10] = madd2(m, 10947642194440358220, t[11], C)

	C, t[11] = madd2(m, 14734856437812977659, t[12], C)

	C, t[12] = madd2(m, 9151126398053665599, t[13], C)

	C, t[13] = madd2(m, 18381890281880615828, t[14], C)

	C, t[14] = madd2(m, 2346860679127149877, t[15], C)

	C, t[15] = madd2(m, 7713876665391399680, t[16], C)

	C, t[16] = madd2(m, 16804552333605636830, t[17], C)

	C, t[17] = madd2(m, 16402045285100958250, t[18], C)

	C, t[18] = madd2(m, 18176937210785782677, t[19], C)

	C, t[19] = madd2(m, 15966221038481425824, t[20], C)

	C, t[20] = madd2(m, 6959743526085911234, t[21], C)

	C, t[21] = madd2(m, 12624744789978825023, t[22], C)

	C, t[22] = madd2(m, 7041736483744465896, t[23], C)

	C, t[23] = madd2(m, 552982698812971543, t[24], C)

	C, t[24] = madd2(m, 2684388112402793318, t[25], C)

	C, t[25] = madd3(m, 8611279412651616633, t[26], C, t[27])

	t[26], t[27] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[19], z[0], t[0])
	C, t[1] = madd2(x[19], z[1], t[1], C)
	C, t[2] = madd2(x[19], z[2], t[2], C)
	C, t[3] = madd2(x[19], z[3], t[3], C)
	C, t[4] = madd2(x[19], z[4], t[4], C)
	C, t[5] = madd2(x[19], z[5], t[5], C)
	C, t[6] = madd2(x[19], z[6], t[6], C)
	C, t[7] = madd2(x[19], z[7], t[7], C)
	C, t[8] = madd2(x[19], z[8], t[8], C)
	C, t[9] = madd2(x[19], z[9], t[9], C)
	C, t[10] = madd2(x[19], z[10], t[10], C)
	C, t[11] = madd2(x[19], z[11], t[11], C)
	C, t[12] = madd2(x[19], z[12], t[12], C)
	C, t[13] = madd2(x[19], z[13], t[13], C)
	C, t[14] = madd2(x[19], z[14], t[14], C)
	C, t[15] = madd2(x[19], z[15], t[15], C)
	C, t[16] = madd2(x[19], z[16], t[16], C)
	C, t[17] = madd2(x[19], z[17], t[17], C)
	C, t[18] = madd2(x[19], z[18], t[18], C)
	C, t[19] = madd2(x[19], z[19], t[19], C)
	C, t[20] = madd2(x[19], z[20], t[20], C)
	C, t[21] = madd2(x[19], z[21], t[21], C)
	C, t[22] = madd2(x[19], z[22], t[22], C)
	C, t[23] = madd2(x[19], z[23], t[23], C)
	C, t[24] = madd2(x[19], z[24], t[24], C)
	C, t[25] = madd2(x[19], z[25], t[25], C)
	C, t[26] = madd2(x[19], z[26], t[26], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6626265420794567181

	// -----------------------------------
	// Second loop
	C = madd0(m, 12440613579524619067, t[0])

	C, t[0] = madd2(m, 18006194176015342613, t[1], C)

	C, t[1] = madd2(m, 17457613988123037566, t[2], C)

	C, t[2] = madd2(m, 18368984800942220457, t[3], C)

	C, t[3] = madd2(m, 827738500950988109, t[4], C)

	C, t[4] = madd2(m, 10465983792485076748, t[5], C)

	C, t[5] = madd2(m, 13130147365989575090, t[6], C)

	C, t[6] = madd2(m, 15901529056822770985, t[7], C)

	C, t[7] = madd2(m, 13319898001022067246, t[8], C)

	C, t[8] = madd2(m, 12824488156229008848, t[9], C)

	C, t[9] = madd2(m, 9383015198101081139, t[10], C)

	C, t[10] = madd2(m, 10947642194440358220, t[11], C)

	C, t[11] = madd2(m, 14734856437812977659, t[12], C)

	C, t[12] = madd2(m, 9151126398053665599, t[13], C)

	C, t[13] = madd2(m, 18381890281880615828, t[14], C)

	C, t[14] = madd2(m, 2346860679127149877, t[15], C)

	C, t[15] = madd2(m, 7713876665391399680, t[16], C)

	C, t[16] = madd2(m, 16804552333605636830, t[17], C)

	C, t[17] = madd2(m, 16402045285100958250, t[18], C)

	C, t[18] = madd2(m, 18176937210785782677, t[19], C)

	C, t[19] = madd2(m, 15966221038481425824, t[20], C)

	C, t[20] = madd2(m, 6959743526085911234, t[21], C)

	C, t[21] = madd2(m, 12624744789978825023, t[22], C)

	C, t[22] = madd2(m, 7041736483744465896, t[23], C)

	C, t[23] = madd2(m, 552982698812971543, t[24], C)

	C, t[24] = madd2(m, 2684388112402793318, t[25], C)

	C, t[25] = madd3(m, 8611279412651616633, t[26], C, t[27])

	t[26], t[27] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[20], z[0], t[0])
	C, t[1] = madd2(x[20], z[1], t[1], C)
	C, t[2] = madd2(x[20], z[2], t[2], C)
	C, t[3] = madd2(x[20], z[3], t[3], C)
	C, t[4] = madd2(x[20], z[4], t[4], C)
	C, t[5] = madd2(x[20], z[5], t[5], C)
	C, t[6] = madd2(x[20], z[6], t[6], C)
	C, t[7] = madd2(x[20], z[7], t[7], C)
	C, t[8] = madd2(x[20], z[8], t[8], C)
	C, t[9] = madd2(x[20], z[9], t[9], C)
	C, t[10] = madd2(x[20], z[10], t[10], C)
	C, t[11] = madd2(x[20], z[11], t[11], C)
	C, t[12] = madd2(x[20], z[12], t[12], C)
	C, t[13] = madd2(x[20], z[13], t[13], C)
	C, t[14] = madd2(x[20], z[14], t[14], C)
	C, t[15] = madd2(x[20], z[15], t[15], C)
	C, t[16] = madd2(x[20], z[16], t[16], C)
	C, t[17] = madd2(x[20], z[17], t[17], C)
	C, t[18] = madd2(x[20], z[18], t[18], C)
	C, t[19] = madd2(x[20], z[19], t[19], C)
	C, t[20] = madd2(x[20], z[20], t[20], C)
	C, t[21] = madd2(x[20], z[21], t[21], C)
	C, t[22] = madd2(x[20], z[22], t[22], C)
	C, t[23] = madd2(x[20], z[23], t[23], C)
	C, t[24] = madd2(x[20], z[24], t[24], C)
	C, t[25] = madd2(x[20], z[25], t[25], C)
	C, t[26] = madd2(x[20], z[26], t[26], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6626265420794567181

	// -----------------------------------
	// Second loop
	C = madd0(m, 12440613579524619067, t[0])

	C, t[0] = madd2(m, 18006194176015342613, t[1], C)

	C, t[1] = madd2(m, 17457613988123037566, t[2], C)

	C, t[2] = madd2(m, 18368984800942220457, t[3], C)

	C, t[3] = madd2(m, 827738500950988109, t[4], C)

	C, t[4] = madd2(m, 10465983792485076748, t[5], C)

	C, t[5] = madd2(m, 13130147365989575090, t[6], C)

	C, t[6] = madd2(m, 15901529056822770985, t[7], C)

	C, t[7] = madd2(m, 13319898001022067246, t[8], C)

	C, t[8] = madd2(m, 12824488156229008848, t[9], C)

	C, t[9] = madd2(m, 9383015198101081139, t[10], C)

	C, t[10] = madd2(m, 10947642194440358220, t[11], C)

	C, t[11] = madd2(m, 14734856437812977659, t[12], C)

	C, t[12] = madd2(m, 9151126398053665599, t[13], C)

	C, t[13] = madd2(m, 18381890281880615828, t[14], C)

	C, t[14] = madd2(m, 2346860679127149877, t[15], C)

	C, t[15] = madd2(m, 7713876665391399680, t[16], C)

	C, t[16] = madd2(m, 16804552333605636830, t[17], C)

	C, t[17] = madd2(m, 16402045285100958250, t[18], C)

	C, t[18] = madd2(m, 18176937210785782677, t[19], C)

	C, t[19] = madd2(m, 15966221038481425824, t[20], C)

	C, t[20] = madd2(m, 6959743526085911234, t[21], C)

	C, t[21] = madd2(m, 12624744789978825023, t[22], C)

	C, t[22] = madd2(m, 7041736483744465896, t[23], C)

	C, t[23] = madd2(m, 552982698812971543, t[24], C)

	C, t[24] = madd2(m, 2684388112402793318, t[25], C)

	C, t[25] = madd3(m, 8611279412651616633, t[26], C, t[27])

	t[26], t[27] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[21], z[0], t[0])
	C, t[1] = madd2(x[21], z[1], t[1], C)
	C, t[2] = madd2(x[21], z[2], t[2], C)
	C, t[3] = madd2(x[21], z[3], t[3], C)
	C, t[4] = madd2(x[21], z[4], t[4], C)
	C, t[5] = madd2(x[21], z[5], t[5], C)
	C, t[6] = madd2(x[21], z[6], t[6], C)
	C, t[7] = madd2(x[21], z[7], t[7], C)
	C, t[8] = madd2(x[21], z[8], t[8], C)
	C, t[9] = madd2(x[21], z[9], t[9], C)
	C, t[10] = madd2(x[21], z[10], t[10], C)
	C, t[11] = madd2(x[21], z[11], t[11], C)
	C, t[12] = madd2(x[21], z[12], t[12], C)
	C, t[13] = madd2(x[21], z[13], t[13], C)
	C, t[14] = madd2(x[21], z[14], t[14], C)
	C, t[15] = madd2(x[21], z[15], t[15], C)
	C, t[16] = madd2(x[21], z[16], t[16], C)
	C, t[17] = madd2(x[21], z[17], t[17], C)
	C, t[18] = madd2(x[21], z[18], t[18], C)
	C, t[19] = madd2(x[21], z[19], t[19], C)
	C, t[20] = madd2(x[21], z[20], t[20], C)
	C, t[21] = madd2(x[21], z[21], t[21], C)
	C, t[22] = madd2(x[21], z[22], t[22], C)
	C, t[23] = madd2(x[21], z[23], t[23], C)
	C, t[24] = madd2(x[21], z[24], t[24], C)
	C, t[25] = madd2(x[21], z[25], t[25], C)
	C, t[26] = madd2(x[21], z[26], t[26], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6626265420794567181

	// -----------------------------------
	// Second loop
	C = madd0(m, 12440613579524619067, t[0])

	C, t[0] = madd2(m, 18006194176015342613, t[1], C)

	C, t[1] = madd2(m, 17457613988123037566, t[2], C)

	C, t[2] = madd2(m, 18368984800942220457, t[3], C)

	C, t[3] = madd2(m, 827738500950988109, t[4], C)

	C, t[4] = madd2(m, 10465983792485076748, t[5], C)

	C, t[5] = madd2(m, 13130147365989575090, t[6], C)

	C, t[6] = madd2(m, 15901529056822770985, t[7], C)

	C, t[7] = madd2(m, 13319898001022067246, t[8], C)

	C, t[8] = madd2(m, 12824488156229008848, t[9], C)

	C, t[9] = madd2(m, 9383015198101081139, t[10], C)

	C, t[10] = madd2(m, 10947642194440358220, t[11], C)

	C, t[11] = madd2(m, 14734856437812977659, t[12], C)

	C, t[12] = madd2(m, 9151126398053665599, t[13], C)

	C, t[13] = madd2(m, 18381890281880615828, t[14], C)

	C, t[14] = madd2(m, 2346860679127149877, t[15], C)

	C, t[15] = madd2(m, 7713876665391399680, t[16], C)

	C, t[16] = madd2(m, 16804552333605636830, t[17], C)

	C, t[17] = madd2(m, 16402045285100958250, t[18], C)

	C, t[18] = madd2(m, 18176937210785782677, t[19], C)

	C, t[19] = madd2(m, 15966221038481425824, t[20], C)

	C, t[20] = madd2(m, 6959743526085911234, t[21], C)

	C, t[21] = madd2(m, 12624744789978825023, t[22], C)

	C, t[22] = madd2(m, 7041736483744465896, t[23], C)

	C, t[23] = madd2(m, 552982698812971543, t[24], C)

	C, t[24] = madd2(m, 2684388112402793318, t[25], C)

	C, t[25] = madd3(m, 8611279412651616633, t[26], C, t[27])

	t[26], t[27] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[22], z[0], t[0])
	C, t[1] = madd2(x[22], z[1], t[1], C)
	C, t[2] = madd2(x[22], z[2], t[2], C)
	C, t[3] = madd2(x[22], z[3], t[3], C)
	C, t[4] = madd2(x[22], z[4], t[4], C)
	C, t[5] = madd2(x[22], z[5], t[5], C)
	C, t[6] = madd2(x[22], z[6], t[6], C)
	C, t[7] = madd2(x[22], z[7], t[7], C)
	C, t[8] = madd2(x[22], z[8], t[8], C)
	C, t[9] = madd2(x[22], z[9], t[9], C)
	C, t[10] = madd2(x[22], z[10], t[10], C)
	C, t[11] = madd2(x[22], z[11], t[11], C)
	C, t[12] = madd2(x[22], z[12], t[12], C)
	C, t[13] = madd2(x[22], z[13], t[13], C)
	C, t[14] = madd2(x[22], z[14], t[14], C)
	C, t[15] = madd2(x[22], z[15], t[15], C)
	C, t[16] = madd2(x[22], z[16], t[16], C)
	C, t[17] = madd2(x[22], z[17], t[17], C)
	C, t[18] = madd2(x[22], z[18], t[18], C)
	C, t[19] = madd2(x[22], z[19], t[19], C)
	C, t[20] = madd2(x[22], z[20], t[20], C)
	C, t[21] = madd2(x[22], z[21], t[21], C)
	C, t[22] = madd2(x[22], z[22], t[22], C)
	C, t[23] = madd2(x[22], z[23], t[23], C)
	C, t[24] = madd2(x[22], z[24], t[24], C)
	C, t[25] = madd2(x[22], z[25], t[25], C)
	C, t[26] = madd2(x[22], z[26], t[26], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6626265420794567181

	// -----------------------------------
	// Second loop
	C = madd0(m, 12440613579524619067, t[0])

	C, t[0] = madd2(m, 18006194176015342613, t[1], C)

	C, t[1] = madd2(m, 17457613988123037566, t[2], C)

	C, t[2] = madd2(m, 18368984800942220457, t[3], C)

	C, t[3] = madd2(m, 827738500950988109, t[4], C)

	C, t[4] = madd2(m, 10465983792485076748, t[5], C)

	C, t[5] = madd2(m, 13130147365989575090, t[6], C)

	C, t[6] = madd2(m, 15901529056822770985, t[7], C)

	C, t[7] = madd2(m, 13319898001022067246, t[8], C)

	C, t[8] = madd2(m, 12824488156229008848, t[9], C)

	C, t[9] = madd2(m, 9383015198101081139, t[10], C)

	C, t[10] = madd2(m, 10947642194440358220, t[11], C)

	C, t[11] = madd2(m, 14734856437812977659, t[12], C)

	C, t[12] = madd2(m, 9151126398053665599, t[13], C)

	C, t[13] = madd2(m, 18381890281880615828, t[14], C)

	C, t[14] = madd2(m, 2346860679127149877, t[15], C)

	C, t[15] = madd2(m, 7713876665391399680, t[16], C)

	C, t[16] = madd2(m, 16804552333605636830, t[17], C)

	C, t[17] = madd2(m, 16402045285100958250, t[18], C)

	C, t[18] = madd2(m, 18176937210785782677, t[19], C)

	C, t[19] = madd2(m, 15966221038481425824, t[20], C)

	C, t[20] = madd2(m, 6959743526085911234, t[21], C)

	C, t[21] = madd2(m, 12624744789978825023, t[22], C)

	C, t[22] = madd2(m, 7041736483744465896, t[23], C)

	C, t[23] = madd2(m, 552982698812971543, t[24], C)

	C, t[24] = madd2(m, 2684388112402793318, t[25], C)

	C, t[25] = madd3(m, 8611279412651616633, t[26], C, t[27])

	t[26], t[27] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[23], z[0], t[0])
	C, t[1] = madd2(x[23], z[1], t[1], C)
	C, t[2] = madd2(x[23], z[2], t[2], C)
	C, t[3] = madd2(x[23], z[3], t[3], C)
	C, t[4] = madd2(x[23], z[4], t[4], C)
	C, t[5] = madd2(x[23], z[5], t[5], C)
	C, t[6] = madd2(x[23], z[6], t[6], C)
	C, t[7] = madd2(x[23], z[7], t[7], C)
	C, t[8] = madd2(x[23], z[8], t[8], C)
	C, t[9] = madd2(x[23], z[9], t[9], C)
	C, t[10] = madd2(x[23], z[10], t[10], C)
	C, t[11] = madd2(x[23], z[11], t[11], C)
	C, t[12] = madd2(x[23], z[12], t[12], C)
	C, t[13] = madd2(x[23], z[13], t[13], C)
	C, t[14] = madd2(x[23], z[14], t[14], C)
	C, t[15] = madd2(x[23], z[15], t[15], C)
	C, t[16] = madd2(x[23], z[16], t[16], C)
	C, t[17] = madd2(x[23], z[17], t[17], C)
	C, t[18] = madd2(x[23], z[18], t[18], C)
	C, t[19] = madd2(x[23], z[19], t[19], C)
	C, t[20] = madd2(x[23], z[20], t[20], C)
	C, t[21] = madd2(x[23], z[21], t[21], C)
	C, t[22] = madd2(x[23], z[22], t[22], C)
	C, t[23] = madd2(x[23], z[23], t[23], C)
	C, t[24] = madd2(x[23], z[24], t[24], C)
	C, t[25] = madd2(x[23], z[25], t[25], C)
	C, t[26] = madd2(x[23], z[26], t[26], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6626265420794567181

	// -----------------------------------
	// Second loop
	C = madd0(m, 12440613579524619067, t[0])

	C, t[0] = madd2(m, 18006194176015342613, t[1], C)

	C, t[1] = madd2(m, 17457613988123037566, t[2], C)

	C, t[2] = madd2(m, 18368984800942220457, t[3], C)

	C, t[3] = madd2(m, 827738500950988109, t[4], C)

	C, t[4] = madd2(m, 10465983792485076748, t[5], C)

	C, t[5] = madd2(m, 13130147365989575090, t[6], C)

	C, t[6] = madd2(m, 15901529056822770985, t[7], C)

	C, t[7] = madd2(m, 13319898001022067246, t[8], C)

	C, t[8] = madd2(m, 12824488156229008848, t[9], C)

	C, t[9] = madd2(m, 9383015198101081139, t[10], C)

	C, t[10] = madd2(m, 10947642194440358220, t[11], C)

	C, t[11] = madd2(m, 14734856437812977659, t[12], C)

	C, t[12] = madd2(m, 9151126398053665599, t[13], C)

	C, t[13] = madd2(m, 18381890281880615828, t[14], C)

	C, t[14] = madd2(m, 2346860679127149877, t[15], C)

	C, t[15] = madd2(m, 7713876665391399680, t[16], C)

	C, t[16] = madd2(m, 16804552333605636830, t[17], C)

	C, t[17] = madd2(m, 16402045285100958250, t[18], C)

	C, t[18] = madd2(m, 18176937210785782677, t[19], C)

	C, t[19] = madd2(m, 15966221038481425824, t[20], C)

	C, t[20] = madd2(m, 6959743526085911234, t[21], C)

	C, t[21] = madd2(m, 12624744789978825023, t[22], C)

	C, t[22] = madd2(m, 7041736483744465896, t[23], C)

	C, t[23] = madd2(m, 552982698812971543, t[24], C)

	C, t[24] = madd2(m, 2684388112402793318, t[25], C)

	C, t[25] = madd3(m, 8611279412651616633, t[26], C, t[27])

	t[26], t[27] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[24], z[0], t[0])
	C, t[1] = madd2(x[24], z[1], t[1], C)
	C, t[2] = madd2(x[24], z[2], t[2], C)
	C, t[3] = madd2(x[24], z[3], t[3], C)
	C, t[4] = madd2(x[24], z[4], t[4], C)
	C, t[5] = madd2(x[24], z[5], t[5], C)
	C, t[6] = madd2(x[24], z[6], t[6], C)
	C, t[7] = madd2(x[24], z[7], t[7], C)
	C, t[8] = madd2(x[24], z[8], t[8], C)
	C, t[9] = madd2(x[24], z[9], t[9], C)
	C, t[10] = madd2(x[24], z[10], t[10], C)
	C, t[11] = madd2(x[24], z[11], t[11], C)
	C, t[12] = madd2(x[24], z[12], t[12], C)
	C, t[13] = madd2(x[24], z[13], t[13], C)
	C, t[14] = madd2(x[24], z[14], t[14], C)
	C, t[15] = madd2(x[24], z[15], t[15], C)
	C, t[16] = madd2(x[24], z[16], t[16], C)
	C, t[17] = madd2(x[24], z[17], t[17], C)
	C, t[18] = madd2(x[24], z[18], t[18], C)
	C, t[19] = madd2(x[24], z[19], t[19], C)
	C, t[20] = madd2(x[24], z[20], t[20], C)
	C, t[21] = madd2(x[24], z[21], t[21], C)
	C, t[22] = madd2(x[24], z[22], t[22], C)
	C, t[23] = madd2(x[24], z[23], t[23], C)
	C, t[24] = madd2(x[24], z[24], t[24], C)
	C, t[25] = madd2(x[24], z[25], t[25], C)
	C, t[26] = madd2(x[24], z[26], t[26], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6626265420794567181

	// -----------------------------------
	// Second loop
	C = madd0(m, 12440613579524619067, t[0])

	C, t[0] = madd2(m, 18006194176015342613, t[1], C)

	C, t[1] = madd2(m, 17457613988123037566, t[2], C)

	C, t[2] = madd2(m, 18368984800942220457, t[3], C)

	C, t[3] = madd2(m, 827738500950988109, t[4], C)

	C, t[4] = madd2(m, 10465983792485076748, t[5], C)

	C, t[5] = madd2(m, 13130147365989575090, t[6], C)

	C, t[6] = madd2(m, 15901529056822770985, t[7], C)

	C, t[7] = madd2(m, 13319898001022067246, t[8], C)

	C, t[8] = madd2(m, 12824488156229008848, t[9], C)

	C, t[9] = madd2(m, 9383015198101081139, t[10], C)

	C, t[10] = madd2(m, 10947642194440358220, t[11], C)

	C, t[11] = madd2(m, 14734856437812977659, t[12], C)

	C, t[12] = madd2(m, 9151126398053665599, t[13], C)

	C, t[13] = madd2(m, 18381890281880615828, t[14], C)

	C, t[14] = madd2(m, 2346860679127149877, t[15], C)

	C, t[15] = madd2(m, 7713876665391399680, t[16], C)

	C, t[16] = madd2(m, 16804552333605636830, t[17], C)

	C, t[17] = madd2(m, 16402045285100958250, t[18], C)

	C, t[18] = madd2(m, 18176937210785782677, t[19], C)

	C, t[19] = madd2(m, 15966221038481425824, t[20], C)

	C, t[20] = madd2(m, 6959743526085911234, t[21], C)

	C, t[21] = madd2(m, 12624744789978825023, t[22], C)

	C, t[22] = madd2(m, 7041736483744465896, t[23], C)

	C, t[23] = madd2(m, 552982698812971543, t[24], C)

	C, t[24] = madd2(m, 2684388112402793318, t[25], C)

	C, t[25] = madd3(m, 8611279412651616633, t[26], C, t[27])

	t[26], t[27] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[25], z[0], t[0])
	C, t[1] = madd2(x[25], z[1], t[1], C)
	C, t[2] = madd2(x[25], z[2], t[2], C)
	C, t[3] = madd2(x[25], z[3], t[3], C)
	C, t[4] = madd2(x[25], z[4], t[4], C)
	C, t[5] = madd2(x[25], z[5], t[5], C)
	C, t[6] = madd2(x[25], z[6], t[6], C)
	C, t[7] = madd2(x[25], z[7], t[7], C)
	C, t[8] = madd2(x[25], z[8], t[8], C)
	C, t[9] = madd2(x[25], z[9], t[9], C)
	C, t[10] = madd2(x[25], z[10], t[10], C)
	C, t[11] = madd2(x[25], z[11], t[11], C)
	C, t[12] = madd2(x[25], z[12], t[12], C)
	C, t[13] = madd2(x[25], z[13], t[13], C)
	C, t[14] = madd2(x[25], z[14], t[14], C)
	C, t[15] = madd2(x[25], z[15], t[15], C)
	C, t[16] = madd2(x[25], z[16], t[16], C)
	C, t[17] = madd2(x[25], z[17], t[17], C)
	C, t[18] = madd2(x[25], z[18], t[18], C)
	C, t[19] = madd2(x[25], z[19], t[19], C)
	C, t[20] = madd2(x[25], z[20], t[20], C)
	C, t[21] = madd2(x[25], z[21], t[21], C)
	C, t[22] = madd2(x[25], z[22], t[22], C)
	C, t[23] = madd2(x[25], z[23], t[23], C)
	C, t[24] = madd2(x[25], z[24], t[24], C)
	C, t[25] = madd2(x[25], z[25], t[25], C)
	C, t[26] = madd2(x[25], z[26], t[26], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6626265420794567181

	// -----------------------------------
	// Second loop
	C = madd0(m, 12440613579524619067, t[0])

	C, t[0] = madd2(m, 18006194176015342613, t[1], C)

	C, t[1] = madd2(m, 17457613988123037566, t[2], C)

	C, t[2] = madd2(m, 18368984800942220457, t[3], C)

	C, t[3] = madd2(m, 827738500950988109, t[4], C)

	C, t[4] = madd2(m, 10465983792485076748, t[5], C)

	C, t[5] = madd2(m, 13130147365989575090, t[6], C)

	C, t[6] = madd2(m, 15901529056822770985, t[7], C)

	C, t[7] = madd2(m, 13319898001022067246, t[8], C)

	C, t[8] = madd2(m, 12824488156229008848, t[9], C)

	C, t[9] = madd2(m, 9383015198101081139, t[10], C)

	C, t[10] = madd2(m, 10947642194440358220, t[11], C)

	C, t[11] = madd2(m, 14734856437812977659, t[12], C)

	C, t[12] = madd2(m, 9151126398053665599, t[13], C)

	C, t[13] = madd2(m, 18381890281880615828, t[14], C)

	C, t[14] = madd2(m, 2346860679127149877, t[15], C)

	C, t[15] = madd2(m, 7713876665391399680, t[16], C)

	C, t[16] = madd2(m, 16804552333605636830, t[17], C)

	C, t[17] = madd2(m, 16402045285100958250, t[18], C)

	C, t[18] = madd2(m, 18176937210785782677, t[19], C)

	C, t[19] = madd2(m, 15966221038481425824, t[20], C)

	C, t[20] = madd2(m, 6959743526085911234, t[21], C)

	C, t[21] = madd2(m, 12624744789978825023, t[22], C)

	C, t[22] = madd2(m, 7041736483744465896, t[23], C)

	C, t[23] = madd2(m, 552982698812971543, t[24], C)

	C, t[24] = madd2(m, 2684388112402793318, t[25], C)

	C, t[25] = madd3(m, 8611279412651616633, t[26], C, t[27])

	t[26], t[27] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[26], z[0], t[0])
	C, t[1] = madd2(x[26], z[1], t[1], C)
	C, t[2] = madd2(x[26], z[2], t[2], C)
	C, t[3] = madd2(x[26], z[3], t[3], C)
	C, t[4] = madd2(x[26], z[4], t[4], C)
	C, t[5] = madd2(x[26], z[5], t[5], C)
	C, t[6] = madd2(x[26], z[6], t[6], C)
	C, t[7] = madd2(x[26], z[7], t[7], C)
	C, t[8] = madd2(x[26], z[8], t[8], C)
	C, t[9] = madd2(x[26], z[9], t[9], C)
	C, t[10] = madd2(x[26], z[10], t[10], C)
	C, t[11] = madd2(x[26], z[11], t[11], C)
	C, t[12] = madd2(x[26], z[12], t[12], C)
	C, t[13] = madd2(x[26], z[13], t[13], C)
	C, t[14] = madd2(x[26], z[14], t[14], C)
	C, t[15] = madd2(x[26], z[15], t[15], C)
	C, t[16] = madd2(x[26], z[16], t[16], C)
	C, t[17] = madd2(x[26], z[17], t[17], C)
	C, t[18] = madd2(x[26], z[18], t[18], C)
	C, t[19] = madd2(x[26], z[19], t[19], C)
	C, t[20] = madd2(x[26], z[20], t[20], C)
	C, t[21] = madd2(x[26], z[21], t[21], C)
	C, t[22] = madd2(x[26], z[22], t[22], C)
	C, t[23] = madd2(x[26], z[23], t[23], C)
	C, t[24] = madd2(x[26], z[24], t[24], C)
	C, t[25] = madd2(x[26], z[25], t[25], C)
	C, t[26] = madd2(x[26], z[26], t[26], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6626265420794567181

	// -----------------------------------
	// Second loop
	C = madd0(m, 12440613579524619067, t[0])

	C, t[0] = madd2(m, 18006194176015342613, t[1], C)

	C, t[1] = madd2(m, 17457613988123037566, t[2], C)

	C, t[2] = madd2(m, 18368984800942220457, t[3], C)

	C, t[3] = madd2(m, 827738500950988109, t[4], C)

	C, t[4] = madd2(m, 10465983792485076748, t[5], C)

	C, t[5] = madd2(m, 13130147365989575090, t[6], C)

	C, t[6] = madd2(m, 15901529056822770985, t[7], C)

	C, t[7] = madd2(m, 13319898001022067246, t[8], C)

	C, t[8] = madd2(m, 12824488156229008848, t[9], C)

	C, t[9] = madd2(m, 9383015198101081139, t[10], C)

	C, t[10] = madd2(m, 10947642194440358220, t[11], C)

	C, t[11] = madd2(m, 14734856437812977659, t[12], C)

	C, t[12] = madd2(m, 9151126398053665599, t[13], C)

	C, t[13] = madd2(m, 18381890281880615828, t[14], C)

	C, t[14] = madd2(m, 2346860679127149877, t[15], C)

	C, t[15] = madd2(m, 7713876665391399680, t[16], C)

	C, t[16] = madd2(m, 16804552333605636830, t[17], C)

	C, t[17] = madd2(m, 16402045285100958250, t[18], C)

	C, t[18] = madd2(m, 18176937210785782677, t[19], C)

	C, t[19] = madd2(m, 15966221038481425824, t[20], C)

	C, t[20] = madd2(m, 6959743526085911234, t[21], C)

	C, t[21] = madd2(m, 12624744789978825023, t[22], C)

	C, t[22] = madd2(m, 7041736483744465896, t[23], C)

	C, t[23] = madd2(m, 552982698812971543, t[24], C)

	C, t[24] = madd2(m, 2684388112402793318, t[25], C)

	C, t[25] = madd3(m, 8611279412651616633, t[26], C, t[27])

	t[26], t[27] = bits.Add64(D, C, 0)

	if t[27] != 0 {
		// we need to reduce, we have a result on 28 words
		var b uint64
		z[0], b = bits.Sub64(t[0], 12440613579524619067, 0)
		z[1], b = bits.Sub64(t[1], 18006194176015342613, b)
		z[2], b = bits.Sub64(t[2], 17457613988123037566, b)
		z[3], b = bits.Sub64(t[3], 18368984800942220457, b)
		z[4], b = bits.Sub64(t[4], 827738500950988109, b)
		z[5], b = bits.Sub64(t[5], 10465983792485076748, b)
		z[6], b = bits.Sub64(t[6], 13130147365989575090, b)
		z[7], b = bits.Sub64(t[7], 15901529056822770985, b)
		z[8], b = bits.Sub64(t[8], 13319898001022067246, b)
		z[9], b = bits.Sub64(t[9], 12824488156229008848, b)
		z[10], b = bits.Sub64(t[10], 9383015198101081139, b)
		z[11], b = bits.Sub64(t[11], 10947642194440358220, b)
		z[12], b = bits.Sub64(t[12], 14734856437812977659, b)
		z[13], b = bits.Sub64(t[13], 9151126398053665599, b)
		z[14], b = bits.Sub64(t[14], 18381890281880615828, b)
		z[15], b = bits.Sub64(t[15], 2346860679127149877, b)
		z[16], b = bits.Sub64(t[16], 7713876665391399680, b)
		z[17], b = bits.Sub64(t[17], 16804552333605636830, b)
		z[18], b = bits.Sub64(t[18], 16402045285100958250, b)
		z[19], b = bits.Sub64(t[19], 18176937210785782677, b)
		z[20], b = bits.Sub64(t[20], 15966221038481425824, b)
		z[21], b = bits.Sub64(t[21], 6959743526085911234, b)
		z[22], b = bits.Sub64(t[22], 12624744789978825023, b)
		z[23], b = bits.Sub64(t[23], 7041736483744465896, b)
		z[24], b = bits.Sub64(t[24], 552982698812971543, b)
		z[25], b = bits.Sub64(t[25], 2684388112402793318, b)
		z[26], _ = bits.Sub64(t[26], 8611279412651616633, b)
		return z
	}

	// copy t into z
	z[0] = t[0]
	z[1] = t[1]
	z[2] = t[2]
	z[3] = t[3]
	z[4] = t[4]
	z[5] = t[5]
	z[6] = t[6]
	z[7] = t[7]
	z[8] = t[8]
	z[9] = t[9]
	z[10] = t[10]
	z[11] = t[11]
	z[12] = t[12]
	z[13] = t[13]
	z[14] = t[14]
	z[15] = t[15]
	z[16] = t[16]
	z[17] = t[17]
	z[18] = t[18]
	z[19] = t[19]
	z[20] = t[20]
	z[21] = t[21]
	z[22] = t[22]
	z[23] = t[23]
	z[24] = t[24]
	z[25] = t[25]
	z[26] = t[26]

	// if z > q --> z -= q
	// note: this is NOT constant time
	if !(z[26] < 8611279412651616633 || (z[26] == 8611279412651616633 && (z[25] < 2684388112402793318 || (z[25] == 2684388112402793318 && (z[24] < 552982698812971543 || (z[24] == 552982698812971543 && (z[23] < 7041736483744465896 || (z[23] == 7041736483744465896 && (z[22] < 12624744789978825023 || (z[22] == 12624744789978825023 && (z[21] < 6959743526085911234 || (z[21] == 6959743526085911234 && (z[20] < 15966221038481425824 || (z[20] == 15966221038481425824 && (z[19] < 18176937210785782677 || (z[19] == 18176937210785782677 && (z[18] < 16402045285100958250 || (z[18] == 16402045285100958250 && (z[17] < 16804552333605636830 || (z[17] == 16804552333605636830 && (z[16] < 7713876665391399680 || (z[16] == 7713876665391399680 && (z[15] < 2346860679127149877 || (z[15] == 2346860679127149877 && (z[14] < 18381890281880615828 || (z[14] == 18381890281880615828 && (z[13] < 9151126398053665599 || (z[13] == 9151126398053665599 && (z[12] < 14734856437812977659 || (z[12] == 14734856437812977659 && (z[11] < 10947642194440358220 || (z[11] == 10947642194440358220 && (z[10] < 9383015198101081139 || (z[10] == 9383015198101081139 && (z[9] < 12824488156229008848 || (z[9] == 12824488156229008848 && (z[8] < 13319898001022067246 || (z[8] == 13319898001022067246 && (z[7] < 15901529056822770985 || (z[7] == 15901529056822770985 && (z[6] < 13130147365989575090 || (z[6] == 13130147365989575090 && (z[5] < 10465983792485076748 || (z[5] == 10465983792485076748 && (z[4] < 827738500950988109 || (z[4] == 827738500950988109 && (z[3] < 18368984800942220457 || (z[3] == 18368984800942220457 && (z[2] < 17457613988123037566 || (z[2] == 17457613988123037566 && (z[1] < 18006194176015342613 || (z[1] == 18006194176015342613 && (z[0] < 12440613579524619067))))))))))))))))))))))))))))))))))))))))))))))))))))) {
		var b uint64
		z[0], b = bits.Sub64(z[0], 12440613579524619067, 0)
		z[1], b = bits.Sub64(z[1], 18006194176015342613, b)
		z[2], b = bits.Sub64(z[2], 17457613988123037566, b)
		z[3], b = bits.Sub64(z[3], 18368984800942220457, b)
		z[4], b = bits.Sub64(z[4], 827738500950988109, b)
		z[5], b = bits.Sub64(z[5], 10465983792485076748, b)
		z[6], b = bits.Sub64(z[6], 13130147365989575090, b)
		z[7], b = bits.Sub64(z[7], 15901529056822770985, b)
		z[8], b = bits.Sub64(z[8], 13319898001022067246, b)
		z[9], b = bits.Sub64(z[9], 12824488156229008848, b)
		z[10], b = bits.Sub64(z[10], 9383015198101081139, b)
		z[11], b = bits.Sub64(z[11], 10947642194440358220, b)
		z[12], b = bits.Sub64(z[12], 14734856437812977659, b)
		z[13], b = bits.Sub64(z[13], 9151126398053665599, b)
		z[14], b = bits.Sub64(z[14], 18381890281880615828, b)
		z[15], b = bits.Sub64(z[15], 2346860679127149877, b)
		z[16], b = bits.Sub64(z[16], 7713876665391399680, b)
		z[17], b = bits.Sub64(z[17], 16804552333605636830, b)
		z[18], b = bits.Sub64(z[18], 16402045285100958250, b)
		z[19], b = bits.Sub64(z[19], 18176937210785782677, b)
		z[20], b = bits.Sub64(z[20], 15966221038481425824, b)
		z[21], b = bits.Sub64(z[21], 6959743526085911234, b)
		z[22], b = bits.Sub64(z[22], 12624744789978825023, b)
		z[23], b = bits.Sub64(z[23], 7041736483744465896, b)
		z[24], b = bits.Sub64(z[24], 552982698812971543, b)
		z[25], b = bits.Sub64(z[25], 2684388112402793318, b)
		z[26], _ = bits.Sub64(z[26], 8611279412651616633, b)
	}
	return z
}

// Legendre returns the Legendre symbol of z (either +1, -1, or 0.)
func (z *Element27) Legendre() int {
	var l Element27
	// z^((q-1)/2)
	l.Exp(*z,
		15443678826617085341,
		9003097088007671306,
		17952179030916294591,
		18407864437325886036,
		413869250475494054,
		5232991896242538374,
		15788445719849563353,
		7950764528411385492,
		6659949000511033623,
		15635616114969280232,
		4691507599050540569,
		14697193134074954918,
		16590800255761264637,
		4575563199026832799,
		18414317177795083722,
		1173430339563574938,
		3856938332695699840,
		8402276166802818415,
		17424394679405254933,
		9088468605392891338,
		7983110519240712912,
		12703243799897731425,
		6312372394989412511,
		12744240278727008756,
		276491349406485771,
		10565566093056172467,
		4305639706325808316,
	)

	if l.IsZero() {
		return 0
	}

	// if l == 1
	if (l[26] == 1224185248406318349) && (l[25] == 13077967848903964979) && (l[24] == 17340778676083608529) && (l[23] == 4363271106220619822) && (l[22] == 11643998567461453185) && (l[21] == 4527257021537729146) && (l[20] == 4961046070456251582) && (l[19] == 539613725847537876) && (l[18] == 4089397577217186730) && (l[17] == 3284383480207829571) && (l[16] == 3018990742926752255) && (l[15] == 13753022715455251860) && (l[14] == 129707583657871575) && (l[13] == 144491277602220416) && (l[12] == 7423775271793147912) && (l[11] == 14998203758538386790) && (l[10] == 18127457751216940952) && (l[9] == 11244511834961085534) && (l[8] == 10253692145374968738) && (l[7] == 5090430033773561260) && (l[6] == 10633193415439953050) && (l[5] == 15961520562448949735) && (l[4] == 16791267071807575396) && (l[3] == 155518545534662316) && (l[2] == 1978260171173028098) && (l[1] == 881099795388418004) && (l[0] == 12012260988369865098) {
		return 1
	}
	return -1
}

// Sqrt z = √x mod q
// if the square root doesn't exist (x is not a square mod q)
// Sqrt leaves z unchanged and returns nil
func (z *Element27) Sqrt(x *Element27) *Element27 {
	// q ≡ 3 (mod 4)
	// using  z ≡ ± x^((p+1)/4) (mod q)
	var y, square Element27
	y.Exp(*x,
		7721839413308542671,
		13724920580858611461,
		8976089515458147295,
		9203932218662943018,
		206934625237747027,
		11839867984976044995,
		7894222859924781676,
		13198754301060468554,
		3329974500255516811,
		17041180094339415924,
		2345753799525270284,
		16571968603892253267,
		17518772164735408126,
		2287781599513416399,
		9207158588897541861,
		586715169781787469,
		11151841203202625728,
		13424510120256185015,
		8712197339702627466,
		4544234302696445669,
		13214927296475132264,
		15574993936803641520,
		3156186197494706255,
		15595492176218280186,
		9361617711558018693,
		5282783046528086233,
		2152819853162904158,
	)
	// as we didn't compute the legendre symbol, ensure we found y such that y * y = x
	square.Square(&y)
	if square.Equal(x) {
		return z.Set(&y)
	}
	return nil
}

// Square z = x * x mod q
func (z *Element27) Square(x *Element27) *Element27 {
	return z.Mul(x, x)
}

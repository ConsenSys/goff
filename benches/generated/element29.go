// Copyright 2020 ConsenSys AG
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// field modulus q =
//
// 2084962811841491483121050459877578483708193615189593427223599169729540479329007892326833839494083705364438641588495669997396457263885827978288143021424125107608971455987632503971213619279118371050841528165541534583372033049215182123455800391142001384277870961929698624055678233830676150568818549167593701676668765666985455614818978118811238634421348184357190776091112427196401616417850931193097963197533031467128744794515395049288728847618034519213321038571081584200869674915548462161504160305169762202057731231558186555920611731675329187098875217602565987159
// Code generated by goff DO NOT EDIT
// Element29 are assumed to be in Montgomery form in all methods

// /!\ WARNING /!\
// this code has not been audited and is provided as-is. In particular,
// there is no security guarantees such as constant time implementation
// or side-channel attack resistance
// /!\ WARNING /!\

// Package generated (generated by goff) contains field arithmetics operations
package generated

import (
	"crypto/rand"
	"encoding/binary"
	"io"
	"math/big"
	"math/bits"
	"sync"
	"unsafe"
)

// Element29 represents a field element stored on 29 words (uint64)
// Element29 are assumed to be in Montgomery form in all methods
type Element29 [29]uint64

// Element29Limbs number of 64 bits words needed to represent Element29
const Element29Limbs = 29

// Element29Bits number bits needed to represent Element29
const Element29Bits = 1855

// SetUint64 z = v, sets z LSB to v (non-Montgomery form) and convert z to Montgomery form
func (z *Element29) SetUint64(v uint64) *Element29 {
	z[0] = v
	z[1] = 0
	z[2] = 0
	z[3] = 0
	z[4] = 0
	z[5] = 0
	z[6] = 0
	z[7] = 0
	z[8] = 0
	z[9] = 0
	z[10] = 0
	z[11] = 0
	z[12] = 0
	z[13] = 0
	z[14] = 0
	z[15] = 0
	z[16] = 0
	z[17] = 0
	z[18] = 0
	z[19] = 0
	z[20] = 0
	z[21] = 0
	z[22] = 0
	z[23] = 0
	z[24] = 0
	z[25] = 0
	z[26] = 0
	z[27] = 0
	z[28] = 0
	return z.ToMont()
}

// Set z = x
func (z *Element29) Set(x *Element29) *Element29 {
	z[0] = x[0]
	z[1] = x[1]
	z[2] = x[2]
	z[3] = x[3]
	z[4] = x[4]
	z[5] = x[5]
	z[6] = x[6]
	z[7] = x[7]
	z[8] = x[8]
	z[9] = x[9]
	z[10] = x[10]
	z[11] = x[11]
	z[12] = x[12]
	z[13] = x[13]
	z[14] = x[14]
	z[15] = x[15]
	z[16] = x[16]
	z[17] = x[17]
	z[18] = x[18]
	z[19] = x[19]
	z[20] = x[20]
	z[21] = x[21]
	z[22] = x[22]
	z[23] = x[23]
	z[24] = x[24]
	z[25] = x[25]
	z[26] = x[26]
	z[27] = x[27]
	z[28] = x[28]
	return z
}

// SetZero z = 0
func (z *Element29) SetZero() *Element29 {
	z[0] = 0
	z[1] = 0
	z[2] = 0
	z[3] = 0
	z[4] = 0
	z[5] = 0
	z[6] = 0
	z[7] = 0
	z[8] = 0
	z[9] = 0
	z[10] = 0
	z[11] = 0
	z[12] = 0
	z[13] = 0
	z[14] = 0
	z[15] = 0
	z[16] = 0
	z[17] = 0
	z[18] = 0
	z[19] = 0
	z[20] = 0
	z[21] = 0
	z[22] = 0
	z[23] = 0
	z[24] = 0
	z[25] = 0
	z[26] = 0
	z[27] = 0
	z[28] = 0
	return z
}

// SetOne z = 1 (in Montgomery form)
func (z *Element29) SetOne() *Element29 {
	z[0] = 5331149632530893138
	z[1] = 14059369140517721413
	z[2] = 9484405116073662242
	z[3] = 11279870532284406048
	z[4] = 5896179409459926416
	z[5] = 9636285757326809951
	z[6] = 12556597499888727853
	z[7] = 15550283328283633066
	z[8] = 2507095252979328742
	z[9] = 14510389037664134458
	z[10] = 1273048339887922067
	z[11] = 8041930693388530744
	z[12] = 4354715852882067454
	z[13] = 14385633964078747603
	z[14] = 13718322735573116825
	z[15] = 11092642897201505461
	z[16] = 14585931523303929080
	z[17] = 8311932190903765051
	z[18] = 6581727682039417818
	z[19] = 5192814184979211799
	z[20] = 16737082002880075422
	z[21] = 13926132929013843945
	z[22] = 7752090669931281305
	z[23] = 9886941793833503673
	z[24] = 9383229935754138397
	z[25] = 17422756508078594689
	z[26] = 10705396993924281306
	z[27] = 4900187642069962371
	z[28] = 3505867469452882696
	return z
}

// Neg z = q - x
func (z *Element29) Neg(x *Element29) *Element29 {
	if x.IsZero() {
		return z.SetZero()
	}
	var borrow uint64
	z[0], borrow = bits.Sub64(6557797220589329239, x[0], 0)
	z[1], borrow = bits.Sub64(11417059503450690909, x[1], borrow)
	z[2], borrow = bits.Sub64(13704541515672720494, x[2], borrow)
	z[3], borrow = bits.Sub64(12806808807567348591, x[3], borrow)
	z[4], borrow = bits.Sub64(6275282332124812599, x[4], borrow)
	z[5], borrow = bits.Sub64(4405229158191370832, x[5], borrow)
	z[6], borrow = bits.Sub64(12168445323765187689, x[6], borrow)
	z[7], borrow = bits.Sub64(10671602409567735082, x[7], borrow)
	z[8], borrow = bits.Sub64(17193196447219887244, x[8], borrow)
	z[9], borrow = bits.Sub64(1968177518022708578, x[9], borrow)
	z[10], borrow = bits.Sub64(17810219903765590582, x[10], borrow)
	z[11], borrow = bits.Sub64(14425778727015286243, x[11], borrow)
	z[12], borrow = bits.Sub64(7046014110413742080, x[12], borrow)
	z[13], borrow = bits.Sub64(2030555054815402006, x[13], borrow)
	z[14], borrow = bits.Sub64(2364210669068217395, x[14], borrow)
	z[15], borrow = bits.Sub64(12900422625108798885, x[15], borrow)
	z[16], borrow = bits.Sub64(1930406275202811267, x[16], borrow)
	z[17], borrow = bits.Sub64(14290777978257669090, x[17], borrow)
	z[18], borrow = bits.Sub64(5932508195835066898, x[18], borrow)
	z[19], borrow = bits.Sub64(15850336981219945716, x[19], borrow)
	z[20], borrow = bits.Sub64(854831035414738096, x[20], borrow)
	z[21], borrow = bits.Sub64(2260305572347853835, x[21], borrow)
	z[22], borrow = bits.Sub64(5347326701889135155, x[22], borrow)
	z[23], borrow = bits.Sub64(4279901139938023971, x[23], borrow)
	z[24], borrow = bits.Sub64(4531757068977706609, x[24], borrow)
	z[25], borrow = bits.Sub64(9735365819670254271, x[25], borrow)
	z[26], borrow = bits.Sub64(3870673539892635154, x[26], borrow)
	z[27], borrow = bits.Sub64(15996650252674570430, x[27], borrow)
	z[28], _ = bits.Sub64(7470438302128334459, x[28], borrow)
	return z
}

// Div z = x*y^-1 mod q
func (z *Element29) Div(x, y *Element29) *Element29 {
	var yInv Element29
	yInv.Inverse(y)
	z.Mul(x, &yInv)
	return z
}

// Equal returns z == x
func (z *Element29) Equal(x *Element29) bool {
	return (z[28] == x[28]) && (z[27] == x[27]) && (z[26] == x[26]) && (z[25] == x[25]) && (z[24] == x[24]) && (z[23] == x[23]) && (z[22] == x[22]) && (z[21] == x[21]) && (z[20] == x[20]) && (z[19] == x[19]) && (z[18] == x[18]) && (z[17] == x[17]) && (z[16] == x[16]) && (z[15] == x[15]) && (z[14] == x[14]) && (z[13] == x[13]) && (z[12] == x[12]) && (z[11] == x[11]) && (z[10] == x[10]) && (z[9] == x[9]) && (z[8] == x[8]) && (z[7] == x[7]) && (z[6] == x[6]) && (z[5] == x[5]) && (z[4] == x[4]) && (z[3] == x[3]) && (z[2] == x[2]) && (z[1] == x[1]) && (z[0] == x[0])
}

// IsZero returns z == 0
func (z *Element29) IsZero() bool {
	return (z[28] | z[27] | z[26] | z[25] | z[24] | z[23] | z[22] | z[21] | z[20] | z[19] | z[18] | z[17] | z[16] | z[15] | z[14] | z[13] | z[12] | z[11] | z[10] | z[9] | z[8] | z[7] | z[6] | z[5] | z[4] | z[3] | z[2] | z[1] | z[0]) == 0
}

// field modulus stored as big.Int
var _element29ModulusBigInt big.Int
var onceelement29Modulus sync.Once

func element29ModulusBigInt() *big.Int {
	onceelement29Modulus.Do(func() {
		_element29ModulusBigInt.SetString("2084962811841491483121050459877578483708193615189593427223599169729540479329007892326833839494083705364438641588495669997396457263885827978288143021424125107608971455987632503971213619279118371050841528165541534583372033049215182123455800391142001384277870961929698624055678233830676150568818549167593701676668765666985455614818978118811238634421348184357190776091112427196401616417850931193097963197533031467128744794515395049288728847618034519213321038571081584200869674915548462161504160305169762202057731231558186555920611731675329187098875217602565987159", 10)
	})
	return &_element29ModulusBigInt
}

// Inverse z = x^-1 mod q
// note: allocates a big.Int (math/big)
func (z *Element29) Inverse(x *Element29) *Element29 {
	var _xNonMont big.Int
	x.ToBigIntRegular(&_xNonMont)
	_xNonMont.ModInverse(&_xNonMont, element29ModulusBigInt())
	z.SetBigInt(&_xNonMont)
	return z
}

// SetRandom sets z to a random element < q
func (z *Element29) SetRandom() *Element29 {
	bytes := make([]byte, 232)
	io.ReadFull(rand.Reader, bytes)
	z[0] = binary.BigEndian.Uint64(bytes[0:8])
	z[1] = binary.BigEndian.Uint64(bytes[8:16])
	z[2] = binary.BigEndian.Uint64(bytes[16:24])
	z[3] = binary.BigEndian.Uint64(bytes[24:32])
	z[4] = binary.BigEndian.Uint64(bytes[32:40])
	z[5] = binary.BigEndian.Uint64(bytes[40:48])
	z[6] = binary.BigEndian.Uint64(bytes[48:56])
	z[7] = binary.BigEndian.Uint64(bytes[56:64])
	z[8] = binary.BigEndian.Uint64(bytes[64:72])
	z[9] = binary.BigEndian.Uint64(bytes[72:80])
	z[10] = binary.BigEndian.Uint64(bytes[80:88])
	z[11] = binary.BigEndian.Uint64(bytes[88:96])
	z[12] = binary.BigEndian.Uint64(bytes[96:104])
	z[13] = binary.BigEndian.Uint64(bytes[104:112])
	z[14] = binary.BigEndian.Uint64(bytes[112:120])
	z[15] = binary.BigEndian.Uint64(bytes[120:128])
	z[16] = binary.BigEndian.Uint64(bytes[128:136])
	z[17] = binary.BigEndian.Uint64(bytes[136:144])
	z[18] = binary.BigEndian.Uint64(bytes[144:152])
	z[19] = binary.BigEndian.Uint64(bytes[152:160])
	z[20] = binary.BigEndian.Uint64(bytes[160:168])
	z[21] = binary.BigEndian.Uint64(bytes[168:176])
	z[22] = binary.BigEndian.Uint64(bytes[176:184])
	z[23] = binary.BigEndian.Uint64(bytes[184:192])
	z[24] = binary.BigEndian.Uint64(bytes[192:200])
	z[25] = binary.BigEndian.Uint64(bytes[200:208])
	z[26] = binary.BigEndian.Uint64(bytes[208:216])
	z[27] = binary.BigEndian.Uint64(bytes[216:224])
	z[28] = binary.BigEndian.Uint64(bytes[224:232])
	z[28] %= 7470438302128334459

	// if z > q --> z -= q
	// note: this is NOT constant time
	if !(z[28] < 7470438302128334459 || (z[28] == 7470438302128334459 && (z[27] < 15996650252674570430 || (z[27] == 15996650252674570430 && (z[26] < 3870673539892635154 || (z[26] == 3870673539892635154 && (z[25] < 9735365819670254271 || (z[25] == 9735365819670254271 && (z[24] < 4531757068977706609 || (z[24] == 4531757068977706609 && (z[23] < 4279901139938023971 || (z[23] == 4279901139938023971 && (z[22] < 5347326701889135155 || (z[22] == 5347326701889135155 && (z[21] < 2260305572347853835 || (z[21] == 2260305572347853835 && (z[20] < 854831035414738096 || (z[20] == 854831035414738096 && (z[19] < 15850336981219945716 || (z[19] == 15850336981219945716 && (z[18] < 5932508195835066898 || (z[18] == 5932508195835066898 && (z[17] < 14290777978257669090 || (z[17] == 14290777978257669090 && (z[16] < 1930406275202811267 || (z[16] == 1930406275202811267 && (z[15] < 12900422625108798885 || (z[15] == 12900422625108798885 && (z[14] < 2364210669068217395 || (z[14] == 2364210669068217395 && (z[13] < 2030555054815402006 || (z[13] == 2030555054815402006 && (z[12] < 7046014110413742080 || (z[12] == 7046014110413742080 && (z[11] < 14425778727015286243 || (z[11] == 14425778727015286243 && (z[10] < 17810219903765590582 || (z[10] == 17810219903765590582 && (z[9] < 1968177518022708578 || (z[9] == 1968177518022708578 && (z[8] < 17193196447219887244 || (z[8] == 17193196447219887244 && (z[7] < 10671602409567735082 || (z[7] == 10671602409567735082 && (z[6] < 12168445323765187689 || (z[6] == 12168445323765187689 && (z[5] < 4405229158191370832 || (z[5] == 4405229158191370832 && (z[4] < 6275282332124812599 || (z[4] == 6275282332124812599 && (z[3] < 12806808807567348591 || (z[3] == 12806808807567348591 && (z[2] < 13704541515672720494 || (z[2] == 13704541515672720494 && (z[1] < 11417059503450690909 || (z[1] == 11417059503450690909 && (z[0] < 6557797220589329239))))))))))))))))))))))))))))))))))))))))))))))))))))))))) {
		var b uint64
		z[0], b = bits.Sub64(z[0], 6557797220589329239, 0)
		z[1], b = bits.Sub64(z[1], 11417059503450690909, b)
		z[2], b = bits.Sub64(z[2], 13704541515672720494, b)
		z[3], b = bits.Sub64(z[3], 12806808807567348591, b)
		z[4], b = bits.Sub64(z[4], 6275282332124812599, b)
		z[5], b = bits.Sub64(z[5], 4405229158191370832, b)
		z[6], b = bits.Sub64(z[6], 12168445323765187689, b)
		z[7], b = bits.Sub64(z[7], 10671602409567735082, b)
		z[8], b = bits.Sub64(z[8], 17193196447219887244, b)
		z[9], b = bits.Sub64(z[9], 1968177518022708578, b)
		z[10], b = bits.Sub64(z[10], 17810219903765590582, b)
		z[11], b = bits.Sub64(z[11], 14425778727015286243, b)
		z[12], b = bits.Sub64(z[12], 7046014110413742080, b)
		z[13], b = bits.Sub64(z[13], 2030555054815402006, b)
		z[14], b = bits.Sub64(z[14], 2364210669068217395, b)
		z[15], b = bits.Sub64(z[15], 12900422625108798885, b)
		z[16], b = bits.Sub64(z[16], 1930406275202811267, b)
		z[17], b = bits.Sub64(z[17], 14290777978257669090, b)
		z[18], b = bits.Sub64(z[18], 5932508195835066898, b)
		z[19], b = bits.Sub64(z[19], 15850336981219945716, b)
		z[20], b = bits.Sub64(z[20], 854831035414738096, b)
		z[21], b = bits.Sub64(z[21], 2260305572347853835, b)
		z[22], b = bits.Sub64(z[22], 5347326701889135155, b)
		z[23], b = bits.Sub64(z[23], 4279901139938023971, b)
		z[24], b = bits.Sub64(z[24], 4531757068977706609, b)
		z[25], b = bits.Sub64(z[25], 9735365819670254271, b)
		z[26], b = bits.Sub64(z[26], 3870673539892635154, b)
		z[27], b = bits.Sub64(z[27], 15996650252674570430, b)
		z[28], _ = bits.Sub64(z[28], 7470438302128334459, b)
	}

	return z
}

// Add z = x + y mod q
func (z *Element29) Add(x, y *Element29) *Element29 {
	var carry uint64

	z[0], carry = bits.Add64(x[0], y[0], 0)
	z[1], carry = bits.Add64(x[1], y[1], carry)
	z[2], carry = bits.Add64(x[2], y[2], carry)
	z[3], carry = bits.Add64(x[3], y[3], carry)
	z[4], carry = bits.Add64(x[4], y[4], carry)
	z[5], carry = bits.Add64(x[5], y[5], carry)
	z[6], carry = bits.Add64(x[6], y[6], carry)
	z[7], carry = bits.Add64(x[7], y[7], carry)
	z[8], carry = bits.Add64(x[8], y[8], carry)
	z[9], carry = bits.Add64(x[9], y[9], carry)
	z[10], carry = bits.Add64(x[10], y[10], carry)
	z[11], carry = bits.Add64(x[11], y[11], carry)
	z[12], carry = bits.Add64(x[12], y[12], carry)
	z[13], carry = bits.Add64(x[13], y[13], carry)
	z[14], carry = bits.Add64(x[14], y[14], carry)
	z[15], carry = bits.Add64(x[15], y[15], carry)
	z[16], carry = bits.Add64(x[16], y[16], carry)
	z[17], carry = bits.Add64(x[17], y[17], carry)
	z[18], carry = bits.Add64(x[18], y[18], carry)
	z[19], carry = bits.Add64(x[19], y[19], carry)
	z[20], carry = bits.Add64(x[20], y[20], carry)
	z[21], carry = bits.Add64(x[21], y[21], carry)
	z[22], carry = bits.Add64(x[22], y[22], carry)
	z[23], carry = bits.Add64(x[23], y[23], carry)
	z[24], carry = bits.Add64(x[24], y[24], carry)
	z[25], carry = bits.Add64(x[25], y[25], carry)
	z[26], carry = bits.Add64(x[26], y[26], carry)
	z[27], carry = bits.Add64(x[27], y[27], carry)
	z[28], carry = bits.Add64(x[28], y[28], carry)
	// if we overflowed the last addition, z >= q
	// if z >= q, z = z - q
	if carry != 0 {
		// we overflowed, so z >= q
		z[0], carry = bits.Sub64(z[0], 6557797220589329239, 0)
		z[1], carry = bits.Sub64(z[1], 11417059503450690909, carry)
		z[2], carry = bits.Sub64(z[2], 13704541515672720494, carry)
		z[3], carry = bits.Sub64(z[3], 12806808807567348591, carry)
		z[4], carry = bits.Sub64(z[4], 6275282332124812599, carry)
		z[5], carry = bits.Sub64(z[5], 4405229158191370832, carry)
		z[6], carry = bits.Sub64(z[6], 12168445323765187689, carry)
		z[7], carry = bits.Sub64(z[7], 10671602409567735082, carry)
		z[8], carry = bits.Sub64(z[8], 17193196447219887244, carry)
		z[9], carry = bits.Sub64(z[9], 1968177518022708578, carry)
		z[10], carry = bits.Sub64(z[10], 17810219903765590582, carry)
		z[11], carry = bits.Sub64(z[11], 14425778727015286243, carry)
		z[12], carry = bits.Sub64(z[12], 7046014110413742080, carry)
		z[13], carry = bits.Sub64(z[13], 2030555054815402006, carry)
		z[14], carry = bits.Sub64(z[14], 2364210669068217395, carry)
		z[15], carry = bits.Sub64(z[15], 12900422625108798885, carry)
		z[16], carry = bits.Sub64(z[16], 1930406275202811267, carry)
		z[17], carry = bits.Sub64(z[17], 14290777978257669090, carry)
		z[18], carry = bits.Sub64(z[18], 5932508195835066898, carry)
		z[19], carry = bits.Sub64(z[19], 15850336981219945716, carry)
		z[20], carry = bits.Sub64(z[20], 854831035414738096, carry)
		z[21], carry = bits.Sub64(z[21], 2260305572347853835, carry)
		z[22], carry = bits.Sub64(z[22], 5347326701889135155, carry)
		z[23], carry = bits.Sub64(z[23], 4279901139938023971, carry)
		z[24], carry = bits.Sub64(z[24], 4531757068977706609, carry)
		z[25], carry = bits.Sub64(z[25], 9735365819670254271, carry)
		z[26], carry = bits.Sub64(z[26], 3870673539892635154, carry)
		z[27], carry = bits.Sub64(z[27], 15996650252674570430, carry)
		z[28], carry = bits.Sub64(z[28], 7470438302128334459, carry)
		return z
	}

	// if z > q --> z -= q
	// note: this is NOT constant time
	if !(z[28] < 7470438302128334459 || (z[28] == 7470438302128334459 && (z[27] < 15996650252674570430 || (z[27] == 15996650252674570430 && (z[26] < 3870673539892635154 || (z[26] == 3870673539892635154 && (z[25] < 9735365819670254271 || (z[25] == 9735365819670254271 && (z[24] < 4531757068977706609 || (z[24] == 4531757068977706609 && (z[23] < 4279901139938023971 || (z[23] == 4279901139938023971 && (z[22] < 5347326701889135155 || (z[22] == 5347326701889135155 && (z[21] < 2260305572347853835 || (z[21] == 2260305572347853835 && (z[20] < 854831035414738096 || (z[20] == 854831035414738096 && (z[19] < 15850336981219945716 || (z[19] == 15850336981219945716 && (z[18] < 5932508195835066898 || (z[18] == 5932508195835066898 && (z[17] < 14290777978257669090 || (z[17] == 14290777978257669090 && (z[16] < 1930406275202811267 || (z[16] == 1930406275202811267 && (z[15] < 12900422625108798885 || (z[15] == 12900422625108798885 && (z[14] < 2364210669068217395 || (z[14] == 2364210669068217395 && (z[13] < 2030555054815402006 || (z[13] == 2030555054815402006 && (z[12] < 7046014110413742080 || (z[12] == 7046014110413742080 && (z[11] < 14425778727015286243 || (z[11] == 14425778727015286243 && (z[10] < 17810219903765590582 || (z[10] == 17810219903765590582 && (z[9] < 1968177518022708578 || (z[9] == 1968177518022708578 && (z[8] < 17193196447219887244 || (z[8] == 17193196447219887244 && (z[7] < 10671602409567735082 || (z[7] == 10671602409567735082 && (z[6] < 12168445323765187689 || (z[6] == 12168445323765187689 && (z[5] < 4405229158191370832 || (z[5] == 4405229158191370832 && (z[4] < 6275282332124812599 || (z[4] == 6275282332124812599 && (z[3] < 12806808807567348591 || (z[3] == 12806808807567348591 && (z[2] < 13704541515672720494 || (z[2] == 13704541515672720494 && (z[1] < 11417059503450690909 || (z[1] == 11417059503450690909 && (z[0] < 6557797220589329239))))))))))))))))))))))))))))))))))))))))))))))))))))))))) {
		var b uint64
		z[0], b = bits.Sub64(z[0], 6557797220589329239, 0)
		z[1], b = bits.Sub64(z[1], 11417059503450690909, b)
		z[2], b = bits.Sub64(z[2], 13704541515672720494, b)
		z[3], b = bits.Sub64(z[3], 12806808807567348591, b)
		z[4], b = bits.Sub64(z[4], 6275282332124812599, b)
		z[5], b = bits.Sub64(z[5], 4405229158191370832, b)
		z[6], b = bits.Sub64(z[6], 12168445323765187689, b)
		z[7], b = bits.Sub64(z[7], 10671602409567735082, b)
		z[8], b = bits.Sub64(z[8], 17193196447219887244, b)
		z[9], b = bits.Sub64(z[9], 1968177518022708578, b)
		z[10], b = bits.Sub64(z[10], 17810219903765590582, b)
		z[11], b = bits.Sub64(z[11], 14425778727015286243, b)
		z[12], b = bits.Sub64(z[12], 7046014110413742080, b)
		z[13], b = bits.Sub64(z[13], 2030555054815402006, b)
		z[14], b = bits.Sub64(z[14], 2364210669068217395, b)
		z[15], b = bits.Sub64(z[15], 12900422625108798885, b)
		z[16], b = bits.Sub64(z[16], 1930406275202811267, b)
		z[17], b = bits.Sub64(z[17], 14290777978257669090, b)
		z[18], b = bits.Sub64(z[18], 5932508195835066898, b)
		z[19], b = bits.Sub64(z[19], 15850336981219945716, b)
		z[20], b = bits.Sub64(z[20], 854831035414738096, b)
		z[21], b = bits.Sub64(z[21], 2260305572347853835, b)
		z[22], b = bits.Sub64(z[22], 5347326701889135155, b)
		z[23], b = bits.Sub64(z[23], 4279901139938023971, b)
		z[24], b = bits.Sub64(z[24], 4531757068977706609, b)
		z[25], b = bits.Sub64(z[25], 9735365819670254271, b)
		z[26], b = bits.Sub64(z[26], 3870673539892635154, b)
		z[27], b = bits.Sub64(z[27], 15996650252674570430, b)
		z[28], _ = bits.Sub64(z[28], 7470438302128334459, b)
	}
	return z
}

// AddAssign z = z + x mod q
func (z *Element29) AddAssign(x *Element29) *Element29 {
	var carry uint64

	z[0], carry = bits.Add64(z[0], x[0], 0)
	z[1], carry = bits.Add64(z[1], x[1], carry)
	z[2], carry = bits.Add64(z[2], x[2], carry)
	z[3], carry = bits.Add64(z[3], x[3], carry)
	z[4], carry = bits.Add64(z[4], x[4], carry)
	z[5], carry = bits.Add64(z[5], x[5], carry)
	z[6], carry = bits.Add64(z[6], x[6], carry)
	z[7], carry = bits.Add64(z[7], x[7], carry)
	z[8], carry = bits.Add64(z[8], x[8], carry)
	z[9], carry = bits.Add64(z[9], x[9], carry)
	z[10], carry = bits.Add64(z[10], x[10], carry)
	z[11], carry = bits.Add64(z[11], x[11], carry)
	z[12], carry = bits.Add64(z[12], x[12], carry)
	z[13], carry = bits.Add64(z[13], x[13], carry)
	z[14], carry = bits.Add64(z[14], x[14], carry)
	z[15], carry = bits.Add64(z[15], x[15], carry)
	z[16], carry = bits.Add64(z[16], x[16], carry)
	z[17], carry = bits.Add64(z[17], x[17], carry)
	z[18], carry = bits.Add64(z[18], x[18], carry)
	z[19], carry = bits.Add64(z[19], x[19], carry)
	z[20], carry = bits.Add64(z[20], x[20], carry)
	z[21], carry = bits.Add64(z[21], x[21], carry)
	z[22], carry = bits.Add64(z[22], x[22], carry)
	z[23], carry = bits.Add64(z[23], x[23], carry)
	z[24], carry = bits.Add64(z[24], x[24], carry)
	z[25], carry = bits.Add64(z[25], x[25], carry)
	z[26], carry = bits.Add64(z[26], x[26], carry)
	z[27], carry = bits.Add64(z[27], x[27], carry)
	z[28], carry = bits.Add64(z[28], x[28], carry)
	// if we overflowed the last addition, z >= q
	// if z >= q, z = z - q
	if carry != 0 {
		// we overflowed, so z >= q
		z[0], carry = bits.Sub64(z[0], 6557797220589329239, 0)
		z[1], carry = bits.Sub64(z[1], 11417059503450690909, carry)
		z[2], carry = bits.Sub64(z[2], 13704541515672720494, carry)
		z[3], carry = bits.Sub64(z[3], 12806808807567348591, carry)
		z[4], carry = bits.Sub64(z[4], 6275282332124812599, carry)
		z[5], carry = bits.Sub64(z[5], 4405229158191370832, carry)
		z[6], carry = bits.Sub64(z[6], 12168445323765187689, carry)
		z[7], carry = bits.Sub64(z[7], 10671602409567735082, carry)
		z[8], carry = bits.Sub64(z[8], 17193196447219887244, carry)
		z[9], carry = bits.Sub64(z[9], 1968177518022708578, carry)
		z[10], carry = bits.Sub64(z[10], 17810219903765590582, carry)
		z[11], carry = bits.Sub64(z[11], 14425778727015286243, carry)
		z[12], carry = bits.Sub64(z[12], 7046014110413742080, carry)
		z[13], carry = bits.Sub64(z[13], 2030555054815402006, carry)
		z[14], carry = bits.Sub64(z[14], 2364210669068217395, carry)
		z[15], carry = bits.Sub64(z[15], 12900422625108798885, carry)
		z[16], carry = bits.Sub64(z[16], 1930406275202811267, carry)
		z[17], carry = bits.Sub64(z[17], 14290777978257669090, carry)
		z[18], carry = bits.Sub64(z[18], 5932508195835066898, carry)
		z[19], carry = bits.Sub64(z[19], 15850336981219945716, carry)
		z[20], carry = bits.Sub64(z[20], 854831035414738096, carry)
		z[21], carry = bits.Sub64(z[21], 2260305572347853835, carry)
		z[22], carry = bits.Sub64(z[22], 5347326701889135155, carry)
		z[23], carry = bits.Sub64(z[23], 4279901139938023971, carry)
		z[24], carry = bits.Sub64(z[24], 4531757068977706609, carry)
		z[25], carry = bits.Sub64(z[25], 9735365819670254271, carry)
		z[26], carry = bits.Sub64(z[26], 3870673539892635154, carry)
		z[27], carry = bits.Sub64(z[27], 15996650252674570430, carry)
		z[28], carry = bits.Sub64(z[28], 7470438302128334459, carry)
		return z
	}

	// if z > q --> z -= q
	// note: this is NOT constant time
	if !(z[28] < 7470438302128334459 || (z[28] == 7470438302128334459 && (z[27] < 15996650252674570430 || (z[27] == 15996650252674570430 && (z[26] < 3870673539892635154 || (z[26] == 3870673539892635154 && (z[25] < 9735365819670254271 || (z[25] == 9735365819670254271 && (z[24] < 4531757068977706609 || (z[24] == 4531757068977706609 && (z[23] < 4279901139938023971 || (z[23] == 4279901139938023971 && (z[22] < 5347326701889135155 || (z[22] == 5347326701889135155 && (z[21] < 2260305572347853835 || (z[21] == 2260305572347853835 && (z[20] < 854831035414738096 || (z[20] == 854831035414738096 && (z[19] < 15850336981219945716 || (z[19] == 15850336981219945716 && (z[18] < 5932508195835066898 || (z[18] == 5932508195835066898 && (z[17] < 14290777978257669090 || (z[17] == 14290777978257669090 && (z[16] < 1930406275202811267 || (z[16] == 1930406275202811267 && (z[15] < 12900422625108798885 || (z[15] == 12900422625108798885 && (z[14] < 2364210669068217395 || (z[14] == 2364210669068217395 && (z[13] < 2030555054815402006 || (z[13] == 2030555054815402006 && (z[12] < 7046014110413742080 || (z[12] == 7046014110413742080 && (z[11] < 14425778727015286243 || (z[11] == 14425778727015286243 && (z[10] < 17810219903765590582 || (z[10] == 17810219903765590582 && (z[9] < 1968177518022708578 || (z[9] == 1968177518022708578 && (z[8] < 17193196447219887244 || (z[8] == 17193196447219887244 && (z[7] < 10671602409567735082 || (z[7] == 10671602409567735082 && (z[6] < 12168445323765187689 || (z[6] == 12168445323765187689 && (z[5] < 4405229158191370832 || (z[5] == 4405229158191370832 && (z[4] < 6275282332124812599 || (z[4] == 6275282332124812599 && (z[3] < 12806808807567348591 || (z[3] == 12806808807567348591 && (z[2] < 13704541515672720494 || (z[2] == 13704541515672720494 && (z[1] < 11417059503450690909 || (z[1] == 11417059503450690909 && (z[0] < 6557797220589329239))))))))))))))))))))))))))))))))))))))))))))))))))))))))) {
		var b uint64
		z[0], b = bits.Sub64(z[0], 6557797220589329239, 0)
		z[1], b = bits.Sub64(z[1], 11417059503450690909, b)
		z[2], b = bits.Sub64(z[2], 13704541515672720494, b)
		z[3], b = bits.Sub64(z[3], 12806808807567348591, b)
		z[4], b = bits.Sub64(z[4], 6275282332124812599, b)
		z[5], b = bits.Sub64(z[5], 4405229158191370832, b)
		z[6], b = bits.Sub64(z[6], 12168445323765187689, b)
		z[7], b = bits.Sub64(z[7], 10671602409567735082, b)
		z[8], b = bits.Sub64(z[8], 17193196447219887244, b)
		z[9], b = bits.Sub64(z[9], 1968177518022708578, b)
		z[10], b = bits.Sub64(z[10], 17810219903765590582, b)
		z[11], b = bits.Sub64(z[11], 14425778727015286243, b)
		z[12], b = bits.Sub64(z[12], 7046014110413742080, b)
		z[13], b = bits.Sub64(z[13], 2030555054815402006, b)
		z[14], b = bits.Sub64(z[14], 2364210669068217395, b)
		z[15], b = bits.Sub64(z[15], 12900422625108798885, b)
		z[16], b = bits.Sub64(z[16], 1930406275202811267, b)
		z[17], b = bits.Sub64(z[17], 14290777978257669090, b)
		z[18], b = bits.Sub64(z[18], 5932508195835066898, b)
		z[19], b = bits.Sub64(z[19], 15850336981219945716, b)
		z[20], b = bits.Sub64(z[20], 854831035414738096, b)
		z[21], b = bits.Sub64(z[21], 2260305572347853835, b)
		z[22], b = bits.Sub64(z[22], 5347326701889135155, b)
		z[23], b = bits.Sub64(z[23], 4279901139938023971, b)
		z[24], b = bits.Sub64(z[24], 4531757068977706609, b)
		z[25], b = bits.Sub64(z[25], 9735365819670254271, b)
		z[26], b = bits.Sub64(z[26], 3870673539892635154, b)
		z[27], b = bits.Sub64(z[27], 15996650252674570430, b)
		z[28], _ = bits.Sub64(z[28], 7470438302128334459, b)
	}
	return z
}

// Double z = x + x mod q, aka Lsh 1
func (z *Element29) Double(x *Element29) *Element29 {
	var carry uint64

	z[0], carry = bits.Add64(x[0], x[0], 0)
	z[1], carry = bits.Add64(x[1], x[1], carry)
	z[2], carry = bits.Add64(x[2], x[2], carry)
	z[3], carry = bits.Add64(x[3], x[3], carry)
	z[4], carry = bits.Add64(x[4], x[4], carry)
	z[5], carry = bits.Add64(x[5], x[5], carry)
	z[6], carry = bits.Add64(x[6], x[6], carry)
	z[7], carry = bits.Add64(x[7], x[7], carry)
	z[8], carry = bits.Add64(x[8], x[8], carry)
	z[9], carry = bits.Add64(x[9], x[9], carry)
	z[10], carry = bits.Add64(x[10], x[10], carry)
	z[11], carry = bits.Add64(x[11], x[11], carry)
	z[12], carry = bits.Add64(x[12], x[12], carry)
	z[13], carry = bits.Add64(x[13], x[13], carry)
	z[14], carry = bits.Add64(x[14], x[14], carry)
	z[15], carry = bits.Add64(x[15], x[15], carry)
	z[16], carry = bits.Add64(x[16], x[16], carry)
	z[17], carry = bits.Add64(x[17], x[17], carry)
	z[18], carry = bits.Add64(x[18], x[18], carry)
	z[19], carry = bits.Add64(x[19], x[19], carry)
	z[20], carry = bits.Add64(x[20], x[20], carry)
	z[21], carry = bits.Add64(x[21], x[21], carry)
	z[22], carry = bits.Add64(x[22], x[22], carry)
	z[23], carry = bits.Add64(x[23], x[23], carry)
	z[24], carry = bits.Add64(x[24], x[24], carry)
	z[25], carry = bits.Add64(x[25], x[25], carry)
	z[26], carry = bits.Add64(x[26], x[26], carry)
	z[27], carry = bits.Add64(x[27], x[27], carry)
	z[28], carry = bits.Add64(x[28], x[28], carry)
	// if we overflowed the last addition, z >= q
	// if z >= q, z = z - q
	if carry != 0 {
		// we overflowed, so z >= q
		z[0], carry = bits.Sub64(z[0], 6557797220589329239, 0)
		z[1], carry = bits.Sub64(z[1], 11417059503450690909, carry)
		z[2], carry = bits.Sub64(z[2], 13704541515672720494, carry)
		z[3], carry = bits.Sub64(z[3], 12806808807567348591, carry)
		z[4], carry = bits.Sub64(z[4], 6275282332124812599, carry)
		z[5], carry = bits.Sub64(z[5], 4405229158191370832, carry)
		z[6], carry = bits.Sub64(z[6], 12168445323765187689, carry)
		z[7], carry = bits.Sub64(z[7], 10671602409567735082, carry)
		z[8], carry = bits.Sub64(z[8], 17193196447219887244, carry)
		z[9], carry = bits.Sub64(z[9], 1968177518022708578, carry)
		z[10], carry = bits.Sub64(z[10], 17810219903765590582, carry)
		z[11], carry = bits.Sub64(z[11], 14425778727015286243, carry)
		z[12], carry = bits.Sub64(z[12], 7046014110413742080, carry)
		z[13], carry = bits.Sub64(z[13], 2030555054815402006, carry)
		z[14], carry = bits.Sub64(z[14], 2364210669068217395, carry)
		z[15], carry = bits.Sub64(z[15], 12900422625108798885, carry)
		z[16], carry = bits.Sub64(z[16], 1930406275202811267, carry)
		z[17], carry = bits.Sub64(z[17], 14290777978257669090, carry)
		z[18], carry = bits.Sub64(z[18], 5932508195835066898, carry)
		z[19], carry = bits.Sub64(z[19], 15850336981219945716, carry)
		z[20], carry = bits.Sub64(z[20], 854831035414738096, carry)
		z[21], carry = bits.Sub64(z[21], 2260305572347853835, carry)
		z[22], carry = bits.Sub64(z[22], 5347326701889135155, carry)
		z[23], carry = bits.Sub64(z[23], 4279901139938023971, carry)
		z[24], carry = bits.Sub64(z[24], 4531757068977706609, carry)
		z[25], carry = bits.Sub64(z[25], 9735365819670254271, carry)
		z[26], carry = bits.Sub64(z[26], 3870673539892635154, carry)
		z[27], carry = bits.Sub64(z[27], 15996650252674570430, carry)
		z[28], carry = bits.Sub64(z[28], 7470438302128334459, carry)
		return z
	}

	// if z > q --> z -= q
	// note: this is NOT constant time
	if !(z[28] < 7470438302128334459 || (z[28] == 7470438302128334459 && (z[27] < 15996650252674570430 || (z[27] == 15996650252674570430 && (z[26] < 3870673539892635154 || (z[26] == 3870673539892635154 && (z[25] < 9735365819670254271 || (z[25] == 9735365819670254271 && (z[24] < 4531757068977706609 || (z[24] == 4531757068977706609 && (z[23] < 4279901139938023971 || (z[23] == 4279901139938023971 && (z[22] < 5347326701889135155 || (z[22] == 5347326701889135155 && (z[21] < 2260305572347853835 || (z[21] == 2260305572347853835 && (z[20] < 854831035414738096 || (z[20] == 854831035414738096 && (z[19] < 15850336981219945716 || (z[19] == 15850336981219945716 && (z[18] < 5932508195835066898 || (z[18] == 5932508195835066898 && (z[17] < 14290777978257669090 || (z[17] == 14290777978257669090 && (z[16] < 1930406275202811267 || (z[16] == 1930406275202811267 && (z[15] < 12900422625108798885 || (z[15] == 12900422625108798885 && (z[14] < 2364210669068217395 || (z[14] == 2364210669068217395 && (z[13] < 2030555054815402006 || (z[13] == 2030555054815402006 && (z[12] < 7046014110413742080 || (z[12] == 7046014110413742080 && (z[11] < 14425778727015286243 || (z[11] == 14425778727015286243 && (z[10] < 17810219903765590582 || (z[10] == 17810219903765590582 && (z[9] < 1968177518022708578 || (z[9] == 1968177518022708578 && (z[8] < 17193196447219887244 || (z[8] == 17193196447219887244 && (z[7] < 10671602409567735082 || (z[7] == 10671602409567735082 && (z[6] < 12168445323765187689 || (z[6] == 12168445323765187689 && (z[5] < 4405229158191370832 || (z[5] == 4405229158191370832 && (z[4] < 6275282332124812599 || (z[4] == 6275282332124812599 && (z[3] < 12806808807567348591 || (z[3] == 12806808807567348591 && (z[2] < 13704541515672720494 || (z[2] == 13704541515672720494 && (z[1] < 11417059503450690909 || (z[1] == 11417059503450690909 && (z[0] < 6557797220589329239))))))))))))))))))))))))))))))))))))))))))))))))))))))))) {
		var b uint64
		z[0], b = bits.Sub64(z[0], 6557797220589329239, 0)
		z[1], b = bits.Sub64(z[1], 11417059503450690909, b)
		z[2], b = bits.Sub64(z[2], 13704541515672720494, b)
		z[3], b = bits.Sub64(z[3], 12806808807567348591, b)
		z[4], b = bits.Sub64(z[4], 6275282332124812599, b)
		z[5], b = bits.Sub64(z[5], 4405229158191370832, b)
		z[6], b = bits.Sub64(z[6], 12168445323765187689, b)
		z[7], b = bits.Sub64(z[7], 10671602409567735082, b)
		z[8], b = bits.Sub64(z[8], 17193196447219887244, b)
		z[9], b = bits.Sub64(z[9], 1968177518022708578, b)
		z[10], b = bits.Sub64(z[10], 17810219903765590582, b)
		z[11], b = bits.Sub64(z[11], 14425778727015286243, b)
		z[12], b = bits.Sub64(z[12], 7046014110413742080, b)
		z[13], b = bits.Sub64(z[13], 2030555054815402006, b)
		z[14], b = bits.Sub64(z[14], 2364210669068217395, b)
		z[15], b = bits.Sub64(z[15], 12900422625108798885, b)
		z[16], b = bits.Sub64(z[16], 1930406275202811267, b)
		z[17], b = bits.Sub64(z[17], 14290777978257669090, b)
		z[18], b = bits.Sub64(z[18], 5932508195835066898, b)
		z[19], b = bits.Sub64(z[19], 15850336981219945716, b)
		z[20], b = bits.Sub64(z[20], 854831035414738096, b)
		z[21], b = bits.Sub64(z[21], 2260305572347853835, b)
		z[22], b = bits.Sub64(z[22], 5347326701889135155, b)
		z[23], b = bits.Sub64(z[23], 4279901139938023971, b)
		z[24], b = bits.Sub64(z[24], 4531757068977706609, b)
		z[25], b = bits.Sub64(z[25], 9735365819670254271, b)
		z[26], b = bits.Sub64(z[26], 3870673539892635154, b)
		z[27], b = bits.Sub64(z[27], 15996650252674570430, b)
		z[28], _ = bits.Sub64(z[28], 7470438302128334459, b)
	}
	return z
}

// Sub  z = x - y mod q
func (z *Element29) Sub(x, y *Element29) *Element29 {
	var b uint64
	z[0], b = bits.Sub64(x[0], y[0], 0)
	z[1], b = bits.Sub64(x[1], y[1], b)
	z[2], b = bits.Sub64(x[2], y[2], b)
	z[3], b = bits.Sub64(x[3], y[3], b)
	z[4], b = bits.Sub64(x[4], y[4], b)
	z[5], b = bits.Sub64(x[5], y[5], b)
	z[6], b = bits.Sub64(x[6], y[6], b)
	z[7], b = bits.Sub64(x[7], y[7], b)
	z[8], b = bits.Sub64(x[8], y[8], b)
	z[9], b = bits.Sub64(x[9], y[9], b)
	z[10], b = bits.Sub64(x[10], y[10], b)
	z[11], b = bits.Sub64(x[11], y[11], b)
	z[12], b = bits.Sub64(x[12], y[12], b)
	z[13], b = bits.Sub64(x[13], y[13], b)
	z[14], b = bits.Sub64(x[14], y[14], b)
	z[15], b = bits.Sub64(x[15], y[15], b)
	z[16], b = bits.Sub64(x[16], y[16], b)
	z[17], b = bits.Sub64(x[17], y[17], b)
	z[18], b = bits.Sub64(x[18], y[18], b)
	z[19], b = bits.Sub64(x[19], y[19], b)
	z[20], b = bits.Sub64(x[20], y[20], b)
	z[21], b = bits.Sub64(x[21], y[21], b)
	z[22], b = bits.Sub64(x[22], y[22], b)
	z[23], b = bits.Sub64(x[23], y[23], b)
	z[24], b = bits.Sub64(x[24], y[24], b)
	z[25], b = bits.Sub64(x[25], y[25], b)
	z[26], b = bits.Sub64(x[26], y[26], b)
	z[27], b = bits.Sub64(x[27], y[27], b)
	z[28], b = bits.Sub64(x[28], y[28], b)
	if b != 0 {
		var c uint64
		z[0], c = bits.Add64(z[0], 6557797220589329239, 0)
		z[1], c = bits.Add64(z[1], 11417059503450690909, c)
		z[2], c = bits.Add64(z[2], 13704541515672720494, c)
		z[3], c = bits.Add64(z[3], 12806808807567348591, c)
		z[4], c = bits.Add64(z[4], 6275282332124812599, c)
		z[5], c = bits.Add64(z[5], 4405229158191370832, c)
		z[6], c = bits.Add64(z[6], 12168445323765187689, c)
		z[7], c = bits.Add64(z[7], 10671602409567735082, c)
		z[8], c = bits.Add64(z[8], 17193196447219887244, c)
		z[9], c = bits.Add64(z[9], 1968177518022708578, c)
		z[10], c = bits.Add64(z[10], 17810219903765590582, c)
		z[11], c = bits.Add64(z[11], 14425778727015286243, c)
		z[12], c = bits.Add64(z[12], 7046014110413742080, c)
		z[13], c = bits.Add64(z[13], 2030555054815402006, c)
		z[14], c = bits.Add64(z[14], 2364210669068217395, c)
		z[15], c = bits.Add64(z[15], 12900422625108798885, c)
		z[16], c = bits.Add64(z[16], 1930406275202811267, c)
		z[17], c = bits.Add64(z[17], 14290777978257669090, c)
		z[18], c = bits.Add64(z[18], 5932508195835066898, c)
		z[19], c = bits.Add64(z[19], 15850336981219945716, c)
		z[20], c = bits.Add64(z[20], 854831035414738096, c)
		z[21], c = bits.Add64(z[21], 2260305572347853835, c)
		z[22], c = bits.Add64(z[22], 5347326701889135155, c)
		z[23], c = bits.Add64(z[23], 4279901139938023971, c)
		z[24], c = bits.Add64(z[24], 4531757068977706609, c)
		z[25], c = bits.Add64(z[25], 9735365819670254271, c)
		z[26], c = bits.Add64(z[26], 3870673539892635154, c)
		z[27], c = bits.Add64(z[27], 15996650252674570430, c)
		z[28], _ = bits.Add64(z[28], 7470438302128334459, c)
	}
	return z
}

// SubAssign  z = z - x mod q
func (z *Element29) SubAssign(x *Element29) *Element29 {
	var b uint64
	z[0], b = bits.Sub64(z[0], x[0], 0)
	z[1], b = bits.Sub64(z[1], x[1], b)
	z[2], b = bits.Sub64(z[2], x[2], b)
	z[3], b = bits.Sub64(z[3], x[3], b)
	z[4], b = bits.Sub64(z[4], x[4], b)
	z[5], b = bits.Sub64(z[5], x[5], b)
	z[6], b = bits.Sub64(z[6], x[6], b)
	z[7], b = bits.Sub64(z[7], x[7], b)
	z[8], b = bits.Sub64(z[8], x[8], b)
	z[9], b = bits.Sub64(z[9], x[9], b)
	z[10], b = bits.Sub64(z[10], x[10], b)
	z[11], b = bits.Sub64(z[11], x[11], b)
	z[12], b = bits.Sub64(z[12], x[12], b)
	z[13], b = bits.Sub64(z[13], x[13], b)
	z[14], b = bits.Sub64(z[14], x[14], b)
	z[15], b = bits.Sub64(z[15], x[15], b)
	z[16], b = bits.Sub64(z[16], x[16], b)
	z[17], b = bits.Sub64(z[17], x[17], b)
	z[18], b = bits.Sub64(z[18], x[18], b)
	z[19], b = bits.Sub64(z[19], x[19], b)
	z[20], b = bits.Sub64(z[20], x[20], b)
	z[21], b = bits.Sub64(z[21], x[21], b)
	z[22], b = bits.Sub64(z[22], x[22], b)
	z[23], b = bits.Sub64(z[23], x[23], b)
	z[24], b = bits.Sub64(z[24], x[24], b)
	z[25], b = bits.Sub64(z[25], x[25], b)
	z[26], b = bits.Sub64(z[26], x[26], b)
	z[27], b = bits.Sub64(z[27], x[27], b)
	z[28], b = bits.Sub64(z[28], x[28], b)
	if b != 0 {
		var c uint64
		z[0], c = bits.Add64(z[0], 6557797220589329239, 0)
		z[1], c = bits.Add64(z[1], 11417059503450690909, c)
		z[2], c = bits.Add64(z[2], 13704541515672720494, c)
		z[3], c = bits.Add64(z[3], 12806808807567348591, c)
		z[4], c = bits.Add64(z[4], 6275282332124812599, c)
		z[5], c = bits.Add64(z[5], 4405229158191370832, c)
		z[6], c = bits.Add64(z[6], 12168445323765187689, c)
		z[7], c = bits.Add64(z[7], 10671602409567735082, c)
		z[8], c = bits.Add64(z[8], 17193196447219887244, c)
		z[9], c = bits.Add64(z[9], 1968177518022708578, c)
		z[10], c = bits.Add64(z[10], 17810219903765590582, c)
		z[11], c = bits.Add64(z[11], 14425778727015286243, c)
		z[12], c = bits.Add64(z[12], 7046014110413742080, c)
		z[13], c = bits.Add64(z[13], 2030555054815402006, c)
		z[14], c = bits.Add64(z[14], 2364210669068217395, c)
		z[15], c = bits.Add64(z[15], 12900422625108798885, c)
		z[16], c = bits.Add64(z[16], 1930406275202811267, c)
		z[17], c = bits.Add64(z[17], 14290777978257669090, c)
		z[18], c = bits.Add64(z[18], 5932508195835066898, c)
		z[19], c = bits.Add64(z[19], 15850336981219945716, c)
		z[20], c = bits.Add64(z[20], 854831035414738096, c)
		z[21], c = bits.Add64(z[21], 2260305572347853835, c)
		z[22], c = bits.Add64(z[22], 5347326701889135155, c)
		z[23], c = bits.Add64(z[23], 4279901139938023971, c)
		z[24], c = bits.Add64(z[24], 4531757068977706609, c)
		z[25], c = bits.Add64(z[25], 9735365819670254271, c)
		z[26], c = bits.Add64(z[26], 3870673539892635154, c)
		z[27], c = bits.Add64(z[27], 15996650252674570430, c)
		z[28], _ = bits.Add64(z[28], 7470438302128334459, c)
	}
	return z
}

// Exp z = x^exponent mod q
// (not optimized)
// exponent (non-montgomery form) is ordered from least significant word to most significant word
func (z *Element29) Exp(x Element29, exponent ...uint64) *Element29 {
	r := 0
	msb := 0
	for i := len(exponent) - 1; i >= 0; i-- {
		if exponent[i] == 0 {
			r++
		} else {
			msb = (i * 64) + bits.Len64(exponent[i])
			break
		}
	}
	exponent = exponent[:len(exponent)-r]
	if len(exponent) == 0 {
		return z.SetOne()
	}

	z.Set(&x)

	l := msb - 2
	for i := l; i >= 0; i-- {
		z.Square(z)
		if exponent[i/64]&(1<<uint(i%64)) != 0 {
			z.MulAssign(&x)
		}
	}
	return z
}

// FromMont converts z in place (i.e. mutates) from Montgomery to regular representation
// sets and returns z = z * 1
func (z *Element29) FromMont() *Element29 {

	// the following lines implement z = z * 1
	// with a modified CIOS montgomery multiplication
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 10549899360055738265
		C := madd0(m, 6557797220589329239, z[0])
		C, z[0] = madd2(m, 11417059503450690909, z[1], C)
		C, z[1] = madd2(m, 13704541515672720494, z[2], C)
		C, z[2] = madd2(m, 12806808807567348591, z[3], C)
		C, z[3] = madd2(m, 6275282332124812599, z[4], C)
		C, z[4] = madd2(m, 4405229158191370832, z[5], C)
		C, z[5] = madd2(m, 12168445323765187689, z[6], C)
		C, z[6] = madd2(m, 10671602409567735082, z[7], C)
		C, z[7] = madd2(m, 17193196447219887244, z[8], C)
		C, z[8] = madd2(m, 1968177518022708578, z[9], C)
		C, z[9] = madd2(m, 17810219903765590582, z[10], C)
		C, z[10] = madd2(m, 14425778727015286243, z[11], C)
		C, z[11] = madd2(m, 7046014110413742080, z[12], C)
		C, z[12] = madd2(m, 2030555054815402006, z[13], C)
		C, z[13] = madd2(m, 2364210669068217395, z[14], C)
		C, z[14] = madd2(m, 12900422625108798885, z[15], C)
		C, z[15] = madd2(m, 1930406275202811267, z[16], C)
		C, z[16] = madd2(m, 14290777978257669090, z[17], C)
		C, z[17] = madd2(m, 5932508195835066898, z[18], C)
		C, z[18] = madd2(m, 15850336981219945716, z[19], C)
		C, z[19] = madd2(m, 854831035414738096, z[20], C)
		C, z[20] = madd2(m, 2260305572347853835, z[21], C)
		C, z[21] = madd2(m, 5347326701889135155, z[22], C)
		C, z[22] = madd2(m, 4279901139938023971, z[23], C)
		C, z[23] = madd2(m, 4531757068977706609, z[24], C)
		C, z[24] = madd2(m, 9735365819670254271, z[25], C)
		C, z[25] = madd2(m, 3870673539892635154, z[26], C)
		C, z[26] = madd2(m, 15996650252674570430, z[27], C)
		C, z[27] = madd2(m, 7470438302128334459, z[28], C)
		z[28] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 10549899360055738265
		C := madd0(m, 6557797220589329239, z[0])
		C, z[0] = madd2(m, 11417059503450690909, z[1], C)
		C, z[1] = madd2(m, 13704541515672720494, z[2], C)
		C, z[2] = madd2(m, 12806808807567348591, z[3], C)
		C, z[3] = madd2(m, 6275282332124812599, z[4], C)
		C, z[4] = madd2(m, 4405229158191370832, z[5], C)
		C, z[5] = madd2(m, 12168445323765187689, z[6], C)
		C, z[6] = madd2(m, 10671602409567735082, z[7], C)
		C, z[7] = madd2(m, 17193196447219887244, z[8], C)
		C, z[8] = madd2(m, 1968177518022708578, z[9], C)
		C, z[9] = madd2(m, 17810219903765590582, z[10], C)
		C, z[10] = madd2(m, 14425778727015286243, z[11], C)
		C, z[11] = madd2(m, 7046014110413742080, z[12], C)
		C, z[12] = madd2(m, 2030555054815402006, z[13], C)
		C, z[13] = madd2(m, 2364210669068217395, z[14], C)
		C, z[14] = madd2(m, 12900422625108798885, z[15], C)
		C, z[15] = madd2(m, 1930406275202811267, z[16], C)
		C, z[16] = madd2(m, 14290777978257669090, z[17], C)
		C, z[17] = madd2(m, 5932508195835066898, z[18], C)
		C, z[18] = madd2(m, 15850336981219945716, z[19], C)
		C, z[19] = madd2(m, 854831035414738096, z[20], C)
		C, z[20] = madd2(m, 2260305572347853835, z[21], C)
		C, z[21] = madd2(m, 5347326701889135155, z[22], C)
		C, z[22] = madd2(m, 4279901139938023971, z[23], C)
		C, z[23] = madd2(m, 4531757068977706609, z[24], C)
		C, z[24] = madd2(m, 9735365819670254271, z[25], C)
		C, z[25] = madd2(m, 3870673539892635154, z[26], C)
		C, z[26] = madd2(m, 15996650252674570430, z[27], C)
		C, z[27] = madd2(m, 7470438302128334459, z[28], C)
		z[28] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 10549899360055738265
		C := madd0(m, 6557797220589329239, z[0])
		C, z[0] = madd2(m, 11417059503450690909, z[1], C)
		C, z[1] = madd2(m, 13704541515672720494, z[2], C)
		C, z[2] = madd2(m, 12806808807567348591, z[3], C)
		C, z[3] = madd2(m, 6275282332124812599, z[4], C)
		C, z[4] = madd2(m, 4405229158191370832, z[5], C)
		C, z[5] = madd2(m, 12168445323765187689, z[6], C)
		C, z[6] = madd2(m, 10671602409567735082, z[7], C)
		C, z[7] = madd2(m, 17193196447219887244, z[8], C)
		C, z[8] = madd2(m, 1968177518022708578, z[9], C)
		C, z[9] = madd2(m, 17810219903765590582, z[10], C)
		C, z[10] = madd2(m, 14425778727015286243, z[11], C)
		C, z[11] = madd2(m, 7046014110413742080, z[12], C)
		C, z[12] = madd2(m, 2030555054815402006, z[13], C)
		C, z[13] = madd2(m, 2364210669068217395, z[14], C)
		C, z[14] = madd2(m, 12900422625108798885, z[15], C)
		C, z[15] = madd2(m, 1930406275202811267, z[16], C)
		C, z[16] = madd2(m, 14290777978257669090, z[17], C)
		C, z[17] = madd2(m, 5932508195835066898, z[18], C)
		C, z[18] = madd2(m, 15850336981219945716, z[19], C)
		C, z[19] = madd2(m, 854831035414738096, z[20], C)
		C, z[20] = madd2(m, 2260305572347853835, z[21], C)
		C, z[21] = madd2(m, 5347326701889135155, z[22], C)
		C, z[22] = madd2(m, 4279901139938023971, z[23], C)
		C, z[23] = madd2(m, 4531757068977706609, z[24], C)
		C, z[24] = madd2(m, 9735365819670254271, z[25], C)
		C, z[25] = madd2(m, 3870673539892635154, z[26], C)
		C, z[26] = madd2(m, 15996650252674570430, z[27], C)
		C, z[27] = madd2(m, 7470438302128334459, z[28], C)
		z[28] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 10549899360055738265
		C := madd0(m, 6557797220589329239, z[0])
		C, z[0] = madd2(m, 11417059503450690909, z[1], C)
		C, z[1] = madd2(m, 13704541515672720494, z[2], C)
		C, z[2] = madd2(m, 12806808807567348591, z[3], C)
		C, z[3] = madd2(m, 6275282332124812599, z[4], C)
		C, z[4] = madd2(m, 4405229158191370832, z[5], C)
		C, z[5] = madd2(m, 12168445323765187689, z[6], C)
		C, z[6] = madd2(m, 10671602409567735082, z[7], C)
		C, z[7] = madd2(m, 17193196447219887244, z[8], C)
		C, z[8] = madd2(m, 1968177518022708578, z[9], C)
		C, z[9] = madd2(m, 17810219903765590582, z[10], C)
		C, z[10] = madd2(m, 14425778727015286243, z[11], C)
		C, z[11] = madd2(m, 7046014110413742080, z[12], C)
		C, z[12] = madd2(m, 2030555054815402006, z[13], C)
		C, z[13] = madd2(m, 2364210669068217395, z[14], C)
		C, z[14] = madd2(m, 12900422625108798885, z[15], C)
		C, z[15] = madd2(m, 1930406275202811267, z[16], C)
		C, z[16] = madd2(m, 14290777978257669090, z[17], C)
		C, z[17] = madd2(m, 5932508195835066898, z[18], C)
		C, z[18] = madd2(m, 15850336981219945716, z[19], C)
		C, z[19] = madd2(m, 854831035414738096, z[20], C)
		C, z[20] = madd2(m, 2260305572347853835, z[21], C)
		C, z[21] = madd2(m, 5347326701889135155, z[22], C)
		C, z[22] = madd2(m, 4279901139938023971, z[23], C)
		C, z[23] = madd2(m, 4531757068977706609, z[24], C)
		C, z[24] = madd2(m, 9735365819670254271, z[25], C)
		C, z[25] = madd2(m, 3870673539892635154, z[26], C)
		C, z[26] = madd2(m, 15996650252674570430, z[27], C)
		C, z[27] = madd2(m, 7470438302128334459, z[28], C)
		z[28] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 10549899360055738265
		C := madd0(m, 6557797220589329239, z[0])
		C, z[0] = madd2(m, 11417059503450690909, z[1], C)
		C, z[1] = madd2(m, 13704541515672720494, z[2], C)
		C, z[2] = madd2(m, 12806808807567348591, z[3], C)
		C, z[3] = madd2(m, 6275282332124812599, z[4], C)
		C, z[4] = madd2(m, 4405229158191370832, z[5], C)
		C, z[5] = madd2(m, 12168445323765187689, z[6], C)
		C, z[6] = madd2(m, 10671602409567735082, z[7], C)
		C, z[7] = madd2(m, 17193196447219887244, z[8], C)
		C, z[8] = madd2(m, 1968177518022708578, z[9], C)
		C, z[9] = madd2(m, 17810219903765590582, z[10], C)
		C, z[10] = madd2(m, 14425778727015286243, z[11], C)
		C, z[11] = madd2(m, 7046014110413742080, z[12], C)
		C, z[12] = madd2(m, 2030555054815402006, z[13], C)
		C, z[13] = madd2(m, 2364210669068217395, z[14], C)
		C, z[14] = madd2(m, 12900422625108798885, z[15], C)
		C, z[15] = madd2(m, 1930406275202811267, z[16], C)
		C, z[16] = madd2(m, 14290777978257669090, z[17], C)
		C, z[17] = madd2(m, 5932508195835066898, z[18], C)
		C, z[18] = madd2(m, 15850336981219945716, z[19], C)
		C, z[19] = madd2(m, 854831035414738096, z[20], C)
		C, z[20] = madd2(m, 2260305572347853835, z[21], C)
		C, z[21] = madd2(m, 5347326701889135155, z[22], C)
		C, z[22] = madd2(m, 4279901139938023971, z[23], C)
		C, z[23] = madd2(m, 4531757068977706609, z[24], C)
		C, z[24] = madd2(m, 9735365819670254271, z[25], C)
		C, z[25] = madd2(m, 3870673539892635154, z[26], C)
		C, z[26] = madd2(m, 15996650252674570430, z[27], C)
		C, z[27] = madd2(m, 7470438302128334459, z[28], C)
		z[28] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 10549899360055738265
		C := madd0(m, 6557797220589329239, z[0])
		C, z[0] = madd2(m, 11417059503450690909, z[1], C)
		C, z[1] = madd2(m, 13704541515672720494, z[2], C)
		C, z[2] = madd2(m, 12806808807567348591, z[3], C)
		C, z[3] = madd2(m, 6275282332124812599, z[4], C)
		C, z[4] = madd2(m, 4405229158191370832, z[5], C)
		C, z[5] = madd2(m, 12168445323765187689, z[6], C)
		C, z[6] = madd2(m, 10671602409567735082, z[7], C)
		C, z[7] = madd2(m, 17193196447219887244, z[8], C)
		C, z[8] = madd2(m, 1968177518022708578, z[9], C)
		C, z[9] = madd2(m, 17810219903765590582, z[10], C)
		C, z[10] = madd2(m, 14425778727015286243, z[11], C)
		C, z[11] = madd2(m, 7046014110413742080, z[12], C)
		C, z[12] = madd2(m, 2030555054815402006, z[13], C)
		C, z[13] = madd2(m, 2364210669068217395, z[14], C)
		C, z[14] = madd2(m, 12900422625108798885, z[15], C)
		C, z[15] = madd2(m, 1930406275202811267, z[16], C)
		C, z[16] = madd2(m, 14290777978257669090, z[17], C)
		C, z[17] = madd2(m, 5932508195835066898, z[18], C)
		C, z[18] = madd2(m, 15850336981219945716, z[19], C)
		C, z[19] = madd2(m, 854831035414738096, z[20], C)
		C, z[20] = madd2(m, 2260305572347853835, z[21], C)
		C, z[21] = madd2(m, 5347326701889135155, z[22], C)
		C, z[22] = madd2(m, 4279901139938023971, z[23], C)
		C, z[23] = madd2(m, 4531757068977706609, z[24], C)
		C, z[24] = madd2(m, 9735365819670254271, z[25], C)
		C, z[25] = madd2(m, 3870673539892635154, z[26], C)
		C, z[26] = madd2(m, 15996650252674570430, z[27], C)
		C, z[27] = madd2(m, 7470438302128334459, z[28], C)
		z[28] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 10549899360055738265
		C := madd0(m, 6557797220589329239, z[0])
		C, z[0] = madd2(m, 11417059503450690909, z[1], C)
		C, z[1] = madd2(m, 13704541515672720494, z[2], C)
		C, z[2] = madd2(m, 12806808807567348591, z[3], C)
		C, z[3] = madd2(m, 6275282332124812599, z[4], C)
		C, z[4] = madd2(m, 4405229158191370832, z[5], C)
		C, z[5] = madd2(m, 12168445323765187689, z[6], C)
		C, z[6] = madd2(m, 10671602409567735082, z[7], C)
		C, z[7] = madd2(m, 17193196447219887244, z[8], C)
		C, z[8] = madd2(m, 1968177518022708578, z[9], C)
		C, z[9] = madd2(m, 17810219903765590582, z[10], C)
		C, z[10] = madd2(m, 14425778727015286243, z[11], C)
		C, z[11] = madd2(m, 7046014110413742080, z[12], C)
		C, z[12] = madd2(m, 2030555054815402006, z[13], C)
		C, z[13] = madd2(m, 2364210669068217395, z[14], C)
		C, z[14] = madd2(m, 12900422625108798885, z[15], C)
		C, z[15] = madd2(m, 1930406275202811267, z[16], C)
		C, z[16] = madd2(m, 14290777978257669090, z[17], C)
		C, z[17] = madd2(m, 5932508195835066898, z[18], C)
		C, z[18] = madd2(m, 15850336981219945716, z[19], C)
		C, z[19] = madd2(m, 854831035414738096, z[20], C)
		C, z[20] = madd2(m, 2260305572347853835, z[21], C)
		C, z[21] = madd2(m, 5347326701889135155, z[22], C)
		C, z[22] = madd2(m, 4279901139938023971, z[23], C)
		C, z[23] = madd2(m, 4531757068977706609, z[24], C)
		C, z[24] = madd2(m, 9735365819670254271, z[25], C)
		C, z[25] = madd2(m, 3870673539892635154, z[26], C)
		C, z[26] = madd2(m, 15996650252674570430, z[27], C)
		C, z[27] = madd2(m, 7470438302128334459, z[28], C)
		z[28] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 10549899360055738265
		C := madd0(m, 6557797220589329239, z[0])
		C, z[0] = madd2(m, 11417059503450690909, z[1], C)
		C, z[1] = madd2(m, 13704541515672720494, z[2], C)
		C, z[2] = madd2(m, 12806808807567348591, z[3], C)
		C, z[3] = madd2(m, 6275282332124812599, z[4], C)
		C, z[4] = madd2(m, 4405229158191370832, z[5], C)
		C, z[5] = madd2(m, 12168445323765187689, z[6], C)
		C, z[6] = madd2(m, 10671602409567735082, z[7], C)
		C, z[7] = madd2(m, 17193196447219887244, z[8], C)
		C, z[8] = madd2(m, 1968177518022708578, z[9], C)
		C, z[9] = madd2(m, 17810219903765590582, z[10], C)
		C, z[10] = madd2(m, 14425778727015286243, z[11], C)
		C, z[11] = madd2(m, 7046014110413742080, z[12], C)
		C, z[12] = madd2(m, 2030555054815402006, z[13], C)
		C, z[13] = madd2(m, 2364210669068217395, z[14], C)
		C, z[14] = madd2(m, 12900422625108798885, z[15], C)
		C, z[15] = madd2(m, 1930406275202811267, z[16], C)
		C, z[16] = madd2(m, 14290777978257669090, z[17], C)
		C, z[17] = madd2(m, 5932508195835066898, z[18], C)
		C, z[18] = madd2(m, 15850336981219945716, z[19], C)
		C, z[19] = madd2(m, 854831035414738096, z[20], C)
		C, z[20] = madd2(m, 2260305572347853835, z[21], C)
		C, z[21] = madd2(m, 5347326701889135155, z[22], C)
		C, z[22] = madd2(m, 4279901139938023971, z[23], C)
		C, z[23] = madd2(m, 4531757068977706609, z[24], C)
		C, z[24] = madd2(m, 9735365819670254271, z[25], C)
		C, z[25] = madd2(m, 3870673539892635154, z[26], C)
		C, z[26] = madd2(m, 15996650252674570430, z[27], C)
		C, z[27] = madd2(m, 7470438302128334459, z[28], C)
		z[28] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 10549899360055738265
		C := madd0(m, 6557797220589329239, z[0])
		C, z[0] = madd2(m, 11417059503450690909, z[1], C)
		C, z[1] = madd2(m, 13704541515672720494, z[2], C)
		C, z[2] = madd2(m, 12806808807567348591, z[3], C)
		C, z[3] = madd2(m, 6275282332124812599, z[4], C)
		C, z[4] = madd2(m, 4405229158191370832, z[5], C)
		C, z[5] = madd2(m, 12168445323765187689, z[6], C)
		C, z[6] = madd2(m, 10671602409567735082, z[7], C)
		C, z[7] = madd2(m, 17193196447219887244, z[8], C)
		C, z[8] = madd2(m, 1968177518022708578, z[9], C)
		C, z[9] = madd2(m, 17810219903765590582, z[10], C)
		C, z[10] = madd2(m, 14425778727015286243, z[11], C)
		C, z[11] = madd2(m, 7046014110413742080, z[12], C)
		C, z[12] = madd2(m, 2030555054815402006, z[13], C)
		C, z[13] = madd2(m, 2364210669068217395, z[14], C)
		C, z[14] = madd2(m, 12900422625108798885, z[15], C)
		C, z[15] = madd2(m, 1930406275202811267, z[16], C)
		C, z[16] = madd2(m, 14290777978257669090, z[17], C)
		C, z[17] = madd2(m, 5932508195835066898, z[18], C)
		C, z[18] = madd2(m, 15850336981219945716, z[19], C)
		C, z[19] = madd2(m, 854831035414738096, z[20], C)
		C, z[20] = madd2(m, 2260305572347853835, z[21], C)
		C, z[21] = madd2(m, 5347326701889135155, z[22], C)
		C, z[22] = madd2(m, 4279901139938023971, z[23], C)
		C, z[23] = madd2(m, 4531757068977706609, z[24], C)
		C, z[24] = madd2(m, 9735365819670254271, z[25], C)
		C, z[25] = madd2(m, 3870673539892635154, z[26], C)
		C, z[26] = madd2(m, 15996650252674570430, z[27], C)
		C, z[27] = madd2(m, 7470438302128334459, z[28], C)
		z[28] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 10549899360055738265
		C := madd0(m, 6557797220589329239, z[0])
		C, z[0] = madd2(m, 11417059503450690909, z[1], C)
		C, z[1] = madd2(m, 13704541515672720494, z[2], C)
		C, z[2] = madd2(m, 12806808807567348591, z[3], C)
		C, z[3] = madd2(m, 6275282332124812599, z[4], C)
		C, z[4] = madd2(m, 4405229158191370832, z[5], C)
		C, z[5] = madd2(m, 12168445323765187689, z[6], C)
		C, z[6] = madd2(m, 10671602409567735082, z[7], C)
		C, z[7] = madd2(m, 17193196447219887244, z[8], C)
		C, z[8] = madd2(m, 1968177518022708578, z[9], C)
		C, z[9] = madd2(m, 17810219903765590582, z[10], C)
		C, z[10] = madd2(m, 14425778727015286243, z[11], C)
		C, z[11] = madd2(m, 7046014110413742080, z[12], C)
		C, z[12] = madd2(m, 2030555054815402006, z[13], C)
		C, z[13] = madd2(m, 2364210669068217395, z[14], C)
		C, z[14] = madd2(m, 12900422625108798885, z[15], C)
		C, z[15] = madd2(m, 1930406275202811267, z[16], C)
		C, z[16] = madd2(m, 14290777978257669090, z[17], C)
		C, z[17] = madd2(m, 5932508195835066898, z[18], C)
		C, z[18] = madd2(m, 15850336981219945716, z[19], C)
		C, z[19] = madd2(m, 854831035414738096, z[20], C)
		C, z[20] = madd2(m, 2260305572347853835, z[21], C)
		C, z[21] = madd2(m, 5347326701889135155, z[22], C)
		C, z[22] = madd2(m, 4279901139938023971, z[23], C)
		C, z[23] = madd2(m, 4531757068977706609, z[24], C)
		C, z[24] = madd2(m, 9735365819670254271, z[25], C)
		C, z[25] = madd2(m, 3870673539892635154, z[26], C)
		C, z[26] = madd2(m, 15996650252674570430, z[27], C)
		C, z[27] = madd2(m, 7470438302128334459, z[28], C)
		z[28] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 10549899360055738265
		C := madd0(m, 6557797220589329239, z[0])
		C, z[0] = madd2(m, 11417059503450690909, z[1], C)
		C, z[1] = madd2(m, 13704541515672720494, z[2], C)
		C, z[2] = madd2(m, 12806808807567348591, z[3], C)
		C, z[3] = madd2(m, 6275282332124812599, z[4], C)
		C, z[4] = madd2(m, 4405229158191370832, z[5], C)
		C, z[5] = madd2(m, 12168445323765187689, z[6], C)
		C, z[6] = madd2(m, 10671602409567735082, z[7], C)
		C, z[7] = madd2(m, 17193196447219887244, z[8], C)
		C, z[8] = madd2(m, 1968177518022708578, z[9], C)
		C, z[9] = madd2(m, 17810219903765590582, z[10], C)
		C, z[10] = madd2(m, 14425778727015286243, z[11], C)
		C, z[11] = madd2(m, 7046014110413742080, z[12], C)
		C, z[12] = madd2(m, 2030555054815402006, z[13], C)
		C, z[13] = madd2(m, 2364210669068217395, z[14], C)
		C, z[14] = madd2(m, 12900422625108798885, z[15], C)
		C, z[15] = madd2(m, 1930406275202811267, z[16], C)
		C, z[16] = madd2(m, 14290777978257669090, z[17], C)
		C, z[17] = madd2(m, 5932508195835066898, z[18], C)
		C, z[18] = madd2(m, 15850336981219945716, z[19], C)
		C, z[19] = madd2(m, 854831035414738096, z[20], C)
		C, z[20] = madd2(m, 2260305572347853835, z[21], C)
		C, z[21] = madd2(m, 5347326701889135155, z[22], C)
		C, z[22] = madd2(m, 4279901139938023971, z[23], C)
		C, z[23] = madd2(m, 4531757068977706609, z[24], C)
		C, z[24] = madd2(m, 9735365819670254271, z[25], C)
		C, z[25] = madd2(m, 3870673539892635154, z[26], C)
		C, z[26] = madd2(m, 15996650252674570430, z[27], C)
		C, z[27] = madd2(m, 7470438302128334459, z[28], C)
		z[28] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 10549899360055738265
		C := madd0(m, 6557797220589329239, z[0])
		C, z[0] = madd2(m, 11417059503450690909, z[1], C)
		C, z[1] = madd2(m, 13704541515672720494, z[2], C)
		C, z[2] = madd2(m, 12806808807567348591, z[3], C)
		C, z[3] = madd2(m, 6275282332124812599, z[4], C)
		C, z[4] = madd2(m, 4405229158191370832, z[5], C)
		C, z[5] = madd2(m, 12168445323765187689, z[6], C)
		C, z[6] = madd2(m, 10671602409567735082, z[7], C)
		C, z[7] = madd2(m, 17193196447219887244, z[8], C)
		C, z[8] = madd2(m, 1968177518022708578, z[9], C)
		C, z[9] = madd2(m, 17810219903765590582, z[10], C)
		C, z[10] = madd2(m, 14425778727015286243, z[11], C)
		C, z[11] = madd2(m, 7046014110413742080, z[12], C)
		C, z[12] = madd2(m, 2030555054815402006, z[13], C)
		C, z[13] = madd2(m, 2364210669068217395, z[14], C)
		C, z[14] = madd2(m, 12900422625108798885, z[15], C)
		C, z[15] = madd2(m, 1930406275202811267, z[16], C)
		C, z[16] = madd2(m, 14290777978257669090, z[17], C)
		C, z[17] = madd2(m, 5932508195835066898, z[18], C)
		C, z[18] = madd2(m, 15850336981219945716, z[19], C)
		C, z[19] = madd2(m, 854831035414738096, z[20], C)
		C, z[20] = madd2(m, 2260305572347853835, z[21], C)
		C, z[21] = madd2(m, 5347326701889135155, z[22], C)
		C, z[22] = madd2(m, 4279901139938023971, z[23], C)
		C, z[23] = madd2(m, 4531757068977706609, z[24], C)
		C, z[24] = madd2(m, 9735365819670254271, z[25], C)
		C, z[25] = madd2(m, 3870673539892635154, z[26], C)
		C, z[26] = madd2(m, 15996650252674570430, z[27], C)
		C, z[27] = madd2(m, 7470438302128334459, z[28], C)
		z[28] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 10549899360055738265
		C := madd0(m, 6557797220589329239, z[0])
		C, z[0] = madd2(m, 11417059503450690909, z[1], C)
		C, z[1] = madd2(m, 13704541515672720494, z[2], C)
		C, z[2] = madd2(m, 12806808807567348591, z[3], C)
		C, z[3] = madd2(m, 6275282332124812599, z[4], C)
		C, z[4] = madd2(m, 4405229158191370832, z[5], C)
		C, z[5] = madd2(m, 12168445323765187689, z[6], C)
		C, z[6] = madd2(m, 10671602409567735082, z[7], C)
		C, z[7] = madd2(m, 17193196447219887244, z[8], C)
		C, z[8] = madd2(m, 1968177518022708578, z[9], C)
		C, z[9] = madd2(m, 17810219903765590582, z[10], C)
		C, z[10] = madd2(m, 14425778727015286243, z[11], C)
		C, z[11] = madd2(m, 7046014110413742080, z[12], C)
		C, z[12] = madd2(m, 2030555054815402006, z[13], C)
		C, z[13] = madd2(m, 2364210669068217395, z[14], C)
		C, z[14] = madd2(m, 12900422625108798885, z[15], C)
		C, z[15] = madd2(m, 1930406275202811267, z[16], C)
		C, z[16] = madd2(m, 14290777978257669090, z[17], C)
		C, z[17] = madd2(m, 5932508195835066898, z[18], C)
		C, z[18] = madd2(m, 15850336981219945716, z[19], C)
		C, z[19] = madd2(m, 854831035414738096, z[20], C)
		C, z[20] = madd2(m, 2260305572347853835, z[21], C)
		C, z[21] = madd2(m, 5347326701889135155, z[22], C)
		C, z[22] = madd2(m, 4279901139938023971, z[23], C)
		C, z[23] = madd2(m, 4531757068977706609, z[24], C)
		C, z[24] = madd2(m, 9735365819670254271, z[25], C)
		C, z[25] = madd2(m, 3870673539892635154, z[26], C)
		C, z[26] = madd2(m, 15996650252674570430, z[27], C)
		C, z[27] = madd2(m, 7470438302128334459, z[28], C)
		z[28] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 10549899360055738265
		C := madd0(m, 6557797220589329239, z[0])
		C, z[0] = madd2(m, 11417059503450690909, z[1], C)
		C, z[1] = madd2(m, 13704541515672720494, z[2], C)
		C, z[2] = madd2(m, 12806808807567348591, z[3], C)
		C, z[3] = madd2(m, 6275282332124812599, z[4], C)
		C, z[4] = madd2(m, 4405229158191370832, z[5], C)
		C, z[5] = madd2(m, 12168445323765187689, z[6], C)
		C, z[6] = madd2(m, 10671602409567735082, z[7], C)
		C, z[7] = madd2(m, 17193196447219887244, z[8], C)
		C, z[8] = madd2(m, 1968177518022708578, z[9], C)
		C, z[9] = madd2(m, 17810219903765590582, z[10], C)
		C, z[10] = madd2(m, 14425778727015286243, z[11], C)
		C, z[11] = madd2(m, 7046014110413742080, z[12], C)
		C, z[12] = madd2(m, 2030555054815402006, z[13], C)
		C, z[13] = madd2(m, 2364210669068217395, z[14], C)
		C, z[14] = madd2(m, 12900422625108798885, z[15], C)
		C, z[15] = madd2(m, 1930406275202811267, z[16], C)
		C, z[16] = madd2(m, 14290777978257669090, z[17], C)
		C, z[17] = madd2(m, 5932508195835066898, z[18], C)
		C, z[18] = madd2(m, 15850336981219945716, z[19], C)
		C, z[19] = madd2(m, 854831035414738096, z[20], C)
		C, z[20] = madd2(m, 2260305572347853835, z[21], C)
		C, z[21] = madd2(m, 5347326701889135155, z[22], C)
		C, z[22] = madd2(m, 4279901139938023971, z[23], C)
		C, z[23] = madd2(m, 4531757068977706609, z[24], C)
		C, z[24] = madd2(m, 9735365819670254271, z[25], C)
		C, z[25] = madd2(m, 3870673539892635154, z[26], C)
		C, z[26] = madd2(m, 15996650252674570430, z[27], C)
		C, z[27] = madd2(m, 7470438302128334459, z[28], C)
		z[28] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 10549899360055738265
		C := madd0(m, 6557797220589329239, z[0])
		C, z[0] = madd2(m, 11417059503450690909, z[1], C)
		C, z[1] = madd2(m, 13704541515672720494, z[2], C)
		C, z[2] = madd2(m, 12806808807567348591, z[3], C)
		C, z[3] = madd2(m, 6275282332124812599, z[4], C)
		C, z[4] = madd2(m, 4405229158191370832, z[5], C)
		C, z[5] = madd2(m, 12168445323765187689, z[6], C)
		C, z[6] = madd2(m, 10671602409567735082, z[7], C)
		C, z[7] = madd2(m, 17193196447219887244, z[8], C)
		C, z[8] = madd2(m, 1968177518022708578, z[9], C)
		C, z[9] = madd2(m, 17810219903765590582, z[10], C)
		C, z[10] = madd2(m, 14425778727015286243, z[11], C)
		C, z[11] = madd2(m, 7046014110413742080, z[12], C)
		C, z[12] = madd2(m, 2030555054815402006, z[13], C)
		C, z[13] = madd2(m, 2364210669068217395, z[14], C)
		C, z[14] = madd2(m, 12900422625108798885, z[15], C)
		C, z[15] = madd2(m, 1930406275202811267, z[16], C)
		C, z[16] = madd2(m, 14290777978257669090, z[17], C)
		C, z[17] = madd2(m, 5932508195835066898, z[18], C)
		C, z[18] = madd2(m, 15850336981219945716, z[19], C)
		C, z[19] = madd2(m, 854831035414738096, z[20], C)
		C, z[20] = madd2(m, 2260305572347853835, z[21], C)
		C, z[21] = madd2(m, 5347326701889135155, z[22], C)
		C, z[22] = madd2(m, 4279901139938023971, z[23], C)
		C, z[23] = madd2(m, 4531757068977706609, z[24], C)
		C, z[24] = madd2(m, 9735365819670254271, z[25], C)
		C, z[25] = madd2(m, 3870673539892635154, z[26], C)
		C, z[26] = madd2(m, 15996650252674570430, z[27], C)
		C, z[27] = madd2(m, 7470438302128334459, z[28], C)
		z[28] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 10549899360055738265
		C := madd0(m, 6557797220589329239, z[0])
		C, z[0] = madd2(m, 11417059503450690909, z[1], C)
		C, z[1] = madd2(m, 13704541515672720494, z[2], C)
		C, z[2] = madd2(m, 12806808807567348591, z[3], C)
		C, z[3] = madd2(m, 6275282332124812599, z[4], C)
		C, z[4] = madd2(m, 4405229158191370832, z[5], C)
		C, z[5] = madd2(m, 12168445323765187689, z[6], C)
		C, z[6] = madd2(m, 10671602409567735082, z[7], C)
		C, z[7] = madd2(m, 17193196447219887244, z[8], C)
		C, z[8] = madd2(m, 1968177518022708578, z[9], C)
		C, z[9] = madd2(m, 17810219903765590582, z[10], C)
		C, z[10] = madd2(m, 14425778727015286243, z[11], C)
		C, z[11] = madd2(m, 7046014110413742080, z[12], C)
		C, z[12] = madd2(m, 2030555054815402006, z[13], C)
		C, z[13] = madd2(m, 2364210669068217395, z[14], C)
		C, z[14] = madd2(m, 12900422625108798885, z[15], C)
		C, z[15] = madd2(m, 1930406275202811267, z[16], C)
		C, z[16] = madd2(m, 14290777978257669090, z[17], C)
		C, z[17] = madd2(m, 5932508195835066898, z[18], C)
		C, z[18] = madd2(m, 15850336981219945716, z[19], C)
		C, z[19] = madd2(m, 854831035414738096, z[20], C)
		C, z[20] = madd2(m, 2260305572347853835, z[21], C)
		C, z[21] = madd2(m, 5347326701889135155, z[22], C)
		C, z[22] = madd2(m, 4279901139938023971, z[23], C)
		C, z[23] = madd2(m, 4531757068977706609, z[24], C)
		C, z[24] = madd2(m, 9735365819670254271, z[25], C)
		C, z[25] = madd2(m, 3870673539892635154, z[26], C)
		C, z[26] = madd2(m, 15996650252674570430, z[27], C)
		C, z[27] = madd2(m, 7470438302128334459, z[28], C)
		z[28] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 10549899360055738265
		C := madd0(m, 6557797220589329239, z[0])
		C, z[0] = madd2(m, 11417059503450690909, z[1], C)
		C, z[1] = madd2(m, 13704541515672720494, z[2], C)
		C, z[2] = madd2(m, 12806808807567348591, z[3], C)
		C, z[3] = madd2(m, 6275282332124812599, z[4], C)
		C, z[4] = madd2(m, 4405229158191370832, z[5], C)
		C, z[5] = madd2(m, 12168445323765187689, z[6], C)
		C, z[6] = madd2(m, 10671602409567735082, z[7], C)
		C, z[7] = madd2(m, 17193196447219887244, z[8], C)
		C, z[8] = madd2(m, 1968177518022708578, z[9], C)
		C, z[9] = madd2(m, 17810219903765590582, z[10], C)
		C, z[10] = madd2(m, 14425778727015286243, z[11], C)
		C, z[11] = madd2(m, 7046014110413742080, z[12], C)
		C, z[12] = madd2(m, 2030555054815402006, z[13], C)
		C, z[13] = madd2(m, 2364210669068217395, z[14], C)
		C, z[14] = madd2(m, 12900422625108798885, z[15], C)
		C, z[15] = madd2(m, 1930406275202811267, z[16], C)
		C, z[16] = madd2(m, 14290777978257669090, z[17], C)
		C, z[17] = madd2(m, 5932508195835066898, z[18], C)
		C, z[18] = madd2(m, 15850336981219945716, z[19], C)
		C, z[19] = madd2(m, 854831035414738096, z[20], C)
		C, z[20] = madd2(m, 2260305572347853835, z[21], C)
		C, z[21] = madd2(m, 5347326701889135155, z[22], C)
		C, z[22] = madd2(m, 4279901139938023971, z[23], C)
		C, z[23] = madd2(m, 4531757068977706609, z[24], C)
		C, z[24] = madd2(m, 9735365819670254271, z[25], C)
		C, z[25] = madd2(m, 3870673539892635154, z[26], C)
		C, z[26] = madd2(m, 15996650252674570430, z[27], C)
		C, z[27] = madd2(m, 7470438302128334459, z[28], C)
		z[28] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 10549899360055738265
		C := madd0(m, 6557797220589329239, z[0])
		C, z[0] = madd2(m, 11417059503450690909, z[1], C)
		C, z[1] = madd2(m, 13704541515672720494, z[2], C)
		C, z[2] = madd2(m, 12806808807567348591, z[3], C)
		C, z[3] = madd2(m, 6275282332124812599, z[4], C)
		C, z[4] = madd2(m, 4405229158191370832, z[5], C)
		C, z[5] = madd2(m, 12168445323765187689, z[6], C)
		C, z[6] = madd2(m, 10671602409567735082, z[7], C)
		C, z[7] = madd2(m, 17193196447219887244, z[8], C)
		C, z[8] = madd2(m, 1968177518022708578, z[9], C)
		C, z[9] = madd2(m, 17810219903765590582, z[10], C)
		C, z[10] = madd2(m, 14425778727015286243, z[11], C)
		C, z[11] = madd2(m, 7046014110413742080, z[12], C)
		C, z[12] = madd2(m, 2030555054815402006, z[13], C)
		C, z[13] = madd2(m, 2364210669068217395, z[14], C)
		C, z[14] = madd2(m, 12900422625108798885, z[15], C)
		C, z[15] = madd2(m, 1930406275202811267, z[16], C)
		C, z[16] = madd2(m, 14290777978257669090, z[17], C)
		C, z[17] = madd2(m, 5932508195835066898, z[18], C)
		C, z[18] = madd2(m, 15850336981219945716, z[19], C)
		C, z[19] = madd2(m, 854831035414738096, z[20], C)
		C, z[20] = madd2(m, 2260305572347853835, z[21], C)
		C, z[21] = madd2(m, 5347326701889135155, z[22], C)
		C, z[22] = madd2(m, 4279901139938023971, z[23], C)
		C, z[23] = madd2(m, 4531757068977706609, z[24], C)
		C, z[24] = madd2(m, 9735365819670254271, z[25], C)
		C, z[25] = madd2(m, 3870673539892635154, z[26], C)
		C, z[26] = madd2(m, 15996650252674570430, z[27], C)
		C, z[27] = madd2(m, 7470438302128334459, z[28], C)
		z[28] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 10549899360055738265
		C := madd0(m, 6557797220589329239, z[0])
		C, z[0] = madd2(m, 11417059503450690909, z[1], C)
		C, z[1] = madd2(m, 13704541515672720494, z[2], C)
		C, z[2] = madd2(m, 12806808807567348591, z[3], C)
		C, z[3] = madd2(m, 6275282332124812599, z[4], C)
		C, z[4] = madd2(m, 4405229158191370832, z[5], C)
		C, z[5] = madd2(m, 12168445323765187689, z[6], C)
		C, z[6] = madd2(m, 10671602409567735082, z[7], C)
		C, z[7] = madd2(m, 17193196447219887244, z[8], C)
		C, z[8] = madd2(m, 1968177518022708578, z[9], C)
		C, z[9] = madd2(m, 17810219903765590582, z[10], C)
		C, z[10] = madd2(m, 14425778727015286243, z[11], C)
		C, z[11] = madd2(m, 7046014110413742080, z[12], C)
		C, z[12] = madd2(m, 2030555054815402006, z[13], C)
		C, z[13] = madd2(m, 2364210669068217395, z[14], C)
		C, z[14] = madd2(m, 12900422625108798885, z[15], C)
		C, z[15] = madd2(m, 1930406275202811267, z[16], C)
		C, z[16] = madd2(m, 14290777978257669090, z[17], C)
		C, z[17] = madd2(m, 5932508195835066898, z[18], C)
		C, z[18] = madd2(m, 15850336981219945716, z[19], C)
		C, z[19] = madd2(m, 854831035414738096, z[20], C)
		C, z[20] = madd2(m, 2260305572347853835, z[21], C)
		C, z[21] = madd2(m, 5347326701889135155, z[22], C)
		C, z[22] = madd2(m, 4279901139938023971, z[23], C)
		C, z[23] = madd2(m, 4531757068977706609, z[24], C)
		C, z[24] = madd2(m, 9735365819670254271, z[25], C)
		C, z[25] = madd2(m, 3870673539892635154, z[26], C)
		C, z[26] = madd2(m, 15996650252674570430, z[27], C)
		C, z[27] = madd2(m, 7470438302128334459, z[28], C)
		z[28] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 10549899360055738265
		C := madd0(m, 6557797220589329239, z[0])
		C, z[0] = madd2(m, 11417059503450690909, z[1], C)
		C, z[1] = madd2(m, 13704541515672720494, z[2], C)
		C, z[2] = madd2(m, 12806808807567348591, z[3], C)
		C, z[3] = madd2(m, 6275282332124812599, z[4], C)
		C, z[4] = madd2(m, 4405229158191370832, z[5], C)
		C, z[5] = madd2(m, 12168445323765187689, z[6], C)
		C, z[6] = madd2(m, 10671602409567735082, z[7], C)
		C, z[7] = madd2(m, 17193196447219887244, z[8], C)
		C, z[8] = madd2(m, 1968177518022708578, z[9], C)
		C, z[9] = madd2(m, 17810219903765590582, z[10], C)
		C, z[10] = madd2(m, 14425778727015286243, z[11], C)
		C, z[11] = madd2(m, 7046014110413742080, z[12], C)
		C, z[12] = madd2(m, 2030555054815402006, z[13], C)
		C, z[13] = madd2(m, 2364210669068217395, z[14], C)
		C, z[14] = madd2(m, 12900422625108798885, z[15], C)
		C, z[15] = madd2(m, 1930406275202811267, z[16], C)
		C, z[16] = madd2(m, 14290777978257669090, z[17], C)
		C, z[17] = madd2(m, 5932508195835066898, z[18], C)
		C, z[18] = madd2(m, 15850336981219945716, z[19], C)
		C, z[19] = madd2(m, 854831035414738096, z[20], C)
		C, z[20] = madd2(m, 2260305572347853835, z[21], C)
		C, z[21] = madd2(m, 5347326701889135155, z[22], C)
		C, z[22] = madd2(m, 4279901139938023971, z[23], C)
		C, z[23] = madd2(m, 4531757068977706609, z[24], C)
		C, z[24] = madd2(m, 9735365819670254271, z[25], C)
		C, z[25] = madd2(m, 3870673539892635154, z[26], C)
		C, z[26] = madd2(m, 15996650252674570430, z[27], C)
		C, z[27] = madd2(m, 7470438302128334459, z[28], C)
		z[28] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 10549899360055738265
		C := madd0(m, 6557797220589329239, z[0])
		C, z[0] = madd2(m, 11417059503450690909, z[1], C)
		C, z[1] = madd2(m, 13704541515672720494, z[2], C)
		C, z[2] = madd2(m, 12806808807567348591, z[3], C)
		C, z[3] = madd2(m, 6275282332124812599, z[4], C)
		C, z[4] = madd2(m, 4405229158191370832, z[5], C)
		C, z[5] = madd2(m, 12168445323765187689, z[6], C)
		C, z[6] = madd2(m, 10671602409567735082, z[7], C)
		C, z[7] = madd2(m, 17193196447219887244, z[8], C)
		C, z[8] = madd2(m, 1968177518022708578, z[9], C)
		C, z[9] = madd2(m, 17810219903765590582, z[10], C)
		C, z[10] = madd2(m, 14425778727015286243, z[11], C)
		C, z[11] = madd2(m, 7046014110413742080, z[12], C)
		C, z[12] = madd2(m, 2030555054815402006, z[13], C)
		C, z[13] = madd2(m, 2364210669068217395, z[14], C)
		C, z[14] = madd2(m, 12900422625108798885, z[15], C)
		C, z[15] = madd2(m, 1930406275202811267, z[16], C)
		C, z[16] = madd2(m, 14290777978257669090, z[17], C)
		C, z[17] = madd2(m, 5932508195835066898, z[18], C)
		C, z[18] = madd2(m, 15850336981219945716, z[19], C)
		C, z[19] = madd2(m, 854831035414738096, z[20], C)
		C, z[20] = madd2(m, 2260305572347853835, z[21], C)
		C, z[21] = madd2(m, 5347326701889135155, z[22], C)
		C, z[22] = madd2(m, 4279901139938023971, z[23], C)
		C, z[23] = madd2(m, 4531757068977706609, z[24], C)
		C, z[24] = madd2(m, 9735365819670254271, z[25], C)
		C, z[25] = madd2(m, 3870673539892635154, z[26], C)
		C, z[26] = madd2(m, 15996650252674570430, z[27], C)
		C, z[27] = madd2(m, 7470438302128334459, z[28], C)
		z[28] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 10549899360055738265
		C := madd0(m, 6557797220589329239, z[0])
		C, z[0] = madd2(m, 11417059503450690909, z[1], C)
		C, z[1] = madd2(m, 13704541515672720494, z[2], C)
		C, z[2] = madd2(m, 12806808807567348591, z[3], C)
		C, z[3] = madd2(m, 6275282332124812599, z[4], C)
		C, z[4] = madd2(m, 4405229158191370832, z[5], C)
		C, z[5] = madd2(m, 12168445323765187689, z[6], C)
		C, z[6] = madd2(m, 10671602409567735082, z[7], C)
		C, z[7] = madd2(m, 17193196447219887244, z[8], C)
		C, z[8] = madd2(m, 1968177518022708578, z[9], C)
		C, z[9] = madd2(m, 17810219903765590582, z[10], C)
		C, z[10] = madd2(m, 14425778727015286243, z[11], C)
		C, z[11] = madd2(m, 7046014110413742080, z[12], C)
		C, z[12] = madd2(m, 2030555054815402006, z[13], C)
		C, z[13] = madd2(m, 2364210669068217395, z[14], C)
		C, z[14] = madd2(m, 12900422625108798885, z[15], C)
		C, z[15] = madd2(m, 1930406275202811267, z[16], C)
		C, z[16] = madd2(m, 14290777978257669090, z[17], C)
		C, z[17] = madd2(m, 5932508195835066898, z[18], C)
		C, z[18] = madd2(m, 15850336981219945716, z[19], C)
		C, z[19] = madd2(m, 854831035414738096, z[20], C)
		C, z[20] = madd2(m, 2260305572347853835, z[21], C)
		C, z[21] = madd2(m, 5347326701889135155, z[22], C)
		C, z[22] = madd2(m, 4279901139938023971, z[23], C)
		C, z[23] = madd2(m, 4531757068977706609, z[24], C)
		C, z[24] = madd2(m, 9735365819670254271, z[25], C)
		C, z[25] = madd2(m, 3870673539892635154, z[26], C)
		C, z[26] = madd2(m, 15996650252674570430, z[27], C)
		C, z[27] = madd2(m, 7470438302128334459, z[28], C)
		z[28] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 10549899360055738265
		C := madd0(m, 6557797220589329239, z[0])
		C, z[0] = madd2(m, 11417059503450690909, z[1], C)
		C, z[1] = madd2(m, 13704541515672720494, z[2], C)
		C, z[2] = madd2(m, 12806808807567348591, z[3], C)
		C, z[3] = madd2(m, 6275282332124812599, z[4], C)
		C, z[4] = madd2(m, 4405229158191370832, z[5], C)
		C, z[5] = madd2(m, 12168445323765187689, z[6], C)
		C, z[6] = madd2(m, 10671602409567735082, z[7], C)
		C, z[7] = madd2(m, 17193196447219887244, z[8], C)
		C, z[8] = madd2(m, 1968177518022708578, z[9], C)
		C, z[9] = madd2(m, 17810219903765590582, z[10], C)
		C, z[10] = madd2(m, 14425778727015286243, z[11], C)
		C, z[11] = madd2(m, 7046014110413742080, z[12], C)
		C, z[12] = madd2(m, 2030555054815402006, z[13], C)
		C, z[13] = madd2(m, 2364210669068217395, z[14], C)
		C, z[14] = madd2(m, 12900422625108798885, z[15], C)
		C, z[15] = madd2(m, 1930406275202811267, z[16], C)
		C, z[16] = madd2(m, 14290777978257669090, z[17], C)
		C, z[17] = madd2(m, 5932508195835066898, z[18], C)
		C, z[18] = madd2(m, 15850336981219945716, z[19], C)
		C, z[19] = madd2(m, 854831035414738096, z[20], C)
		C, z[20] = madd2(m, 2260305572347853835, z[21], C)
		C, z[21] = madd2(m, 5347326701889135155, z[22], C)
		C, z[22] = madd2(m, 4279901139938023971, z[23], C)
		C, z[23] = madd2(m, 4531757068977706609, z[24], C)
		C, z[24] = madd2(m, 9735365819670254271, z[25], C)
		C, z[25] = madd2(m, 3870673539892635154, z[26], C)
		C, z[26] = madd2(m, 15996650252674570430, z[27], C)
		C, z[27] = madd2(m, 7470438302128334459, z[28], C)
		z[28] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 10549899360055738265
		C := madd0(m, 6557797220589329239, z[0])
		C, z[0] = madd2(m, 11417059503450690909, z[1], C)
		C, z[1] = madd2(m, 13704541515672720494, z[2], C)
		C, z[2] = madd2(m, 12806808807567348591, z[3], C)
		C, z[3] = madd2(m, 6275282332124812599, z[4], C)
		C, z[4] = madd2(m, 4405229158191370832, z[5], C)
		C, z[5] = madd2(m, 12168445323765187689, z[6], C)
		C, z[6] = madd2(m, 10671602409567735082, z[7], C)
		C, z[7] = madd2(m, 17193196447219887244, z[8], C)
		C, z[8] = madd2(m, 1968177518022708578, z[9], C)
		C, z[9] = madd2(m, 17810219903765590582, z[10], C)
		C, z[10] = madd2(m, 14425778727015286243, z[11], C)
		C, z[11] = madd2(m, 7046014110413742080, z[12], C)
		C, z[12] = madd2(m, 2030555054815402006, z[13], C)
		C, z[13] = madd2(m, 2364210669068217395, z[14], C)
		C, z[14] = madd2(m, 12900422625108798885, z[15], C)
		C, z[15] = madd2(m, 1930406275202811267, z[16], C)
		C, z[16] = madd2(m, 14290777978257669090, z[17], C)
		C, z[17] = madd2(m, 5932508195835066898, z[18], C)
		C, z[18] = madd2(m, 15850336981219945716, z[19], C)
		C, z[19] = madd2(m, 854831035414738096, z[20], C)
		C, z[20] = madd2(m, 2260305572347853835, z[21], C)
		C, z[21] = madd2(m, 5347326701889135155, z[22], C)
		C, z[22] = madd2(m, 4279901139938023971, z[23], C)
		C, z[23] = madd2(m, 4531757068977706609, z[24], C)
		C, z[24] = madd2(m, 9735365819670254271, z[25], C)
		C, z[25] = madd2(m, 3870673539892635154, z[26], C)
		C, z[26] = madd2(m, 15996650252674570430, z[27], C)
		C, z[27] = madd2(m, 7470438302128334459, z[28], C)
		z[28] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 10549899360055738265
		C := madd0(m, 6557797220589329239, z[0])
		C, z[0] = madd2(m, 11417059503450690909, z[1], C)
		C, z[1] = madd2(m, 13704541515672720494, z[2], C)
		C, z[2] = madd2(m, 12806808807567348591, z[3], C)
		C, z[3] = madd2(m, 6275282332124812599, z[4], C)
		C, z[4] = madd2(m, 4405229158191370832, z[5], C)
		C, z[5] = madd2(m, 12168445323765187689, z[6], C)
		C, z[6] = madd2(m, 10671602409567735082, z[7], C)
		C, z[7] = madd2(m, 17193196447219887244, z[8], C)
		C, z[8] = madd2(m, 1968177518022708578, z[9], C)
		C, z[9] = madd2(m, 17810219903765590582, z[10], C)
		C, z[10] = madd2(m, 14425778727015286243, z[11], C)
		C, z[11] = madd2(m, 7046014110413742080, z[12], C)
		C, z[12] = madd2(m, 2030555054815402006, z[13], C)
		C, z[13] = madd2(m, 2364210669068217395, z[14], C)
		C, z[14] = madd2(m, 12900422625108798885, z[15], C)
		C, z[15] = madd2(m, 1930406275202811267, z[16], C)
		C, z[16] = madd2(m, 14290777978257669090, z[17], C)
		C, z[17] = madd2(m, 5932508195835066898, z[18], C)
		C, z[18] = madd2(m, 15850336981219945716, z[19], C)
		C, z[19] = madd2(m, 854831035414738096, z[20], C)
		C, z[20] = madd2(m, 2260305572347853835, z[21], C)
		C, z[21] = madd2(m, 5347326701889135155, z[22], C)
		C, z[22] = madd2(m, 4279901139938023971, z[23], C)
		C, z[23] = madd2(m, 4531757068977706609, z[24], C)
		C, z[24] = madd2(m, 9735365819670254271, z[25], C)
		C, z[25] = madd2(m, 3870673539892635154, z[26], C)
		C, z[26] = madd2(m, 15996650252674570430, z[27], C)
		C, z[27] = madd2(m, 7470438302128334459, z[28], C)
		z[28] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 10549899360055738265
		C := madd0(m, 6557797220589329239, z[0])
		C, z[0] = madd2(m, 11417059503450690909, z[1], C)
		C, z[1] = madd2(m, 13704541515672720494, z[2], C)
		C, z[2] = madd2(m, 12806808807567348591, z[3], C)
		C, z[3] = madd2(m, 6275282332124812599, z[4], C)
		C, z[4] = madd2(m, 4405229158191370832, z[5], C)
		C, z[5] = madd2(m, 12168445323765187689, z[6], C)
		C, z[6] = madd2(m, 10671602409567735082, z[7], C)
		C, z[7] = madd2(m, 17193196447219887244, z[8], C)
		C, z[8] = madd2(m, 1968177518022708578, z[9], C)
		C, z[9] = madd2(m, 17810219903765590582, z[10], C)
		C, z[10] = madd2(m, 14425778727015286243, z[11], C)
		C, z[11] = madd2(m, 7046014110413742080, z[12], C)
		C, z[12] = madd2(m, 2030555054815402006, z[13], C)
		C, z[13] = madd2(m, 2364210669068217395, z[14], C)
		C, z[14] = madd2(m, 12900422625108798885, z[15], C)
		C, z[15] = madd2(m, 1930406275202811267, z[16], C)
		C, z[16] = madd2(m, 14290777978257669090, z[17], C)
		C, z[17] = madd2(m, 5932508195835066898, z[18], C)
		C, z[18] = madd2(m, 15850336981219945716, z[19], C)
		C, z[19] = madd2(m, 854831035414738096, z[20], C)
		C, z[20] = madd2(m, 2260305572347853835, z[21], C)
		C, z[21] = madd2(m, 5347326701889135155, z[22], C)
		C, z[22] = madd2(m, 4279901139938023971, z[23], C)
		C, z[23] = madd2(m, 4531757068977706609, z[24], C)
		C, z[24] = madd2(m, 9735365819670254271, z[25], C)
		C, z[25] = madd2(m, 3870673539892635154, z[26], C)
		C, z[26] = madd2(m, 15996650252674570430, z[27], C)
		C, z[27] = madd2(m, 7470438302128334459, z[28], C)
		z[28] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 10549899360055738265
		C := madd0(m, 6557797220589329239, z[0])
		C, z[0] = madd2(m, 11417059503450690909, z[1], C)
		C, z[1] = madd2(m, 13704541515672720494, z[2], C)
		C, z[2] = madd2(m, 12806808807567348591, z[3], C)
		C, z[3] = madd2(m, 6275282332124812599, z[4], C)
		C, z[4] = madd2(m, 4405229158191370832, z[5], C)
		C, z[5] = madd2(m, 12168445323765187689, z[6], C)
		C, z[6] = madd2(m, 10671602409567735082, z[7], C)
		C, z[7] = madd2(m, 17193196447219887244, z[8], C)
		C, z[8] = madd2(m, 1968177518022708578, z[9], C)
		C, z[9] = madd2(m, 17810219903765590582, z[10], C)
		C, z[10] = madd2(m, 14425778727015286243, z[11], C)
		C, z[11] = madd2(m, 7046014110413742080, z[12], C)
		C, z[12] = madd2(m, 2030555054815402006, z[13], C)
		C, z[13] = madd2(m, 2364210669068217395, z[14], C)
		C, z[14] = madd2(m, 12900422625108798885, z[15], C)
		C, z[15] = madd2(m, 1930406275202811267, z[16], C)
		C, z[16] = madd2(m, 14290777978257669090, z[17], C)
		C, z[17] = madd2(m, 5932508195835066898, z[18], C)
		C, z[18] = madd2(m, 15850336981219945716, z[19], C)
		C, z[19] = madd2(m, 854831035414738096, z[20], C)
		C, z[20] = madd2(m, 2260305572347853835, z[21], C)
		C, z[21] = madd2(m, 5347326701889135155, z[22], C)
		C, z[22] = madd2(m, 4279901139938023971, z[23], C)
		C, z[23] = madd2(m, 4531757068977706609, z[24], C)
		C, z[24] = madd2(m, 9735365819670254271, z[25], C)
		C, z[25] = madd2(m, 3870673539892635154, z[26], C)
		C, z[26] = madd2(m, 15996650252674570430, z[27], C)
		C, z[27] = madd2(m, 7470438302128334459, z[28], C)
		z[28] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 10549899360055738265
		C := madd0(m, 6557797220589329239, z[0])
		C, z[0] = madd2(m, 11417059503450690909, z[1], C)
		C, z[1] = madd2(m, 13704541515672720494, z[2], C)
		C, z[2] = madd2(m, 12806808807567348591, z[3], C)
		C, z[3] = madd2(m, 6275282332124812599, z[4], C)
		C, z[4] = madd2(m, 4405229158191370832, z[5], C)
		C, z[5] = madd2(m, 12168445323765187689, z[6], C)
		C, z[6] = madd2(m, 10671602409567735082, z[7], C)
		C, z[7] = madd2(m, 17193196447219887244, z[8], C)
		C, z[8] = madd2(m, 1968177518022708578, z[9], C)
		C, z[9] = madd2(m, 17810219903765590582, z[10], C)
		C, z[10] = madd2(m, 14425778727015286243, z[11], C)
		C, z[11] = madd2(m, 7046014110413742080, z[12], C)
		C, z[12] = madd2(m, 2030555054815402006, z[13], C)
		C, z[13] = madd2(m, 2364210669068217395, z[14], C)
		C, z[14] = madd2(m, 12900422625108798885, z[15], C)
		C, z[15] = madd2(m, 1930406275202811267, z[16], C)
		C, z[16] = madd2(m, 14290777978257669090, z[17], C)
		C, z[17] = madd2(m, 5932508195835066898, z[18], C)
		C, z[18] = madd2(m, 15850336981219945716, z[19], C)
		C, z[19] = madd2(m, 854831035414738096, z[20], C)
		C, z[20] = madd2(m, 2260305572347853835, z[21], C)
		C, z[21] = madd2(m, 5347326701889135155, z[22], C)
		C, z[22] = madd2(m, 4279901139938023971, z[23], C)
		C, z[23] = madd2(m, 4531757068977706609, z[24], C)
		C, z[24] = madd2(m, 9735365819670254271, z[25], C)
		C, z[25] = madd2(m, 3870673539892635154, z[26], C)
		C, z[26] = madd2(m, 15996650252674570430, z[27], C)
		C, z[27] = madd2(m, 7470438302128334459, z[28], C)
		z[28] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 10549899360055738265
		C := madd0(m, 6557797220589329239, z[0])
		C, z[0] = madd2(m, 11417059503450690909, z[1], C)
		C, z[1] = madd2(m, 13704541515672720494, z[2], C)
		C, z[2] = madd2(m, 12806808807567348591, z[3], C)
		C, z[3] = madd2(m, 6275282332124812599, z[4], C)
		C, z[4] = madd2(m, 4405229158191370832, z[5], C)
		C, z[5] = madd2(m, 12168445323765187689, z[6], C)
		C, z[6] = madd2(m, 10671602409567735082, z[7], C)
		C, z[7] = madd2(m, 17193196447219887244, z[8], C)
		C, z[8] = madd2(m, 1968177518022708578, z[9], C)
		C, z[9] = madd2(m, 17810219903765590582, z[10], C)
		C, z[10] = madd2(m, 14425778727015286243, z[11], C)
		C, z[11] = madd2(m, 7046014110413742080, z[12], C)
		C, z[12] = madd2(m, 2030555054815402006, z[13], C)
		C, z[13] = madd2(m, 2364210669068217395, z[14], C)
		C, z[14] = madd2(m, 12900422625108798885, z[15], C)
		C, z[15] = madd2(m, 1930406275202811267, z[16], C)
		C, z[16] = madd2(m, 14290777978257669090, z[17], C)
		C, z[17] = madd2(m, 5932508195835066898, z[18], C)
		C, z[18] = madd2(m, 15850336981219945716, z[19], C)
		C, z[19] = madd2(m, 854831035414738096, z[20], C)
		C, z[20] = madd2(m, 2260305572347853835, z[21], C)
		C, z[21] = madd2(m, 5347326701889135155, z[22], C)
		C, z[22] = madd2(m, 4279901139938023971, z[23], C)
		C, z[23] = madd2(m, 4531757068977706609, z[24], C)
		C, z[24] = madd2(m, 9735365819670254271, z[25], C)
		C, z[25] = madd2(m, 3870673539892635154, z[26], C)
		C, z[26] = madd2(m, 15996650252674570430, z[27], C)
		C, z[27] = madd2(m, 7470438302128334459, z[28], C)
		z[28] = C
	}

	// if z > q --> z -= q
	// note: this is NOT constant time
	if !(z[28] < 7470438302128334459 || (z[28] == 7470438302128334459 && (z[27] < 15996650252674570430 || (z[27] == 15996650252674570430 && (z[26] < 3870673539892635154 || (z[26] == 3870673539892635154 && (z[25] < 9735365819670254271 || (z[25] == 9735365819670254271 && (z[24] < 4531757068977706609 || (z[24] == 4531757068977706609 && (z[23] < 4279901139938023971 || (z[23] == 4279901139938023971 && (z[22] < 5347326701889135155 || (z[22] == 5347326701889135155 && (z[21] < 2260305572347853835 || (z[21] == 2260305572347853835 && (z[20] < 854831035414738096 || (z[20] == 854831035414738096 && (z[19] < 15850336981219945716 || (z[19] == 15850336981219945716 && (z[18] < 5932508195835066898 || (z[18] == 5932508195835066898 && (z[17] < 14290777978257669090 || (z[17] == 14290777978257669090 && (z[16] < 1930406275202811267 || (z[16] == 1930406275202811267 && (z[15] < 12900422625108798885 || (z[15] == 12900422625108798885 && (z[14] < 2364210669068217395 || (z[14] == 2364210669068217395 && (z[13] < 2030555054815402006 || (z[13] == 2030555054815402006 && (z[12] < 7046014110413742080 || (z[12] == 7046014110413742080 && (z[11] < 14425778727015286243 || (z[11] == 14425778727015286243 && (z[10] < 17810219903765590582 || (z[10] == 17810219903765590582 && (z[9] < 1968177518022708578 || (z[9] == 1968177518022708578 && (z[8] < 17193196447219887244 || (z[8] == 17193196447219887244 && (z[7] < 10671602409567735082 || (z[7] == 10671602409567735082 && (z[6] < 12168445323765187689 || (z[6] == 12168445323765187689 && (z[5] < 4405229158191370832 || (z[5] == 4405229158191370832 && (z[4] < 6275282332124812599 || (z[4] == 6275282332124812599 && (z[3] < 12806808807567348591 || (z[3] == 12806808807567348591 && (z[2] < 13704541515672720494 || (z[2] == 13704541515672720494 && (z[1] < 11417059503450690909 || (z[1] == 11417059503450690909 && (z[0] < 6557797220589329239))))))))))))))))))))))))))))))))))))))))))))))))))))))))) {
		var b uint64
		z[0], b = bits.Sub64(z[0], 6557797220589329239, 0)
		z[1], b = bits.Sub64(z[1], 11417059503450690909, b)
		z[2], b = bits.Sub64(z[2], 13704541515672720494, b)
		z[3], b = bits.Sub64(z[3], 12806808807567348591, b)
		z[4], b = bits.Sub64(z[4], 6275282332124812599, b)
		z[5], b = bits.Sub64(z[5], 4405229158191370832, b)
		z[6], b = bits.Sub64(z[6], 12168445323765187689, b)
		z[7], b = bits.Sub64(z[7], 10671602409567735082, b)
		z[8], b = bits.Sub64(z[8], 17193196447219887244, b)
		z[9], b = bits.Sub64(z[9], 1968177518022708578, b)
		z[10], b = bits.Sub64(z[10], 17810219903765590582, b)
		z[11], b = bits.Sub64(z[11], 14425778727015286243, b)
		z[12], b = bits.Sub64(z[12], 7046014110413742080, b)
		z[13], b = bits.Sub64(z[13], 2030555054815402006, b)
		z[14], b = bits.Sub64(z[14], 2364210669068217395, b)
		z[15], b = bits.Sub64(z[15], 12900422625108798885, b)
		z[16], b = bits.Sub64(z[16], 1930406275202811267, b)
		z[17], b = bits.Sub64(z[17], 14290777978257669090, b)
		z[18], b = bits.Sub64(z[18], 5932508195835066898, b)
		z[19], b = bits.Sub64(z[19], 15850336981219945716, b)
		z[20], b = bits.Sub64(z[20], 854831035414738096, b)
		z[21], b = bits.Sub64(z[21], 2260305572347853835, b)
		z[22], b = bits.Sub64(z[22], 5347326701889135155, b)
		z[23], b = bits.Sub64(z[23], 4279901139938023971, b)
		z[24], b = bits.Sub64(z[24], 4531757068977706609, b)
		z[25], b = bits.Sub64(z[25], 9735365819670254271, b)
		z[26], b = bits.Sub64(z[26], 3870673539892635154, b)
		z[27], b = bits.Sub64(z[27], 15996650252674570430, b)
		z[28], _ = bits.Sub64(z[28], 7470438302128334459, b)
	}
	return z
}

// ToMont converts z to Montgomery form
// sets and returns z = z * r^2
func (z *Element29) ToMont() *Element29 {
	var rSquare = Element29{
		4426625032283234650,
		9859772489136002555,
		7972637644855415520,
		13958427561392573223,
		8658728824189684646,
		13917469081859964484,
		17100141100740026743,
		3853029142679837197,
		2981295434665320709,
		15710100160198902575,
		859584090978573771,
		12728375686423134514,
		17809940306260440423,
		2593467557246451896,
		18110268935735275722,
		3371054353876485169,
		4408224000424150597,
		808226885770260140,
		15640041494732488243,
		17845809286767177690,
		9170398257621725693,
		11017699197357121803,
		15220279465767211903,
		14706488739492585458,
		7180358999879117736,
		16059817646179778137,
		15429999937506628014,
		11996023138311948678,
		1118898853678174824,
	}
	return z.MulAssign(&rSquare)
}

// ToRegular returns z in regular form (doesn't mutate z)
func (z Element29) ToRegular() Element29 {
	return *z.FromMont()
}

// String returns the string form of an Element29 in Montgomery form
func (z *Element29) String() string {
	var _z big.Int
	return z.ToBigIntRegular(&_z).String()
}

// ToBigInt returns z as a big.Int in Montgomery form
func (z *Element29) ToBigInt(res *big.Int) *big.Int {
	bits := (*[29]big.Word)(unsafe.Pointer(z))
	return res.SetBits(bits[:])
}

// ToBigIntRegular returns z as a big.Int in regular form
func (z Element29) ToBigIntRegular(res *big.Int) *big.Int {
	z.FromMont()
	bits := (*[29]big.Word)(unsafe.Pointer(&z))
	return res.SetBits(bits[:])
}

// SetBigInt sets z to v (regular form) and returns z in Montgomery form
func (z *Element29) SetBigInt(v *big.Int) *Element29 {
	z.SetZero()

	zero := big.NewInt(0)
	q := element29ModulusBigInt()

	// copy input
	vv := new(big.Int).Set(v)

	// while v < 0, v+=q
	for vv.Cmp(zero) == -1 {
		vv.Add(vv, q)
	}
	// while v > q, v-=q
	for vv.Cmp(q) == 1 {
		vv.Sub(vv, q)
	}
	// if v == q, return 0
	if vv.Cmp(q) == 0 {
		return z
	}
	// v should
	vBits := vv.Bits()
	for i := 0; i < len(vBits); i++ {
		z[i] = uint64(vBits[i])
	}
	return z.ToMont()
}

// SetString creates a big.Int with s (in base 10) and calls SetBigInt on z
func (z *Element29) SetString(s string) *Element29 {
	x, ok := new(big.Int).SetString(s, 10)
	if !ok {
		panic("Element29.SetString failed -> can't parse number in base10 into a big.Int")
	}
	return z.SetBigInt(x)
}

// Mul z = x * y mod q
func (z *Element29) Mul(x, y *Element29) *Element29 {

	var t [30]uint64
	var D uint64
	var m, C uint64
	// -----------------------------------
	// First loop

	C, t[0] = bits.Mul64(y[0], x[0])
	C, t[1] = madd1(y[0], x[1], C)
	C, t[2] = madd1(y[0], x[2], C)
	C, t[3] = madd1(y[0], x[3], C)
	C, t[4] = madd1(y[0], x[4], C)
	C, t[5] = madd1(y[0], x[5], C)
	C, t[6] = madd1(y[0], x[6], C)
	C, t[7] = madd1(y[0], x[7], C)
	C, t[8] = madd1(y[0], x[8], C)
	C, t[9] = madd1(y[0], x[9], C)
	C, t[10] = madd1(y[0], x[10], C)
	C, t[11] = madd1(y[0], x[11], C)
	C, t[12] = madd1(y[0], x[12], C)
	C, t[13] = madd1(y[0], x[13], C)
	C, t[14] = madd1(y[0], x[14], C)
	C, t[15] = madd1(y[0], x[15], C)
	C, t[16] = madd1(y[0], x[16], C)
	C, t[17] = madd1(y[0], x[17], C)
	C, t[18] = madd1(y[0], x[18], C)
	C, t[19] = madd1(y[0], x[19], C)
	C, t[20] = madd1(y[0], x[20], C)
	C, t[21] = madd1(y[0], x[21], C)
	C, t[22] = madd1(y[0], x[22], C)
	C, t[23] = madd1(y[0], x[23], C)
	C, t[24] = madd1(y[0], x[24], C)
	C, t[25] = madd1(y[0], x[25], C)
	C, t[26] = madd1(y[0], x[26], C)
	C, t[27] = madd1(y[0], x[27], C)
	C, t[28] = madd1(y[0], x[28], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 10549899360055738265

	// -----------------------------------
	// Second loop
	C = madd0(m, 6557797220589329239, t[0])

	C, t[0] = madd2(m, 11417059503450690909, t[1], C)

	C, t[1] = madd2(m, 13704541515672720494, t[2], C)

	C, t[2] = madd2(m, 12806808807567348591, t[3], C)

	C, t[3] = madd2(m, 6275282332124812599, t[4], C)

	C, t[4] = madd2(m, 4405229158191370832, t[5], C)

	C, t[5] = madd2(m, 12168445323765187689, t[6], C)

	C, t[6] = madd2(m, 10671602409567735082, t[7], C)

	C, t[7] = madd2(m, 17193196447219887244, t[8], C)

	C, t[8] = madd2(m, 1968177518022708578, t[9], C)

	C, t[9] = madd2(m, 17810219903765590582, t[10], C)

	C, t[10] = madd2(m, 14425778727015286243, t[11], C)

	C, t[11] = madd2(m, 7046014110413742080, t[12], C)

	C, t[12] = madd2(m, 2030555054815402006, t[13], C)

	C, t[13] = madd2(m, 2364210669068217395, t[14], C)

	C, t[14] = madd2(m, 12900422625108798885, t[15], C)

	C, t[15] = madd2(m, 1930406275202811267, t[16], C)

	C, t[16] = madd2(m, 14290777978257669090, t[17], C)

	C, t[17] = madd2(m, 5932508195835066898, t[18], C)

	C, t[18] = madd2(m, 15850336981219945716, t[19], C)

	C, t[19] = madd2(m, 854831035414738096, t[20], C)

	C, t[20] = madd2(m, 2260305572347853835, t[21], C)

	C, t[21] = madd2(m, 5347326701889135155, t[22], C)

	C, t[22] = madd2(m, 4279901139938023971, t[23], C)

	C, t[23] = madd2(m, 4531757068977706609, t[24], C)

	C, t[24] = madd2(m, 9735365819670254271, t[25], C)

	C, t[25] = madd2(m, 3870673539892635154, t[26], C)

	C, t[26] = madd2(m, 15996650252674570430, t[27], C)

	C, t[27] = madd3(m, 7470438302128334459, t[28], C, t[29])

	t[28], t[29] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[1], x[0], t[0])
	C, t[1] = madd2(y[1], x[1], t[1], C)
	C, t[2] = madd2(y[1], x[2], t[2], C)
	C, t[3] = madd2(y[1], x[3], t[3], C)
	C, t[4] = madd2(y[1], x[4], t[4], C)
	C, t[5] = madd2(y[1], x[5], t[5], C)
	C, t[6] = madd2(y[1], x[6], t[6], C)
	C, t[7] = madd2(y[1], x[7], t[7], C)
	C, t[8] = madd2(y[1], x[8], t[8], C)
	C, t[9] = madd2(y[1], x[9], t[9], C)
	C, t[10] = madd2(y[1], x[10], t[10], C)
	C, t[11] = madd2(y[1], x[11], t[11], C)
	C, t[12] = madd2(y[1], x[12], t[12], C)
	C, t[13] = madd2(y[1], x[13], t[13], C)
	C, t[14] = madd2(y[1], x[14], t[14], C)
	C, t[15] = madd2(y[1], x[15], t[15], C)
	C, t[16] = madd2(y[1], x[16], t[16], C)
	C, t[17] = madd2(y[1], x[17], t[17], C)
	C, t[18] = madd2(y[1], x[18], t[18], C)
	C, t[19] = madd2(y[1], x[19], t[19], C)
	C, t[20] = madd2(y[1], x[20], t[20], C)
	C, t[21] = madd2(y[1], x[21], t[21], C)
	C, t[22] = madd2(y[1], x[22], t[22], C)
	C, t[23] = madd2(y[1], x[23], t[23], C)
	C, t[24] = madd2(y[1], x[24], t[24], C)
	C, t[25] = madd2(y[1], x[25], t[25], C)
	C, t[26] = madd2(y[1], x[26], t[26], C)
	C, t[27] = madd2(y[1], x[27], t[27], C)
	C, t[28] = madd2(y[1], x[28], t[28], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 10549899360055738265

	// -----------------------------------
	// Second loop
	C = madd0(m, 6557797220589329239, t[0])

	C, t[0] = madd2(m, 11417059503450690909, t[1], C)

	C, t[1] = madd2(m, 13704541515672720494, t[2], C)

	C, t[2] = madd2(m, 12806808807567348591, t[3], C)

	C, t[3] = madd2(m, 6275282332124812599, t[4], C)

	C, t[4] = madd2(m, 4405229158191370832, t[5], C)

	C, t[5] = madd2(m, 12168445323765187689, t[6], C)

	C, t[6] = madd2(m, 10671602409567735082, t[7], C)

	C, t[7] = madd2(m, 17193196447219887244, t[8], C)

	C, t[8] = madd2(m, 1968177518022708578, t[9], C)

	C, t[9] = madd2(m, 17810219903765590582, t[10], C)

	C, t[10] = madd2(m, 14425778727015286243, t[11], C)

	C, t[11] = madd2(m, 7046014110413742080, t[12], C)

	C, t[12] = madd2(m, 2030555054815402006, t[13], C)

	C, t[13] = madd2(m, 2364210669068217395, t[14], C)

	C, t[14] = madd2(m, 12900422625108798885, t[15], C)

	C, t[15] = madd2(m, 1930406275202811267, t[16], C)

	C, t[16] = madd2(m, 14290777978257669090, t[17], C)

	C, t[17] = madd2(m, 5932508195835066898, t[18], C)

	C, t[18] = madd2(m, 15850336981219945716, t[19], C)

	C, t[19] = madd2(m, 854831035414738096, t[20], C)

	C, t[20] = madd2(m, 2260305572347853835, t[21], C)

	C, t[21] = madd2(m, 5347326701889135155, t[22], C)

	C, t[22] = madd2(m, 4279901139938023971, t[23], C)

	C, t[23] = madd2(m, 4531757068977706609, t[24], C)

	C, t[24] = madd2(m, 9735365819670254271, t[25], C)

	C, t[25] = madd2(m, 3870673539892635154, t[26], C)

	C, t[26] = madd2(m, 15996650252674570430, t[27], C)

	C, t[27] = madd3(m, 7470438302128334459, t[28], C, t[29])

	t[28], t[29] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[2], x[0], t[0])
	C, t[1] = madd2(y[2], x[1], t[1], C)
	C, t[2] = madd2(y[2], x[2], t[2], C)
	C, t[3] = madd2(y[2], x[3], t[3], C)
	C, t[4] = madd2(y[2], x[4], t[4], C)
	C, t[5] = madd2(y[2], x[5], t[5], C)
	C, t[6] = madd2(y[2], x[6], t[6], C)
	C, t[7] = madd2(y[2], x[7], t[7], C)
	C, t[8] = madd2(y[2], x[8], t[8], C)
	C, t[9] = madd2(y[2], x[9], t[9], C)
	C, t[10] = madd2(y[2], x[10], t[10], C)
	C, t[11] = madd2(y[2], x[11], t[11], C)
	C, t[12] = madd2(y[2], x[12], t[12], C)
	C, t[13] = madd2(y[2], x[13], t[13], C)
	C, t[14] = madd2(y[2], x[14], t[14], C)
	C, t[15] = madd2(y[2], x[15], t[15], C)
	C, t[16] = madd2(y[2], x[16], t[16], C)
	C, t[17] = madd2(y[2], x[17], t[17], C)
	C, t[18] = madd2(y[2], x[18], t[18], C)
	C, t[19] = madd2(y[2], x[19], t[19], C)
	C, t[20] = madd2(y[2], x[20], t[20], C)
	C, t[21] = madd2(y[2], x[21], t[21], C)
	C, t[22] = madd2(y[2], x[22], t[22], C)
	C, t[23] = madd2(y[2], x[23], t[23], C)
	C, t[24] = madd2(y[2], x[24], t[24], C)
	C, t[25] = madd2(y[2], x[25], t[25], C)
	C, t[26] = madd2(y[2], x[26], t[26], C)
	C, t[27] = madd2(y[2], x[27], t[27], C)
	C, t[28] = madd2(y[2], x[28], t[28], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 10549899360055738265

	// -----------------------------------
	// Second loop
	C = madd0(m, 6557797220589329239, t[0])

	C, t[0] = madd2(m, 11417059503450690909, t[1], C)

	C, t[1] = madd2(m, 13704541515672720494, t[2], C)

	C, t[2] = madd2(m, 12806808807567348591, t[3], C)

	C, t[3] = madd2(m, 6275282332124812599, t[4], C)

	C, t[4] = madd2(m, 4405229158191370832, t[5], C)

	C, t[5] = madd2(m, 12168445323765187689, t[6], C)

	C, t[6] = madd2(m, 10671602409567735082, t[7], C)

	C, t[7] = madd2(m, 17193196447219887244, t[8], C)

	C, t[8] = madd2(m, 1968177518022708578, t[9], C)

	C, t[9] = madd2(m, 17810219903765590582, t[10], C)

	C, t[10] = madd2(m, 14425778727015286243, t[11], C)

	C, t[11] = madd2(m, 7046014110413742080, t[12], C)

	C, t[12] = madd2(m, 2030555054815402006, t[13], C)

	C, t[13] = madd2(m, 2364210669068217395, t[14], C)

	C, t[14] = madd2(m, 12900422625108798885, t[15], C)

	C, t[15] = madd2(m, 1930406275202811267, t[16], C)

	C, t[16] = madd2(m, 14290777978257669090, t[17], C)

	C, t[17] = madd2(m, 5932508195835066898, t[18], C)

	C, t[18] = madd2(m, 15850336981219945716, t[19], C)

	C, t[19] = madd2(m, 854831035414738096, t[20], C)

	C, t[20] = madd2(m, 2260305572347853835, t[21], C)

	C, t[21] = madd2(m, 5347326701889135155, t[22], C)

	C, t[22] = madd2(m, 4279901139938023971, t[23], C)

	C, t[23] = madd2(m, 4531757068977706609, t[24], C)

	C, t[24] = madd2(m, 9735365819670254271, t[25], C)

	C, t[25] = madd2(m, 3870673539892635154, t[26], C)

	C, t[26] = madd2(m, 15996650252674570430, t[27], C)

	C, t[27] = madd3(m, 7470438302128334459, t[28], C, t[29])

	t[28], t[29] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[3], x[0], t[0])
	C, t[1] = madd2(y[3], x[1], t[1], C)
	C, t[2] = madd2(y[3], x[2], t[2], C)
	C, t[3] = madd2(y[3], x[3], t[3], C)
	C, t[4] = madd2(y[3], x[4], t[4], C)
	C, t[5] = madd2(y[3], x[5], t[5], C)
	C, t[6] = madd2(y[3], x[6], t[6], C)
	C, t[7] = madd2(y[3], x[7], t[7], C)
	C, t[8] = madd2(y[3], x[8], t[8], C)
	C, t[9] = madd2(y[3], x[9], t[9], C)
	C, t[10] = madd2(y[3], x[10], t[10], C)
	C, t[11] = madd2(y[3], x[11], t[11], C)
	C, t[12] = madd2(y[3], x[12], t[12], C)
	C, t[13] = madd2(y[3], x[13], t[13], C)
	C, t[14] = madd2(y[3], x[14], t[14], C)
	C, t[15] = madd2(y[3], x[15], t[15], C)
	C, t[16] = madd2(y[3], x[16], t[16], C)
	C, t[17] = madd2(y[3], x[17], t[17], C)
	C, t[18] = madd2(y[3], x[18], t[18], C)
	C, t[19] = madd2(y[3], x[19], t[19], C)
	C, t[20] = madd2(y[3], x[20], t[20], C)
	C, t[21] = madd2(y[3], x[21], t[21], C)
	C, t[22] = madd2(y[3], x[22], t[22], C)
	C, t[23] = madd2(y[3], x[23], t[23], C)
	C, t[24] = madd2(y[3], x[24], t[24], C)
	C, t[25] = madd2(y[3], x[25], t[25], C)
	C, t[26] = madd2(y[3], x[26], t[26], C)
	C, t[27] = madd2(y[3], x[27], t[27], C)
	C, t[28] = madd2(y[3], x[28], t[28], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 10549899360055738265

	// -----------------------------------
	// Second loop
	C = madd0(m, 6557797220589329239, t[0])

	C, t[0] = madd2(m, 11417059503450690909, t[1], C)

	C, t[1] = madd2(m, 13704541515672720494, t[2], C)

	C, t[2] = madd2(m, 12806808807567348591, t[3], C)

	C, t[3] = madd2(m, 6275282332124812599, t[4], C)

	C, t[4] = madd2(m, 4405229158191370832, t[5], C)

	C, t[5] = madd2(m, 12168445323765187689, t[6], C)

	C, t[6] = madd2(m, 10671602409567735082, t[7], C)

	C, t[7] = madd2(m, 17193196447219887244, t[8], C)

	C, t[8] = madd2(m, 1968177518022708578, t[9], C)

	C, t[9] = madd2(m, 17810219903765590582, t[10], C)

	C, t[10] = madd2(m, 14425778727015286243, t[11], C)

	C, t[11] = madd2(m, 7046014110413742080, t[12], C)

	C, t[12] = madd2(m, 2030555054815402006, t[13], C)

	C, t[13] = madd2(m, 2364210669068217395, t[14], C)

	C, t[14] = madd2(m, 12900422625108798885, t[15], C)

	C, t[15] = madd2(m, 1930406275202811267, t[16], C)

	C, t[16] = madd2(m, 14290777978257669090, t[17], C)

	C, t[17] = madd2(m, 5932508195835066898, t[18], C)

	C, t[18] = madd2(m, 15850336981219945716, t[19], C)

	C, t[19] = madd2(m, 854831035414738096, t[20], C)

	C, t[20] = madd2(m, 2260305572347853835, t[21], C)

	C, t[21] = madd2(m, 5347326701889135155, t[22], C)

	C, t[22] = madd2(m, 4279901139938023971, t[23], C)

	C, t[23] = madd2(m, 4531757068977706609, t[24], C)

	C, t[24] = madd2(m, 9735365819670254271, t[25], C)

	C, t[25] = madd2(m, 3870673539892635154, t[26], C)

	C, t[26] = madd2(m, 15996650252674570430, t[27], C)

	C, t[27] = madd3(m, 7470438302128334459, t[28], C, t[29])

	t[28], t[29] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[4], x[0], t[0])
	C, t[1] = madd2(y[4], x[1], t[1], C)
	C, t[2] = madd2(y[4], x[2], t[2], C)
	C, t[3] = madd2(y[4], x[3], t[3], C)
	C, t[4] = madd2(y[4], x[4], t[4], C)
	C, t[5] = madd2(y[4], x[5], t[5], C)
	C, t[6] = madd2(y[4], x[6], t[6], C)
	C, t[7] = madd2(y[4], x[7], t[7], C)
	C, t[8] = madd2(y[4], x[8], t[8], C)
	C, t[9] = madd2(y[4], x[9], t[9], C)
	C, t[10] = madd2(y[4], x[10], t[10], C)
	C, t[11] = madd2(y[4], x[11], t[11], C)
	C, t[12] = madd2(y[4], x[12], t[12], C)
	C, t[13] = madd2(y[4], x[13], t[13], C)
	C, t[14] = madd2(y[4], x[14], t[14], C)
	C, t[15] = madd2(y[4], x[15], t[15], C)
	C, t[16] = madd2(y[4], x[16], t[16], C)
	C, t[17] = madd2(y[4], x[17], t[17], C)
	C, t[18] = madd2(y[4], x[18], t[18], C)
	C, t[19] = madd2(y[4], x[19], t[19], C)
	C, t[20] = madd2(y[4], x[20], t[20], C)
	C, t[21] = madd2(y[4], x[21], t[21], C)
	C, t[22] = madd2(y[4], x[22], t[22], C)
	C, t[23] = madd2(y[4], x[23], t[23], C)
	C, t[24] = madd2(y[4], x[24], t[24], C)
	C, t[25] = madd2(y[4], x[25], t[25], C)
	C, t[26] = madd2(y[4], x[26], t[26], C)
	C, t[27] = madd2(y[4], x[27], t[27], C)
	C, t[28] = madd2(y[4], x[28], t[28], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 10549899360055738265

	// -----------------------------------
	// Second loop
	C = madd0(m, 6557797220589329239, t[0])

	C, t[0] = madd2(m, 11417059503450690909, t[1], C)

	C, t[1] = madd2(m, 13704541515672720494, t[2], C)

	C, t[2] = madd2(m, 12806808807567348591, t[3], C)

	C, t[3] = madd2(m, 6275282332124812599, t[4], C)

	C, t[4] = madd2(m, 4405229158191370832, t[5], C)

	C, t[5] = madd2(m, 12168445323765187689, t[6], C)

	C, t[6] = madd2(m, 10671602409567735082, t[7], C)

	C, t[7] = madd2(m, 17193196447219887244, t[8], C)

	C, t[8] = madd2(m, 1968177518022708578, t[9], C)

	C, t[9] = madd2(m, 17810219903765590582, t[10], C)

	C, t[10] = madd2(m, 14425778727015286243, t[11], C)

	C, t[11] = madd2(m, 7046014110413742080, t[12], C)

	C, t[12] = madd2(m, 2030555054815402006, t[13], C)

	C, t[13] = madd2(m, 2364210669068217395, t[14], C)

	C, t[14] = madd2(m, 12900422625108798885, t[15], C)

	C, t[15] = madd2(m, 1930406275202811267, t[16], C)

	C, t[16] = madd2(m, 14290777978257669090, t[17], C)

	C, t[17] = madd2(m, 5932508195835066898, t[18], C)

	C, t[18] = madd2(m, 15850336981219945716, t[19], C)

	C, t[19] = madd2(m, 854831035414738096, t[20], C)

	C, t[20] = madd2(m, 2260305572347853835, t[21], C)

	C, t[21] = madd2(m, 5347326701889135155, t[22], C)

	C, t[22] = madd2(m, 4279901139938023971, t[23], C)

	C, t[23] = madd2(m, 4531757068977706609, t[24], C)

	C, t[24] = madd2(m, 9735365819670254271, t[25], C)

	C, t[25] = madd2(m, 3870673539892635154, t[26], C)

	C, t[26] = madd2(m, 15996650252674570430, t[27], C)

	C, t[27] = madd3(m, 7470438302128334459, t[28], C, t[29])

	t[28], t[29] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[5], x[0], t[0])
	C, t[1] = madd2(y[5], x[1], t[1], C)
	C, t[2] = madd2(y[5], x[2], t[2], C)
	C, t[3] = madd2(y[5], x[3], t[3], C)
	C, t[4] = madd2(y[5], x[4], t[4], C)
	C, t[5] = madd2(y[5], x[5], t[5], C)
	C, t[6] = madd2(y[5], x[6], t[6], C)
	C, t[7] = madd2(y[5], x[7], t[7], C)
	C, t[8] = madd2(y[5], x[8], t[8], C)
	C, t[9] = madd2(y[5], x[9], t[9], C)
	C, t[10] = madd2(y[5], x[10], t[10], C)
	C, t[11] = madd2(y[5], x[11], t[11], C)
	C, t[12] = madd2(y[5], x[12], t[12], C)
	C, t[13] = madd2(y[5], x[13], t[13], C)
	C, t[14] = madd2(y[5], x[14], t[14], C)
	C, t[15] = madd2(y[5], x[15], t[15], C)
	C, t[16] = madd2(y[5], x[16], t[16], C)
	C, t[17] = madd2(y[5], x[17], t[17], C)
	C, t[18] = madd2(y[5], x[18], t[18], C)
	C, t[19] = madd2(y[5], x[19], t[19], C)
	C, t[20] = madd2(y[5], x[20], t[20], C)
	C, t[21] = madd2(y[5], x[21], t[21], C)
	C, t[22] = madd2(y[5], x[22], t[22], C)
	C, t[23] = madd2(y[5], x[23], t[23], C)
	C, t[24] = madd2(y[5], x[24], t[24], C)
	C, t[25] = madd2(y[5], x[25], t[25], C)
	C, t[26] = madd2(y[5], x[26], t[26], C)
	C, t[27] = madd2(y[5], x[27], t[27], C)
	C, t[28] = madd2(y[5], x[28], t[28], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 10549899360055738265

	// -----------------------------------
	// Second loop
	C = madd0(m, 6557797220589329239, t[0])

	C, t[0] = madd2(m, 11417059503450690909, t[1], C)

	C, t[1] = madd2(m, 13704541515672720494, t[2], C)

	C, t[2] = madd2(m, 12806808807567348591, t[3], C)

	C, t[3] = madd2(m, 6275282332124812599, t[4], C)

	C, t[4] = madd2(m, 4405229158191370832, t[5], C)

	C, t[5] = madd2(m, 12168445323765187689, t[6], C)

	C, t[6] = madd2(m, 10671602409567735082, t[7], C)

	C, t[7] = madd2(m, 17193196447219887244, t[8], C)

	C, t[8] = madd2(m, 1968177518022708578, t[9], C)

	C, t[9] = madd2(m, 17810219903765590582, t[10], C)

	C, t[10] = madd2(m, 14425778727015286243, t[11], C)

	C, t[11] = madd2(m, 7046014110413742080, t[12], C)

	C, t[12] = madd2(m, 2030555054815402006, t[13], C)

	C, t[13] = madd2(m, 2364210669068217395, t[14], C)

	C, t[14] = madd2(m, 12900422625108798885, t[15], C)

	C, t[15] = madd2(m, 1930406275202811267, t[16], C)

	C, t[16] = madd2(m, 14290777978257669090, t[17], C)

	C, t[17] = madd2(m, 5932508195835066898, t[18], C)

	C, t[18] = madd2(m, 15850336981219945716, t[19], C)

	C, t[19] = madd2(m, 854831035414738096, t[20], C)

	C, t[20] = madd2(m, 2260305572347853835, t[21], C)

	C, t[21] = madd2(m, 5347326701889135155, t[22], C)

	C, t[22] = madd2(m, 4279901139938023971, t[23], C)

	C, t[23] = madd2(m, 4531757068977706609, t[24], C)

	C, t[24] = madd2(m, 9735365819670254271, t[25], C)

	C, t[25] = madd2(m, 3870673539892635154, t[26], C)

	C, t[26] = madd2(m, 15996650252674570430, t[27], C)

	C, t[27] = madd3(m, 7470438302128334459, t[28], C, t[29])

	t[28], t[29] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[6], x[0], t[0])
	C, t[1] = madd2(y[6], x[1], t[1], C)
	C, t[2] = madd2(y[6], x[2], t[2], C)
	C, t[3] = madd2(y[6], x[3], t[3], C)
	C, t[4] = madd2(y[6], x[4], t[4], C)
	C, t[5] = madd2(y[6], x[5], t[5], C)
	C, t[6] = madd2(y[6], x[6], t[6], C)
	C, t[7] = madd2(y[6], x[7], t[7], C)
	C, t[8] = madd2(y[6], x[8], t[8], C)
	C, t[9] = madd2(y[6], x[9], t[9], C)
	C, t[10] = madd2(y[6], x[10], t[10], C)
	C, t[11] = madd2(y[6], x[11], t[11], C)
	C, t[12] = madd2(y[6], x[12], t[12], C)
	C, t[13] = madd2(y[6], x[13], t[13], C)
	C, t[14] = madd2(y[6], x[14], t[14], C)
	C, t[15] = madd2(y[6], x[15], t[15], C)
	C, t[16] = madd2(y[6], x[16], t[16], C)
	C, t[17] = madd2(y[6], x[17], t[17], C)
	C, t[18] = madd2(y[6], x[18], t[18], C)
	C, t[19] = madd2(y[6], x[19], t[19], C)
	C, t[20] = madd2(y[6], x[20], t[20], C)
	C, t[21] = madd2(y[6], x[21], t[21], C)
	C, t[22] = madd2(y[6], x[22], t[22], C)
	C, t[23] = madd2(y[6], x[23], t[23], C)
	C, t[24] = madd2(y[6], x[24], t[24], C)
	C, t[25] = madd2(y[6], x[25], t[25], C)
	C, t[26] = madd2(y[6], x[26], t[26], C)
	C, t[27] = madd2(y[6], x[27], t[27], C)
	C, t[28] = madd2(y[6], x[28], t[28], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 10549899360055738265

	// -----------------------------------
	// Second loop
	C = madd0(m, 6557797220589329239, t[0])

	C, t[0] = madd2(m, 11417059503450690909, t[1], C)

	C, t[1] = madd2(m, 13704541515672720494, t[2], C)

	C, t[2] = madd2(m, 12806808807567348591, t[3], C)

	C, t[3] = madd2(m, 6275282332124812599, t[4], C)

	C, t[4] = madd2(m, 4405229158191370832, t[5], C)

	C, t[5] = madd2(m, 12168445323765187689, t[6], C)

	C, t[6] = madd2(m, 10671602409567735082, t[7], C)

	C, t[7] = madd2(m, 17193196447219887244, t[8], C)

	C, t[8] = madd2(m, 1968177518022708578, t[9], C)

	C, t[9] = madd2(m, 17810219903765590582, t[10], C)

	C, t[10] = madd2(m, 14425778727015286243, t[11], C)

	C, t[11] = madd2(m, 7046014110413742080, t[12], C)

	C, t[12] = madd2(m, 2030555054815402006, t[13], C)

	C, t[13] = madd2(m, 2364210669068217395, t[14], C)

	C, t[14] = madd2(m, 12900422625108798885, t[15], C)

	C, t[15] = madd2(m, 1930406275202811267, t[16], C)

	C, t[16] = madd2(m, 14290777978257669090, t[17], C)

	C, t[17] = madd2(m, 5932508195835066898, t[18], C)

	C, t[18] = madd2(m, 15850336981219945716, t[19], C)

	C, t[19] = madd2(m, 854831035414738096, t[20], C)

	C, t[20] = madd2(m, 2260305572347853835, t[21], C)

	C, t[21] = madd2(m, 5347326701889135155, t[22], C)

	C, t[22] = madd2(m, 4279901139938023971, t[23], C)

	C, t[23] = madd2(m, 4531757068977706609, t[24], C)

	C, t[24] = madd2(m, 9735365819670254271, t[25], C)

	C, t[25] = madd2(m, 3870673539892635154, t[26], C)

	C, t[26] = madd2(m, 15996650252674570430, t[27], C)

	C, t[27] = madd3(m, 7470438302128334459, t[28], C, t[29])

	t[28], t[29] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[7], x[0], t[0])
	C, t[1] = madd2(y[7], x[1], t[1], C)
	C, t[2] = madd2(y[7], x[2], t[2], C)
	C, t[3] = madd2(y[7], x[3], t[3], C)
	C, t[4] = madd2(y[7], x[4], t[4], C)
	C, t[5] = madd2(y[7], x[5], t[5], C)
	C, t[6] = madd2(y[7], x[6], t[6], C)
	C, t[7] = madd2(y[7], x[7], t[7], C)
	C, t[8] = madd2(y[7], x[8], t[8], C)
	C, t[9] = madd2(y[7], x[9], t[9], C)
	C, t[10] = madd2(y[7], x[10], t[10], C)
	C, t[11] = madd2(y[7], x[11], t[11], C)
	C, t[12] = madd2(y[7], x[12], t[12], C)
	C, t[13] = madd2(y[7], x[13], t[13], C)
	C, t[14] = madd2(y[7], x[14], t[14], C)
	C, t[15] = madd2(y[7], x[15], t[15], C)
	C, t[16] = madd2(y[7], x[16], t[16], C)
	C, t[17] = madd2(y[7], x[17], t[17], C)
	C, t[18] = madd2(y[7], x[18], t[18], C)
	C, t[19] = madd2(y[7], x[19], t[19], C)
	C, t[20] = madd2(y[7], x[20], t[20], C)
	C, t[21] = madd2(y[7], x[21], t[21], C)
	C, t[22] = madd2(y[7], x[22], t[22], C)
	C, t[23] = madd2(y[7], x[23], t[23], C)
	C, t[24] = madd2(y[7], x[24], t[24], C)
	C, t[25] = madd2(y[7], x[25], t[25], C)
	C, t[26] = madd2(y[7], x[26], t[26], C)
	C, t[27] = madd2(y[7], x[27], t[27], C)
	C, t[28] = madd2(y[7], x[28], t[28], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 10549899360055738265

	// -----------------------------------
	// Second loop
	C = madd0(m, 6557797220589329239, t[0])

	C, t[0] = madd2(m, 11417059503450690909, t[1], C)

	C, t[1] = madd2(m, 13704541515672720494, t[2], C)

	C, t[2] = madd2(m, 12806808807567348591, t[3], C)

	C, t[3] = madd2(m, 6275282332124812599, t[4], C)

	C, t[4] = madd2(m, 4405229158191370832, t[5], C)

	C, t[5] = madd2(m, 12168445323765187689, t[6], C)

	C, t[6] = madd2(m, 10671602409567735082, t[7], C)

	C, t[7] = madd2(m, 17193196447219887244, t[8], C)

	C, t[8] = madd2(m, 1968177518022708578, t[9], C)

	C, t[9] = madd2(m, 17810219903765590582, t[10], C)

	C, t[10] = madd2(m, 14425778727015286243, t[11], C)

	C, t[11] = madd2(m, 7046014110413742080, t[12], C)

	C, t[12] = madd2(m, 2030555054815402006, t[13], C)

	C, t[13] = madd2(m, 2364210669068217395, t[14], C)

	C, t[14] = madd2(m, 12900422625108798885, t[15], C)

	C, t[15] = madd2(m, 1930406275202811267, t[16], C)

	C, t[16] = madd2(m, 14290777978257669090, t[17], C)

	C, t[17] = madd2(m, 5932508195835066898, t[18], C)

	C, t[18] = madd2(m, 15850336981219945716, t[19], C)

	C, t[19] = madd2(m, 854831035414738096, t[20], C)

	C, t[20] = madd2(m, 2260305572347853835, t[21], C)

	C, t[21] = madd2(m, 5347326701889135155, t[22], C)

	C, t[22] = madd2(m, 4279901139938023971, t[23], C)

	C, t[23] = madd2(m, 4531757068977706609, t[24], C)

	C, t[24] = madd2(m, 9735365819670254271, t[25], C)

	C, t[25] = madd2(m, 3870673539892635154, t[26], C)

	C, t[26] = madd2(m, 15996650252674570430, t[27], C)

	C, t[27] = madd3(m, 7470438302128334459, t[28], C, t[29])

	t[28], t[29] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[8], x[0], t[0])
	C, t[1] = madd2(y[8], x[1], t[1], C)
	C, t[2] = madd2(y[8], x[2], t[2], C)
	C, t[3] = madd2(y[8], x[3], t[3], C)
	C, t[4] = madd2(y[8], x[4], t[4], C)
	C, t[5] = madd2(y[8], x[5], t[5], C)
	C, t[6] = madd2(y[8], x[6], t[6], C)
	C, t[7] = madd2(y[8], x[7], t[7], C)
	C, t[8] = madd2(y[8], x[8], t[8], C)
	C, t[9] = madd2(y[8], x[9], t[9], C)
	C, t[10] = madd2(y[8], x[10], t[10], C)
	C, t[11] = madd2(y[8], x[11], t[11], C)
	C, t[12] = madd2(y[8], x[12], t[12], C)
	C, t[13] = madd2(y[8], x[13], t[13], C)
	C, t[14] = madd2(y[8], x[14], t[14], C)
	C, t[15] = madd2(y[8], x[15], t[15], C)
	C, t[16] = madd2(y[8], x[16], t[16], C)
	C, t[17] = madd2(y[8], x[17], t[17], C)
	C, t[18] = madd2(y[8], x[18], t[18], C)
	C, t[19] = madd2(y[8], x[19], t[19], C)
	C, t[20] = madd2(y[8], x[20], t[20], C)
	C, t[21] = madd2(y[8], x[21], t[21], C)
	C, t[22] = madd2(y[8], x[22], t[22], C)
	C, t[23] = madd2(y[8], x[23], t[23], C)
	C, t[24] = madd2(y[8], x[24], t[24], C)
	C, t[25] = madd2(y[8], x[25], t[25], C)
	C, t[26] = madd2(y[8], x[26], t[26], C)
	C, t[27] = madd2(y[8], x[27], t[27], C)
	C, t[28] = madd2(y[8], x[28], t[28], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 10549899360055738265

	// -----------------------------------
	// Second loop
	C = madd0(m, 6557797220589329239, t[0])

	C, t[0] = madd2(m, 11417059503450690909, t[1], C)

	C, t[1] = madd2(m, 13704541515672720494, t[2], C)

	C, t[2] = madd2(m, 12806808807567348591, t[3], C)

	C, t[3] = madd2(m, 6275282332124812599, t[4], C)

	C, t[4] = madd2(m, 4405229158191370832, t[5], C)

	C, t[5] = madd2(m, 12168445323765187689, t[6], C)

	C, t[6] = madd2(m, 10671602409567735082, t[7], C)

	C, t[7] = madd2(m, 17193196447219887244, t[8], C)

	C, t[8] = madd2(m, 1968177518022708578, t[9], C)

	C, t[9] = madd2(m, 17810219903765590582, t[10], C)

	C, t[10] = madd2(m, 14425778727015286243, t[11], C)

	C, t[11] = madd2(m, 7046014110413742080, t[12], C)

	C, t[12] = madd2(m, 2030555054815402006, t[13], C)

	C, t[13] = madd2(m, 2364210669068217395, t[14], C)

	C, t[14] = madd2(m, 12900422625108798885, t[15], C)

	C, t[15] = madd2(m, 1930406275202811267, t[16], C)

	C, t[16] = madd2(m, 14290777978257669090, t[17], C)

	C, t[17] = madd2(m, 5932508195835066898, t[18], C)

	C, t[18] = madd2(m, 15850336981219945716, t[19], C)

	C, t[19] = madd2(m, 854831035414738096, t[20], C)

	C, t[20] = madd2(m, 2260305572347853835, t[21], C)

	C, t[21] = madd2(m, 5347326701889135155, t[22], C)

	C, t[22] = madd2(m, 4279901139938023971, t[23], C)

	C, t[23] = madd2(m, 4531757068977706609, t[24], C)

	C, t[24] = madd2(m, 9735365819670254271, t[25], C)

	C, t[25] = madd2(m, 3870673539892635154, t[26], C)

	C, t[26] = madd2(m, 15996650252674570430, t[27], C)

	C, t[27] = madd3(m, 7470438302128334459, t[28], C, t[29])

	t[28], t[29] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[9], x[0], t[0])
	C, t[1] = madd2(y[9], x[1], t[1], C)
	C, t[2] = madd2(y[9], x[2], t[2], C)
	C, t[3] = madd2(y[9], x[3], t[3], C)
	C, t[4] = madd2(y[9], x[4], t[4], C)
	C, t[5] = madd2(y[9], x[5], t[5], C)
	C, t[6] = madd2(y[9], x[6], t[6], C)
	C, t[7] = madd2(y[9], x[7], t[7], C)
	C, t[8] = madd2(y[9], x[8], t[8], C)
	C, t[9] = madd2(y[9], x[9], t[9], C)
	C, t[10] = madd2(y[9], x[10], t[10], C)
	C, t[11] = madd2(y[9], x[11], t[11], C)
	C, t[12] = madd2(y[9], x[12], t[12], C)
	C, t[13] = madd2(y[9], x[13], t[13], C)
	C, t[14] = madd2(y[9], x[14], t[14], C)
	C, t[15] = madd2(y[9], x[15], t[15], C)
	C, t[16] = madd2(y[9], x[16], t[16], C)
	C, t[17] = madd2(y[9], x[17], t[17], C)
	C, t[18] = madd2(y[9], x[18], t[18], C)
	C, t[19] = madd2(y[9], x[19], t[19], C)
	C, t[20] = madd2(y[9], x[20], t[20], C)
	C, t[21] = madd2(y[9], x[21], t[21], C)
	C, t[22] = madd2(y[9], x[22], t[22], C)
	C, t[23] = madd2(y[9], x[23], t[23], C)
	C, t[24] = madd2(y[9], x[24], t[24], C)
	C, t[25] = madd2(y[9], x[25], t[25], C)
	C, t[26] = madd2(y[9], x[26], t[26], C)
	C, t[27] = madd2(y[9], x[27], t[27], C)
	C, t[28] = madd2(y[9], x[28], t[28], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 10549899360055738265

	// -----------------------------------
	// Second loop
	C = madd0(m, 6557797220589329239, t[0])

	C, t[0] = madd2(m, 11417059503450690909, t[1], C)

	C, t[1] = madd2(m, 13704541515672720494, t[2], C)

	C, t[2] = madd2(m, 12806808807567348591, t[3], C)

	C, t[3] = madd2(m, 6275282332124812599, t[4], C)

	C, t[4] = madd2(m, 4405229158191370832, t[5], C)

	C, t[5] = madd2(m, 12168445323765187689, t[6], C)

	C, t[6] = madd2(m, 10671602409567735082, t[7], C)

	C, t[7] = madd2(m, 17193196447219887244, t[8], C)

	C, t[8] = madd2(m, 1968177518022708578, t[9], C)

	C, t[9] = madd2(m, 17810219903765590582, t[10], C)

	C, t[10] = madd2(m, 14425778727015286243, t[11], C)

	C, t[11] = madd2(m, 7046014110413742080, t[12], C)

	C, t[12] = madd2(m, 2030555054815402006, t[13], C)

	C, t[13] = madd2(m, 2364210669068217395, t[14], C)

	C, t[14] = madd2(m, 12900422625108798885, t[15], C)

	C, t[15] = madd2(m, 1930406275202811267, t[16], C)

	C, t[16] = madd2(m, 14290777978257669090, t[17], C)

	C, t[17] = madd2(m, 5932508195835066898, t[18], C)

	C, t[18] = madd2(m, 15850336981219945716, t[19], C)

	C, t[19] = madd2(m, 854831035414738096, t[20], C)

	C, t[20] = madd2(m, 2260305572347853835, t[21], C)

	C, t[21] = madd2(m, 5347326701889135155, t[22], C)

	C, t[22] = madd2(m, 4279901139938023971, t[23], C)

	C, t[23] = madd2(m, 4531757068977706609, t[24], C)

	C, t[24] = madd2(m, 9735365819670254271, t[25], C)

	C, t[25] = madd2(m, 3870673539892635154, t[26], C)

	C, t[26] = madd2(m, 15996650252674570430, t[27], C)

	C, t[27] = madd3(m, 7470438302128334459, t[28], C, t[29])

	t[28], t[29] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[10], x[0], t[0])
	C, t[1] = madd2(y[10], x[1], t[1], C)
	C, t[2] = madd2(y[10], x[2], t[2], C)
	C, t[3] = madd2(y[10], x[3], t[3], C)
	C, t[4] = madd2(y[10], x[4], t[4], C)
	C, t[5] = madd2(y[10], x[5], t[5], C)
	C, t[6] = madd2(y[10], x[6], t[6], C)
	C, t[7] = madd2(y[10], x[7], t[7], C)
	C, t[8] = madd2(y[10], x[8], t[8], C)
	C, t[9] = madd2(y[10], x[9], t[9], C)
	C, t[10] = madd2(y[10], x[10], t[10], C)
	C, t[11] = madd2(y[10], x[11], t[11], C)
	C, t[12] = madd2(y[10], x[12], t[12], C)
	C, t[13] = madd2(y[10], x[13], t[13], C)
	C, t[14] = madd2(y[10], x[14], t[14], C)
	C, t[15] = madd2(y[10], x[15], t[15], C)
	C, t[16] = madd2(y[10], x[16], t[16], C)
	C, t[17] = madd2(y[10], x[17], t[17], C)
	C, t[18] = madd2(y[10], x[18], t[18], C)
	C, t[19] = madd2(y[10], x[19], t[19], C)
	C, t[20] = madd2(y[10], x[20], t[20], C)
	C, t[21] = madd2(y[10], x[21], t[21], C)
	C, t[22] = madd2(y[10], x[22], t[22], C)
	C, t[23] = madd2(y[10], x[23], t[23], C)
	C, t[24] = madd2(y[10], x[24], t[24], C)
	C, t[25] = madd2(y[10], x[25], t[25], C)
	C, t[26] = madd2(y[10], x[26], t[26], C)
	C, t[27] = madd2(y[10], x[27], t[27], C)
	C, t[28] = madd2(y[10], x[28], t[28], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 10549899360055738265

	// -----------------------------------
	// Second loop
	C = madd0(m, 6557797220589329239, t[0])

	C, t[0] = madd2(m, 11417059503450690909, t[1], C)

	C, t[1] = madd2(m, 13704541515672720494, t[2], C)

	C, t[2] = madd2(m, 12806808807567348591, t[3], C)

	C, t[3] = madd2(m, 6275282332124812599, t[4], C)

	C, t[4] = madd2(m, 4405229158191370832, t[5], C)

	C, t[5] = madd2(m, 12168445323765187689, t[6], C)

	C, t[6] = madd2(m, 10671602409567735082, t[7], C)

	C, t[7] = madd2(m, 17193196447219887244, t[8], C)

	C, t[8] = madd2(m, 1968177518022708578, t[9], C)

	C, t[9] = madd2(m, 17810219903765590582, t[10], C)

	C, t[10] = madd2(m, 14425778727015286243, t[11], C)

	C, t[11] = madd2(m, 7046014110413742080, t[12], C)

	C, t[12] = madd2(m, 2030555054815402006, t[13], C)

	C, t[13] = madd2(m, 2364210669068217395, t[14], C)

	C, t[14] = madd2(m, 12900422625108798885, t[15], C)

	C, t[15] = madd2(m, 1930406275202811267, t[16], C)

	C, t[16] = madd2(m, 14290777978257669090, t[17], C)

	C, t[17] = madd2(m, 5932508195835066898, t[18], C)

	C, t[18] = madd2(m, 15850336981219945716, t[19], C)

	C, t[19] = madd2(m, 854831035414738096, t[20], C)

	C, t[20] = madd2(m, 2260305572347853835, t[21], C)

	C, t[21] = madd2(m, 5347326701889135155, t[22], C)

	C, t[22] = madd2(m, 4279901139938023971, t[23], C)

	C, t[23] = madd2(m, 4531757068977706609, t[24], C)

	C, t[24] = madd2(m, 9735365819670254271, t[25], C)

	C, t[25] = madd2(m, 3870673539892635154, t[26], C)

	C, t[26] = madd2(m, 15996650252674570430, t[27], C)

	C, t[27] = madd3(m, 7470438302128334459, t[28], C, t[29])

	t[28], t[29] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[11], x[0], t[0])
	C, t[1] = madd2(y[11], x[1], t[1], C)
	C, t[2] = madd2(y[11], x[2], t[2], C)
	C, t[3] = madd2(y[11], x[3], t[3], C)
	C, t[4] = madd2(y[11], x[4], t[4], C)
	C, t[5] = madd2(y[11], x[5], t[5], C)
	C, t[6] = madd2(y[11], x[6], t[6], C)
	C, t[7] = madd2(y[11], x[7], t[7], C)
	C, t[8] = madd2(y[11], x[8], t[8], C)
	C, t[9] = madd2(y[11], x[9], t[9], C)
	C, t[10] = madd2(y[11], x[10], t[10], C)
	C, t[11] = madd2(y[11], x[11], t[11], C)
	C, t[12] = madd2(y[11], x[12], t[12], C)
	C, t[13] = madd2(y[11], x[13], t[13], C)
	C, t[14] = madd2(y[11], x[14], t[14], C)
	C, t[15] = madd2(y[11], x[15], t[15], C)
	C, t[16] = madd2(y[11], x[16], t[16], C)
	C, t[17] = madd2(y[11], x[17], t[17], C)
	C, t[18] = madd2(y[11], x[18], t[18], C)
	C, t[19] = madd2(y[11], x[19], t[19], C)
	C, t[20] = madd2(y[11], x[20], t[20], C)
	C, t[21] = madd2(y[11], x[21], t[21], C)
	C, t[22] = madd2(y[11], x[22], t[22], C)
	C, t[23] = madd2(y[11], x[23], t[23], C)
	C, t[24] = madd2(y[11], x[24], t[24], C)
	C, t[25] = madd2(y[11], x[25], t[25], C)
	C, t[26] = madd2(y[11], x[26], t[26], C)
	C, t[27] = madd2(y[11], x[27], t[27], C)
	C, t[28] = madd2(y[11], x[28], t[28], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 10549899360055738265

	// -----------------------------------
	// Second loop
	C = madd0(m, 6557797220589329239, t[0])

	C, t[0] = madd2(m, 11417059503450690909, t[1], C)

	C, t[1] = madd2(m, 13704541515672720494, t[2], C)

	C, t[2] = madd2(m, 12806808807567348591, t[3], C)

	C, t[3] = madd2(m, 6275282332124812599, t[4], C)

	C, t[4] = madd2(m, 4405229158191370832, t[5], C)

	C, t[5] = madd2(m, 12168445323765187689, t[6], C)

	C, t[6] = madd2(m, 10671602409567735082, t[7], C)

	C, t[7] = madd2(m, 17193196447219887244, t[8], C)

	C, t[8] = madd2(m, 1968177518022708578, t[9], C)

	C, t[9] = madd2(m, 17810219903765590582, t[10], C)

	C, t[10] = madd2(m, 14425778727015286243, t[11], C)

	C, t[11] = madd2(m, 7046014110413742080, t[12], C)

	C, t[12] = madd2(m, 2030555054815402006, t[13], C)

	C, t[13] = madd2(m, 2364210669068217395, t[14], C)

	C, t[14] = madd2(m, 12900422625108798885, t[15], C)

	C, t[15] = madd2(m, 1930406275202811267, t[16], C)

	C, t[16] = madd2(m, 14290777978257669090, t[17], C)

	C, t[17] = madd2(m, 5932508195835066898, t[18], C)

	C, t[18] = madd2(m, 15850336981219945716, t[19], C)

	C, t[19] = madd2(m, 854831035414738096, t[20], C)

	C, t[20] = madd2(m, 2260305572347853835, t[21], C)

	C, t[21] = madd2(m, 5347326701889135155, t[22], C)

	C, t[22] = madd2(m, 4279901139938023971, t[23], C)

	C, t[23] = madd2(m, 4531757068977706609, t[24], C)

	C, t[24] = madd2(m, 9735365819670254271, t[25], C)

	C, t[25] = madd2(m, 3870673539892635154, t[26], C)

	C, t[26] = madd2(m, 15996650252674570430, t[27], C)

	C, t[27] = madd3(m, 7470438302128334459, t[28], C, t[29])

	t[28], t[29] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[12], x[0], t[0])
	C, t[1] = madd2(y[12], x[1], t[1], C)
	C, t[2] = madd2(y[12], x[2], t[2], C)
	C, t[3] = madd2(y[12], x[3], t[3], C)
	C, t[4] = madd2(y[12], x[4], t[4], C)
	C, t[5] = madd2(y[12], x[5], t[5], C)
	C, t[6] = madd2(y[12], x[6], t[6], C)
	C, t[7] = madd2(y[12], x[7], t[7], C)
	C, t[8] = madd2(y[12], x[8], t[8], C)
	C, t[9] = madd2(y[12], x[9], t[9], C)
	C, t[10] = madd2(y[12], x[10], t[10], C)
	C, t[11] = madd2(y[12], x[11], t[11], C)
	C, t[12] = madd2(y[12], x[12], t[12], C)
	C, t[13] = madd2(y[12], x[13], t[13], C)
	C, t[14] = madd2(y[12], x[14], t[14], C)
	C, t[15] = madd2(y[12], x[15], t[15], C)
	C, t[16] = madd2(y[12], x[16], t[16], C)
	C, t[17] = madd2(y[12], x[17], t[17], C)
	C, t[18] = madd2(y[12], x[18], t[18], C)
	C, t[19] = madd2(y[12], x[19], t[19], C)
	C, t[20] = madd2(y[12], x[20], t[20], C)
	C, t[21] = madd2(y[12], x[21], t[21], C)
	C, t[22] = madd2(y[12], x[22], t[22], C)
	C, t[23] = madd2(y[12], x[23], t[23], C)
	C, t[24] = madd2(y[12], x[24], t[24], C)
	C, t[25] = madd2(y[12], x[25], t[25], C)
	C, t[26] = madd2(y[12], x[26], t[26], C)
	C, t[27] = madd2(y[12], x[27], t[27], C)
	C, t[28] = madd2(y[12], x[28], t[28], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 10549899360055738265

	// -----------------------------------
	// Second loop
	C = madd0(m, 6557797220589329239, t[0])

	C, t[0] = madd2(m, 11417059503450690909, t[1], C)

	C, t[1] = madd2(m, 13704541515672720494, t[2], C)

	C, t[2] = madd2(m, 12806808807567348591, t[3], C)

	C, t[3] = madd2(m, 6275282332124812599, t[4], C)

	C, t[4] = madd2(m, 4405229158191370832, t[5], C)

	C, t[5] = madd2(m, 12168445323765187689, t[6], C)

	C, t[6] = madd2(m, 10671602409567735082, t[7], C)

	C, t[7] = madd2(m, 17193196447219887244, t[8], C)

	C, t[8] = madd2(m, 1968177518022708578, t[9], C)

	C, t[9] = madd2(m, 17810219903765590582, t[10], C)

	C, t[10] = madd2(m, 14425778727015286243, t[11], C)

	C, t[11] = madd2(m, 7046014110413742080, t[12], C)

	C, t[12] = madd2(m, 2030555054815402006, t[13], C)

	C, t[13] = madd2(m, 2364210669068217395, t[14], C)

	C, t[14] = madd2(m, 12900422625108798885, t[15], C)

	C, t[15] = madd2(m, 1930406275202811267, t[16], C)

	C, t[16] = madd2(m, 14290777978257669090, t[17], C)

	C, t[17] = madd2(m, 5932508195835066898, t[18], C)

	C, t[18] = madd2(m, 15850336981219945716, t[19], C)

	C, t[19] = madd2(m, 854831035414738096, t[20], C)

	C, t[20] = madd2(m, 2260305572347853835, t[21], C)

	C, t[21] = madd2(m, 5347326701889135155, t[22], C)

	C, t[22] = madd2(m, 4279901139938023971, t[23], C)

	C, t[23] = madd2(m, 4531757068977706609, t[24], C)

	C, t[24] = madd2(m, 9735365819670254271, t[25], C)

	C, t[25] = madd2(m, 3870673539892635154, t[26], C)

	C, t[26] = madd2(m, 15996650252674570430, t[27], C)

	C, t[27] = madd3(m, 7470438302128334459, t[28], C, t[29])

	t[28], t[29] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[13], x[0], t[0])
	C, t[1] = madd2(y[13], x[1], t[1], C)
	C, t[2] = madd2(y[13], x[2], t[2], C)
	C, t[3] = madd2(y[13], x[3], t[3], C)
	C, t[4] = madd2(y[13], x[4], t[4], C)
	C, t[5] = madd2(y[13], x[5], t[5], C)
	C, t[6] = madd2(y[13], x[6], t[6], C)
	C, t[7] = madd2(y[13], x[7], t[7], C)
	C, t[8] = madd2(y[13], x[8], t[8], C)
	C, t[9] = madd2(y[13], x[9], t[9], C)
	C, t[10] = madd2(y[13], x[10], t[10], C)
	C, t[11] = madd2(y[13], x[11], t[11], C)
	C, t[12] = madd2(y[13], x[12], t[12], C)
	C, t[13] = madd2(y[13], x[13], t[13], C)
	C, t[14] = madd2(y[13], x[14], t[14], C)
	C, t[15] = madd2(y[13], x[15], t[15], C)
	C, t[16] = madd2(y[13], x[16], t[16], C)
	C, t[17] = madd2(y[13], x[17], t[17], C)
	C, t[18] = madd2(y[13], x[18], t[18], C)
	C, t[19] = madd2(y[13], x[19], t[19], C)
	C, t[20] = madd2(y[13], x[20], t[20], C)
	C, t[21] = madd2(y[13], x[21], t[21], C)
	C, t[22] = madd2(y[13], x[22], t[22], C)
	C, t[23] = madd2(y[13], x[23], t[23], C)
	C, t[24] = madd2(y[13], x[24], t[24], C)
	C, t[25] = madd2(y[13], x[25], t[25], C)
	C, t[26] = madd2(y[13], x[26], t[26], C)
	C, t[27] = madd2(y[13], x[27], t[27], C)
	C, t[28] = madd2(y[13], x[28], t[28], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 10549899360055738265

	// -----------------------------------
	// Second loop
	C = madd0(m, 6557797220589329239, t[0])

	C, t[0] = madd2(m, 11417059503450690909, t[1], C)

	C, t[1] = madd2(m, 13704541515672720494, t[2], C)

	C, t[2] = madd2(m, 12806808807567348591, t[3], C)

	C, t[3] = madd2(m, 6275282332124812599, t[4], C)

	C, t[4] = madd2(m, 4405229158191370832, t[5], C)

	C, t[5] = madd2(m, 12168445323765187689, t[6], C)

	C, t[6] = madd2(m, 10671602409567735082, t[7], C)

	C, t[7] = madd2(m, 17193196447219887244, t[8], C)

	C, t[8] = madd2(m, 1968177518022708578, t[9], C)

	C, t[9] = madd2(m, 17810219903765590582, t[10], C)

	C, t[10] = madd2(m, 14425778727015286243, t[11], C)

	C, t[11] = madd2(m, 7046014110413742080, t[12], C)

	C, t[12] = madd2(m, 2030555054815402006, t[13], C)

	C, t[13] = madd2(m, 2364210669068217395, t[14], C)

	C, t[14] = madd2(m, 12900422625108798885, t[15], C)

	C, t[15] = madd2(m, 1930406275202811267, t[16], C)

	C, t[16] = madd2(m, 14290777978257669090, t[17], C)

	C, t[17] = madd2(m, 5932508195835066898, t[18], C)

	C, t[18] = madd2(m, 15850336981219945716, t[19], C)

	C, t[19] = madd2(m, 854831035414738096, t[20], C)

	C, t[20] = madd2(m, 2260305572347853835, t[21], C)

	C, t[21] = madd2(m, 5347326701889135155, t[22], C)

	C, t[22] = madd2(m, 4279901139938023971, t[23], C)

	C, t[23] = madd2(m, 4531757068977706609, t[24], C)

	C, t[24] = madd2(m, 9735365819670254271, t[25], C)

	C, t[25] = madd2(m, 3870673539892635154, t[26], C)

	C, t[26] = madd2(m, 15996650252674570430, t[27], C)

	C, t[27] = madd3(m, 7470438302128334459, t[28], C, t[29])

	t[28], t[29] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[14], x[0], t[0])
	C, t[1] = madd2(y[14], x[1], t[1], C)
	C, t[2] = madd2(y[14], x[2], t[2], C)
	C, t[3] = madd2(y[14], x[3], t[3], C)
	C, t[4] = madd2(y[14], x[4], t[4], C)
	C, t[5] = madd2(y[14], x[5], t[5], C)
	C, t[6] = madd2(y[14], x[6], t[6], C)
	C, t[7] = madd2(y[14], x[7], t[7], C)
	C, t[8] = madd2(y[14], x[8], t[8], C)
	C, t[9] = madd2(y[14], x[9], t[9], C)
	C, t[10] = madd2(y[14], x[10], t[10], C)
	C, t[11] = madd2(y[14], x[11], t[11], C)
	C, t[12] = madd2(y[14], x[12], t[12], C)
	C, t[13] = madd2(y[14], x[13], t[13], C)
	C, t[14] = madd2(y[14], x[14], t[14], C)
	C, t[15] = madd2(y[14], x[15], t[15], C)
	C, t[16] = madd2(y[14], x[16], t[16], C)
	C, t[17] = madd2(y[14], x[17], t[17], C)
	C, t[18] = madd2(y[14], x[18], t[18], C)
	C, t[19] = madd2(y[14], x[19], t[19], C)
	C, t[20] = madd2(y[14], x[20], t[20], C)
	C, t[21] = madd2(y[14], x[21], t[21], C)
	C, t[22] = madd2(y[14], x[22], t[22], C)
	C, t[23] = madd2(y[14], x[23], t[23], C)
	C, t[24] = madd2(y[14], x[24], t[24], C)
	C, t[25] = madd2(y[14], x[25], t[25], C)
	C, t[26] = madd2(y[14], x[26], t[26], C)
	C, t[27] = madd2(y[14], x[27], t[27], C)
	C, t[28] = madd2(y[14], x[28], t[28], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 10549899360055738265

	// -----------------------------------
	// Second loop
	C = madd0(m, 6557797220589329239, t[0])

	C, t[0] = madd2(m, 11417059503450690909, t[1], C)

	C, t[1] = madd2(m, 13704541515672720494, t[2], C)

	C, t[2] = madd2(m, 12806808807567348591, t[3], C)

	C, t[3] = madd2(m, 6275282332124812599, t[4], C)

	C, t[4] = madd2(m, 4405229158191370832, t[5], C)

	C, t[5] = madd2(m, 12168445323765187689, t[6], C)

	C, t[6] = madd2(m, 10671602409567735082, t[7], C)

	C, t[7] = madd2(m, 17193196447219887244, t[8], C)

	C, t[8] = madd2(m, 1968177518022708578, t[9], C)

	C, t[9] = madd2(m, 17810219903765590582, t[10], C)

	C, t[10] = madd2(m, 14425778727015286243, t[11], C)

	C, t[11] = madd2(m, 7046014110413742080, t[12], C)

	C, t[12] = madd2(m, 2030555054815402006, t[13], C)

	C, t[13] = madd2(m, 2364210669068217395, t[14], C)

	C, t[14] = madd2(m, 12900422625108798885, t[15], C)

	C, t[15] = madd2(m, 1930406275202811267, t[16], C)

	C, t[16] = madd2(m, 14290777978257669090, t[17], C)

	C, t[17] = madd2(m, 5932508195835066898, t[18], C)

	C, t[18] = madd2(m, 15850336981219945716, t[19], C)

	C, t[19] = madd2(m, 854831035414738096, t[20], C)

	C, t[20] = madd2(m, 2260305572347853835, t[21], C)

	C, t[21] = madd2(m, 5347326701889135155, t[22], C)

	C, t[22] = madd2(m, 4279901139938023971, t[23], C)

	C, t[23] = madd2(m, 4531757068977706609, t[24], C)

	C, t[24] = madd2(m, 9735365819670254271, t[25], C)

	C, t[25] = madd2(m, 3870673539892635154, t[26], C)

	C, t[26] = madd2(m, 15996650252674570430, t[27], C)

	C, t[27] = madd3(m, 7470438302128334459, t[28], C, t[29])

	t[28], t[29] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[15], x[0], t[0])
	C, t[1] = madd2(y[15], x[1], t[1], C)
	C, t[2] = madd2(y[15], x[2], t[2], C)
	C, t[3] = madd2(y[15], x[3], t[3], C)
	C, t[4] = madd2(y[15], x[4], t[4], C)
	C, t[5] = madd2(y[15], x[5], t[5], C)
	C, t[6] = madd2(y[15], x[6], t[6], C)
	C, t[7] = madd2(y[15], x[7], t[7], C)
	C, t[8] = madd2(y[15], x[8], t[8], C)
	C, t[9] = madd2(y[15], x[9], t[9], C)
	C, t[10] = madd2(y[15], x[10], t[10], C)
	C, t[11] = madd2(y[15], x[11], t[11], C)
	C, t[12] = madd2(y[15], x[12], t[12], C)
	C, t[13] = madd2(y[15], x[13], t[13], C)
	C, t[14] = madd2(y[15], x[14], t[14], C)
	C, t[15] = madd2(y[15], x[15], t[15], C)
	C, t[16] = madd2(y[15], x[16], t[16], C)
	C, t[17] = madd2(y[15], x[17], t[17], C)
	C, t[18] = madd2(y[15], x[18], t[18], C)
	C, t[19] = madd2(y[15], x[19], t[19], C)
	C, t[20] = madd2(y[15], x[20], t[20], C)
	C, t[21] = madd2(y[15], x[21], t[21], C)
	C, t[22] = madd2(y[15], x[22], t[22], C)
	C, t[23] = madd2(y[15], x[23], t[23], C)
	C, t[24] = madd2(y[15], x[24], t[24], C)
	C, t[25] = madd2(y[15], x[25], t[25], C)
	C, t[26] = madd2(y[15], x[26], t[26], C)
	C, t[27] = madd2(y[15], x[27], t[27], C)
	C, t[28] = madd2(y[15], x[28], t[28], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 10549899360055738265

	// -----------------------------------
	// Second loop
	C = madd0(m, 6557797220589329239, t[0])

	C, t[0] = madd2(m, 11417059503450690909, t[1], C)

	C, t[1] = madd2(m, 13704541515672720494, t[2], C)

	C, t[2] = madd2(m, 12806808807567348591, t[3], C)

	C, t[3] = madd2(m, 6275282332124812599, t[4], C)

	C, t[4] = madd2(m, 4405229158191370832, t[5], C)

	C, t[5] = madd2(m, 12168445323765187689, t[6], C)

	C, t[6] = madd2(m, 10671602409567735082, t[7], C)

	C, t[7] = madd2(m, 17193196447219887244, t[8], C)

	C, t[8] = madd2(m, 1968177518022708578, t[9], C)

	C, t[9] = madd2(m, 17810219903765590582, t[10], C)

	C, t[10] = madd2(m, 14425778727015286243, t[11], C)

	C, t[11] = madd2(m, 7046014110413742080, t[12], C)

	C, t[12] = madd2(m, 2030555054815402006, t[13], C)

	C, t[13] = madd2(m, 2364210669068217395, t[14], C)

	C, t[14] = madd2(m, 12900422625108798885, t[15], C)

	C, t[15] = madd2(m, 1930406275202811267, t[16], C)

	C, t[16] = madd2(m, 14290777978257669090, t[17], C)

	C, t[17] = madd2(m, 5932508195835066898, t[18], C)

	C, t[18] = madd2(m, 15850336981219945716, t[19], C)

	C, t[19] = madd2(m, 854831035414738096, t[20], C)

	C, t[20] = madd2(m, 2260305572347853835, t[21], C)

	C, t[21] = madd2(m, 5347326701889135155, t[22], C)

	C, t[22] = madd2(m, 4279901139938023971, t[23], C)

	C, t[23] = madd2(m, 4531757068977706609, t[24], C)

	C, t[24] = madd2(m, 9735365819670254271, t[25], C)

	C, t[25] = madd2(m, 3870673539892635154, t[26], C)

	C, t[26] = madd2(m, 15996650252674570430, t[27], C)

	C, t[27] = madd3(m, 7470438302128334459, t[28], C, t[29])

	t[28], t[29] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[16], x[0], t[0])
	C, t[1] = madd2(y[16], x[1], t[1], C)
	C, t[2] = madd2(y[16], x[2], t[2], C)
	C, t[3] = madd2(y[16], x[3], t[3], C)
	C, t[4] = madd2(y[16], x[4], t[4], C)
	C, t[5] = madd2(y[16], x[5], t[5], C)
	C, t[6] = madd2(y[16], x[6], t[6], C)
	C, t[7] = madd2(y[16], x[7], t[7], C)
	C, t[8] = madd2(y[16], x[8], t[8], C)
	C, t[9] = madd2(y[16], x[9], t[9], C)
	C, t[10] = madd2(y[16], x[10], t[10], C)
	C, t[11] = madd2(y[16], x[11], t[11], C)
	C, t[12] = madd2(y[16], x[12], t[12], C)
	C, t[13] = madd2(y[16], x[13], t[13], C)
	C, t[14] = madd2(y[16], x[14], t[14], C)
	C, t[15] = madd2(y[16], x[15], t[15], C)
	C, t[16] = madd2(y[16], x[16], t[16], C)
	C, t[17] = madd2(y[16], x[17], t[17], C)
	C, t[18] = madd2(y[16], x[18], t[18], C)
	C, t[19] = madd2(y[16], x[19], t[19], C)
	C, t[20] = madd2(y[16], x[20], t[20], C)
	C, t[21] = madd2(y[16], x[21], t[21], C)
	C, t[22] = madd2(y[16], x[22], t[22], C)
	C, t[23] = madd2(y[16], x[23], t[23], C)
	C, t[24] = madd2(y[16], x[24], t[24], C)
	C, t[25] = madd2(y[16], x[25], t[25], C)
	C, t[26] = madd2(y[16], x[26], t[26], C)
	C, t[27] = madd2(y[16], x[27], t[27], C)
	C, t[28] = madd2(y[16], x[28], t[28], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 10549899360055738265

	// -----------------------------------
	// Second loop
	C = madd0(m, 6557797220589329239, t[0])

	C, t[0] = madd2(m, 11417059503450690909, t[1], C)

	C, t[1] = madd2(m, 13704541515672720494, t[2], C)

	C, t[2] = madd2(m, 12806808807567348591, t[3], C)

	C, t[3] = madd2(m, 6275282332124812599, t[4], C)

	C, t[4] = madd2(m, 4405229158191370832, t[5], C)

	C, t[5] = madd2(m, 12168445323765187689, t[6], C)

	C, t[6] = madd2(m, 10671602409567735082, t[7], C)

	C, t[7] = madd2(m, 17193196447219887244, t[8], C)

	C, t[8] = madd2(m, 1968177518022708578, t[9], C)

	C, t[9] = madd2(m, 17810219903765590582, t[10], C)

	C, t[10] = madd2(m, 14425778727015286243, t[11], C)

	C, t[11] = madd2(m, 7046014110413742080, t[12], C)

	C, t[12] = madd2(m, 2030555054815402006, t[13], C)

	C, t[13] = madd2(m, 2364210669068217395, t[14], C)

	C, t[14] = madd2(m, 12900422625108798885, t[15], C)

	C, t[15] = madd2(m, 1930406275202811267, t[16], C)

	C, t[16] = madd2(m, 14290777978257669090, t[17], C)

	C, t[17] = madd2(m, 5932508195835066898, t[18], C)

	C, t[18] = madd2(m, 15850336981219945716, t[19], C)

	C, t[19] = madd2(m, 854831035414738096, t[20], C)

	C, t[20] = madd2(m, 2260305572347853835, t[21], C)

	C, t[21] = madd2(m, 5347326701889135155, t[22], C)

	C, t[22] = madd2(m, 4279901139938023971, t[23], C)

	C, t[23] = madd2(m, 4531757068977706609, t[24], C)

	C, t[24] = madd2(m, 9735365819670254271, t[25], C)

	C, t[25] = madd2(m, 3870673539892635154, t[26], C)

	C, t[26] = madd2(m, 15996650252674570430, t[27], C)

	C, t[27] = madd3(m, 7470438302128334459, t[28], C, t[29])

	t[28], t[29] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[17], x[0], t[0])
	C, t[1] = madd2(y[17], x[1], t[1], C)
	C, t[2] = madd2(y[17], x[2], t[2], C)
	C, t[3] = madd2(y[17], x[3], t[3], C)
	C, t[4] = madd2(y[17], x[4], t[4], C)
	C, t[5] = madd2(y[17], x[5], t[5], C)
	C, t[6] = madd2(y[17], x[6], t[6], C)
	C, t[7] = madd2(y[17], x[7], t[7], C)
	C, t[8] = madd2(y[17], x[8], t[8], C)
	C, t[9] = madd2(y[17], x[9], t[9], C)
	C, t[10] = madd2(y[17], x[10], t[10], C)
	C, t[11] = madd2(y[17], x[11], t[11], C)
	C, t[12] = madd2(y[17], x[12], t[12], C)
	C, t[13] = madd2(y[17], x[13], t[13], C)
	C, t[14] = madd2(y[17], x[14], t[14], C)
	C, t[15] = madd2(y[17], x[15], t[15], C)
	C, t[16] = madd2(y[17], x[16], t[16], C)
	C, t[17] = madd2(y[17], x[17], t[17], C)
	C, t[18] = madd2(y[17], x[18], t[18], C)
	C, t[19] = madd2(y[17], x[19], t[19], C)
	C, t[20] = madd2(y[17], x[20], t[20], C)
	C, t[21] = madd2(y[17], x[21], t[21], C)
	C, t[22] = madd2(y[17], x[22], t[22], C)
	C, t[23] = madd2(y[17], x[23], t[23], C)
	C, t[24] = madd2(y[17], x[24], t[24], C)
	C, t[25] = madd2(y[17], x[25], t[25], C)
	C, t[26] = madd2(y[17], x[26], t[26], C)
	C, t[27] = madd2(y[17], x[27], t[27], C)
	C, t[28] = madd2(y[17], x[28], t[28], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 10549899360055738265

	// -----------------------------------
	// Second loop
	C = madd0(m, 6557797220589329239, t[0])

	C, t[0] = madd2(m, 11417059503450690909, t[1], C)

	C, t[1] = madd2(m, 13704541515672720494, t[2], C)

	C, t[2] = madd2(m, 12806808807567348591, t[3], C)

	C, t[3] = madd2(m, 6275282332124812599, t[4], C)

	C, t[4] = madd2(m, 4405229158191370832, t[5], C)

	C, t[5] = madd2(m, 12168445323765187689, t[6], C)

	C, t[6] = madd2(m, 10671602409567735082, t[7], C)

	C, t[7] = madd2(m, 17193196447219887244, t[8], C)

	C, t[8] = madd2(m, 1968177518022708578, t[9], C)

	C, t[9] = madd2(m, 17810219903765590582, t[10], C)

	C, t[10] = madd2(m, 14425778727015286243, t[11], C)

	C, t[11] = madd2(m, 7046014110413742080, t[12], C)

	C, t[12] = madd2(m, 2030555054815402006, t[13], C)

	C, t[13] = madd2(m, 2364210669068217395, t[14], C)

	C, t[14] = madd2(m, 12900422625108798885, t[15], C)

	C, t[15] = madd2(m, 1930406275202811267, t[16], C)

	C, t[16] = madd2(m, 14290777978257669090, t[17], C)

	C, t[17] = madd2(m, 5932508195835066898, t[18], C)

	C, t[18] = madd2(m, 15850336981219945716, t[19], C)

	C, t[19] = madd2(m, 854831035414738096, t[20], C)

	C, t[20] = madd2(m, 2260305572347853835, t[21], C)

	C, t[21] = madd2(m, 5347326701889135155, t[22], C)

	C, t[22] = madd2(m, 4279901139938023971, t[23], C)

	C, t[23] = madd2(m, 4531757068977706609, t[24], C)

	C, t[24] = madd2(m, 9735365819670254271, t[25], C)

	C, t[25] = madd2(m, 3870673539892635154, t[26], C)

	C, t[26] = madd2(m, 15996650252674570430, t[27], C)

	C, t[27] = madd3(m, 7470438302128334459, t[28], C, t[29])

	t[28], t[29] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[18], x[0], t[0])
	C, t[1] = madd2(y[18], x[1], t[1], C)
	C, t[2] = madd2(y[18], x[2], t[2], C)
	C, t[3] = madd2(y[18], x[3], t[3], C)
	C, t[4] = madd2(y[18], x[4], t[4], C)
	C, t[5] = madd2(y[18], x[5], t[5], C)
	C, t[6] = madd2(y[18], x[6], t[6], C)
	C, t[7] = madd2(y[18], x[7], t[7], C)
	C, t[8] = madd2(y[18], x[8], t[8], C)
	C, t[9] = madd2(y[18], x[9], t[9], C)
	C, t[10] = madd2(y[18], x[10], t[10], C)
	C, t[11] = madd2(y[18], x[11], t[11], C)
	C, t[12] = madd2(y[18], x[12], t[12], C)
	C, t[13] = madd2(y[18], x[13], t[13], C)
	C, t[14] = madd2(y[18], x[14], t[14], C)
	C, t[15] = madd2(y[18], x[15], t[15], C)
	C, t[16] = madd2(y[18], x[16], t[16], C)
	C, t[17] = madd2(y[18], x[17], t[17], C)
	C, t[18] = madd2(y[18], x[18], t[18], C)
	C, t[19] = madd2(y[18], x[19], t[19], C)
	C, t[20] = madd2(y[18], x[20], t[20], C)
	C, t[21] = madd2(y[18], x[21], t[21], C)
	C, t[22] = madd2(y[18], x[22], t[22], C)
	C, t[23] = madd2(y[18], x[23], t[23], C)
	C, t[24] = madd2(y[18], x[24], t[24], C)
	C, t[25] = madd2(y[18], x[25], t[25], C)
	C, t[26] = madd2(y[18], x[26], t[26], C)
	C, t[27] = madd2(y[18], x[27], t[27], C)
	C, t[28] = madd2(y[18], x[28], t[28], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 10549899360055738265

	// -----------------------------------
	// Second loop
	C = madd0(m, 6557797220589329239, t[0])

	C, t[0] = madd2(m, 11417059503450690909, t[1], C)

	C, t[1] = madd2(m, 13704541515672720494, t[2], C)

	C, t[2] = madd2(m, 12806808807567348591, t[3], C)

	C, t[3] = madd2(m, 6275282332124812599, t[4], C)

	C, t[4] = madd2(m, 4405229158191370832, t[5], C)

	C, t[5] = madd2(m, 12168445323765187689, t[6], C)

	C, t[6] = madd2(m, 10671602409567735082, t[7], C)

	C, t[7] = madd2(m, 17193196447219887244, t[8], C)

	C, t[8] = madd2(m, 1968177518022708578, t[9], C)

	C, t[9] = madd2(m, 17810219903765590582, t[10], C)

	C, t[10] = madd2(m, 14425778727015286243, t[11], C)

	C, t[11] = madd2(m, 7046014110413742080, t[12], C)

	C, t[12] = madd2(m, 2030555054815402006, t[13], C)

	C, t[13] = madd2(m, 2364210669068217395, t[14], C)

	C, t[14] = madd2(m, 12900422625108798885, t[15], C)

	C, t[15] = madd2(m, 1930406275202811267, t[16], C)

	C, t[16] = madd2(m, 14290777978257669090, t[17], C)

	C, t[17] = madd2(m, 5932508195835066898, t[18], C)

	C, t[18] = madd2(m, 15850336981219945716, t[19], C)

	C, t[19] = madd2(m, 854831035414738096, t[20], C)

	C, t[20] = madd2(m, 2260305572347853835, t[21], C)

	C, t[21] = madd2(m, 5347326701889135155, t[22], C)

	C, t[22] = madd2(m, 4279901139938023971, t[23], C)

	C, t[23] = madd2(m, 4531757068977706609, t[24], C)

	C, t[24] = madd2(m, 9735365819670254271, t[25], C)

	C, t[25] = madd2(m, 3870673539892635154, t[26], C)

	C, t[26] = madd2(m, 15996650252674570430, t[27], C)

	C, t[27] = madd3(m, 7470438302128334459, t[28], C, t[29])

	t[28], t[29] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[19], x[0], t[0])
	C, t[1] = madd2(y[19], x[1], t[1], C)
	C, t[2] = madd2(y[19], x[2], t[2], C)
	C, t[3] = madd2(y[19], x[3], t[3], C)
	C, t[4] = madd2(y[19], x[4], t[4], C)
	C, t[5] = madd2(y[19], x[5], t[5], C)
	C, t[6] = madd2(y[19], x[6], t[6], C)
	C, t[7] = madd2(y[19], x[7], t[7], C)
	C, t[8] = madd2(y[19], x[8], t[8], C)
	C, t[9] = madd2(y[19], x[9], t[9], C)
	C, t[10] = madd2(y[19], x[10], t[10], C)
	C, t[11] = madd2(y[19], x[11], t[11], C)
	C, t[12] = madd2(y[19], x[12], t[12], C)
	C, t[13] = madd2(y[19], x[13], t[13], C)
	C, t[14] = madd2(y[19], x[14], t[14], C)
	C, t[15] = madd2(y[19], x[15], t[15], C)
	C, t[16] = madd2(y[19], x[16], t[16], C)
	C, t[17] = madd2(y[19], x[17], t[17], C)
	C, t[18] = madd2(y[19], x[18], t[18], C)
	C, t[19] = madd2(y[19], x[19], t[19], C)
	C, t[20] = madd2(y[19], x[20], t[20], C)
	C, t[21] = madd2(y[19], x[21], t[21], C)
	C, t[22] = madd2(y[19], x[22], t[22], C)
	C, t[23] = madd2(y[19], x[23], t[23], C)
	C, t[24] = madd2(y[19], x[24], t[24], C)
	C, t[25] = madd2(y[19], x[25], t[25], C)
	C, t[26] = madd2(y[19], x[26], t[26], C)
	C, t[27] = madd2(y[19], x[27], t[27], C)
	C, t[28] = madd2(y[19], x[28], t[28], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 10549899360055738265

	// -----------------------------------
	// Second loop
	C = madd0(m, 6557797220589329239, t[0])

	C, t[0] = madd2(m, 11417059503450690909, t[1], C)

	C, t[1] = madd2(m, 13704541515672720494, t[2], C)

	C, t[2] = madd2(m, 12806808807567348591, t[3], C)

	C, t[3] = madd2(m, 6275282332124812599, t[4], C)

	C, t[4] = madd2(m, 4405229158191370832, t[5], C)

	C, t[5] = madd2(m, 12168445323765187689, t[6], C)

	C, t[6] = madd2(m, 10671602409567735082, t[7], C)

	C, t[7] = madd2(m, 17193196447219887244, t[8], C)

	C, t[8] = madd2(m, 1968177518022708578, t[9], C)

	C, t[9] = madd2(m, 17810219903765590582, t[10], C)

	C, t[10] = madd2(m, 14425778727015286243, t[11], C)

	C, t[11] = madd2(m, 7046014110413742080, t[12], C)

	C, t[12] = madd2(m, 2030555054815402006, t[13], C)

	C, t[13] = madd2(m, 2364210669068217395, t[14], C)

	C, t[14] = madd2(m, 12900422625108798885, t[15], C)

	C, t[15] = madd2(m, 1930406275202811267, t[16], C)

	C, t[16] = madd2(m, 14290777978257669090, t[17], C)

	C, t[17] = madd2(m, 5932508195835066898, t[18], C)

	C, t[18] = madd2(m, 15850336981219945716, t[19], C)

	C, t[19] = madd2(m, 854831035414738096, t[20], C)

	C, t[20] = madd2(m, 2260305572347853835, t[21], C)

	C, t[21] = madd2(m, 5347326701889135155, t[22], C)

	C, t[22] = madd2(m, 4279901139938023971, t[23], C)

	C, t[23] = madd2(m, 4531757068977706609, t[24], C)

	C, t[24] = madd2(m, 9735365819670254271, t[25], C)

	C, t[25] = madd2(m, 3870673539892635154, t[26], C)

	C, t[26] = madd2(m, 15996650252674570430, t[27], C)

	C, t[27] = madd3(m, 7470438302128334459, t[28], C, t[29])

	t[28], t[29] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[20], x[0], t[0])
	C, t[1] = madd2(y[20], x[1], t[1], C)
	C, t[2] = madd2(y[20], x[2], t[2], C)
	C, t[3] = madd2(y[20], x[3], t[3], C)
	C, t[4] = madd2(y[20], x[4], t[4], C)
	C, t[5] = madd2(y[20], x[5], t[5], C)
	C, t[6] = madd2(y[20], x[6], t[6], C)
	C, t[7] = madd2(y[20], x[7], t[7], C)
	C, t[8] = madd2(y[20], x[8], t[8], C)
	C, t[9] = madd2(y[20], x[9], t[9], C)
	C, t[10] = madd2(y[20], x[10], t[10], C)
	C, t[11] = madd2(y[20], x[11], t[11], C)
	C, t[12] = madd2(y[20], x[12], t[12], C)
	C, t[13] = madd2(y[20], x[13], t[13], C)
	C, t[14] = madd2(y[20], x[14], t[14], C)
	C, t[15] = madd2(y[20], x[15], t[15], C)
	C, t[16] = madd2(y[20], x[16], t[16], C)
	C, t[17] = madd2(y[20], x[17], t[17], C)
	C, t[18] = madd2(y[20], x[18], t[18], C)
	C, t[19] = madd2(y[20], x[19], t[19], C)
	C, t[20] = madd2(y[20], x[20], t[20], C)
	C, t[21] = madd2(y[20], x[21], t[21], C)
	C, t[22] = madd2(y[20], x[22], t[22], C)
	C, t[23] = madd2(y[20], x[23], t[23], C)
	C, t[24] = madd2(y[20], x[24], t[24], C)
	C, t[25] = madd2(y[20], x[25], t[25], C)
	C, t[26] = madd2(y[20], x[26], t[26], C)
	C, t[27] = madd2(y[20], x[27], t[27], C)
	C, t[28] = madd2(y[20], x[28], t[28], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 10549899360055738265

	// -----------------------------------
	// Second loop
	C = madd0(m, 6557797220589329239, t[0])

	C, t[0] = madd2(m, 11417059503450690909, t[1], C)

	C, t[1] = madd2(m, 13704541515672720494, t[2], C)

	C, t[2] = madd2(m, 12806808807567348591, t[3], C)

	C, t[3] = madd2(m, 6275282332124812599, t[4], C)

	C, t[4] = madd2(m, 4405229158191370832, t[5], C)

	C, t[5] = madd2(m, 12168445323765187689, t[6], C)

	C, t[6] = madd2(m, 10671602409567735082, t[7], C)

	C, t[7] = madd2(m, 17193196447219887244, t[8], C)

	C, t[8] = madd2(m, 1968177518022708578, t[9], C)

	C, t[9] = madd2(m, 17810219903765590582, t[10], C)

	C, t[10] = madd2(m, 14425778727015286243, t[11], C)

	C, t[11] = madd2(m, 7046014110413742080, t[12], C)

	C, t[12] = madd2(m, 2030555054815402006, t[13], C)

	C, t[13] = madd2(m, 2364210669068217395, t[14], C)

	C, t[14] = madd2(m, 12900422625108798885, t[15], C)

	C, t[15] = madd2(m, 1930406275202811267, t[16], C)

	C, t[16] = madd2(m, 14290777978257669090, t[17], C)

	C, t[17] = madd2(m, 5932508195835066898, t[18], C)

	C, t[18] = madd2(m, 15850336981219945716, t[19], C)

	C, t[19] = madd2(m, 854831035414738096, t[20], C)

	C, t[20] = madd2(m, 2260305572347853835, t[21], C)

	C, t[21] = madd2(m, 5347326701889135155, t[22], C)

	C, t[22] = madd2(m, 4279901139938023971, t[23], C)

	C, t[23] = madd2(m, 4531757068977706609, t[24], C)

	C, t[24] = madd2(m, 9735365819670254271, t[25], C)

	C, t[25] = madd2(m, 3870673539892635154, t[26], C)

	C, t[26] = madd2(m, 15996650252674570430, t[27], C)

	C, t[27] = madd3(m, 7470438302128334459, t[28], C, t[29])

	t[28], t[29] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[21], x[0], t[0])
	C, t[1] = madd2(y[21], x[1], t[1], C)
	C, t[2] = madd2(y[21], x[2], t[2], C)
	C, t[3] = madd2(y[21], x[3], t[3], C)
	C, t[4] = madd2(y[21], x[4], t[4], C)
	C, t[5] = madd2(y[21], x[5], t[5], C)
	C, t[6] = madd2(y[21], x[6], t[6], C)
	C, t[7] = madd2(y[21], x[7], t[7], C)
	C, t[8] = madd2(y[21], x[8], t[8], C)
	C, t[9] = madd2(y[21], x[9], t[9], C)
	C, t[10] = madd2(y[21], x[10], t[10], C)
	C, t[11] = madd2(y[21], x[11], t[11], C)
	C, t[12] = madd2(y[21], x[12], t[12], C)
	C, t[13] = madd2(y[21], x[13], t[13], C)
	C, t[14] = madd2(y[21], x[14], t[14], C)
	C, t[15] = madd2(y[21], x[15], t[15], C)
	C, t[16] = madd2(y[21], x[16], t[16], C)
	C, t[17] = madd2(y[21], x[17], t[17], C)
	C, t[18] = madd2(y[21], x[18], t[18], C)
	C, t[19] = madd2(y[21], x[19], t[19], C)
	C, t[20] = madd2(y[21], x[20], t[20], C)
	C, t[21] = madd2(y[21], x[21], t[21], C)
	C, t[22] = madd2(y[21], x[22], t[22], C)
	C, t[23] = madd2(y[21], x[23], t[23], C)
	C, t[24] = madd2(y[21], x[24], t[24], C)
	C, t[25] = madd2(y[21], x[25], t[25], C)
	C, t[26] = madd2(y[21], x[26], t[26], C)
	C, t[27] = madd2(y[21], x[27], t[27], C)
	C, t[28] = madd2(y[21], x[28], t[28], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 10549899360055738265

	// -----------------------------------
	// Second loop
	C = madd0(m, 6557797220589329239, t[0])

	C, t[0] = madd2(m, 11417059503450690909, t[1], C)

	C, t[1] = madd2(m, 13704541515672720494, t[2], C)

	C, t[2] = madd2(m, 12806808807567348591, t[3], C)

	C, t[3] = madd2(m, 6275282332124812599, t[4], C)

	C, t[4] = madd2(m, 4405229158191370832, t[5], C)

	C, t[5] = madd2(m, 12168445323765187689, t[6], C)

	C, t[6] = madd2(m, 10671602409567735082, t[7], C)

	C, t[7] = madd2(m, 17193196447219887244, t[8], C)

	C, t[8] = madd2(m, 1968177518022708578, t[9], C)

	C, t[9] = madd2(m, 17810219903765590582, t[10], C)

	C, t[10] = madd2(m, 14425778727015286243, t[11], C)

	C, t[11] = madd2(m, 7046014110413742080, t[12], C)

	C, t[12] = madd2(m, 2030555054815402006, t[13], C)

	C, t[13] = madd2(m, 2364210669068217395, t[14], C)

	C, t[14] = madd2(m, 12900422625108798885, t[15], C)

	C, t[15] = madd2(m, 1930406275202811267, t[16], C)

	C, t[16] = madd2(m, 14290777978257669090, t[17], C)

	C, t[17] = madd2(m, 5932508195835066898, t[18], C)

	C, t[18] = madd2(m, 15850336981219945716, t[19], C)

	C, t[19] = madd2(m, 854831035414738096, t[20], C)

	C, t[20] = madd2(m, 2260305572347853835, t[21], C)

	C, t[21] = madd2(m, 5347326701889135155, t[22], C)

	C, t[22] = madd2(m, 4279901139938023971, t[23], C)

	C, t[23] = madd2(m, 4531757068977706609, t[24], C)

	C, t[24] = madd2(m, 9735365819670254271, t[25], C)

	C, t[25] = madd2(m, 3870673539892635154, t[26], C)

	C, t[26] = madd2(m, 15996650252674570430, t[27], C)

	C, t[27] = madd3(m, 7470438302128334459, t[28], C, t[29])

	t[28], t[29] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[22], x[0], t[0])
	C, t[1] = madd2(y[22], x[1], t[1], C)
	C, t[2] = madd2(y[22], x[2], t[2], C)
	C, t[3] = madd2(y[22], x[3], t[3], C)
	C, t[4] = madd2(y[22], x[4], t[4], C)
	C, t[5] = madd2(y[22], x[5], t[5], C)
	C, t[6] = madd2(y[22], x[6], t[6], C)
	C, t[7] = madd2(y[22], x[7], t[7], C)
	C, t[8] = madd2(y[22], x[8], t[8], C)
	C, t[9] = madd2(y[22], x[9], t[9], C)
	C, t[10] = madd2(y[22], x[10], t[10], C)
	C, t[11] = madd2(y[22], x[11], t[11], C)
	C, t[12] = madd2(y[22], x[12], t[12], C)
	C, t[13] = madd2(y[22], x[13], t[13], C)
	C, t[14] = madd2(y[22], x[14], t[14], C)
	C, t[15] = madd2(y[22], x[15], t[15], C)
	C, t[16] = madd2(y[22], x[16], t[16], C)
	C, t[17] = madd2(y[22], x[17], t[17], C)
	C, t[18] = madd2(y[22], x[18], t[18], C)
	C, t[19] = madd2(y[22], x[19], t[19], C)
	C, t[20] = madd2(y[22], x[20], t[20], C)
	C, t[21] = madd2(y[22], x[21], t[21], C)
	C, t[22] = madd2(y[22], x[22], t[22], C)
	C, t[23] = madd2(y[22], x[23], t[23], C)
	C, t[24] = madd2(y[22], x[24], t[24], C)
	C, t[25] = madd2(y[22], x[25], t[25], C)
	C, t[26] = madd2(y[22], x[26], t[26], C)
	C, t[27] = madd2(y[22], x[27], t[27], C)
	C, t[28] = madd2(y[22], x[28], t[28], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 10549899360055738265

	// -----------------------------------
	// Second loop
	C = madd0(m, 6557797220589329239, t[0])

	C, t[0] = madd2(m, 11417059503450690909, t[1], C)

	C, t[1] = madd2(m, 13704541515672720494, t[2], C)

	C, t[2] = madd2(m, 12806808807567348591, t[3], C)

	C, t[3] = madd2(m, 6275282332124812599, t[4], C)

	C, t[4] = madd2(m, 4405229158191370832, t[5], C)

	C, t[5] = madd2(m, 12168445323765187689, t[6], C)

	C, t[6] = madd2(m, 10671602409567735082, t[7], C)

	C, t[7] = madd2(m, 17193196447219887244, t[8], C)

	C, t[8] = madd2(m, 1968177518022708578, t[9], C)

	C, t[9] = madd2(m, 17810219903765590582, t[10], C)

	C, t[10] = madd2(m, 14425778727015286243, t[11], C)

	C, t[11] = madd2(m, 7046014110413742080, t[12], C)

	C, t[12] = madd2(m, 2030555054815402006, t[13], C)

	C, t[13] = madd2(m, 2364210669068217395, t[14], C)

	C, t[14] = madd2(m, 12900422625108798885, t[15], C)

	C, t[15] = madd2(m, 1930406275202811267, t[16], C)

	C, t[16] = madd2(m, 14290777978257669090, t[17], C)

	C, t[17] = madd2(m, 5932508195835066898, t[18], C)

	C, t[18] = madd2(m, 15850336981219945716, t[19], C)

	C, t[19] = madd2(m, 854831035414738096, t[20], C)

	C, t[20] = madd2(m, 2260305572347853835, t[21], C)

	C, t[21] = madd2(m, 5347326701889135155, t[22], C)

	C, t[22] = madd2(m, 4279901139938023971, t[23], C)

	C, t[23] = madd2(m, 4531757068977706609, t[24], C)

	C, t[24] = madd2(m, 9735365819670254271, t[25], C)

	C, t[25] = madd2(m, 3870673539892635154, t[26], C)

	C, t[26] = madd2(m, 15996650252674570430, t[27], C)

	C, t[27] = madd3(m, 7470438302128334459, t[28], C, t[29])

	t[28], t[29] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[23], x[0], t[0])
	C, t[1] = madd2(y[23], x[1], t[1], C)
	C, t[2] = madd2(y[23], x[2], t[2], C)
	C, t[3] = madd2(y[23], x[3], t[3], C)
	C, t[4] = madd2(y[23], x[4], t[4], C)
	C, t[5] = madd2(y[23], x[5], t[5], C)
	C, t[6] = madd2(y[23], x[6], t[6], C)
	C, t[7] = madd2(y[23], x[7], t[7], C)
	C, t[8] = madd2(y[23], x[8], t[8], C)
	C, t[9] = madd2(y[23], x[9], t[9], C)
	C, t[10] = madd2(y[23], x[10], t[10], C)
	C, t[11] = madd2(y[23], x[11], t[11], C)
	C, t[12] = madd2(y[23], x[12], t[12], C)
	C, t[13] = madd2(y[23], x[13], t[13], C)
	C, t[14] = madd2(y[23], x[14], t[14], C)
	C, t[15] = madd2(y[23], x[15], t[15], C)
	C, t[16] = madd2(y[23], x[16], t[16], C)
	C, t[17] = madd2(y[23], x[17], t[17], C)
	C, t[18] = madd2(y[23], x[18], t[18], C)
	C, t[19] = madd2(y[23], x[19], t[19], C)
	C, t[20] = madd2(y[23], x[20], t[20], C)
	C, t[21] = madd2(y[23], x[21], t[21], C)
	C, t[22] = madd2(y[23], x[22], t[22], C)
	C, t[23] = madd2(y[23], x[23], t[23], C)
	C, t[24] = madd2(y[23], x[24], t[24], C)
	C, t[25] = madd2(y[23], x[25], t[25], C)
	C, t[26] = madd2(y[23], x[26], t[26], C)
	C, t[27] = madd2(y[23], x[27], t[27], C)
	C, t[28] = madd2(y[23], x[28], t[28], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 10549899360055738265

	// -----------------------------------
	// Second loop
	C = madd0(m, 6557797220589329239, t[0])

	C, t[0] = madd2(m, 11417059503450690909, t[1], C)

	C, t[1] = madd2(m, 13704541515672720494, t[2], C)

	C, t[2] = madd2(m, 12806808807567348591, t[3], C)

	C, t[3] = madd2(m, 6275282332124812599, t[4], C)

	C, t[4] = madd2(m, 4405229158191370832, t[5], C)

	C, t[5] = madd2(m, 12168445323765187689, t[6], C)

	C, t[6] = madd2(m, 10671602409567735082, t[7], C)

	C, t[7] = madd2(m, 17193196447219887244, t[8], C)

	C, t[8] = madd2(m, 1968177518022708578, t[9], C)

	C, t[9] = madd2(m, 17810219903765590582, t[10], C)

	C, t[10] = madd2(m, 14425778727015286243, t[11], C)

	C, t[11] = madd2(m, 7046014110413742080, t[12], C)

	C, t[12] = madd2(m, 2030555054815402006, t[13], C)

	C, t[13] = madd2(m, 2364210669068217395, t[14], C)

	C, t[14] = madd2(m, 12900422625108798885, t[15], C)

	C, t[15] = madd2(m, 1930406275202811267, t[16], C)

	C, t[16] = madd2(m, 14290777978257669090, t[17], C)

	C, t[17] = madd2(m, 5932508195835066898, t[18], C)

	C, t[18] = madd2(m, 15850336981219945716, t[19], C)

	C, t[19] = madd2(m, 854831035414738096, t[20], C)

	C, t[20] = madd2(m, 2260305572347853835, t[21], C)

	C, t[21] = madd2(m, 5347326701889135155, t[22], C)

	C, t[22] = madd2(m, 4279901139938023971, t[23], C)

	C, t[23] = madd2(m, 4531757068977706609, t[24], C)

	C, t[24] = madd2(m, 9735365819670254271, t[25], C)

	C, t[25] = madd2(m, 3870673539892635154, t[26], C)

	C, t[26] = madd2(m, 15996650252674570430, t[27], C)

	C, t[27] = madd3(m, 7470438302128334459, t[28], C, t[29])

	t[28], t[29] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[24], x[0], t[0])
	C, t[1] = madd2(y[24], x[1], t[1], C)
	C, t[2] = madd2(y[24], x[2], t[2], C)
	C, t[3] = madd2(y[24], x[3], t[3], C)
	C, t[4] = madd2(y[24], x[4], t[4], C)
	C, t[5] = madd2(y[24], x[5], t[5], C)
	C, t[6] = madd2(y[24], x[6], t[6], C)
	C, t[7] = madd2(y[24], x[7], t[7], C)
	C, t[8] = madd2(y[24], x[8], t[8], C)
	C, t[9] = madd2(y[24], x[9], t[9], C)
	C, t[10] = madd2(y[24], x[10], t[10], C)
	C, t[11] = madd2(y[24], x[11], t[11], C)
	C, t[12] = madd2(y[24], x[12], t[12], C)
	C, t[13] = madd2(y[24], x[13], t[13], C)
	C, t[14] = madd2(y[24], x[14], t[14], C)
	C, t[15] = madd2(y[24], x[15], t[15], C)
	C, t[16] = madd2(y[24], x[16], t[16], C)
	C, t[17] = madd2(y[24], x[17], t[17], C)
	C, t[18] = madd2(y[24], x[18], t[18], C)
	C, t[19] = madd2(y[24], x[19], t[19], C)
	C, t[20] = madd2(y[24], x[20], t[20], C)
	C, t[21] = madd2(y[24], x[21], t[21], C)
	C, t[22] = madd2(y[24], x[22], t[22], C)
	C, t[23] = madd2(y[24], x[23], t[23], C)
	C, t[24] = madd2(y[24], x[24], t[24], C)
	C, t[25] = madd2(y[24], x[25], t[25], C)
	C, t[26] = madd2(y[24], x[26], t[26], C)
	C, t[27] = madd2(y[24], x[27], t[27], C)
	C, t[28] = madd2(y[24], x[28], t[28], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 10549899360055738265

	// -----------------------------------
	// Second loop
	C = madd0(m, 6557797220589329239, t[0])

	C, t[0] = madd2(m, 11417059503450690909, t[1], C)

	C, t[1] = madd2(m, 13704541515672720494, t[2], C)

	C, t[2] = madd2(m, 12806808807567348591, t[3], C)

	C, t[3] = madd2(m, 6275282332124812599, t[4], C)

	C, t[4] = madd2(m, 4405229158191370832, t[5], C)

	C, t[5] = madd2(m, 12168445323765187689, t[6], C)

	C, t[6] = madd2(m, 10671602409567735082, t[7], C)

	C, t[7] = madd2(m, 17193196447219887244, t[8], C)

	C, t[8] = madd2(m, 1968177518022708578, t[9], C)

	C, t[9] = madd2(m, 17810219903765590582, t[10], C)

	C, t[10] = madd2(m, 14425778727015286243, t[11], C)

	C, t[11] = madd2(m, 7046014110413742080, t[12], C)

	C, t[12] = madd2(m, 2030555054815402006, t[13], C)

	C, t[13] = madd2(m, 2364210669068217395, t[14], C)

	C, t[14] = madd2(m, 12900422625108798885, t[15], C)

	C, t[15] = madd2(m, 1930406275202811267, t[16], C)

	C, t[16] = madd2(m, 14290777978257669090, t[17], C)

	C, t[17] = madd2(m, 5932508195835066898, t[18], C)

	C, t[18] = madd2(m, 15850336981219945716, t[19], C)

	C, t[19] = madd2(m, 854831035414738096, t[20], C)

	C, t[20] = madd2(m, 2260305572347853835, t[21], C)

	C, t[21] = madd2(m, 5347326701889135155, t[22], C)

	C, t[22] = madd2(m, 4279901139938023971, t[23], C)

	C, t[23] = madd2(m, 4531757068977706609, t[24], C)

	C, t[24] = madd2(m, 9735365819670254271, t[25], C)

	C, t[25] = madd2(m, 3870673539892635154, t[26], C)

	C, t[26] = madd2(m, 15996650252674570430, t[27], C)

	C, t[27] = madd3(m, 7470438302128334459, t[28], C, t[29])

	t[28], t[29] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[25], x[0], t[0])
	C, t[1] = madd2(y[25], x[1], t[1], C)
	C, t[2] = madd2(y[25], x[2], t[2], C)
	C, t[3] = madd2(y[25], x[3], t[3], C)
	C, t[4] = madd2(y[25], x[4], t[4], C)
	C, t[5] = madd2(y[25], x[5], t[5], C)
	C, t[6] = madd2(y[25], x[6], t[6], C)
	C, t[7] = madd2(y[25], x[7], t[7], C)
	C, t[8] = madd2(y[25], x[8], t[8], C)
	C, t[9] = madd2(y[25], x[9], t[9], C)
	C, t[10] = madd2(y[25], x[10], t[10], C)
	C, t[11] = madd2(y[25], x[11], t[11], C)
	C, t[12] = madd2(y[25], x[12], t[12], C)
	C, t[13] = madd2(y[25], x[13], t[13], C)
	C, t[14] = madd2(y[25], x[14], t[14], C)
	C, t[15] = madd2(y[25], x[15], t[15], C)
	C, t[16] = madd2(y[25], x[16], t[16], C)
	C, t[17] = madd2(y[25], x[17], t[17], C)
	C, t[18] = madd2(y[25], x[18], t[18], C)
	C, t[19] = madd2(y[25], x[19], t[19], C)
	C, t[20] = madd2(y[25], x[20], t[20], C)
	C, t[21] = madd2(y[25], x[21], t[21], C)
	C, t[22] = madd2(y[25], x[22], t[22], C)
	C, t[23] = madd2(y[25], x[23], t[23], C)
	C, t[24] = madd2(y[25], x[24], t[24], C)
	C, t[25] = madd2(y[25], x[25], t[25], C)
	C, t[26] = madd2(y[25], x[26], t[26], C)
	C, t[27] = madd2(y[25], x[27], t[27], C)
	C, t[28] = madd2(y[25], x[28], t[28], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 10549899360055738265

	// -----------------------------------
	// Second loop
	C = madd0(m, 6557797220589329239, t[0])

	C, t[0] = madd2(m, 11417059503450690909, t[1], C)

	C, t[1] = madd2(m, 13704541515672720494, t[2], C)

	C, t[2] = madd2(m, 12806808807567348591, t[3], C)

	C, t[3] = madd2(m, 6275282332124812599, t[4], C)

	C, t[4] = madd2(m, 4405229158191370832, t[5], C)

	C, t[5] = madd2(m, 12168445323765187689, t[6], C)

	C, t[6] = madd2(m, 10671602409567735082, t[7], C)

	C, t[7] = madd2(m, 17193196447219887244, t[8], C)

	C, t[8] = madd2(m, 1968177518022708578, t[9], C)

	C, t[9] = madd2(m, 17810219903765590582, t[10], C)

	C, t[10] = madd2(m, 14425778727015286243, t[11], C)

	C, t[11] = madd2(m, 7046014110413742080, t[12], C)

	C, t[12] = madd2(m, 2030555054815402006, t[13], C)

	C, t[13] = madd2(m, 2364210669068217395, t[14], C)

	C, t[14] = madd2(m, 12900422625108798885, t[15], C)

	C, t[15] = madd2(m, 1930406275202811267, t[16], C)

	C, t[16] = madd2(m, 14290777978257669090, t[17], C)

	C, t[17] = madd2(m, 5932508195835066898, t[18], C)

	C, t[18] = madd2(m, 15850336981219945716, t[19], C)

	C, t[19] = madd2(m, 854831035414738096, t[20], C)

	C, t[20] = madd2(m, 2260305572347853835, t[21], C)

	C, t[21] = madd2(m, 5347326701889135155, t[22], C)

	C, t[22] = madd2(m, 4279901139938023971, t[23], C)

	C, t[23] = madd2(m, 4531757068977706609, t[24], C)

	C, t[24] = madd2(m, 9735365819670254271, t[25], C)

	C, t[25] = madd2(m, 3870673539892635154, t[26], C)

	C, t[26] = madd2(m, 15996650252674570430, t[27], C)

	C, t[27] = madd3(m, 7470438302128334459, t[28], C, t[29])

	t[28], t[29] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[26], x[0], t[0])
	C, t[1] = madd2(y[26], x[1], t[1], C)
	C, t[2] = madd2(y[26], x[2], t[2], C)
	C, t[3] = madd2(y[26], x[3], t[3], C)
	C, t[4] = madd2(y[26], x[4], t[4], C)
	C, t[5] = madd2(y[26], x[5], t[5], C)
	C, t[6] = madd2(y[26], x[6], t[6], C)
	C, t[7] = madd2(y[26], x[7], t[7], C)
	C, t[8] = madd2(y[26], x[8], t[8], C)
	C, t[9] = madd2(y[26], x[9], t[9], C)
	C, t[10] = madd2(y[26], x[10], t[10], C)
	C, t[11] = madd2(y[26], x[11], t[11], C)
	C, t[12] = madd2(y[26], x[12], t[12], C)
	C, t[13] = madd2(y[26], x[13], t[13], C)
	C, t[14] = madd2(y[26], x[14], t[14], C)
	C, t[15] = madd2(y[26], x[15], t[15], C)
	C, t[16] = madd2(y[26], x[16], t[16], C)
	C, t[17] = madd2(y[26], x[17], t[17], C)
	C, t[18] = madd2(y[26], x[18], t[18], C)
	C, t[19] = madd2(y[26], x[19], t[19], C)
	C, t[20] = madd2(y[26], x[20], t[20], C)
	C, t[21] = madd2(y[26], x[21], t[21], C)
	C, t[22] = madd2(y[26], x[22], t[22], C)
	C, t[23] = madd2(y[26], x[23], t[23], C)
	C, t[24] = madd2(y[26], x[24], t[24], C)
	C, t[25] = madd2(y[26], x[25], t[25], C)
	C, t[26] = madd2(y[26], x[26], t[26], C)
	C, t[27] = madd2(y[26], x[27], t[27], C)
	C, t[28] = madd2(y[26], x[28], t[28], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 10549899360055738265

	// -----------------------------------
	// Second loop
	C = madd0(m, 6557797220589329239, t[0])

	C, t[0] = madd2(m, 11417059503450690909, t[1], C)

	C, t[1] = madd2(m, 13704541515672720494, t[2], C)

	C, t[2] = madd2(m, 12806808807567348591, t[3], C)

	C, t[3] = madd2(m, 6275282332124812599, t[4], C)

	C, t[4] = madd2(m, 4405229158191370832, t[5], C)

	C, t[5] = madd2(m, 12168445323765187689, t[6], C)

	C, t[6] = madd2(m, 10671602409567735082, t[7], C)

	C, t[7] = madd2(m, 17193196447219887244, t[8], C)

	C, t[8] = madd2(m, 1968177518022708578, t[9], C)

	C, t[9] = madd2(m, 17810219903765590582, t[10], C)

	C, t[10] = madd2(m, 14425778727015286243, t[11], C)

	C, t[11] = madd2(m, 7046014110413742080, t[12], C)

	C, t[12] = madd2(m, 2030555054815402006, t[13], C)

	C, t[13] = madd2(m, 2364210669068217395, t[14], C)

	C, t[14] = madd2(m, 12900422625108798885, t[15], C)

	C, t[15] = madd2(m, 1930406275202811267, t[16], C)

	C, t[16] = madd2(m, 14290777978257669090, t[17], C)

	C, t[17] = madd2(m, 5932508195835066898, t[18], C)

	C, t[18] = madd2(m, 15850336981219945716, t[19], C)

	C, t[19] = madd2(m, 854831035414738096, t[20], C)

	C, t[20] = madd2(m, 2260305572347853835, t[21], C)

	C, t[21] = madd2(m, 5347326701889135155, t[22], C)

	C, t[22] = madd2(m, 4279901139938023971, t[23], C)

	C, t[23] = madd2(m, 4531757068977706609, t[24], C)

	C, t[24] = madd2(m, 9735365819670254271, t[25], C)

	C, t[25] = madd2(m, 3870673539892635154, t[26], C)

	C, t[26] = madd2(m, 15996650252674570430, t[27], C)

	C, t[27] = madd3(m, 7470438302128334459, t[28], C, t[29])

	t[28], t[29] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[27], x[0], t[0])
	C, t[1] = madd2(y[27], x[1], t[1], C)
	C, t[2] = madd2(y[27], x[2], t[2], C)
	C, t[3] = madd2(y[27], x[3], t[3], C)
	C, t[4] = madd2(y[27], x[4], t[4], C)
	C, t[5] = madd2(y[27], x[5], t[5], C)
	C, t[6] = madd2(y[27], x[6], t[6], C)
	C, t[7] = madd2(y[27], x[7], t[7], C)
	C, t[8] = madd2(y[27], x[8], t[8], C)
	C, t[9] = madd2(y[27], x[9], t[9], C)
	C, t[10] = madd2(y[27], x[10], t[10], C)
	C, t[11] = madd2(y[27], x[11], t[11], C)
	C, t[12] = madd2(y[27], x[12], t[12], C)
	C, t[13] = madd2(y[27], x[13], t[13], C)
	C, t[14] = madd2(y[27], x[14], t[14], C)
	C, t[15] = madd2(y[27], x[15], t[15], C)
	C, t[16] = madd2(y[27], x[16], t[16], C)
	C, t[17] = madd2(y[27], x[17], t[17], C)
	C, t[18] = madd2(y[27], x[18], t[18], C)
	C, t[19] = madd2(y[27], x[19], t[19], C)
	C, t[20] = madd2(y[27], x[20], t[20], C)
	C, t[21] = madd2(y[27], x[21], t[21], C)
	C, t[22] = madd2(y[27], x[22], t[22], C)
	C, t[23] = madd2(y[27], x[23], t[23], C)
	C, t[24] = madd2(y[27], x[24], t[24], C)
	C, t[25] = madd2(y[27], x[25], t[25], C)
	C, t[26] = madd2(y[27], x[26], t[26], C)
	C, t[27] = madd2(y[27], x[27], t[27], C)
	C, t[28] = madd2(y[27], x[28], t[28], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 10549899360055738265

	// -----------------------------------
	// Second loop
	C = madd0(m, 6557797220589329239, t[0])

	C, t[0] = madd2(m, 11417059503450690909, t[1], C)

	C, t[1] = madd2(m, 13704541515672720494, t[2], C)

	C, t[2] = madd2(m, 12806808807567348591, t[3], C)

	C, t[3] = madd2(m, 6275282332124812599, t[4], C)

	C, t[4] = madd2(m, 4405229158191370832, t[5], C)

	C, t[5] = madd2(m, 12168445323765187689, t[6], C)

	C, t[6] = madd2(m, 10671602409567735082, t[7], C)

	C, t[7] = madd2(m, 17193196447219887244, t[8], C)

	C, t[8] = madd2(m, 1968177518022708578, t[9], C)

	C, t[9] = madd2(m, 17810219903765590582, t[10], C)

	C, t[10] = madd2(m, 14425778727015286243, t[11], C)

	C, t[11] = madd2(m, 7046014110413742080, t[12], C)

	C, t[12] = madd2(m, 2030555054815402006, t[13], C)

	C, t[13] = madd2(m, 2364210669068217395, t[14], C)

	C, t[14] = madd2(m, 12900422625108798885, t[15], C)

	C, t[15] = madd2(m, 1930406275202811267, t[16], C)

	C, t[16] = madd2(m, 14290777978257669090, t[17], C)

	C, t[17] = madd2(m, 5932508195835066898, t[18], C)

	C, t[18] = madd2(m, 15850336981219945716, t[19], C)

	C, t[19] = madd2(m, 854831035414738096, t[20], C)

	C, t[20] = madd2(m, 2260305572347853835, t[21], C)

	C, t[21] = madd2(m, 5347326701889135155, t[22], C)

	C, t[22] = madd2(m, 4279901139938023971, t[23], C)

	C, t[23] = madd2(m, 4531757068977706609, t[24], C)

	C, t[24] = madd2(m, 9735365819670254271, t[25], C)

	C, t[25] = madd2(m, 3870673539892635154, t[26], C)

	C, t[26] = madd2(m, 15996650252674570430, t[27], C)

	C, t[27] = madd3(m, 7470438302128334459, t[28], C, t[29])

	t[28], t[29] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[28], x[0], t[0])
	C, t[1] = madd2(y[28], x[1], t[1], C)
	C, t[2] = madd2(y[28], x[2], t[2], C)
	C, t[3] = madd2(y[28], x[3], t[3], C)
	C, t[4] = madd2(y[28], x[4], t[4], C)
	C, t[5] = madd2(y[28], x[5], t[5], C)
	C, t[6] = madd2(y[28], x[6], t[6], C)
	C, t[7] = madd2(y[28], x[7], t[7], C)
	C, t[8] = madd2(y[28], x[8], t[8], C)
	C, t[9] = madd2(y[28], x[9], t[9], C)
	C, t[10] = madd2(y[28], x[10], t[10], C)
	C, t[11] = madd2(y[28], x[11], t[11], C)
	C, t[12] = madd2(y[28], x[12], t[12], C)
	C, t[13] = madd2(y[28], x[13], t[13], C)
	C, t[14] = madd2(y[28], x[14], t[14], C)
	C, t[15] = madd2(y[28], x[15], t[15], C)
	C, t[16] = madd2(y[28], x[16], t[16], C)
	C, t[17] = madd2(y[28], x[17], t[17], C)
	C, t[18] = madd2(y[28], x[18], t[18], C)
	C, t[19] = madd2(y[28], x[19], t[19], C)
	C, t[20] = madd2(y[28], x[20], t[20], C)
	C, t[21] = madd2(y[28], x[21], t[21], C)
	C, t[22] = madd2(y[28], x[22], t[22], C)
	C, t[23] = madd2(y[28], x[23], t[23], C)
	C, t[24] = madd2(y[28], x[24], t[24], C)
	C, t[25] = madd2(y[28], x[25], t[25], C)
	C, t[26] = madd2(y[28], x[26], t[26], C)
	C, t[27] = madd2(y[28], x[27], t[27], C)
	C, t[28] = madd2(y[28], x[28], t[28], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 10549899360055738265

	// -----------------------------------
	// Second loop
	C = madd0(m, 6557797220589329239, t[0])

	C, t[0] = madd2(m, 11417059503450690909, t[1], C)

	C, t[1] = madd2(m, 13704541515672720494, t[2], C)

	C, t[2] = madd2(m, 12806808807567348591, t[3], C)

	C, t[3] = madd2(m, 6275282332124812599, t[4], C)

	C, t[4] = madd2(m, 4405229158191370832, t[5], C)

	C, t[5] = madd2(m, 12168445323765187689, t[6], C)

	C, t[6] = madd2(m, 10671602409567735082, t[7], C)

	C, t[7] = madd2(m, 17193196447219887244, t[8], C)

	C, t[8] = madd2(m, 1968177518022708578, t[9], C)

	C, t[9] = madd2(m, 17810219903765590582, t[10], C)

	C, t[10] = madd2(m, 14425778727015286243, t[11], C)

	C, t[11] = madd2(m, 7046014110413742080, t[12], C)

	C, t[12] = madd2(m, 2030555054815402006, t[13], C)

	C, t[13] = madd2(m, 2364210669068217395, t[14], C)

	C, t[14] = madd2(m, 12900422625108798885, t[15], C)

	C, t[15] = madd2(m, 1930406275202811267, t[16], C)

	C, t[16] = madd2(m, 14290777978257669090, t[17], C)

	C, t[17] = madd2(m, 5932508195835066898, t[18], C)

	C, t[18] = madd2(m, 15850336981219945716, t[19], C)

	C, t[19] = madd2(m, 854831035414738096, t[20], C)

	C, t[20] = madd2(m, 2260305572347853835, t[21], C)

	C, t[21] = madd2(m, 5347326701889135155, t[22], C)

	C, t[22] = madd2(m, 4279901139938023971, t[23], C)

	C, t[23] = madd2(m, 4531757068977706609, t[24], C)

	C, t[24] = madd2(m, 9735365819670254271, t[25], C)

	C, t[25] = madd2(m, 3870673539892635154, t[26], C)

	C, t[26] = madd2(m, 15996650252674570430, t[27], C)

	C, t[27] = madd3(m, 7470438302128334459, t[28], C, t[29])

	t[28], t[29] = bits.Add64(D, C, 0)

	if t[29] != 0 {
		// we need to reduce, we have a result on 30 words
		var b uint64
		z[0], b = bits.Sub64(t[0], 6557797220589329239, 0)
		z[1], b = bits.Sub64(t[1], 11417059503450690909, b)
		z[2], b = bits.Sub64(t[2], 13704541515672720494, b)
		z[3], b = bits.Sub64(t[3], 12806808807567348591, b)
		z[4], b = bits.Sub64(t[4], 6275282332124812599, b)
		z[5], b = bits.Sub64(t[5], 4405229158191370832, b)
		z[6], b = bits.Sub64(t[6], 12168445323765187689, b)
		z[7], b = bits.Sub64(t[7], 10671602409567735082, b)
		z[8], b = bits.Sub64(t[8], 17193196447219887244, b)
		z[9], b = bits.Sub64(t[9], 1968177518022708578, b)
		z[10], b = bits.Sub64(t[10], 17810219903765590582, b)
		z[11], b = bits.Sub64(t[11], 14425778727015286243, b)
		z[12], b = bits.Sub64(t[12], 7046014110413742080, b)
		z[13], b = bits.Sub64(t[13], 2030555054815402006, b)
		z[14], b = bits.Sub64(t[14], 2364210669068217395, b)
		z[15], b = bits.Sub64(t[15], 12900422625108798885, b)
		z[16], b = bits.Sub64(t[16], 1930406275202811267, b)
		z[17], b = bits.Sub64(t[17], 14290777978257669090, b)
		z[18], b = bits.Sub64(t[18], 5932508195835066898, b)
		z[19], b = bits.Sub64(t[19], 15850336981219945716, b)
		z[20], b = bits.Sub64(t[20], 854831035414738096, b)
		z[21], b = bits.Sub64(t[21], 2260305572347853835, b)
		z[22], b = bits.Sub64(t[22], 5347326701889135155, b)
		z[23], b = bits.Sub64(t[23], 4279901139938023971, b)
		z[24], b = bits.Sub64(t[24], 4531757068977706609, b)
		z[25], b = bits.Sub64(t[25], 9735365819670254271, b)
		z[26], b = bits.Sub64(t[26], 3870673539892635154, b)
		z[27], b = bits.Sub64(t[27], 15996650252674570430, b)
		z[28], _ = bits.Sub64(t[28], 7470438302128334459, b)
		return z
	}

	// copy t into z
	z[0] = t[0]
	z[1] = t[1]
	z[2] = t[2]
	z[3] = t[3]
	z[4] = t[4]
	z[5] = t[5]
	z[6] = t[6]
	z[7] = t[7]
	z[8] = t[8]
	z[9] = t[9]
	z[10] = t[10]
	z[11] = t[11]
	z[12] = t[12]
	z[13] = t[13]
	z[14] = t[14]
	z[15] = t[15]
	z[16] = t[16]
	z[17] = t[17]
	z[18] = t[18]
	z[19] = t[19]
	z[20] = t[20]
	z[21] = t[21]
	z[22] = t[22]
	z[23] = t[23]
	z[24] = t[24]
	z[25] = t[25]
	z[26] = t[26]
	z[27] = t[27]
	z[28] = t[28]

	// if z > q --> z -= q
	// note: this is NOT constant time
	if !(z[28] < 7470438302128334459 || (z[28] == 7470438302128334459 && (z[27] < 15996650252674570430 || (z[27] == 15996650252674570430 && (z[26] < 3870673539892635154 || (z[26] == 3870673539892635154 && (z[25] < 9735365819670254271 || (z[25] == 9735365819670254271 && (z[24] < 4531757068977706609 || (z[24] == 4531757068977706609 && (z[23] < 4279901139938023971 || (z[23] == 4279901139938023971 && (z[22] < 5347326701889135155 || (z[22] == 5347326701889135155 && (z[21] < 2260305572347853835 || (z[21] == 2260305572347853835 && (z[20] < 854831035414738096 || (z[20] == 854831035414738096 && (z[19] < 15850336981219945716 || (z[19] == 15850336981219945716 && (z[18] < 5932508195835066898 || (z[18] == 5932508195835066898 && (z[17] < 14290777978257669090 || (z[17] == 14290777978257669090 && (z[16] < 1930406275202811267 || (z[16] == 1930406275202811267 && (z[15] < 12900422625108798885 || (z[15] == 12900422625108798885 && (z[14] < 2364210669068217395 || (z[14] == 2364210669068217395 && (z[13] < 2030555054815402006 || (z[13] == 2030555054815402006 && (z[12] < 7046014110413742080 || (z[12] == 7046014110413742080 && (z[11] < 14425778727015286243 || (z[11] == 14425778727015286243 && (z[10] < 17810219903765590582 || (z[10] == 17810219903765590582 && (z[9] < 1968177518022708578 || (z[9] == 1968177518022708578 && (z[8] < 17193196447219887244 || (z[8] == 17193196447219887244 && (z[7] < 10671602409567735082 || (z[7] == 10671602409567735082 && (z[6] < 12168445323765187689 || (z[6] == 12168445323765187689 && (z[5] < 4405229158191370832 || (z[5] == 4405229158191370832 && (z[4] < 6275282332124812599 || (z[4] == 6275282332124812599 && (z[3] < 12806808807567348591 || (z[3] == 12806808807567348591 && (z[2] < 13704541515672720494 || (z[2] == 13704541515672720494 && (z[1] < 11417059503450690909 || (z[1] == 11417059503450690909 && (z[0] < 6557797220589329239))))))))))))))))))))))))))))))))))))))))))))))))))))))))) {
		var b uint64
		z[0], b = bits.Sub64(z[0], 6557797220589329239, 0)
		z[1], b = bits.Sub64(z[1], 11417059503450690909, b)
		z[2], b = bits.Sub64(z[2], 13704541515672720494, b)
		z[3], b = bits.Sub64(z[3], 12806808807567348591, b)
		z[4], b = bits.Sub64(z[4], 6275282332124812599, b)
		z[5], b = bits.Sub64(z[5], 4405229158191370832, b)
		z[6], b = bits.Sub64(z[6], 12168445323765187689, b)
		z[7], b = bits.Sub64(z[7], 10671602409567735082, b)
		z[8], b = bits.Sub64(z[8], 17193196447219887244, b)
		z[9], b = bits.Sub64(z[9], 1968177518022708578, b)
		z[10], b = bits.Sub64(z[10], 17810219903765590582, b)
		z[11], b = bits.Sub64(z[11], 14425778727015286243, b)
		z[12], b = bits.Sub64(z[12], 7046014110413742080, b)
		z[13], b = bits.Sub64(z[13], 2030555054815402006, b)
		z[14], b = bits.Sub64(z[14], 2364210669068217395, b)
		z[15], b = bits.Sub64(z[15], 12900422625108798885, b)
		z[16], b = bits.Sub64(z[16], 1930406275202811267, b)
		z[17], b = bits.Sub64(z[17], 14290777978257669090, b)
		z[18], b = bits.Sub64(z[18], 5932508195835066898, b)
		z[19], b = bits.Sub64(z[19], 15850336981219945716, b)
		z[20], b = bits.Sub64(z[20], 854831035414738096, b)
		z[21], b = bits.Sub64(z[21], 2260305572347853835, b)
		z[22], b = bits.Sub64(z[22], 5347326701889135155, b)
		z[23], b = bits.Sub64(z[23], 4279901139938023971, b)
		z[24], b = bits.Sub64(z[24], 4531757068977706609, b)
		z[25], b = bits.Sub64(z[25], 9735365819670254271, b)
		z[26], b = bits.Sub64(z[26], 3870673539892635154, b)
		z[27], b = bits.Sub64(z[27], 15996650252674570430, b)
		z[28], _ = bits.Sub64(z[28], 7470438302128334459, b)
	}
	return z
}

// MulAssign z = z * x mod q
func (z *Element29) MulAssign(x *Element29) *Element29 {

	var t [30]uint64
	var D uint64
	var m, C uint64
	// -----------------------------------
	// First loop

	C, t[0] = bits.Mul64(x[0], z[0])
	C, t[1] = madd1(x[0], z[1], C)
	C, t[2] = madd1(x[0], z[2], C)
	C, t[3] = madd1(x[0], z[3], C)
	C, t[4] = madd1(x[0], z[4], C)
	C, t[5] = madd1(x[0], z[5], C)
	C, t[6] = madd1(x[0], z[6], C)
	C, t[7] = madd1(x[0], z[7], C)
	C, t[8] = madd1(x[0], z[8], C)
	C, t[9] = madd1(x[0], z[9], C)
	C, t[10] = madd1(x[0], z[10], C)
	C, t[11] = madd1(x[0], z[11], C)
	C, t[12] = madd1(x[0], z[12], C)
	C, t[13] = madd1(x[0], z[13], C)
	C, t[14] = madd1(x[0], z[14], C)
	C, t[15] = madd1(x[0], z[15], C)
	C, t[16] = madd1(x[0], z[16], C)
	C, t[17] = madd1(x[0], z[17], C)
	C, t[18] = madd1(x[0], z[18], C)
	C, t[19] = madd1(x[0], z[19], C)
	C, t[20] = madd1(x[0], z[20], C)
	C, t[21] = madd1(x[0], z[21], C)
	C, t[22] = madd1(x[0], z[22], C)
	C, t[23] = madd1(x[0], z[23], C)
	C, t[24] = madd1(x[0], z[24], C)
	C, t[25] = madd1(x[0], z[25], C)
	C, t[26] = madd1(x[0], z[26], C)
	C, t[27] = madd1(x[0], z[27], C)
	C, t[28] = madd1(x[0], z[28], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 10549899360055738265

	// -----------------------------------
	// Second loop
	C = madd0(m, 6557797220589329239, t[0])

	C, t[0] = madd2(m, 11417059503450690909, t[1], C)

	C, t[1] = madd2(m, 13704541515672720494, t[2], C)

	C, t[2] = madd2(m, 12806808807567348591, t[3], C)

	C, t[3] = madd2(m, 6275282332124812599, t[4], C)

	C, t[4] = madd2(m, 4405229158191370832, t[5], C)

	C, t[5] = madd2(m, 12168445323765187689, t[6], C)

	C, t[6] = madd2(m, 10671602409567735082, t[7], C)

	C, t[7] = madd2(m, 17193196447219887244, t[8], C)

	C, t[8] = madd2(m, 1968177518022708578, t[9], C)

	C, t[9] = madd2(m, 17810219903765590582, t[10], C)

	C, t[10] = madd2(m, 14425778727015286243, t[11], C)

	C, t[11] = madd2(m, 7046014110413742080, t[12], C)

	C, t[12] = madd2(m, 2030555054815402006, t[13], C)

	C, t[13] = madd2(m, 2364210669068217395, t[14], C)

	C, t[14] = madd2(m, 12900422625108798885, t[15], C)

	C, t[15] = madd2(m, 1930406275202811267, t[16], C)

	C, t[16] = madd2(m, 14290777978257669090, t[17], C)

	C, t[17] = madd2(m, 5932508195835066898, t[18], C)

	C, t[18] = madd2(m, 15850336981219945716, t[19], C)

	C, t[19] = madd2(m, 854831035414738096, t[20], C)

	C, t[20] = madd2(m, 2260305572347853835, t[21], C)

	C, t[21] = madd2(m, 5347326701889135155, t[22], C)

	C, t[22] = madd2(m, 4279901139938023971, t[23], C)

	C, t[23] = madd2(m, 4531757068977706609, t[24], C)

	C, t[24] = madd2(m, 9735365819670254271, t[25], C)

	C, t[25] = madd2(m, 3870673539892635154, t[26], C)

	C, t[26] = madd2(m, 15996650252674570430, t[27], C)

	C, t[27] = madd3(m, 7470438302128334459, t[28], C, t[29])

	t[28], t[29] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[1], z[0], t[0])
	C, t[1] = madd2(x[1], z[1], t[1], C)
	C, t[2] = madd2(x[1], z[2], t[2], C)
	C, t[3] = madd2(x[1], z[3], t[3], C)
	C, t[4] = madd2(x[1], z[4], t[4], C)
	C, t[5] = madd2(x[1], z[5], t[5], C)
	C, t[6] = madd2(x[1], z[6], t[6], C)
	C, t[7] = madd2(x[1], z[7], t[7], C)
	C, t[8] = madd2(x[1], z[8], t[8], C)
	C, t[9] = madd2(x[1], z[9], t[9], C)
	C, t[10] = madd2(x[1], z[10], t[10], C)
	C, t[11] = madd2(x[1], z[11], t[11], C)
	C, t[12] = madd2(x[1], z[12], t[12], C)
	C, t[13] = madd2(x[1], z[13], t[13], C)
	C, t[14] = madd2(x[1], z[14], t[14], C)
	C, t[15] = madd2(x[1], z[15], t[15], C)
	C, t[16] = madd2(x[1], z[16], t[16], C)
	C, t[17] = madd2(x[1], z[17], t[17], C)
	C, t[18] = madd2(x[1], z[18], t[18], C)
	C, t[19] = madd2(x[1], z[19], t[19], C)
	C, t[20] = madd2(x[1], z[20], t[20], C)
	C, t[21] = madd2(x[1], z[21], t[21], C)
	C, t[22] = madd2(x[1], z[22], t[22], C)
	C, t[23] = madd2(x[1], z[23], t[23], C)
	C, t[24] = madd2(x[1], z[24], t[24], C)
	C, t[25] = madd2(x[1], z[25], t[25], C)
	C, t[26] = madd2(x[1], z[26], t[26], C)
	C, t[27] = madd2(x[1], z[27], t[27], C)
	C, t[28] = madd2(x[1], z[28], t[28], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 10549899360055738265

	// -----------------------------------
	// Second loop
	C = madd0(m, 6557797220589329239, t[0])

	C, t[0] = madd2(m, 11417059503450690909, t[1], C)

	C, t[1] = madd2(m, 13704541515672720494, t[2], C)

	C, t[2] = madd2(m, 12806808807567348591, t[3], C)

	C, t[3] = madd2(m, 6275282332124812599, t[4], C)

	C, t[4] = madd2(m, 4405229158191370832, t[5], C)

	C, t[5] = madd2(m, 12168445323765187689, t[6], C)

	C, t[6] = madd2(m, 10671602409567735082, t[7], C)

	C, t[7] = madd2(m, 17193196447219887244, t[8], C)

	C, t[8] = madd2(m, 1968177518022708578, t[9], C)

	C, t[9] = madd2(m, 17810219903765590582, t[10], C)

	C, t[10] = madd2(m, 14425778727015286243, t[11], C)

	C, t[11] = madd2(m, 7046014110413742080, t[12], C)

	C, t[12] = madd2(m, 2030555054815402006, t[13], C)

	C, t[13] = madd2(m, 2364210669068217395, t[14], C)

	C, t[14] = madd2(m, 12900422625108798885, t[15], C)

	C, t[15] = madd2(m, 1930406275202811267, t[16], C)

	C, t[16] = madd2(m, 14290777978257669090, t[17], C)

	C, t[17] = madd2(m, 5932508195835066898, t[18], C)

	C, t[18] = madd2(m, 15850336981219945716, t[19], C)

	C, t[19] = madd2(m, 854831035414738096, t[20], C)

	C, t[20] = madd2(m, 2260305572347853835, t[21], C)

	C, t[21] = madd2(m, 5347326701889135155, t[22], C)

	C, t[22] = madd2(m, 4279901139938023971, t[23], C)

	C, t[23] = madd2(m, 4531757068977706609, t[24], C)

	C, t[24] = madd2(m, 9735365819670254271, t[25], C)

	C, t[25] = madd2(m, 3870673539892635154, t[26], C)

	C, t[26] = madd2(m, 15996650252674570430, t[27], C)

	C, t[27] = madd3(m, 7470438302128334459, t[28], C, t[29])

	t[28], t[29] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[2], z[0], t[0])
	C, t[1] = madd2(x[2], z[1], t[1], C)
	C, t[2] = madd2(x[2], z[2], t[2], C)
	C, t[3] = madd2(x[2], z[3], t[3], C)
	C, t[4] = madd2(x[2], z[4], t[4], C)
	C, t[5] = madd2(x[2], z[5], t[5], C)
	C, t[6] = madd2(x[2], z[6], t[6], C)
	C, t[7] = madd2(x[2], z[7], t[7], C)
	C, t[8] = madd2(x[2], z[8], t[8], C)
	C, t[9] = madd2(x[2], z[9], t[9], C)
	C, t[10] = madd2(x[2], z[10], t[10], C)
	C, t[11] = madd2(x[2], z[11], t[11], C)
	C, t[12] = madd2(x[2], z[12], t[12], C)
	C, t[13] = madd2(x[2], z[13], t[13], C)
	C, t[14] = madd2(x[2], z[14], t[14], C)
	C, t[15] = madd2(x[2], z[15], t[15], C)
	C, t[16] = madd2(x[2], z[16], t[16], C)
	C, t[17] = madd2(x[2], z[17], t[17], C)
	C, t[18] = madd2(x[2], z[18], t[18], C)
	C, t[19] = madd2(x[2], z[19], t[19], C)
	C, t[20] = madd2(x[2], z[20], t[20], C)
	C, t[21] = madd2(x[2], z[21], t[21], C)
	C, t[22] = madd2(x[2], z[22], t[22], C)
	C, t[23] = madd2(x[2], z[23], t[23], C)
	C, t[24] = madd2(x[2], z[24], t[24], C)
	C, t[25] = madd2(x[2], z[25], t[25], C)
	C, t[26] = madd2(x[2], z[26], t[26], C)
	C, t[27] = madd2(x[2], z[27], t[27], C)
	C, t[28] = madd2(x[2], z[28], t[28], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 10549899360055738265

	// -----------------------------------
	// Second loop
	C = madd0(m, 6557797220589329239, t[0])

	C, t[0] = madd2(m, 11417059503450690909, t[1], C)

	C, t[1] = madd2(m, 13704541515672720494, t[2], C)

	C, t[2] = madd2(m, 12806808807567348591, t[3], C)

	C, t[3] = madd2(m, 6275282332124812599, t[4], C)

	C, t[4] = madd2(m, 4405229158191370832, t[5], C)

	C, t[5] = madd2(m, 12168445323765187689, t[6], C)

	C, t[6] = madd2(m, 10671602409567735082, t[7], C)

	C, t[7] = madd2(m, 17193196447219887244, t[8], C)

	C, t[8] = madd2(m, 1968177518022708578, t[9], C)

	C, t[9] = madd2(m, 17810219903765590582, t[10], C)

	C, t[10] = madd2(m, 14425778727015286243, t[11], C)

	C, t[11] = madd2(m, 7046014110413742080, t[12], C)

	C, t[12] = madd2(m, 2030555054815402006, t[13], C)

	C, t[13] = madd2(m, 2364210669068217395, t[14], C)

	C, t[14] = madd2(m, 12900422625108798885, t[15], C)

	C, t[15] = madd2(m, 1930406275202811267, t[16], C)

	C, t[16] = madd2(m, 14290777978257669090, t[17], C)

	C, t[17] = madd2(m, 5932508195835066898, t[18], C)

	C, t[18] = madd2(m, 15850336981219945716, t[19], C)

	C, t[19] = madd2(m, 854831035414738096, t[20], C)

	C, t[20] = madd2(m, 2260305572347853835, t[21], C)

	C, t[21] = madd2(m, 5347326701889135155, t[22], C)

	C, t[22] = madd2(m, 4279901139938023971, t[23], C)

	C, t[23] = madd2(m, 4531757068977706609, t[24], C)

	C, t[24] = madd2(m, 9735365819670254271, t[25], C)

	C, t[25] = madd2(m, 3870673539892635154, t[26], C)

	C, t[26] = madd2(m, 15996650252674570430, t[27], C)

	C, t[27] = madd3(m, 7470438302128334459, t[28], C, t[29])

	t[28], t[29] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[3], z[0], t[0])
	C, t[1] = madd2(x[3], z[1], t[1], C)
	C, t[2] = madd2(x[3], z[2], t[2], C)
	C, t[3] = madd2(x[3], z[3], t[3], C)
	C, t[4] = madd2(x[3], z[4], t[4], C)
	C, t[5] = madd2(x[3], z[5], t[5], C)
	C, t[6] = madd2(x[3], z[6], t[6], C)
	C, t[7] = madd2(x[3], z[7], t[7], C)
	C, t[8] = madd2(x[3], z[8], t[8], C)
	C, t[9] = madd2(x[3], z[9], t[9], C)
	C, t[10] = madd2(x[3], z[10], t[10], C)
	C, t[11] = madd2(x[3], z[11], t[11], C)
	C, t[12] = madd2(x[3], z[12], t[12], C)
	C, t[13] = madd2(x[3], z[13], t[13], C)
	C, t[14] = madd2(x[3], z[14], t[14], C)
	C, t[15] = madd2(x[3], z[15], t[15], C)
	C, t[16] = madd2(x[3], z[16], t[16], C)
	C, t[17] = madd2(x[3], z[17], t[17], C)
	C, t[18] = madd2(x[3], z[18], t[18], C)
	C, t[19] = madd2(x[3], z[19], t[19], C)
	C, t[20] = madd2(x[3], z[20], t[20], C)
	C, t[21] = madd2(x[3], z[21], t[21], C)
	C, t[22] = madd2(x[3], z[22], t[22], C)
	C, t[23] = madd2(x[3], z[23], t[23], C)
	C, t[24] = madd2(x[3], z[24], t[24], C)
	C, t[25] = madd2(x[3], z[25], t[25], C)
	C, t[26] = madd2(x[3], z[26], t[26], C)
	C, t[27] = madd2(x[3], z[27], t[27], C)
	C, t[28] = madd2(x[3], z[28], t[28], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 10549899360055738265

	// -----------------------------------
	// Second loop
	C = madd0(m, 6557797220589329239, t[0])

	C, t[0] = madd2(m, 11417059503450690909, t[1], C)

	C, t[1] = madd2(m, 13704541515672720494, t[2], C)

	C, t[2] = madd2(m, 12806808807567348591, t[3], C)

	C, t[3] = madd2(m, 6275282332124812599, t[4], C)

	C, t[4] = madd2(m, 4405229158191370832, t[5], C)

	C, t[5] = madd2(m, 12168445323765187689, t[6], C)

	C, t[6] = madd2(m, 10671602409567735082, t[7], C)

	C, t[7] = madd2(m, 17193196447219887244, t[8], C)

	C, t[8] = madd2(m, 1968177518022708578, t[9], C)

	C, t[9] = madd2(m, 17810219903765590582, t[10], C)

	C, t[10] = madd2(m, 14425778727015286243, t[11], C)

	C, t[11] = madd2(m, 7046014110413742080, t[12], C)

	C, t[12] = madd2(m, 2030555054815402006, t[13], C)

	C, t[13] = madd2(m, 2364210669068217395, t[14], C)

	C, t[14] = madd2(m, 12900422625108798885, t[15], C)

	C, t[15] = madd2(m, 1930406275202811267, t[16], C)

	C, t[16] = madd2(m, 14290777978257669090, t[17], C)

	C, t[17] = madd2(m, 5932508195835066898, t[18], C)

	C, t[18] = madd2(m, 15850336981219945716, t[19], C)

	C, t[19] = madd2(m, 854831035414738096, t[20], C)

	C, t[20] = madd2(m, 2260305572347853835, t[21], C)

	C, t[21] = madd2(m, 5347326701889135155, t[22], C)

	C, t[22] = madd2(m, 4279901139938023971, t[23], C)

	C, t[23] = madd2(m, 4531757068977706609, t[24], C)

	C, t[24] = madd2(m, 9735365819670254271, t[25], C)

	C, t[25] = madd2(m, 3870673539892635154, t[26], C)

	C, t[26] = madd2(m, 15996650252674570430, t[27], C)

	C, t[27] = madd3(m, 7470438302128334459, t[28], C, t[29])

	t[28], t[29] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[4], z[0], t[0])
	C, t[1] = madd2(x[4], z[1], t[1], C)
	C, t[2] = madd2(x[4], z[2], t[2], C)
	C, t[3] = madd2(x[4], z[3], t[3], C)
	C, t[4] = madd2(x[4], z[4], t[4], C)
	C, t[5] = madd2(x[4], z[5], t[5], C)
	C, t[6] = madd2(x[4], z[6], t[6], C)
	C, t[7] = madd2(x[4], z[7], t[7], C)
	C, t[8] = madd2(x[4], z[8], t[8], C)
	C, t[9] = madd2(x[4], z[9], t[9], C)
	C, t[10] = madd2(x[4], z[10], t[10], C)
	C, t[11] = madd2(x[4], z[11], t[11], C)
	C, t[12] = madd2(x[4], z[12], t[12], C)
	C, t[13] = madd2(x[4], z[13], t[13], C)
	C, t[14] = madd2(x[4], z[14], t[14], C)
	C, t[15] = madd2(x[4], z[15], t[15], C)
	C, t[16] = madd2(x[4], z[16], t[16], C)
	C, t[17] = madd2(x[4], z[17], t[17], C)
	C, t[18] = madd2(x[4], z[18], t[18], C)
	C, t[19] = madd2(x[4], z[19], t[19], C)
	C, t[20] = madd2(x[4], z[20], t[20], C)
	C, t[21] = madd2(x[4], z[21], t[21], C)
	C, t[22] = madd2(x[4], z[22], t[22], C)
	C, t[23] = madd2(x[4], z[23], t[23], C)
	C, t[24] = madd2(x[4], z[24], t[24], C)
	C, t[25] = madd2(x[4], z[25], t[25], C)
	C, t[26] = madd2(x[4], z[26], t[26], C)
	C, t[27] = madd2(x[4], z[27], t[27], C)
	C, t[28] = madd2(x[4], z[28], t[28], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 10549899360055738265

	// -----------------------------------
	// Second loop
	C = madd0(m, 6557797220589329239, t[0])

	C, t[0] = madd2(m, 11417059503450690909, t[1], C)

	C, t[1] = madd2(m, 13704541515672720494, t[2], C)

	C, t[2] = madd2(m, 12806808807567348591, t[3], C)

	C, t[3] = madd2(m, 6275282332124812599, t[4], C)

	C, t[4] = madd2(m, 4405229158191370832, t[5], C)

	C, t[5] = madd2(m, 12168445323765187689, t[6], C)

	C, t[6] = madd2(m, 10671602409567735082, t[7], C)

	C, t[7] = madd2(m, 17193196447219887244, t[8], C)

	C, t[8] = madd2(m, 1968177518022708578, t[9], C)

	C, t[9] = madd2(m, 17810219903765590582, t[10], C)

	C, t[10] = madd2(m, 14425778727015286243, t[11], C)

	C, t[11] = madd2(m, 7046014110413742080, t[12], C)

	C, t[12] = madd2(m, 2030555054815402006, t[13], C)

	C, t[13] = madd2(m, 2364210669068217395, t[14], C)

	C, t[14] = madd2(m, 12900422625108798885, t[15], C)

	C, t[15] = madd2(m, 1930406275202811267, t[16], C)

	C, t[16] = madd2(m, 14290777978257669090, t[17], C)

	C, t[17] = madd2(m, 5932508195835066898, t[18], C)

	C, t[18] = madd2(m, 15850336981219945716, t[19], C)

	C, t[19] = madd2(m, 854831035414738096, t[20], C)

	C, t[20] = madd2(m, 2260305572347853835, t[21], C)

	C, t[21] = madd2(m, 5347326701889135155, t[22], C)

	C, t[22] = madd2(m, 4279901139938023971, t[23], C)

	C, t[23] = madd2(m, 4531757068977706609, t[24], C)

	C, t[24] = madd2(m, 9735365819670254271, t[25], C)

	C, t[25] = madd2(m, 3870673539892635154, t[26], C)

	C, t[26] = madd2(m, 15996650252674570430, t[27], C)

	C, t[27] = madd3(m, 7470438302128334459, t[28], C, t[29])

	t[28], t[29] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[5], z[0], t[0])
	C, t[1] = madd2(x[5], z[1], t[1], C)
	C, t[2] = madd2(x[5], z[2], t[2], C)
	C, t[3] = madd2(x[5], z[3], t[3], C)
	C, t[4] = madd2(x[5], z[4], t[4], C)
	C, t[5] = madd2(x[5], z[5], t[5], C)
	C, t[6] = madd2(x[5], z[6], t[6], C)
	C, t[7] = madd2(x[5], z[7], t[7], C)
	C, t[8] = madd2(x[5], z[8], t[8], C)
	C, t[9] = madd2(x[5], z[9], t[9], C)
	C, t[10] = madd2(x[5], z[10], t[10], C)
	C, t[11] = madd2(x[5], z[11], t[11], C)
	C, t[12] = madd2(x[5], z[12], t[12], C)
	C, t[13] = madd2(x[5], z[13], t[13], C)
	C, t[14] = madd2(x[5], z[14], t[14], C)
	C, t[15] = madd2(x[5], z[15], t[15], C)
	C, t[16] = madd2(x[5], z[16], t[16], C)
	C, t[17] = madd2(x[5], z[17], t[17], C)
	C, t[18] = madd2(x[5], z[18], t[18], C)
	C, t[19] = madd2(x[5], z[19], t[19], C)
	C, t[20] = madd2(x[5], z[20], t[20], C)
	C, t[21] = madd2(x[5], z[21], t[21], C)
	C, t[22] = madd2(x[5], z[22], t[22], C)
	C, t[23] = madd2(x[5], z[23], t[23], C)
	C, t[24] = madd2(x[5], z[24], t[24], C)
	C, t[25] = madd2(x[5], z[25], t[25], C)
	C, t[26] = madd2(x[5], z[26], t[26], C)
	C, t[27] = madd2(x[5], z[27], t[27], C)
	C, t[28] = madd2(x[5], z[28], t[28], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 10549899360055738265

	// -----------------------------------
	// Second loop
	C = madd0(m, 6557797220589329239, t[0])

	C, t[0] = madd2(m, 11417059503450690909, t[1], C)

	C, t[1] = madd2(m, 13704541515672720494, t[2], C)

	C, t[2] = madd2(m, 12806808807567348591, t[3], C)

	C, t[3] = madd2(m, 6275282332124812599, t[4], C)

	C, t[4] = madd2(m, 4405229158191370832, t[5], C)

	C, t[5] = madd2(m, 12168445323765187689, t[6], C)

	C, t[6] = madd2(m, 10671602409567735082, t[7], C)

	C, t[7] = madd2(m, 17193196447219887244, t[8], C)

	C, t[8] = madd2(m, 1968177518022708578, t[9], C)

	C, t[9] = madd2(m, 17810219903765590582, t[10], C)

	C, t[10] = madd2(m, 14425778727015286243, t[11], C)

	C, t[11] = madd2(m, 7046014110413742080, t[12], C)

	C, t[12] = madd2(m, 2030555054815402006, t[13], C)

	C, t[13] = madd2(m, 2364210669068217395, t[14], C)

	C, t[14] = madd2(m, 12900422625108798885, t[15], C)

	C, t[15] = madd2(m, 1930406275202811267, t[16], C)

	C, t[16] = madd2(m, 14290777978257669090, t[17], C)

	C, t[17] = madd2(m, 5932508195835066898, t[18], C)

	C, t[18] = madd2(m, 15850336981219945716, t[19], C)

	C, t[19] = madd2(m, 854831035414738096, t[20], C)

	C, t[20] = madd2(m, 2260305572347853835, t[21], C)

	C, t[21] = madd2(m, 5347326701889135155, t[22], C)

	C, t[22] = madd2(m, 4279901139938023971, t[23], C)

	C, t[23] = madd2(m, 4531757068977706609, t[24], C)

	C, t[24] = madd2(m, 9735365819670254271, t[25], C)

	C, t[25] = madd2(m, 3870673539892635154, t[26], C)

	C, t[26] = madd2(m, 15996650252674570430, t[27], C)

	C, t[27] = madd3(m, 7470438302128334459, t[28], C, t[29])

	t[28], t[29] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[6], z[0], t[0])
	C, t[1] = madd2(x[6], z[1], t[1], C)
	C, t[2] = madd2(x[6], z[2], t[2], C)
	C, t[3] = madd2(x[6], z[3], t[3], C)
	C, t[4] = madd2(x[6], z[4], t[4], C)
	C, t[5] = madd2(x[6], z[5], t[5], C)
	C, t[6] = madd2(x[6], z[6], t[6], C)
	C, t[7] = madd2(x[6], z[7], t[7], C)
	C, t[8] = madd2(x[6], z[8], t[8], C)
	C, t[9] = madd2(x[6], z[9], t[9], C)
	C, t[10] = madd2(x[6], z[10], t[10], C)
	C, t[11] = madd2(x[6], z[11], t[11], C)
	C, t[12] = madd2(x[6], z[12], t[12], C)
	C, t[13] = madd2(x[6], z[13], t[13], C)
	C, t[14] = madd2(x[6], z[14], t[14], C)
	C, t[15] = madd2(x[6], z[15], t[15], C)
	C, t[16] = madd2(x[6], z[16], t[16], C)
	C, t[17] = madd2(x[6], z[17], t[17], C)
	C, t[18] = madd2(x[6], z[18], t[18], C)
	C, t[19] = madd2(x[6], z[19], t[19], C)
	C, t[20] = madd2(x[6], z[20], t[20], C)
	C, t[21] = madd2(x[6], z[21], t[21], C)
	C, t[22] = madd2(x[6], z[22], t[22], C)
	C, t[23] = madd2(x[6], z[23], t[23], C)
	C, t[24] = madd2(x[6], z[24], t[24], C)
	C, t[25] = madd2(x[6], z[25], t[25], C)
	C, t[26] = madd2(x[6], z[26], t[26], C)
	C, t[27] = madd2(x[6], z[27], t[27], C)
	C, t[28] = madd2(x[6], z[28], t[28], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 10549899360055738265

	// -----------------------------------
	// Second loop
	C = madd0(m, 6557797220589329239, t[0])

	C, t[0] = madd2(m, 11417059503450690909, t[1], C)

	C, t[1] = madd2(m, 13704541515672720494, t[2], C)

	C, t[2] = madd2(m, 12806808807567348591, t[3], C)

	C, t[3] = madd2(m, 6275282332124812599, t[4], C)

	C, t[4] = madd2(m, 4405229158191370832, t[5], C)

	C, t[5] = madd2(m, 12168445323765187689, t[6], C)

	C, t[6] = madd2(m, 10671602409567735082, t[7], C)

	C, t[7] = madd2(m, 17193196447219887244, t[8], C)

	C, t[8] = madd2(m, 1968177518022708578, t[9], C)

	C, t[9] = madd2(m, 17810219903765590582, t[10], C)

	C, t[10] = madd2(m, 14425778727015286243, t[11], C)

	C, t[11] = madd2(m, 7046014110413742080, t[12], C)

	C, t[12] = madd2(m, 2030555054815402006, t[13], C)

	C, t[13] = madd2(m, 2364210669068217395, t[14], C)

	C, t[14] = madd2(m, 12900422625108798885, t[15], C)

	C, t[15] = madd2(m, 1930406275202811267, t[16], C)

	C, t[16] = madd2(m, 14290777978257669090, t[17], C)

	C, t[17] = madd2(m, 5932508195835066898, t[18], C)

	C, t[18] = madd2(m, 15850336981219945716, t[19], C)

	C, t[19] = madd2(m, 854831035414738096, t[20], C)

	C, t[20] = madd2(m, 2260305572347853835, t[21], C)

	C, t[21] = madd2(m, 5347326701889135155, t[22], C)

	C, t[22] = madd2(m, 4279901139938023971, t[23], C)

	C, t[23] = madd2(m, 4531757068977706609, t[24], C)

	C, t[24] = madd2(m, 9735365819670254271, t[25], C)

	C, t[25] = madd2(m, 3870673539892635154, t[26], C)

	C, t[26] = madd2(m, 15996650252674570430, t[27], C)

	C, t[27] = madd3(m, 7470438302128334459, t[28], C, t[29])

	t[28], t[29] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[7], z[0], t[0])
	C, t[1] = madd2(x[7], z[1], t[1], C)
	C, t[2] = madd2(x[7], z[2], t[2], C)
	C, t[3] = madd2(x[7], z[3], t[3], C)
	C, t[4] = madd2(x[7], z[4], t[4], C)
	C, t[5] = madd2(x[7], z[5], t[5], C)
	C, t[6] = madd2(x[7], z[6], t[6], C)
	C, t[7] = madd2(x[7], z[7], t[7], C)
	C, t[8] = madd2(x[7], z[8], t[8], C)
	C, t[9] = madd2(x[7], z[9], t[9], C)
	C, t[10] = madd2(x[7], z[10], t[10], C)
	C, t[11] = madd2(x[7], z[11], t[11], C)
	C, t[12] = madd2(x[7], z[12], t[12], C)
	C, t[13] = madd2(x[7], z[13], t[13], C)
	C, t[14] = madd2(x[7], z[14], t[14], C)
	C, t[15] = madd2(x[7], z[15], t[15], C)
	C, t[16] = madd2(x[7], z[16], t[16], C)
	C, t[17] = madd2(x[7], z[17], t[17], C)
	C, t[18] = madd2(x[7], z[18], t[18], C)
	C, t[19] = madd2(x[7], z[19], t[19], C)
	C, t[20] = madd2(x[7], z[20], t[20], C)
	C, t[21] = madd2(x[7], z[21], t[21], C)
	C, t[22] = madd2(x[7], z[22], t[22], C)
	C, t[23] = madd2(x[7], z[23], t[23], C)
	C, t[24] = madd2(x[7], z[24], t[24], C)
	C, t[25] = madd2(x[7], z[25], t[25], C)
	C, t[26] = madd2(x[7], z[26], t[26], C)
	C, t[27] = madd2(x[7], z[27], t[27], C)
	C, t[28] = madd2(x[7], z[28], t[28], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 10549899360055738265

	// -----------------------------------
	// Second loop
	C = madd0(m, 6557797220589329239, t[0])

	C, t[0] = madd2(m, 11417059503450690909, t[1], C)

	C, t[1] = madd2(m, 13704541515672720494, t[2], C)

	C, t[2] = madd2(m, 12806808807567348591, t[3], C)

	C, t[3] = madd2(m, 6275282332124812599, t[4], C)

	C, t[4] = madd2(m, 4405229158191370832, t[5], C)

	C, t[5] = madd2(m, 12168445323765187689, t[6], C)

	C, t[6] = madd2(m, 10671602409567735082, t[7], C)

	C, t[7] = madd2(m, 17193196447219887244, t[8], C)

	C, t[8] = madd2(m, 1968177518022708578, t[9], C)

	C, t[9] = madd2(m, 17810219903765590582, t[10], C)

	C, t[10] = madd2(m, 14425778727015286243, t[11], C)

	C, t[11] = madd2(m, 7046014110413742080, t[12], C)

	C, t[12] = madd2(m, 2030555054815402006, t[13], C)

	C, t[13] = madd2(m, 2364210669068217395, t[14], C)

	C, t[14] = madd2(m, 12900422625108798885, t[15], C)

	C, t[15] = madd2(m, 1930406275202811267, t[16], C)

	C, t[16] = madd2(m, 14290777978257669090, t[17], C)

	C, t[17] = madd2(m, 5932508195835066898, t[18], C)

	C, t[18] = madd2(m, 15850336981219945716, t[19], C)

	C, t[19] = madd2(m, 854831035414738096, t[20], C)

	C, t[20] = madd2(m, 2260305572347853835, t[21], C)

	C, t[21] = madd2(m, 5347326701889135155, t[22], C)

	C, t[22] = madd2(m, 4279901139938023971, t[23], C)

	C, t[23] = madd2(m, 4531757068977706609, t[24], C)

	C, t[24] = madd2(m, 9735365819670254271, t[25], C)

	C, t[25] = madd2(m, 3870673539892635154, t[26], C)

	C, t[26] = madd2(m, 15996650252674570430, t[27], C)

	C, t[27] = madd3(m, 7470438302128334459, t[28], C, t[29])

	t[28], t[29] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[8], z[0], t[0])
	C, t[1] = madd2(x[8], z[1], t[1], C)
	C, t[2] = madd2(x[8], z[2], t[2], C)
	C, t[3] = madd2(x[8], z[3], t[3], C)
	C, t[4] = madd2(x[8], z[4], t[4], C)
	C, t[5] = madd2(x[8], z[5], t[5], C)
	C, t[6] = madd2(x[8], z[6], t[6], C)
	C, t[7] = madd2(x[8], z[7], t[7], C)
	C, t[8] = madd2(x[8], z[8], t[8], C)
	C, t[9] = madd2(x[8], z[9], t[9], C)
	C, t[10] = madd2(x[8], z[10], t[10], C)
	C, t[11] = madd2(x[8], z[11], t[11], C)
	C, t[12] = madd2(x[8], z[12], t[12], C)
	C, t[13] = madd2(x[8], z[13], t[13], C)
	C, t[14] = madd2(x[8], z[14], t[14], C)
	C, t[15] = madd2(x[8], z[15], t[15], C)
	C, t[16] = madd2(x[8], z[16], t[16], C)
	C, t[17] = madd2(x[8], z[17], t[17], C)
	C, t[18] = madd2(x[8], z[18], t[18], C)
	C, t[19] = madd2(x[8], z[19], t[19], C)
	C, t[20] = madd2(x[8], z[20], t[20], C)
	C, t[21] = madd2(x[8], z[21], t[21], C)
	C, t[22] = madd2(x[8], z[22], t[22], C)
	C, t[23] = madd2(x[8], z[23], t[23], C)
	C, t[24] = madd2(x[8], z[24], t[24], C)
	C, t[25] = madd2(x[8], z[25], t[25], C)
	C, t[26] = madd2(x[8], z[26], t[26], C)
	C, t[27] = madd2(x[8], z[27], t[27], C)
	C, t[28] = madd2(x[8], z[28], t[28], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 10549899360055738265

	// -----------------------------------
	// Second loop
	C = madd0(m, 6557797220589329239, t[0])

	C, t[0] = madd2(m, 11417059503450690909, t[1], C)

	C, t[1] = madd2(m, 13704541515672720494, t[2], C)

	C, t[2] = madd2(m, 12806808807567348591, t[3], C)

	C, t[3] = madd2(m, 6275282332124812599, t[4], C)

	C, t[4] = madd2(m, 4405229158191370832, t[5], C)

	C, t[5] = madd2(m, 12168445323765187689, t[6], C)

	C, t[6] = madd2(m, 10671602409567735082, t[7], C)

	C, t[7] = madd2(m, 17193196447219887244, t[8], C)

	C, t[8] = madd2(m, 1968177518022708578, t[9], C)

	C, t[9] = madd2(m, 17810219903765590582, t[10], C)

	C, t[10] = madd2(m, 14425778727015286243, t[11], C)

	C, t[11] = madd2(m, 7046014110413742080, t[12], C)

	C, t[12] = madd2(m, 2030555054815402006, t[13], C)

	C, t[13] = madd2(m, 2364210669068217395, t[14], C)

	C, t[14] = madd2(m, 12900422625108798885, t[15], C)

	C, t[15] = madd2(m, 1930406275202811267, t[16], C)

	C, t[16] = madd2(m, 14290777978257669090, t[17], C)

	C, t[17] = madd2(m, 5932508195835066898, t[18], C)

	C, t[18] = madd2(m, 15850336981219945716, t[19], C)

	C, t[19] = madd2(m, 854831035414738096, t[20], C)

	C, t[20] = madd2(m, 2260305572347853835, t[21], C)

	C, t[21] = madd2(m, 5347326701889135155, t[22], C)

	C, t[22] = madd2(m, 4279901139938023971, t[23], C)

	C, t[23] = madd2(m, 4531757068977706609, t[24], C)

	C, t[24] = madd2(m, 9735365819670254271, t[25], C)

	C, t[25] = madd2(m, 3870673539892635154, t[26], C)

	C, t[26] = madd2(m, 15996650252674570430, t[27], C)

	C, t[27] = madd3(m, 7470438302128334459, t[28], C, t[29])

	t[28], t[29] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[9], z[0], t[0])
	C, t[1] = madd2(x[9], z[1], t[1], C)
	C, t[2] = madd2(x[9], z[2], t[2], C)
	C, t[3] = madd2(x[9], z[3], t[3], C)
	C, t[4] = madd2(x[9], z[4], t[4], C)
	C, t[5] = madd2(x[9], z[5], t[5], C)
	C, t[6] = madd2(x[9], z[6], t[6], C)
	C, t[7] = madd2(x[9], z[7], t[7], C)
	C, t[8] = madd2(x[9], z[8], t[8], C)
	C, t[9] = madd2(x[9], z[9], t[9], C)
	C, t[10] = madd2(x[9], z[10], t[10], C)
	C, t[11] = madd2(x[9], z[11], t[11], C)
	C, t[12] = madd2(x[9], z[12], t[12], C)
	C, t[13] = madd2(x[9], z[13], t[13], C)
	C, t[14] = madd2(x[9], z[14], t[14], C)
	C, t[15] = madd2(x[9], z[15], t[15], C)
	C, t[16] = madd2(x[9], z[16], t[16], C)
	C, t[17] = madd2(x[9], z[17], t[17], C)
	C, t[18] = madd2(x[9], z[18], t[18], C)
	C, t[19] = madd2(x[9], z[19], t[19], C)
	C, t[20] = madd2(x[9], z[20], t[20], C)
	C, t[21] = madd2(x[9], z[21], t[21], C)
	C, t[22] = madd2(x[9], z[22], t[22], C)
	C, t[23] = madd2(x[9], z[23], t[23], C)
	C, t[24] = madd2(x[9], z[24], t[24], C)
	C, t[25] = madd2(x[9], z[25], t[25], C)
	C, t[26] = madd2(x[9], z[26], t[26], C)
	C, t[27] = madd2(x[9], z[27], t[27], C)
	C, t[28] = madd2(x[9], z[28], t[28], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 10549899360055738265

	// -----------------------------------
	// Second loop
	C = madd0(m, 6557797220589329239, t[0])

	C, t[0] = madd2(m, 11417059503450690909, t[1], C)

	C, t[1] = madd2(m, 13704541515672720494, t[2], C)

	C, t[2] = madd2(m, 12806808807567348591, t[3], C)

	C, t[3] = madd2(m, 6275282332124812599, t[4], C)

	C, t[4] = madd2(m, 4405229158191370832, t[5], C)

	C, t[5] = madd2(m, 12168445323765187689, t[6], C)

	C, t[6] = madd2(m, 10671602409567735082, t[7], C)

	C, t[7] = madd2(m, 17193196447219887244, t[8], C)

	C, t[8] = madd2(m, 1968177518022708578, t[9], C)

	C, t[9] = madd2(m, 17810219903765590582, t[10], C)

	C, t[10] = madd2(m, 14425778727015286243, t[11], C)

	C, t[11] = madd2(m, 7046014110413742080, t[12], C)

	C, t[12] = madd2(m, 2030555054815402006, t[13], C)

	C, t[13] = madd2(m, 2364210669068217395, t[14], C)

	C, t[14] = madd2(m, 12900422625108798885, t[15], C)

	C, t[15] = madd2(m, 1930406275202811267, t[16], C)

	C, t[16] = madd2(m, 14290777978257669090, t[17], C)

	C, t[17] = madd2(m, 5932508195835066898, t[18], C)

	C, t[18] = madd2(m, 15850336981219945716, t[19], C)

	C, t[19] = madd2(m, 854831035414738096, t[20], C)

	C, t[20] = madd2(m, 2260305572347853835, t[21], C)

	C, t[21] = madd2(m, 5347326701889135155, t[22], C)

	C, t[22] = madd2(m, 4279901139938023971, t[23], C)

	C, t[23] = madd2(m, 4531757068977706609, t[24], C)

	C, t[24] = madd2(m, 9735365819670254271, t[25], C)

	C, t[25] = madd2(m, 3870673539892635154, t[26], C)

	C, t[26] = madd2(m, 15996650252674570430, t[27], C)

	C, t[27] = madd3(m, 7470438302128334459, t[28], C, t[29])

	t[28], t[29] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[10], z[0], t[0])
	C, t[1] = madd2(x[10], z[1], t[1], C)
	C, t[2] = madd2(x[10], z[2], t[2], C)
	C, t[3] = madd2(x[10], z[3], t[3], C)
	C, t[4] = madd2(x[10], z[4], t[4], C)
	C, t[5] = madd2(x[10], z[5], t[5], C)
	C, t[6] = madd2(x[10], z[6], t[6], C)
	C, t[7] = madd2(x[10], z[7], t[7], C)
	C, t[8] = madd2(x[10], z[8], t[8], C)
	C, t[9] = madd2(x[10], z[9], t[9], C)
	C, t[10] = madd2(x[10], z[10], t[10], C)
	C, t[11] = madd2(x[10], z[11], t[11], C)
	C, t[12] = madd2(x[10], z[12], t[12], C)
	C, t[13] = madd2(x[10], z[13], t[13], C)
	C, t[14] = madd2(x[10], z[14], t[14], C)
	C, t[15] = madd2(x[10], z[15], t[15], C)
	C, t[16] = madd2(x[10], z[16], t[16], C)
	C, t[17] = madd2(x[10], z[17], t[17], C)
	C, t[18] = madd2(x[10], z[18], t[18], C)
	C, t[19] = madd2(x[10], z[19], t[19], C)
	C, t[20] = madd2(x[10], z[20], t[20], C)
	C, t[21] = madd2(x[10], z[21], t[21], C)
	C, t[22] = madd2(x[10], z[22], t[22], C)
	C, t[23] = madd2(x[10], z[23], t[23], C)
	C, t[24] = madd2(x[10], z[24], t[24], C)
	C, t[25] = madd2(x[10], z[25], t[25], C)
	C, t[26] = madd2(x[10], z[26], t[26], C)
	C, t[27] = madd2(x[10], z[27], t[27], C)
	C, t[28] = madd2(x[10], z[28], t[28], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 10549899360055738265

	// -----------------------------------
	// Second loop
	C = madd0(m, 6557797220589329239, t[0])

	C, t[0] = madd2(m, 11417059503450690909, t[1], C)

	C, t[1] = madd2(m, 13704541515672720494, t[2], C)

	C, t[2] = madd2(m, 12806808807567348591, t[3], C)

	C, t[3] = madd2(m, 6275282332124812599, t[4], C)

	C, t[4] = madd2(m, 4405229158191370832, t[5], C)

	C, t[5] = madd2(m, 12168445323765187689, t[6], C)

	C, t[6] = madd2(m, 10671602409567735082, t[7], C)

	C, t[7] = madd2(m, 17193196447219887244, t[8], C)

	C, t[8] = madd2(m, 1968177518022708578, t[9], C)

	C, t[9] = madd2(m, 17810219903765590582, t[10], C)

	C, t[10] = madd2(m, 14425778727015286243, t[11], C)

	C, t[11] = madd2(m, 7046014110413742080, t[12], C)

	C, t[12] = madd2(m, 2030555054815402006, t[13], C)

	C, t[13] = madd2(m, 2364210669068217395, t[14], C)

	C, t[14] = madd2(m, 12900422625108798885, t[15], C)

	C, t[15] = madd2(m, 1930406275202811267, t[16], C)

	C, t[16] = madd2(m, 14290777978257669090, t[17], C)

	C, t[17] = madd2(m, 5932508195835066898, t[18], C)

	C, t[18] = madd2(m, 15850336981219945716, t[19], C)

	C, t[19] = madd2(m, 854831035414738096, t[20], C)

	C, t[20] = madd2(m, 2260305572347853835, t[21], C)

	C, t[21] = madd2(m, 5347326701889135155, t[22], C)

	C, t[22] = madd2(m, 4279901139938023971, t[23], C)

	C, t[23] = madd2(m, 4531757068977706609, t[24], C)

	C, t[24] = madd2(m, 9735365819670254271, t[25], C)

	C, t[25] = madd2(m, 3870673539892635154, t[26], C)

	C, t[26] = madd2(m, 15996650252674570430, t[27], C)

	C, t[27] = madd3(m, 7470438302128334459, t[28], C, t[29])

	t[28], t[29] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[11], z[0], t[0])
	C, t[1] = madd2(x[11], z[1], t[1], C)
	C, t[2] = madd2(x[11], z[2], t[2], C)
	C, t[3] = madd2(x[11], z[3], t[3], C)
	C, t[4] = madd2(x[11], z[4], t[4], C)
	C, t[5] = madd2(x[11], z[5], t[5], C)
	C, t[6] = madd2(x[11], z[6], t[6], C)
	C, t[7] = madd2(x[11], z[7], t[7], C)
	C, t[8] = madd2(x[11], z[8], t[8], C)
	C, t[9] = madd2(x[11], z[9], t[9], C)
	C, t[10] = madd2(x[11], z[10], t[10], C)
	C, t[11] = madd2(x[11], z[11], t[11], C)
	C, t[12] = madd2(x[11], z[12], t[12], C)
	C, t[13] = madd2(x[11], z[13], t[13], C)
	C, t[14] = madd2(x[11], z[14], t[14], C)
	C, t[15] = madd2(x[11], z[15], t[15], C)
	C, t[16] = madd2(x[11], z[16], t[16], C)
	C, t[17] = madd2(x[11], z[17], t[17], C)
	C, t[18] = madd2(x[11], z[18], t[18], C)
	C, t[19] = madd2(x[11], z[19], t[19], C)
	C, t[20] = madd2(x[11], z[20], t[20], C)
	C, t[21] = madd2(x[11], z[21], t[21], C)
	C, t[22] = madd2(x[11], z[22], t[22], C)
	C, t[23] = madd2(x[11], z[23], t[23], C)
	C, t[24] = madd2(x[11], z[24], t[24], C)
	C, t[25] = madd2(x[11], z[25], t[25], C)
	C, t[26] = madd2(x[11], z[26], t[26], C)
	C, t[27] = madd2(x[11], z[27], t[27], C)
	C, t[28] = madd2(x[11], z[28], t[28], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 10549899360055738265

	// -----------------------------------
	// Second loop
	C = madd0(m, 6557797220589329239, t[0])

	C, t[0] = madd2(m, 11417059503450690909, t[1], C)

	C, t[1] = madd2(m, 13704541515672720494, t[2], C)

	C, t[2] = madd2(m, 12806808807567348591, t[3], C)

	C, t[3] = madd2(m, 6275282332124812599, t[4], C)

	C, t[4] = madd2(m, 4405229158191370832, t[5], C)

	C, t[5] = madd2(m, 12168445323765187689, t[6], C)

	C, t[6] = madd2(m, 10671602409567735082, t[7], C)

	C, t[7] = madd2(m, 17193196447219887244, t[8], C)

	C, t[8] = madd2(m, 1968177518022708578, t[9], C)

	C, t[9] = madd2(m, 17810219903765590582, t[10], C)

	C, t[10] = madd2(m, 14425778727015286243, t[11], C)

	C, t[11] = madd2(m, 7046014110413742080, t[12], C)

	C, t[12] = madd2(m, 2030555054815402006, t[13], C)

	C, t[13] = madd2(m, 2364210669068217395, t[14], C)

	C, t[14] = madd2(m, 12900422625108798885, t[15], C)

	C, t[15] = madd2(m, 1930406275202811267, t[16], C)

	C, t[16] = madd2(m, 14290777978257669090, t[17], C)

	C, t[17] = madd2(m, 5932508195835066898, t[18], C)

	C, t[18] = madd2(m, 15850336981219945716, t[19], C)

	C, t[19] = madd2(m, 854831035414738096, t[20], C)

	C, t[20] = madd2(m, 2260305572347853835, t[21], C)

	C, t[21] = madd2(m, 5347326701889135155, t[22], C)

	C, t[22] = madd2(m, 4279901139938023971, t[23], C)

	C, t[23] = madd2(m, 4531757068977706609, t[24], C)

	C, t[24] = madd2(m, 9735365819670254271, t[25], C)

	C, t[25] = madd2(m, 3870673539892635154, t[26], C)

	C, t[26] = madd2(m, 15996650252674570430, t[27], C)

	C, t[27] = madd3(m, 7470438302128334459, t[28], C, t[29])

	t[28], t[29] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[12], z[0], t[0])
	C, t[1] = madd2(x[12], z[1], t[1], C)
	C, t[2] = madd2(x[12], z[2], t[2], C)
	C, t[3] = madd2(x[12], z[3], t[3], C)
	C, t[4] = madd2(x[12], z[4], t[4], C)
	C, t[5] = madd2(x[12], z[5], t[5], C)
	C, t[6] = madd2(x[12], z[6], t[6], C)
	C, t[7] = madd2(x[12], z[7], t[7], C)
	C, t[8] = madd2(x[12], z[8], t[8], C)
	C, t[9] = madd2(x[12], z[9], t[9], C)
	C, t[10] = madd2(x[12], z[10], t[10], C)
	C, t[11] = madd2(x[12], z[11], t[11], C)
	C, t[12] = madd2(x[12], z[12], t[12], C)
	C, t[13] = madd2(x[12], z[13], t[13], C)
	C, t[14] = madd2(x[12], z[14], t[14], C)
	C, t[15] = madd2(x[12], z[15], t[15], C)
	C, t[16] = madd2(x[12], z[16], t[16], C)
	C, t[17] = madd2(x[12], z[17], t[17], C)
	C, t[18] = madd2(x[12], z[18], t[18], C)
	C, t[19] = madd2(x[12], z[19], t[19], C)
	C, t[20] = madd2(x[12], z[20], t[20], C)
	C, t[21] = madd2(x[12], z[21], t[21], C)
	C, t[22] = madd2(x[12], z[22], t[22], C)
	C, t[23] = madd2(x[12], z[23], t[23], C)
	C, t[24] = madd2(x[12], z[24], t[24], C)
	C, t[25] = madd2(x[12], z[25], t[25], C)
	C, t[26] = madd2(x[12], z[26], t[26], C)
	C, t[27] = madd2(x[12], z[27], t[27], C)
	C, t[28] = madd2(x[12], z[28], t[28], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 10549899360055738265

	// -----------------------------------
	// Second loop
	C = madd0(m, 6557797220589329239, t[0])

	C, t[0] = madd2(m, 11417059503450690909, t[1], C)

	C, t[1] = madd2(m, 13704541515672720494, t[2], C)

	C, t[2] = madd2(m, 12806808807567348591, t[3], C)

	C, t[3] = madd2(m, 6275282332124812599, t[4], C)

	C, t[4] = madd2(m, 4405229158191370832, t[5], C)

	C, t[5] = madd2(m, 12168445323765187689, t[6], C)

	C, t[6] = madd2(m, 10671602409567735082, t[7], C)

	C, t[7] = madd2(m, 17193196447219887244, t[8], C)

	C, t[8] = madd2(m, 1968177518022708578, t[9], C)

	C, t[9] = madd2(m, 17810219903765590582, t[10], C)

	C, t[10] = madd2(m, 14425778727015286243, t[11], C)

	C, t[11] = madd2(m, 7046014110413742080, t[12], C)

	C, t[12] = madd2(m, 2030555054815402006, t[13], C)

	C, t[13] = madd2(m, 2364210669068217395, t[14], C)

	C, t[14] = madd2(m, 12900422625108798885, t[15], C)

	C, t[15] = madd2(m, 1930406275202811267, t[16], C)

	C, t[16] = madd2(m, 14290777978257669090, t[17], C)

	C, t[17] = madd2(m, 5932508195835066898, t[18], C)

	C, t[18] = madd2(m, 15850336981219945716, t[19], C)

	C, t[19] = madd2(m, 854831035414738096, t[20], C)

	C, t[20] = madd2(m, 2260305572347853835, t[21], C)

	C, t[21] = madd2(m, 5347326701889135155, t[22], C)

	C, t[22] = madd2(m, 4279901139938023971, t[23], C)

	C, t[23] = madd2(m, 4531757068977706609, t[24], C)

	C, t[24] = madd2(m, 9735365819670254271, t[25], C)

	C, t[25] = madd2(m, 3870673539892635154, t[26], C)

	C, t[26] = madd2(m, 15996650252674570430, t[27], C)

	C, t[27] = madd3(m, 7470438302128334459, t[28], C, t[29])

	t[28], t[29] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[13], z[0], t[0])
	C, t[1] = madd2(x[13], z[1], t[1], C)
	C, t[2] = madd2(x[13], z[2], t[2], C)
	C, t[3] = madd2(x[13], z[3], t[3], C)
	C, t[4] = madd2(x[13], z[4], t[4], C)
	C, t[5] = madd2(x[13], z[5], t[5], C)
	C, t[6] = madd2(x[13], z[6], t[6], C)
	C, t[7] = madd2(x[13], z[7], t[7], C)
	C, t[8] = madd2(x[13], z[8], t[8], C)
	C, t[9] = madd2(x[13], z[9], t[9], C)
	C, t[10] = madd2(x[13], z[10], t[10], C)
	C, t[11] = madd2(x[13], z[11], t[11], C)
	C, t[12] = madd2(x[13], z[12], t[12], C)
	C, t[13] = madd2(x[13], z[13], t[13], C)
	C, t[14] = madd2(x[13], z[14], t[14], C)
	C, t[15] = madd2(x[13], z[15], t[15], C)
	C, t[16] = madd2(x[13], z[16], t[16], C)
	C, t[17] = madd2(x[13], z[17], t[17], C)
	C, t[18] = madd2(x[13], z[18], t[18], C)
	C, t[19] = madd2(x[13], z[19], t[19], C)
	C, t[20] = madd2(x[13], z[20], t[20], C)
	C, t[21] = madd2(x[13], z[21], t[21], C)
	C, t[22] = madd2(x[13], z[22], t[22], C)
	C, t[23] = madd2(x[13], z[23], t[23], C)
	C, t[24] = madd2(x[13], z[24], t[24], C)
	C, t[25] = madd2(x[13], z[25], t[25], C)
	C, t[26] = madd2(x[13], z[26], t[26], C)
	C, t[27] = madd2(x[13], z[27], t[27], C)
	C, t[28] = madd2(x[13], z[28], t[28], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 10549899360055738265

	// -----------------------------------
	// Second loop
	C = madd0(m, 6557797220589329239, t[0])

	C, t[0] = madd2(m, 11417059503450690909, t[1], C)

	C, t[1] = madd2(m, 13704541515672720494, t[2], C)

	C, t[2] = madd2(m, 12806808807567348591, t[3], C)

	C, t[3] = madd2(m, 6275282332124812599, t[4], C)

	C, t[4] = madd2(m, 4405229158191370832, t[5], C)

	C, t[5] = madd2(m, 12168445323765187689, t[6], C)

	C, t[6] = madd2(m, 10671602409567735082, t[7], C)

	C, t[7] = madd2(m, 17193196447219887244, t[8], C)

	C, t[8] = madd2(m, 1968177518022708578, t[9], C)

	C, t[9] = madd2(m, 17810219903765590582, t[10], C)

	C, t[10] = madd2(m, 14425778727015286243, t[11], C)

	C, t[11] = madd2(m, 7046014110413742080, t[12], C)

	C, t[12] = madd2(m, 2030555054815402006, t[13], C)

	C, t[13] = madd2(m, 2364210669068217395, t[14], C)

	C, t[14] = madd2(m, 12900422625108798885, t[15], C)

	C, t[15] = madd2(m, 1930406275202811267, t[16], C)

	C, t[16] = madd2(m, 14290777978257669090, t[17], C)

	C, t[17] = madd2(m, 5932508195835066898, t[18], C)

	C, t[18] = madd2(m, 15850336981219945716, t[19], C)

	C, t[19] = madd2(m, 854831035414738096, t[20], C)

	C, t[20] = madd2(m, 2260305572347853835, t[21], C)

	C, t[21] = madd2(m, 5347326701889135155, t[22], C)

	C, t[22] = madd2(m, 4279901139938023971, t[23], C)

	C, t[23] = madd2(m, 4531757068977706609, t[24], C)

	C, t[24] = madd2(m, 9735365819670254271, t[25], C)

	C, t[25] = madd2(m, 3870673539892635154, t[26], C)

	C, t[26] = madd2(m, 15996650252674570430, t[27], C)

	C, t[27] = madd3(m, 7470438302128334459, t[28], C, t[29])

	t[28], t[29] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[14], z[0], t[0])
	C, t[1] = madd2(x[14], z[1], t[1], C)
	C, t[2] = madd2(x[14], z[2], t[2], C)
	C, t[3] = madd2(x[14], z[3], t[3], C)
	C, t[4] = madd2(x[14], z[4], t[4], C)
	C, t[5] = madd2(x[14], z[5], t[5], C)
	C, t[6] = madd2(x[14], z[6], t[6], C)
	C, t[7] = madd2(x[14], z[7], t[7], C)
	C, t[8] = madd2(x[14], z[8], t[8], C)
	C, t[9] = madd2(x[14], z[9], t[9], C)
	C, t[10] = madd2(x[14], z[10], t[10], C)
	C, t[11] = madd2(x[14], z[11], t[11], C)
	C, t[12] = madd2(x[14], z[12], t[12], C)
	C, t[13] = madd2(x[14], z[13], t[13], C)
	C, t[14] = madd2(x[14], z[14], t[14], C)
	C, t[15] = madd2(x[14], z[15], t[15], C)
	C, t[16] = madd2(x[14], z[16], t[16], C)
	C, t[17] = madd2(x[14], z[17], t[17], C)
	C, t[18] = madd2(x[14], z[18], t[18], C)
	C, t[19] = madd2(x[14], z[19], t[19], C)
	C, t[20] = madd2(x[14], z[20], t[20], C)
	C, t[21] = madd2(x[14], z[21], t[21], C)
	C, t[22] = madd2(x[14], z[22], t[22], C)
	C, t[23] = madd2(x[14], z[23], t[23], C)
	C, t[24] = madd2(x[14], z[24], t[24], C)
	C, t[25] = madd2(x[14], z[25], t[25], C)
	C, t[26] = madd2(x[14], z[26], t[26], C)
	C, t[27] = madd2(x[14], z[27], t[27], C)
	C, t[28] = madd2(x[14], z[28], t[28], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 10549899360055738265

	// -----------------------------------
	// Second loop
	C = madd0(m, 6557797220589329239, t[0])

	C, t[0] = madd2(m, 11417059503450690909, t[1], C)

	C, t[1] = madd2(m, 13704541515672720494, t[2], C)

	C, t[2] = madd2(m, 12806808807567348591, t[3], C)

	C, t[3] = madd2(m, 6275282332124812599, t[4], C)

	C, t[4] = madd2(m, 4405229158191370832, t[5], C)

	C, t[5] = madd2(m, 12168445323765187689, t[6], C)

	C, t[6] = madd2(m, 10671602409567735082, t[7], C)

	C, t[7] = madd2(m, 17193196447219887244, t[8], C)

	C, t[8] = madd2(m, 1968177518022708578, t[9], C)

	C, t[9] = madd2(m, 17810219903765590582, t[10], C)

	C, t[10] = madd2(m, 14425778727015286243, t[11], C)

	C, t[11] = madd2(m, 7046014110413742080, t[12], C)

	C, t[12] = madd2(m, 2030555054815402006, t[13], C)

	C, t[13] = madd2(m, 2364210669068217395, t[14], C)

	C, t[14] = madd2(m, 12900422625108798885, t[15], C)

	C, t[15] = madd2(m, 1930406275202811267, t[16], C)

	C, t[16] = madd2(m, 14290777978257669090, t[17], C)

	C, t[17] = madd2(m, 5932508195835066898, t[18], C)

	C, t[18] = madd2(m, 15850336981219945716, t[19], C)

	C, t[19] = madd2(m, 854831035414738096, t[20], C)

	C, t[20] = madd2(m, 2260305572347853835, t[21], C)

	C, t[21] = madd2(m, 5347326701889135155, t[22], C)

	C, t[22] = madd2(m, 4279901139938023971, t[23], C)

	C, t[23] = madd2(m, 4531757068977706609, t[24], C)

	C, t[24] = madd2(m, 9735365819670254271, t[25], C)

	C, t[25] = madd2(m, 3870673539892635154, t[26], C)

	C, t[26] = madd2(m, 15996650252674570430, t[27], C)

	C, t[27] = madd3(m, 7470438302128334459, t[28], C, t[29])

	t[28], t[29] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[15], z[0], t[0])
	C, t[1] = madd2(x[15], z[1], t[1], C)
	C, t[2] = madd2(x[15], z[2], t[2], C)
	C, t[3] = madd2(x[15], z[3], t[3], C)
	C, t[4] = madd2(x[15], z[4], t[4], C)
	C, t[5] = madd2(x[15], z[5], t[5], C)
	C, t[6] = madd2(x[15], z[6], t[6], C)
	C, t[7] = madd2(x[15], z[7], t[7], C)
	C, t[8] = madd2(x[15], z[8], t[8], C)
	C, t[9] = madd2(x[15], z[9], t[9], C)
	C, t[10] = madd2(x[15], z[10], t[10], C)
	C, t[11] = madd2(x[15], z[11], t[11], C)
	C, t[12] = madd2(x[15], z[12], t[12], C)
	C, t[13] = madd2(x[15], z[13], t[13], C)
	C, t[14] = madd2(x[15], z[14], t[14], C)
	C, t[15] = madd2(x[15], z[15], t[15], C)
	C, t[16] = madd2(x[15], z[16], t[16], C)
	C, t[17] = madd2(x[15], z[17], t[17], C)
	C, t[18] = madd2(x[15], z[18], t[18], C)
	C, t[19] = madd2(x[15], z[19], t[19], C)
	C, t[20] = madd2(x[15], z[20], t[20], C)
	C, t[21] = madd2(x[15], z[21], t[21], C)
	C, t[22] = madd2(x[15], z[22], t[22], C)
	C, t[23] = madd2(x[15], z[23], t[23], C)
	C, t[24] = madd2(x[15], z[24], t[24], C)
	C, t[25] = madd2(x[15], z[25], t[25], C)
	C, t[26] = madd2(x[15], z[26], t[26], C)
	C, t[27] = madd2(x[15], z[27], t[27], C)
	C, t[28] = madd2(x[15], z[28], t[28], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 10549899360055738265

	// -----------------------------------
	// Second loop
	C = madd0(m, 6557797220589329239, t[0])

	C, t[0] = madd2(m, 11417059503450690909, t[1], C)

	C, t[1] = madd2(m, 13704541515672720494, t[2], C)

	C, t[2] = madd2(m, 12806808807567348591, t[3], C)

	C, t[3] = madd2(m, 6275282332124812599, t[4], C)

	C, t[4] = madd2(m, 4405229158191370832, t[5], C)

	C, t[5] = madd2(m, 12168445323765187689, t[6], C)

	C, t[6] = madd2(m, 10671602409567735082, t[7], C)

	C, t[7] = madd2(m, 17193196447219887244, t[8], C)

	C, t[8] = madd2(m, 1968177518022708578, t[9], C)

	C, t[9] = madd2(m, 17810219903765590582, t[10], C)

	C, t[10] = madd2(m, 14425778727015286243, t[11], C)

	C, t[11] = madd2(m, 7046014110413742080, t[12], C)

	C, t[12] = madd2(m, 2030555054815402006, t[13], C)

	C, t[13] = madd2(m, 2364210669068217395, t[14], C)

	C, t[14] = madd2(m, 12900422625108798885, t[15], C)

	C, t[15] = madd2(m, 1930406275202811267, t[16], C)

	C, t[16] = madd2(m, 14290777978257669090, t[17], C)

	C, t[17] = madd2(m, 5932508195835066898, t[18], C)

	C, t[18] = madd2(m, 15850336981219945716, t[19], C)

	C, t[19] = madd2(m, 854831035414738096, t[20], C)

	C, t[20] = madd2(m, 2260305572347853835, t[21], C)

	C, t[21] = madd2(m, 5347326701889135155, t[22], C)

	C, t[22] = madd2(m, 4279901139938023971, t[23], C)

	C, t[23] = madd2(m, 4531757068977706609, t[24], C)

	C, t[24] = madd2(m, 9735365819670254271, t[25], C)

	C, t[25] = madd2(m, 3870673539892635154, t[26], C)

	C, t[26] = madd2(m, 15996650252674570430, t[27], C)

	C, t[27] = madd3(m, 7470438302128334459, t[28], C, t[29])

	t[28], t[29] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[16], z[0], t[0])
	C, t[1] = madd2(x[16], z[1], t[1], C)
	C, t[2] = madd2(x[16], z[2], t[2], C)
	C, t[3] = madd2(x[16], z[3], t[3], C)
	C, t[4] = madd2(x[16], z[4], t[4], C)
	C, t[5] = madd2(x[16], z[5], t[5], C)
	C, t[6] = madd2(x[16], z[6], t[6], C)
	C, t[7] = madd2(x[16], z[7], t[7], C)
	C, t[8] = madd2(x[16], z[8], t[8], C)
	C, t[9] = madd2(x[16], z[9], t[9], C)
	C, t[10] = madd2(x[16], z[10], t[10], C)
	C, t[11] = madd2(x[16], z[11], t[11], C)
	C, t[12] = madd2(x[16], z[12], t[12], C)
	C, t[13] = madd2(x[16], z[13], t[13], C)
	C, t[14] = madd2(x[16], z[14], t[14], C)
	C, t[15] = madd2(x[16], z[15], t[15], C)
	C, t[16] = madd2(x[16], z[16], t[16], C)
	C, t[17] = madd2(x[16], z[17], t[17], C)
	C, t[18] = madd2(x[16], z[18], t[18], C)
	C, t[19] = madd2(x[16], z[19], t[19], C)
	C, t[20] = madd2(x[16], z[20], t[20], C)
	C, t[21] = madd2(x[16], z[21], t[21], C)
	C, t[22] = madd2(x[16], z[22], t[22], C)
	C, t[23] = madd2(x[16], z[23], t[23], C)
	C, t[24] = madd2(x[16], z[24], t[24], C)
	C, t[25] = madd2(x[16], z[25], t[25], C)
	C, t[26] = madd2(x[16], z[26], t[26], C)
	C, t[27] = madd2(x[16], z[27], t[27], C)
	C, t[28] = madd2(x[16], z[28], t[28], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 10549899360055738265

	// -----------------------------------
	// Second loop
	C = madd0(m, 6557797220589329239, t[0])

	C, t[0] = madd2(m, 11417059503450690909, t[1], C)

	C, t[1] = madd2(m, 13704541515672720494, t[2], C)

	C, t[2] = madd2(m, 12806808807567348591, t[3], C)

	C, t[3] = madd2(m, 6275282332124812599, t[4], C)

	C, t[4] = madd2(m, 4405229158191370832, t[5], C)

	C, t[5] = madd2(m, 12168445323765187689, t[6], C)

	C, t[6] = madd2(m, 10671602409567735082, t[7], C)

	C, t[7] = madd2(m, 17193196447219887244, t[8], C)

	C, t[8] = madd2(m, 1968177518022708578, t[9], C)

	C, t[9] = madd2(m, 17810219903765590582, t[10], C)

	C, t[10] = madd2(m, 14425778727015286243, t[11], C)

	C, t[11] = madd2(m, 7046014110413742080, t[12], C)

	C, t[12] = madd2(m, 2030555054815402006, t[13], C)

	C, t[13] = madd2(m, 2364210669068217395, t[14], C)

	C, t[14] = madd2(m, 12900422625108798885, t[15], C)

	C, t[15] = madd2(m, 1930406275202811267, t[16], C)

	C, t[16] = madd2(m, 14290777978257669090, t[17], C)

	C, t[17] = madd2(m, 5932508195835066898, t[18], C)

	C, t[18] = madd2(m, 15850336981219945716, t[19], C)

	C, t[19] = madd2(m, 854831035414738096, t[20], C)

	C, t[20] = madd2(m, 2260305572347853835, t[21], C)

	C, t[21] = madd2(m, 5347326701889135155, t[22], C)

	C, t[22] = madd2(m, 4279901139938023971, t[23], C)

	C, t[23] = madd2(m, 4531757068977706609, t[24], C)

	C, t[24] = madd2(m, 9735365819670254271, t[25], C)

	C, t[25] = madd2(m, 3870673539892635154, t[26], C)

	C, t[26] = madd2(m, 15996650252674570430, t[27], C)

	C, t[27] = madd3(m, 7470438302128334459, t[28], C, t[29])

	t[28], t[29] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[17], z[0], t[0])
	C, t[1] = madd2(x[17], z[1], t[1], C)
	C, t[2] = madd2(x[17], z[2], t[2], C)
	C, t[3] = madd2(x[17], z[3], t[3], C)
	C, t[4] = madd2(x[17], z[4], t[4], C)
	C, t[5] = madd2(x[17], z[5], t[5], C)
	C, t[6] = madd2(x[17], z[6], t[6], C)
	C, t[7] = madd2(x[17], z[7], t[7], C)
	C, t[8] = madd2(x[17], z[8], t[8], C)
	C, t[9] = madd2(x[17], z[9], t[9], C)
	C, t[10] = madd2(x[17], z[10], t[10], C)
	C, t[11] = madd2(x[17], z[11], t[11], C)
	C, t[12] = madd2(x[17], z[12], t[12], C)
	C, t[13] = madd2(x[17], z[13], t[13], C)
	C, t[14] = madd2(x[17], z[14], t[14], C)
	C, t[15] = madd2(x[17], z[15], t[15], C)
	C, t[16] = madd2(x[17], z[16], t[16], C)
	C, t[17] = madd2(x[17], z[17], t[17], C)
	C, t[18] = madd2(x[17], z[18], t[18], C)
	C, t[19] = madd2(x[17], z[19], t[19], C)
	C, t[20] = madd2(x[17], z[20], t[20], C)
	C, t[21] = madd2(x[17], z[21], t[21], C)
	C, t[22] = madd2(x[17], z[22], t[22], C)
	C, t[23] = madd2(x[17], z[23], t[23], C)
	C, t[24] = madd2(x[17], z[24], t[24], C)
	C, t[25] = madd2(x[17], z[25], t[25], C)
	C, t[26] = madd2(x[17], z[26], t[26], C)
	C, t[27] = madd2(x[17], z[27], t[27], C)
	C, t[28] = madd2(x[17], z[28], t[28], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 10549899360055738265

	// -----------------------------------
	// Second loop
	C = madd0(m, 6557797220589329239, t[0])

	C, t[0] = madd2(m, 11417059503450690909, t[1], C)

	C, t[1] = madd2(m, 13704541515672720494, t[2], C)

	C, t[2] = madd2(m, 12806808807567348591, t[3], C)

	C, t[3] = madd2(m, 6275282332124812599, t[4], C)

	C, t[4] = madd2(m, 4405229158191370832, t[5], C)

	C, t[5] = madd2(m, 12168445323765187689, t[6], C)

	C, t[6] = madd2(m, 10671602409567735082, t[7], C)

	C, t[7] = madd2(m, 17193196447219887244, t[8], C)

	C, t[8] = madd2(m, 1968177518022708578, t[9], C)

	C, t[9] = madd2(m, 17810219903765590582, t[10], C)

	C, t[10] = madd2(m, 14425778727015286243, t[11], C)

	C, t[11] = madd2(m, 7046014110413742080, t[12], C)

	C, t[12] = madd2(m, 2030555054815402006, t[13], C)

	C, t[13] = madd2(m, 2364210669068217395, t[14], C)

	C, t[14] = madd2(m, 12900422625108798885, t[15], C)

	C, t[15] = madd2(m, 1930406275202811267, t[16], C)

	C, t[16] = madd2(m, 14290777978257669090, t[17], C)

	C, t[17] = madd2(m, 5932508195835066898, t[18], C)

	C, t[18] = madd2(m, 15850336981219945716, t[19], C)

	C, t[19] = madd2(m, 854831035414738096, t[20], C)

	C, t[20] = madd2(m, 2260305572347853835, t[21], C)

	C, t[21] = madd2(m, 5347326701889135155, t[22], C)

	C, t[22] = madd2(m, 4279901139938023971, t[23], C)

	C, t[23] = madd2(m, 4531757068977706609, t[24], C)

	C, t[24] = madd2(m, 9735365819670254271, t[25], C)

	C, t[25] = madd2(m, 3870673539892635154, t[26], C)

	C, t[26] = madd2(m, 15996650252674570430, t[27], C)

	C, t[27] = madd3(m, 7470438302128334459, t[28], C, t[29])

	t[28], t[29] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[18], z[0], t[0])
	C, t[1] = madd2(x[18], z[1], t[1], C)
	C, t[2] = madd2(x[18], z[2], t[2], C)
	C, t[3] = madd2(x[18], z[3], t[3], C)
	C, t[4] = madd2(x[18], z[4], t[4], C)
	C, t[5] = madd2(x[18], z[5], t[5], C)
	C, t[6] = madd2(x[18], z[6], t[6], C)
	C, t[7] = madd2(x[18], z[7], t[7], C)
	C, t[8] = madd2(x[18], z[8], t[8], C)
	C, t[9] = madd2(x[18], z[9], t[9], C)
	C, t[10] = madd2(x[18], z[10], t[10], C)
	C, t[11] = madd2(x[18], z[11], t[11], C)
	C, t[12] = madd2(x[18], z[12], t[12], C)
	C, t[13] = madd2(x[18], z[13], t[13], C)
	C, t[14] = madd2(x[18], z[14], t[14], C)
	C, t[15] = madd2(x[18], z[15], t[15], C)
	C, t[16] = madd2(x[18], z[16], t[16], C)
	C, t[17] = madd2(x[18], z[17], t[17], C)
	C, t[18] = madd2(x[18], z[18], t[18], C)
	C, t[19] = madd2(x[18], z[19], t[19], C)
	C, t[20] = madd2(x[18], z[20], t[20], C)
	C, t[21] = madd2(x[18], z[21], t[21], C)
	C, t[22] = madd2(x[18], z[22], t[22], C)
	C, t[23] = madd2(x[18], z[23], t[23], C)
	C, t[24] = madd2(x[18], z[24], t[24], C)
	C, t[25] = madd2(x[18], z[25], t[25], C)
	C, t[26] = madd2(x[18], z[26], t[26], C)
	C, t[27] = madd2(x[18], z[27], t[27], C)
	C, t[28] = madd2(x[18], z[28], t[28], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 10549899360055738265

	// -----------------------------------
	// Second loop
	C = madd0(m, 6557797220589329239, t[0])

	C, t[0] = madd2(m, 11417059503450690909, t[1], C)

	C, t[1] = madd2(m, 13704541515672720494, t[2], C)

	C, t[2] = madd2(m, 12806808807567348591, t[3], C)

	C, t[3] = madd2(m, 6275282332124812599, t[4], C)

	C, t[4] = madd2(m, 4405229158191370832, t[5], C)

	C, t[5] = madd2(m, 12168445323765187689, t[6], C)

	C, t[6] = madd2(m, 10671602409567735082, t[7], C)

	C, t[7] = madd2(m, 17193196447219887244, t[8], C)

	C, t[8] = madd2(m, 1968177518022708578, t[9], C)

	C, t[9] = madd2(m, 17810219903765590582, t[10], C)

	C, t[10] = madd2(m, 14425778727015286243, t[11], C)

	C, t[11] = madd2(m, 7046014110413742080, t[12], C)

	C, t[12] = madd2(m, 2030555054815402006, t[13], C)

	C, t[13] = madd2(m, 2364210669068217395, t[14], C)

	C, t[14] = madd2(m, 12900422625108798885, t[15], C)

	C, t[15] = madd2(m, 1930406275202811267, t[16], C)

	C, t[16] = madd2(m, 14290777978257669090, t[17], C)

	C, t[17] = madd2(m, 5932508195835066898, t[18], C)

	C, t[18] = madd2(m, 15850336981219945716, t[19], C)

	C, t[19] = madd2(m, 854831035414738096, t[20], C)

	C, t[20] = madd2(m, 2260305572347853835, t[21], C)

	C, t[21] = madd2(m, 5347326701889135155, t[22], C)

	C, t[22] = madd2(m, 4279901139938023971, t[23], C)

	C, t[23] = madd2(m, 4531757068977706609, t[24], C)

	C, t[24] = madd2(m, 9735365819670254271, t[25], C)

	C, t[25] = madd2(m, 3870673539892635154, t[26], C)

	C, t[26] = madd2(m, 15996650252674570430, t[27], C)

	C, t[27] = madd3(m, 7470438302128334459, t[28], C, t[29])

	t[28], t[29] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[19], z[0], t[0])
	C, t[1] = madd2(x[19], z[1], t[1], C)
	C, t[2] = madd2(x[19], z[2], t[2], C)
	C, t[3] = madd2(x[19], z[3], t[3], C)
	C, t[4] = madd2(x[19], z[4], t[4], C)
	C, t[5] = madd2(x[19], z[5], t[5], C)
	C, t[6] = madd2(x[19], z[6], t[6], C)
	C, t[7] = madd2(x[19], z[7], t[7], C)
	C, t[8] = madd2(x[19], z[8], t[8], C)
	C, t[9] = madd2(x[19], z[9], t[9], C)
	C, t[10] = madd2(x[19], z[10], t[10], C)
	C, t[11] = madd2(x[19], z[11], t[11], C)
	C, t[12] = madd2(x[19], z[12], t[12], C)
	C, t[13] = madd2(x[19], z[13], t[13], C)
	C, t[14] = madd2(x[19], z[14], t[14], C)
	C, t[15] = madd2(x[19], z[15], t[15], C)
	C, t[16] = madd2(x[19], z[16], t[16], C)
	C, t[17] = madd2(x[19], z[17], t[17], C)
	C, t[18] = madd2(x[19], z[18], t[18], C)
	C, t[19] = madd2(x[19], z[19], t[19], C)
	C, t[20] = madd2(x[19], z[20], t[20], C)
	C, t[21] = madd2(x[19], z[21], t[21], C)
	C, t[22] = madd2(x[19], z[22], t[22], C)
	C, t[23] = madd2(x[19], z[23], t[23], C)
	C, t[24] = madd2(x[19], z[24], t[24], C)
	C, t[25] = madd2(x[19], z[25], t[25], C)
	C, t[26] = madd2(x[19], z[26], t[26], C)
	C, t[27] = madd2(x[19], z[27], t[27], C)
	C, t[28] = madd2(x[19], z[28], t[28], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 10549899360055738265

	// -----------------------------------
	// Second loop
	C = madd0(m, 6557797220589329239, t[0])

	C, t[0] = madd2(m, 11417059503450690909, t[1], C)

	C, t[1] = madd2(m, 13704541515672720494, t[2], C)

	C, t[2] = madd2(m, 12806808807567348591, t[3], C)

	C, t[3] = madd2(m, 6275282332124812599, t[4], C)

	C, t[4] = madd2(m, 4405229158191370832, t[5], C)

	C, t[5] = madd2(m, 12168445323765187689, t[6], C)

	C, t[6] = madd2(m, 10671602409567735082, t[7], C)

	C, t[7] = madd2(m, 17193196447219887244, t[8], C)

	C, t[8] = madd2(m, 1968177518022708578, t[9], C)

	C, t[9] = madd2(m, 17810219903765590582, t[10], C)

	C, t[10] = madd2(m, 14425778727015286243, t[11], C)

	C, t[11] = madd2(m, 7046014110413742080, t[12], C)

	C, t[12] = madd2(m, 2030555054815402006, t[13], C)

	C, t[13] = madd2(m, 2364210669068217395, t[14], C)

	C, t[14] = madd2(m, 12900422625108798885, t[15], C)

	C, t[15] = madd2(m, 1930406275202811267, t[16], C)

	C, t[16] = madd2(m, 14290777978257669090, t[17], C)

	C, t[17] = madd2(m, 5932508195835066898, t[18], C)

	C, t[18] = madd2(m, 15850336981219945716, t[19], C)

	C, t[19] = madd2(m, 854831035414738096, t[20], C)

	C, t[20] = madd2(m, 2260305572347853835, t[21], C)

	C, t[21] = madd2(m, 5347326701889135155, t[22], C)

	C, t[22] = madd2(m, 4279901139938023971, t[23], C)

	C, t[23] = madd2(m, 4531757068977706609, t[24], C)

	C, t[24] = madd2(m, 9735365819670254271, t[25], C)

	C, t[25] = madd2(m, 3870673539892635154, t[26], C)

	C, t[26] = madd2(m, 15996650252674570430, t[27], C)

	C, t[27] = madd3(m, 7470438302128334459, t[28], C, t[29])

	t[28], t[29] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[20], z[0], t[0])
	C, t[1] = madd2(x[20], z[1], t[1], C)
	C, t[2] = madd2(x[20], z[2], t[2], C)
	C, t[3] = madd2(x[20], z[3], t[3], C)
	C, t[4] = madd2(x[20], z[4], t[4], C)
	C, t[5] = madd2(x[20], z[5], t[5], C)
	C, t[6] = madd2(x[20], z[6], t[6], C)
	C, t[7] = madd2(x[20], z[7], t[7], C)
	C, t[8] = madd2(x[20], z[8], t[8], C)
	C, t[9] = madd2(x[20], z[9], t[9], C)
	C, t[10] = madd2(x[20], z[10], t[10], C)
	C, t[11] = madd2(x[20], z[11], t[11], C)
	C, t[12] = madd2(x[20], z[12], t[12], C)
	C, t[13] = madd2(x[20], z[13], t[13], C)
	C, t[14] = madd2(x[20], z[14], t[14], C)
	C, t[15] = madd2(x[20], z[15], t[15], C)
	C, t[16] = madd2(x[20], z[16], t[16], C)
	C, t[17] = madd2(x[20], z[17], t[17], C)
	C, t[18] = madd2(x[20], z[18], t[18], C)
	C, t[19] = madd2(x[20], z[19], t[19], C)
	C, t[20] = madd2(x[20], z[20], t[20], C)
	C, t[21] = madd2(x[20], z[21], t[21], C)
	C, t[22] = madd2(x[20], z[22], t[22], C)
	C, t[23] = madd2(x[20], z[23], t[23], C)
	C, t[24] = madd2(x[20], z[24], t[24], C)
	C, t[25] = madd2(x[20], z[25], t[25], C)
	C, t[26] = madd2(x[20], z[26], t[26], C)
	C, t[27] = madd2(x[20], z[27], t[27], C)
	C, t[28] = madd2(x[20], z[28], t[28], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 10549899360055738265

	// -----------------------------------
	// Second loop
	C = madd0(m, 6557797220589329239, t[0])

	C, t[0] = madd2(m, 11417059503450690909, t[1], C)

	C, t[1] = madd2(m, 13704541515672720494, t[2], C)

	C, t[2] = madd2(m, 12806808807567348591, t[3], C)

	C, t[3] = madd2(m, 6275282332124812599, t[4], C)

	C, t[4] = madd2(m, 4405229158191370832, t[5], C)

	C, t[5] = madd2(m, 12168445323765187689, t[6], C)

	C, t[6] = madd2(m, 10671602409567735082, t[7], C)

	C, t[7] = madd2(m, 17193196447219887244, t[8], C)

	C, t[8] = madd2(m, 1968177518022708578, t[9], C)

	C, t[9] = madd2(m, 17810219903765590582, t[10], C)

	C, t[10] = madd2(m, 14425778727015286243, t[11], C)

	C, t[11] = madd2(m, 7046014110413742080, t[12], C)

	C, t[12] = madd2(m, 2030555054815402006, t[13], C)

	C, t[13] = madd2(m, 2364210669068217395, t[14], C)

	C, t[14] = madd2(m, 12900422625108798885, t[15], C)

	C, t[15] = madd2(m, 1930406275202811267, t[16], C)

	C, t[16] = madd2(m, 14290777978257669090, t[17], C)

	C, t[17] = madd2(m, 5932508195835066898, t[18], C)

	C, t[18] = madd2(m, 15850336981219945716, t[19], C)

	C, t[19] = madd2(m, 854831035414738096, t[20], C)

	C, t[20] = madd2(m, 2260305572347853835, t[21], C)

	C, t[21] = madd2(m, 5347326701889135155, t[22], C)

	C, t[22] = madd2(m, 4279901139938023971, t[23], C)

	C, t[23] = madd2(m, 4531757068977706609, t[24], C)

	C, t[24] = madd2(m, 9735365819670254271, t[25], C)

	C, t[25] = madd2(m, 3870673539892635154, t[26], C)

	C, t[26] = madd2(m, 15996650252674570430, t[27], C)

	C, t[27] = madd3(m, 7470438302128334459, t[28], C, t[29])

	t[28], t[29] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[21], z[0], t[0])
	C, t[1] = madd2(x[21], z[1], t[1], C)
	C, t[2] = madd2(x[21], z[2], t[2], C)
	C, t[3] = madd2(x[21], z[3], t[3], C)
	C, t[4] = madd2(x[21], z[4], t[4], C)
	C, t[5] = madd2(x[21], z[5], t[5], C)
	C, t[6] = madd2(x[21], z[6], t[6], C)
	C, t[7] = madd2(x[21], z[7], t[7], C)
	C, t[8] = madd2(x[21], z[8], t[8], C)
	C, t[9] = madd2(x[21], z[9], t[9], C)
	C, t[10] = madd2(x[21], z[10], t[10], C)
	C, t[11] = madd2(x[21], z[11], t[11], C)
	C, t[12] = madd2(x[21], z[12], t[12], C)
	C, t[13] = madd2(x[21], z[13], t[13], C)
	C, t[14] = madd2(x[21], z[14], t[14], C)
	C, t[15] = madd2(x[21], z[15], t[15], C)
	C, t[16] = madd2(x[21], z[16], t[16], C)
	C, t[17] = madd2(x[21], z[17], t[17], C)
	C, t[18] = madd2(x[21], z[18], t[18], C)
	C, t[19] = madd2(x[21], z[19], t[19], C)
	C, t[20] = madd2(x[21], z[20], t[20], C)
	C, t[21] = madd2(x[21], z[21], t[21], C)
	C, t[22] = madd2(x[21], z[22], t[22], C)
	C, t[23] = madd2(x[21], z[23], t[23], C)
	C, t[24] = madd2(x[21], z[24], t[24], C)
	C, t[25] = madd2(x[21], z[25], t[25], C)
	C, t[26] = madd2(x[21], z[26], t[26], C)
	C, t[27] = madd2(x[21], z[27], t[27], C)
	C, t[28] = madd2(x[21], z[28], t[28], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 10549899360055738265

	// -----------------------------------
	// Second loop
	C = madd0(m, 6557797220589329239, t[0])

	C, t[0] = madd2(m, 11417059503450690909, t[1], C)

	C, t[1] = madd2(m, 13704541515672720494, t[2], C)

	C, t[2] = madd2(m, 12806808807567348591, t[3], C)

	C, t[3] = madd2(m, 6275282332124812599, t[4], C)

	C, t[4] = madd2(m, 4405229158191370832, t[5], C)

	C, t[5] = madd2(m, 12168445323765187689, t[6], C)

	C, t[6] = madd2(m, 10671602409567735082, t[7], C)

	C, t[7] = madd2(m, 17193196447219887244, t[8], C)

	C, t[8] = madd2(m, 1968177518022708578, t[9], C)

	C, t[9] = madd2(m, 17810219903765590582, t[10], C)

	C, t[10] = madd2(m, 14425778727015286243, t[11], C)

	C, t[11] = madd2(m, 7046014110413742080, t[12], C)

	C, t[12] = madd2(m, 2030555054815402006, t[13], C)

	C, t[13] = madd2(m, 2364210669068217395, t[14], C)

	C, t[14] = madd2(m, 12900422625108798885, t[15], C)

	C, t[15] = madd2(m, 1930406275202811267, t[16], C)

	C, t[16] = madd2(m, 14290777978257669090, t[17], C)

	C, t[17] = madd2(m, 5932508195835066898, t[18], C)

	C, t[18] = madd2(m, 15850336981219945716, t[19], C)

	C, t[19] = madd2(m, 854831035414738096, t[20], C)

	C, t[20] = madd2(m, 2260305572347853835, t[21], C)

	C, t[21] = madd2(m, 5347326701889135155, t[22], C)

	C, t[22] = madd2(m, 4279901139938023971, t[23], C)

	C, t[23] = madd2(m, 4531757068977706609, t[24], C)

	C, t[24] = madd2(m, 9735365819670254271, t[25], C)

	C, t[25] = madd2(m, 3870673539892635154, t[26], C)

	C, t[26] = madd2(m, 15996650252674570430, t[27], C)

	C, t[27] = madd3(m, 7470438302128334459, t[28], C, t[29])

	t[28], t[29] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[22], z[0], t[0])
	C, t[1] = madd2(x[22], z[1], t[1], C)
	C, t[2] = madd2(x[22], z[2], t[2], C)
	C, t[3] = madd2(x[22], z[3], t[3], C)
	C, t[4] = madd2(x[22], z[4], t[4], C)
	C, t[5] = madd2(x[22], z[5], t[5], C)
	C, t[6] = madd2(x[22], z[6], t[6], C)
	C, t[7] = madd2(x[22], z[7], t[7], C)
	C, t[8] = madd2(x[22], z[8], t[8], C)
	C, t[9] = madd2(x[22], z[9], t[9], C)
	C, t[10] = madd2(x[22], z[10], t[10], C)
	C, t[11] = madd2(x[22], z[11], t[11], C)
	C, t[12] = madd2(x[22], z[12], t[12], C)
	C, t[13] = madd2(x[22], z[13], t[13], C)
	C, t[14] = madd2(x[22], z[14], t[14], C)
	C, t[15] = madd2(x[22], z[15], t[15], C)
	C, t[16] = madd2(x[22], z[16], t[16], C)
	C, t[17] = madd2(x[22], z[17], t[17], C)
	C, t[18] = madd2(x[22], z[18], t[18], C)
	C, t[19] = madd2(x[22], z[19], t[19], C)
	C, t[20] = madd2(x[22], z[20], t[20], C)
	C, t[21] = madd2(x[22], z[21], t[21], C)
	C, t[22] = madd2(x[22], z[22], t[22], C)
	C, t[23] = madd2(x[22], z[23], t[23], C)
	C, t[24] = madd2(x[22], z[24], t[24], C)
	C, t[25] = madd2(x[22], z[25], t[25], C)
	C, t[26] = madd2(x[22], z[26], t[26], C)
	C, t[27] = madd2(x[22], z[27], t[27], C)
	C, t[28] = madd2(x[22], z[28], t[28], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 10549899360055738265

	// -----------------------------------
	// Second loop
	C = madd0(m, 6557797220589329239, t[0])

	C, t[0] = madd2(m, 11417059503450690909, t[1], C)

	C, t[1] = madd2(m, 13704541515672720494, t[2], C)

	C, t[2] = madd2(m, 12806808807567348591, t[3], C)

	C, t[3] = madd2(m, 6275282332124812599, t[4], C)

	C, t[4] = madd2(m, 4405229158191370832, t[5], C)

	C, t[5] = madd2(m, 12168445323765187689, t[6], C)

	C, t[6] = madd2(m, 10671602409567735082, t[7], C)

	C, t[7] = madd2(m, 17193196447219887244, t[8], C)

	C, t[8] = madd2(m, 1968177518022708578, t[9], C)

	C, t[9] = madd2(m, 17810219903765590582, t[10], C)

	C, t[10] = madd2(m, 14425778727015286243, t[11], C)

	C, t[11] = madd2(m, 7046014110413742080, t[12], C)

	C, t[12] = madd2(m, 2030555054815402006, t[13], C)

	C, t[13] = madd2(m, 2364210669068217395, t[14], C)

	C, t[14] = madd2(m, 12900422625108798885, t[15], C)

	C, t[15] = madd2(m, 1930406275202811267, t[16], C)

	C, t[16] = madd2(m, 14290777978257669090, t[17], C)

	C, t[17] = madd2(m, 5932508195835066898, t[18], C)

	C, t[18] = madd2(m, 15850336981219945716, t[19], C)

	C, t[19] = madd2(m, 854831035414738096, t[20], C)

	C, t[20] = madd2(m, 2260305572347853835, t[21], C)

	C, t[21] = madd2(m, 5347326701889135155, t[22], C)

	C, t[22] = madd2(m, 4279901139938023971, t[23], C)

	C, t[23] = madd2(m, 4531757068977706609, t[24], C)

	C, t[24] = madd2(m, 9735365819670254271, t[25], C)

	C, t[25] = madd2(m, 3870673539892635154, t[26], C)

	C, t[26] = madd2(m, 15996650252674570430, t[27], C)

	C, t[27] = madd3(m, 7470438302128334459, t[28], C, t[29])

	t[28], t[29] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[23], z[0], t[0])
	C, t[1] = madd2(x[23], z[1], t[1], C)
	C, t[2] = madd2(x[23], z[2], t[2], C)
	C, t[3] = madd2(x[23], z[3], t[3], C)
	C, t[4] = madd2(x[23], z[4], t[4], C)
	C, t[5] = madd2(x[23], z[5], t[5], C)
	C, t[6] = madd2(x[23], z[6], t[6], C)
	C, t[7] = madd2(x[23], z[7], t[7], C)
	C, t[8] = madd2(x[23], z[8], t[8], C)
	C, t[9] = madd2(x[23], z[9], t[9], C)
	C, t[10] = madd2(x[23], z[10], t[10], C)
	C, t[11] = madd2(x[23], z[11], t[11], C)
	C, t[12] = madd2(x[23], z[12], t[12], C)
	C, t[13] = madd2(x[23], z[13], t[13], C)
	C, t[14] = madd2(x[23], z[14], t[14], C)
	C, t[15] = madd2(x[23], z[15], t[15], C)
	C, t[16] = madd2(x[23], z[16], t[16], C)
	C, t[17] = madd2(x[23], z[17], t[17], C)
	C, t[18] = madd2(x[23], z[18], t[18], C)
	C, t[19] = madd2(x[23], z[19], t[19], C)
	C, t[20] = madd2(x[23], z[20], t[20], C)
	C, t[21] = madd2(x[23], z[21], t[21], C)
	C, t[22] = madd2(x[23], z[22], t[22], C)
	C, t[23] = madd2(x[23], z[23], t[23], C)
	C, t[24] = madd2(x[23], z[24], t[24], C)
	C, t[25] = madd2(x[23], z[25], t[25], C)
	C, t[26] = madd2(x[23], z[26], t[26], C)
	C, t[27] = madd2(x[23], z[27], t[27], C)
	C, t[28] = madd2(x[23], z[28], t[28], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 10549899360055738265

	// -----------------------------------
	// Second loop
	C = madd0(m, 6557797220589329239, t[0])

	C, t[0] = madd2(m, 11417059503450690909, t[1], C)

	C, t[1] = madd2(m, 13704541515672720494, t[2], C)

	C, t[2] = madd2(m, 12806808807567348591, t[3], C)

	C, t[3] = madd2(m, 6275282332124812599, t[4], C)

	C, t[4] = madd2(m, 4405229158191370832, t[5], C)

	C, t[5] = madd2(m, 12168445323765187689, t[6], C)

	C, t[6] = madd2(m, 10671602409567735082, t[7], C)

	C, t[7] = madd2(m, 17193196447219887244, t[8], C)

	C, t[8] = madd2(m, 1968177518022708578, t[9], C)

	C, t[9] = madd2(m, 17810219903765590582, t[10], C)

	C, t[10] = madd2(m, 14425778727015286243, t[11], C)

	C, t[11] = madd2(m, 7046014110413742080, t[12], C)

	C, t[12] = madd2(m, 2030555054815402006, t[13], C)

	C, t[13] = madd2(m, 2364210669068217395, t[14], C)

	C, t[14] = madd2(m, 12900422625108798885, t[15], C)

	C, t[15] = madd2(m, 1930406275202811267, t[16], C)

	C, t[16] = madd2(m, 14290777978257669090, t[17], C)

	C, t[17] = madd2(m, 5932508195835066898, t[18], C)

	C, t[18] = madd2(m, 15850336981219945716, t[19], C)

	C, t[19] = madd2(m, 854831035414738096, t[20], C)

	C, t[20] = madd2(m, 2260305572347853835, t[21], C)

	C, t[21] = madd2(m, 5347326701889135155, t[22], C)

	C, t[22] = madd2(m, 4279901139938023971, t[23], C)

	C, t[23] = madd2(m, 4531757068977706609, t[24], C)

	C, t[24] = madd2(m, 9735365819670254271, t[25], C)

	C, t[25] = madd2(m, 3870673539892635154, t[26], C)

	C, t[26] = madd2(m, 15996650252674570430, t[27], C)

	C, t[27] = madd3(m, 7470438302128334459, t[28], C, t[29])

	t[28], t[29] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[24], z[0], t[0])
	C, t[1] = madd2(x[24], z[1], t[1], C)
	C, t[2] = madd2(x[24], z[2], t[2], C)
	C, t[3] = madd2(x[24], z[3], t[3], C)
	C, t[4] = madd2(x[24], z[4], t[4], C)
	C, t[5] = madd2(x[24], z[5], t[5], C)
	C, t[6] = madd2(x[24], z[6], t[6], C)
	C, t[7] = madd2(x[24], z[7], t[7], C)
	C, t[8] = madd2(x[24], z[8], t[8], C)
	C, t[9] = madd2(x[24], z[9], t[9], C)
	C, t[10] = madd2(x[24], z[10], t[10], C)
	C, t[11] = madd2(x[24], z[11], t[11], C)
	C, t[12] = madd2(x[24], z[12], t[12], C)
	C, t[13] = madd2(x[24], z[13], t[13], C)
	C, t[14] = madd2(x[24], z[14], t[14], C)
	C, t[15] = madd2(x[24], z[15], t[15], C)
	C, t[16] = madd2(x[24], z[16], t[16], C)
	C, t[17] = madd2(x[24], z[17], t[17], C)
	C, t[18] = madd2(x[24], z[18], t[18], C)
	C, t[19] = madd2(x[24], z[19], t[19], C)
	C, t[20] = madd2(x[24], z[20], t[20], C)
	C, t[21] = madd2(x[24], z[21], t[21], C)
	C, t[22] = madd2(x[24], z[22], t[22], C)
	C, t[23] = madd2(x[24], z[23], t[23], C)
	C, t[24] = madd2(x[24], z[24], t[24], C)
	C, t[25] = madd2(x[24], z[25], t[25], C)
	C, t[26] = madd2(x[24], z[26], t[26], C)
	C, t[27] = madd2(x[24], z[27], t[27], C)
	C, t[28] = madd2(x[24], z[28], t[28], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 10549899360055738265

	// -----------------------------------
	// Second loop
	C = madd0(m, 6557797220589329239, t[0])

	C, t[0] = madd2(m, 11417059503450690909, t[1], C)

	C, t[1] = madd2(m, 13704541515672720494, t[2], C)

	C, t[2] = madd2(m, 12806808807567348591, t[3], C)

	C, t[3] = madd2(m, 6275282332124812599, t[4], C)

	C, t[4] = madd2(m, 4405229158191370832, t[5], C)

	C, t[5] = madd2(m, 12168445323765187689, t[6], C)

	C, t[6] = madd2(m, 10671602409567735082, t[7], C)

	C, t[7] = madd2(m, 17193196447219887244, t[8], C)

	C, t[8] = madd2(m, 1968177518022708578, t[9], C)

	C, t[9] = madd2(m, 17810219903765590582, t[10], C)

	C, t[10] = madd2(m, 14425778727015286243, t[11], C)

	C, t[11] = madd2(m, 7046014110413742080, t[12], C)

	C, t[12] = madd2(m, 2030555054815402006, t[13], C)

	C, t[13] = madd2(m, 2364210669068217395, t[14], C)

	C, t[14] = madd2(m, 12900422625108798885, t[15], C)

	C, t[15] = madd2(m, 1930406275202811267, t[16], C)

	C, t[16] = madd2(m, 14290777978257669090, t[17], C)

	C, t[17] = madd2(m, 5932508195835066898, t[18], C)

	C, t[18] = madd2(m, 15850336981219945716, t[19], C)

	C, t[19] = madd2(m, 854831035414738096, t[20], C)

	C, t[20] = madd2(m, 2260305572347853835, t[21], C)

	C, t[21] = madd2(m, 5347326701889135155, t[22], C)

	C, t[22] = madd2(m, 4279901139938023971, t[23], C)

	C, t[23] = madd2(m, 4531757068977706609, t[24], C)

	C, t[24] = madd2(m, 9735365819670254271, t[25], C)

	C, t[25] = madd2(m, 3870673539892635154, t[26], C)

	C, t[26] = madd2(m, 15996650252674570430, t[27], C)

	C, t[27] = madd3(m, 7470438302128334459, t[28], C, t[29])

	t[28], t[29] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[25], z[0], t[0])
	C, t[1] = madd2(x[25], z[1], t[1], C)
	C, t[2] = madd2(x[25], z[2], t[2], C)
	C, t[3] = madd2(x[25], z[3], t[3], C)
	C, t[4] = madd2(x[25], z[4], t[4], C)
	C, t[5] = madd2(x[25], z[5], t[5], C)
	C, t[6] = madd2(x[25], z[6], t[6], C)
	C, t[7] = madd2(x[25], z[7], t[7], C)
	C, t[8] = madd2(x[25], z[8], t[8], C)
	C, t[9] = madd2(x[25], z[9], t[9], C)
	C, t[10] = madd2(x[25], z[10], t[10], C)
	C, t[11] = madd2(x[25], z[11], t[11], C)
	C, t[12] = madd2(x[25], z[12], t[12], C)
	C, t[13] = madd2(x[25], z[13], t[13], C)
	C, t[14] = madd2(x[25], z[14], t[14], C)
	C, t[15] = madd2(x[25], z[15], t[15], C)
	C, t[16] = madd2(x[25], z[16], t[16], C)
	C, t[17] = madd2(x[25], z[17], t[17], C)
	C, t[18] = madd2(x[25], z[18], t[18], C)
	C, t[19] = madd2(x[25], z[19], t[19], C)
	C, t[20] = madd2(x[25], z[20], t[20], C)
	C, t[21] = madd2(x[25], z[21], t[21], C)
	C, t[22] = madd2(x[25], z[22], t[22], C)
	C, t[23] = madd2(x[25], z[23], t[23], C)
	C, t[24] = madd2(x[25], z[24], t[24], C)
	C, t[25] = madd2(x[25], z[25], t[25], C)
	C, t[26] = madd2(x[25], z[26], t[26], C)
	C, t[27] = madd2(x[25], z[27], t[27], C)
	C, t[28] = madd2(x[25], z[28], t[28], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 10549899360055738265

	// -----------------------------------
	// Second loop
	C = madd0(m, 6557797220589329239, t[0])

	C, t[0] = madd2(m, 11417059503450690909, t[1], C)

	C, t[1] = madd2(m, 13704541515672720494, t[2], C)

	C, t[2] = madd2(m, 12806808807567348591, t[3], C)

	C, t[3] = madd2(m, 6275282332124812599, t[4], C)

	C, t[4] = madd2(m, 4405229158191370832, t[5], C)

	C, t[5] = madd2(m, 12168445323765187689, t[6], C)

	C, t[6] = madd2(m, 10671602409567735082, t[7], C)

	C, t[7] = madd2(m, 17193196447219887244, t[8], C)

	C, t[8] = madd2(m, 1968177518022708578, t[9], C)

	C, t[9] = madd2(m, 17810219903765590582, t[10], C)

	C, t[10] = madd2(m, 14425778727015286243, t[11], C)

	C, t[11] = madd2(m, 7046014110413742080, t[12], C)

	C, t[12] = madd2(m, 2030555054815402006, t[13], C)

	C, t[13] = madd2(m, 2364210669068217395, t[14], C)

	C, t[14] = madd2(m, 12900422625108798885, t[15], C)

	C, t[15] = madd2(m, 1930406275202811267, t[16], C)

	C, t[16] = madd2(m, 14290777978257669090, t[17], C)

	C, t[17] = madd2(m, 5932508195835066898, t[18], C)

	C, t[18] = madd2(m, 15850336981219945716, t[19], C)

	C, t[19] = madd2(m, 854831035414738096, t[20], C)

	C, t[20] = madd2(m, 2260305572347853835, t[21], C)

	C, t[21] = madd2(m, 5347326701889135155, t[22], C)

	C, t[22] = madd2(m, 4279901139938023971, t[23], C)

	C, t[23] = madd2(m, 4531757068977706609, t[24], C)

	C, t[24] = madd2(m, 9735365819670254271, t[25], C)

	C, t[25] = madd2(m, 3870673539892635154, t[26], C)

	C, t[26] = madd2(m, 15996650252674570430, t[27], C)

	C, t[27] = madd3(m, 7470438302128334459, t[28], C, t[29])

	t[28], t[29] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[26], z[0], t[0])
	C, t[1] = madd2(x[26], z[1], t[1], C)
	C, t[2] = madd2(x[26], z[2], t[2], C)
	C, t[3] = madd2(x[26], z[3], t[3], C)
	C, t[4] = madd2(x[26], z[4], t[4], C)
	C, t[5] = madd2(x[26], z[5], t[5], C)
	C, t[6] = madd2(x[26], z[6], t[6], C)
	C, t[7] = madd2(x[26], z[7], t[7], C)
	C, t[8] = madd2(x[26], z[8], t[8], C)
	C, t[9] = madd2(x[26], z[9], t[9], C)
	C, t[10] = madd2(x[26], z[10], t[10], C)
	C, t[11] = madd2(x[26], z[11], t[11], C)
	C, t[12] = madd2(x[26], z[12], t[12], C)
	C, t[13] = madd2(x[26], z[13], t[13], C)
	C, t[14] = madd2(x[26], z[14], t[14], C)
	C, t[15] = madd2(x[26], z[15], t[15], C)
	C, t[16] = madd2(x[26], z[16], t[16], C)
	C, t[17] = madd2(x[26], z[17], t[17], C)
	C, t[18] = madd2(x[26], z[18], t[18], C)
	C, t[19] = madd2(x[26], z[19], t[19], C)
	C, t[20] = madd2(x[26], z[20], t[20], C)
	C, t[21] = madd2(x[26], z[21], t[21], C)
	C, t[22] = madd2(x[26], z[22], t[22], C)
	C, t[23] = madd2(x[26], z[23], t[23], C)
	C, t[24] = madd2(x[26], z[24], t[24], C)
	C, t[25] = madd2(x[26], z[25], t[25], C)
	C, t[26] = madd2(x[26], z[26], t[26], C)
	C, t[27] = madd2(x[26], z[27], t[27], C)
	C, t[28] = madd2(x[26], z[28], t[28], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 10549899360055738265

	// -----------------------------------
	// Second loop
	C = madd0(m, 6557797220589329239, t[0])

	C, t[0] = madd2(m, 11417059503450690909, t[1], C)

	C, t[1] = madd2(m, 13704541515672720494, t[2], C)

	C, t[2] = madd2(m, 12806808807567348591, t[3], C)

	C, t[3] = madd2(m, 6275282332124812599, t[4], C)

	C, t[4] = madd2(m, 4405229158191370832, t[5], C)

	C, t[5] = madd2(m, 12168445323765187689, t[6], C)

	C, t[6] = madd2(m, 10671602409567735082, t[7], C)

	C, t[7] = madd2(m, 17193196447219887244, t[8], C)

	C, t[8] = madd2(m, 1968177518022708578, t[9], C)

	C, t[9] = madd2(m, 17810219903765590582, t[10], C)

	C, t[10] = madd2(m, 14425778727015286243, t[11], C)

	C, t[11] = madd2(m, 7046014110413742080, t[12], C)

	C, t[12] = madd2(m, 2030555054815402006, t[13], C)

	C, t[13] = madd2(m, 2364210669068217395, t[14], C)

	C, t[14] = madd2(m, 12900422625108798885, t[15], C)

	C, t[15] = madd2(m, 1930406275202811267, t[16], C)

	C, t[16] = madd2(m, 14290777978257669090, t[17], C)

	C, t[17] = madd2(m, 5932508195835066898, t[18], C)

	C, t[18] = madd2(m, 15850336981219945716, t[19], C)

	C, t[19] = madd2(m, 854831035414738096, t[20], C)

	C, t[20] = madd2(m, 2260305572347853835, t[21], C)

	C, t[21] = madd2(m, 5347326701889135155, t[22], C)

	C, t[22] = madd2(m, 4279901139938023971, t[23], C)

	C, t[23] = madd2(m, 4531757068977706609, t[24], C)

	C, t[24] = madd2(m, 9735365819670254271, t[25], C)

	C, t[25] = madd2(m, 3870673539892635154, t[26], C)

	C, t[26] = madd2(m, 15996650252674570430, t[27], C)

	C, t[27] = madd3(m, 7470438302128334459, t[28], C, t[29])

	t[28], t[29] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[27], z[0], t[0])
	C, t[1] = madd2(x[27], z[1], t[1], C)
	C, t[2] = madd2(x[27], z[2], t[2], C)
	C, t[3] = madd2(x[27], z[3], t[3], C)
	C, t[4] = madd2(x[27], z[4], t[4], C)
	C, t[5] = madd2(x[27], z[5], t[5], C)
	C, t[6] = madd2(x[27], z[6], t[6], C)
	C, t[7] = madd2(x[27], z[7], t[7], C)
	C, t[8] = madd2(x[27], z[8], t[8], C)
	C, t[9] = madd2(x[27], z[9], t[9], C)
	C, t[10] = madd2(x[27], z[10], t[10], C)
	C, t[11] = madd2(x[27], z[11], t[11], C)
	C, t[12] = madd2(x[27], z[12], t[12], C)
	C, t[13] = madd2(x[27], z[13], t[13], C)
	C, t[14] = madd2(x[27], z[14], t[14], C)
	C, t[15] = madd2(x[27], z[15], t[15], C)
	C, t[16] = madd2(x[27], z[16], t[16], C)
	C, t[17] = madd2(x[27], z[17], t[17], C)
	C, t[18] = madd2(x[27], z[18], t[18], C)
	C, t[19] = madd2(x[27], z[19], t[19], C)
	C, t[20] = madd2(x[27], z[20], t[20], C)
	C, t[21] = madd2(x[27], z[21], t[21], C)
	C, t[22] = madd2(x[27], z[22], t[22], C)
	C, t[23] = madd2(x[27], z[23], t[23], C)
	C, t[24] = madd2(x[27], z[24], t[24], C)
	C, t[25] = madd2(x[27], z[25], t[25], C)
	C, t[26] = madd2(x[27], z[26], t[26], C)
	C, t[27] = madd2(x[27], z[27], t[27], C)
	C, t[28] = madd2(x[27], z[28], t[28], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 10549899360055738265

	// -----------------------------------
	// Second loop
	C = madd0(m, 6557797220589329239, t[0])

	C, t[0] = madd2(m, 11417059503450690909, t[1], C)

	C, t[1] = madd2(m, 13704541515672720494, t[2], C)

	C, t[2] = madd2(m, 12806808807567348591, t[3], C)

	C, t[3] = madd2(m, 6275282332124812599, t[4], C)

	C, t[4] = madd2(m, 4405229158191370832, t[5], C)

	C, t[5] = madd2(m, 12168445323765187689, t[6], C)

	C, t[6] = madd2(m, 10671602409567735082, t[7], C)

	C, t[7] = madd2(m, 17193196447219887244, t[8], C)

	C, t[8] = madd2(m, 1968177518022708578, t[9], C)

	C, t[9] = madd2(m, 17810219903765590582, t[10], C)

	C, t[10] = madd2(m, 14425778727015286243, t[11], C)

	C, t[11] = madd2(m, 7046014110413742080, t[12], C)

	C, t[12] = madd2(m, 2030555054815402006, t[13], C)

	C, t[13] = madd2(m, 2364210669068217395, t[14], C)

	C, t[14] = madd2(m, 12900422625108798885, t[15], C)

	C, t[15] = madd2(m, 1930406275202811267, t[16], C)

	C, t[16] = madd2(m, 14290777978257669090, t[17], C)

	C, t[17] = madd2(m, 5932508195835066898, t[18], C)

	C, t[18] = madd2(m, 15850336981219945716, t[19], C)

	C, t[19] = madd2(m, 854831035414738096, t[20], C)

	C, t[20] = madd2(m, 2260305572347853835, t[21], C)

	C, t[21] = madd2(m, 5347326701889135155, t[22], C)

	C, t[22] = madd2(m, 4279901139938023971, t[23], C)

	C, t[23] = madd2(m, 4531757068977706609, t[24], C)

	C, t[24] = madd2(m, 9735365819670254271, t[25], C)

	C, t[25] = madd2(m, 3870673539892635154, t[26], C)

	C, t[26] = madd2(m, 15996650252674570430, t[27], C)

	C, t[27] = madd3(m, 7470438302128334459, t[28], C, t[29])

	t[28], t[29] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[28], z[0], t[0])
	C, t[1] = madd2(x[28], z[1], t[1], C)
	C, t[2] = madd2(x[28], z[2], t[2], C)
	C, t[3] = madd2(x[28], z[3], t[3], C)
	C, t[4] = madd2(x[28], z[4], t[4], C)
	C, t[5] = madd2(x[28], z[5], t[5], C)
	C, t[6] = madd2(x[28], z[6], t[6], C)
	C, t[7] = madd2(x[28], z[7], t[7], C)
	C, t[8] = madd2(x[28], z[8], t[8], C)
	C, t[9] = madd2(x[28], z[9], t[9], C)
	C, t[10] = madd2(x[28], z[10], t[10], C)
	C, t[11] = madd2(x[28], z[11], t[11], C)
	C, t[12] = madd2(x[28], z[12], t[12], C)
	C, t[13] = madd2(x[28], z[13], t[13], C)
	C, t[14] = madd2(x[28], z[14], t[14], C)
	C, t[15] = madd2(x[28], z[15], t[15], C)
	C, t[16] = madd2(x[28], z[16], t[16], C)
	C, t[17] = madd2(x[28], z[17], t[17], C)
	C, t[18] = madd2(x[28], z[18], t[18], C)
	C, t[19] = madd2(x[28], z[19], t[19], C)
	C, t[20] = madd2(x[28], z[20], t[20], C)
	C, t[21] = madd2(x[28], z[21], t[21], C)
	C, t[22] = madd2(x[28], z[22], t[22], C)
	C, t[23] = madd2(x[28], z[23], t[23], C)
	C, t[24] = madd2(x[28], z[24], t[24], C)
	C, t[25] = madd2(x[28], z[25], t[25], C)
	C, t[26] = madd2(x[28], z[26], t[26], C)
	C, t[27] = madd2(x[28], z[27], t[27], C)
	C, t[28] = madd2(x[28], z[28], t[28], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 10549899360055738265

	// -----------------------------------
	// Second loop
	C = madd0(m, 6557797220589329239, t[0])

	C, t[0] = madd2(m, 11417059503450690909, t[1], C)

	C, t[1] = madd2(m, 13704541515672720494, t[2], C)

	C, t[2] = madd2(m, 12806808807567348591, t[3], C)

	C, t[3] = madd2(m, 6275282332124812599, t[4], C)

	C, t[4] = madd2(m, 4405229158191370832, t[5], C)

	C, t[5] = madd2(m, 12168445323765187689, t[6], C)

	C, t[6] = madd2(m, 10671602409567735082, t[7], C)

	C, t[7] = madd2(m, 17193196447219887244, t[8], C)

	C, t[8] = madd2(m, 1968177518022708578, t[9], C)

	C, t[9] = madd2(m, 17810219903765590582, t[10], C)

	C, t[10] = madd2(m, 14425778727015286243, t[11], C)

	C, t[11] = madd2(m, 7046014110413742080, t[12], C)

	C, t[12] = madd2(m, 2030555054815402006, t[13], C)

	C, t[13] = madd2(m, 2364210669068217395, t[14], C)

	C, t[14] = madd2(m, 12900422625108798885, t[15], C)

	C, t[15] = madd2(m, 1930406275202811267, t[16], C)

	C, t[16] = madd2(m, 14290777978257669090, t[17], C)

	C, t[17] = madd2(m, 5932508195835066898, t[18], C)

	C, t[18] = madd2(m, 15850336981219945716, t[19], C)

	C, t[19] = madd2(m, 854831035414738096, t[20], C)

	C, t[20] = madd2(m, 2260305572347853835, t[21], C)

	C, t[21] = madd2(m, 5347326701889135155, t[22], C)

	C, t[22] = madd2(m, 4279901139938023971, t[23], C)

	C, t[23] = madd2(m, 4531757068977706609, t[24], C)

	C, t[24] = madd2(m, 9735365819670254271, t[25], C)

	C, t[25] = madd2(m, 3870673539892635154, t[26], C)

	C, t[26] = madd2(m, 15996650252674570430, t[27], C)

	C, t[27] = madd3(m, 7470438302128334459, t[28], C, t[29])

	t[28], t[29] = bits.Add64(D, C, 0)

	if t[29] != 0 {
		// we need to reduce, we have a result on 30 words
		var b uint64
		z[0], b = bits.Sub64(t[0], 6557797220589329239, 0)
		z[1], b = bits.Sub64(t[1], 11417059503450690909, b)
		z[2], b = bits.Sub64(t[2], 13704541515672720494, b)
		z[3], b = bits.Sub64(t[3], 12806808807567348591, b)
		z[4], b = bits.Sub64(t[4], 6275282332124812599, b)
		z[5], b = bits.Sub64(t[5], 4405229158191370832, b)
		z[6], b = bits.Sub64(t[6], 12168445323765187689, b)
		z[7], b = bits.Sub64(t[7], 10671602409567735082, b)
		z[8], b = bits.Sub64(t[8], 17193196447219887244, b)
		z[9], b = bits.Sub64(t[9], 1968177518022708578, b)
		z[10], b = bits.Sub64(t[10], 17810219903765590582, b)
		z[11], b = bits.Sub64(t[11], 14425778727015286243, b)
		z[12], b = bits.Sub64(t[12], 7046014110413742080, b)
		z[13], b = bits.Sub64(t[13], 2030555054815402006, b)
		z[14], b = bits.Sub64(t[14], 2364210669068217395, b)
		z[15], b = bits.Sub64(t[15], 12900422625108798885, b)
		z[16], b = bits.Sub64(t[16], 1930406275202811267, b)
		z[17], b = bits.Sub64(t[17], 14290777978257669090, b)
		z[18], b = bits.Sub64(t[18], 5932508195835066898, b)
		z[19], b = bits.Sub64(t[19], 15850336981219945716, b)
		z[20], b = bits.Sub64(t[20], 854831035414738096, b)
		z[21], b = bits.Sub64(t[21], 2260305572347853835, b)
		z[22], b = bits.Sub64(t[22], 5347326701889135155, b)
		z[23], b = bits.Sub64(t[23], 4279901139938023971, b)
		z[24], b = bits.Sub64(t[24], 4531757068977706609, b)
		z[25], b = bits.Sub64(t[25], 9735365819670254271, b)
		z[26], b = bits.Sub64(t[26], 3870673539892635154, b)
		z[27], b = bits.Sub64(t[27], 15996650252674570430, b)
		z[28], _ = bits.Sub64(t[28], 7470438302128334459, b)
		return z
	}

	// copy t into z
	z[0] = t[0]
	z[1] = t[1]
	z[2] = t[2]
	z[3] = t[3]
	z[4] = t[4]
	z[5] = t[5]
	z[6] = t[6]
	z[7] = t[7]
	z[8] = t[8]
	z[9] = t[9]
	z[10] = t[10]
	z[11] = t[11]
	z[12] = t[12]
	z[13] = t[13]
	z[14] = t[14]
	z[15] = t[15]
	z[16] = t[16]
	z[17] = t[17]
	z[18] = t[18]
	z[19] = t[19]
	z[20] = t[20]
	z[21] = t[21]
	z[22] = t[22]
	z[23] = t[23]
	z[24] = t[24]
	z[25] = t[25]
	z[26] = t[26]
	z[27] = t[27]
	z[28] = t[28]

	// if z > q --> z -= q
	// note: this is NOT constant time
	if !(z[28] < 7470438302128334459 || (z[28] == 7470438302128334459 && (z[27] < 15996650252674570430 || (z[27] == 15996650252674570430 && (z[26] < 3870673539892635154 || (z[26] == 3870673539892635154 && (z[25] < 9735365819670254271 || (z[25] == 9735365819670254271 && (z[24] < 4531757068977706609 || (z[24] == 4531757068977706609 && (z[23] < 4279901139938023971 || (z[23] == 4279901139938023971 && (z[22] < 5347326701889135155 || (z[22] == 5347326701889135155 && (z[21] < 2260305572347853835 || (z[21] == 2260305572347853835 && (z[20] < 854831035414738096 || (z[20] == 854831035414738096 && (z[19] < 15850336981219945716 || (z[19] == 15850336981219945716 && (z[18] < 5932508195835066898 || (z[18] == 5932508195835066898 && (z[17] < 14290777978257669090 || (z[17] == 14290777978257669090 && (z[16] < 1930406275202811267 || (z[16] == 1930406275202811267 && (z[15] < 12900422625108798885 || (z[15] == 12900422625108798885 && (z[14] < 2364210669068217395 || (z[14] == 2364210669068217395 && (z[13] < 2030555054815402006 || (z[13] == 2030555054815402006 && (z[12] < 7046014110413742080 || (z[12] == 7046014110413742080 && (z[11] < 14425778727015286243 || (z[11] == 14425778727015286243 && (z[10] < 17810219903765590582 || (z[10] == 17810219903765590582 && (z[9] < 1968177518022708578 || (z[9] == 1968177518022708578 && (z[8] < 17193196447219887244 || (z[8] == 17193196447219887244 && (z[7] < 10671602409567735082 || (z[7] == 10671602409567735082 && (z[6] < 12168445323765187689 || (z[6] == 12168445323765187689 && (z[5] < 4405229158191370832 || (z[5] == 4405229158191370832 && (z[4] < 6275282332124812599 || (z[4] == 6275282332124812599 && (z[3] < 12806808807567348591 || (z[3] == 12806808807567348591 && (z[2] < 13704541515672720494 || (z[2] == 13704541515672720494 && (z[1] < 11417059503450690909 || (z[1] == 11417059503450690909 && (z[0] < 6557797220589329239))))))))))))))))))))))))))))))))))))))))))))))))))))))))) {
		var b uint64
		z[0], b = bits.Sub64(z[0], 6557797220589329239, 0)
		z[1], b = bits.Sub64(z[1], 11417059503450690909, b)
		z[2], b = bits.Sub64(z[2], 13704541515672720494, b)
		z[3], b = bits.Sub64(z[3], 12806808807567348591, b)
		z[4], b = bits.Sub64(z[4], 6275282332124812599, b)
		z[5], b = bits.Sub64(z[5], 4405229158191370832, b)
		z[6], b = bits.Sub64(z[6], 12168445323765187689, b)
		z[7], b = bits.Sub64(z[7], 10671602409567735082, b)
		z[8], b = bits.Sub64(z[8], 17193196447219887244, b)
		z[9], b = bits.Sub64(z[9], 1968177518022708578, b)
		z[10], b = bits.Sub64(z[10], 17810219903765590582, b)
		z[11], b = bits.Sub64(z[11], 14425778727015286243, b)
		z[12], b = bits.Sub64(z[12], 7046014110413742080, b)
		z[13], b = bits.Sub64(z[13], 2030555054815402006, b)
		z[14], b = bits.Sub64(z[14], 2364210669068217395, b)
		z[15], b = bits.Sub64(z[15], 12900422625108798885, b)
		z[16], b = bits.Sub64(z[16], 1930406275202811267, b)
		z[17], b = bits.Sub64(z[17], 14290777978257669090, b)
		z[18], b = bits.Sub64(z[18], 5932508195835066898, b)
		z[19], b = bits.Sub64(z[19], 15850336981219945716, b)
		z[20], b = bits.Sub64(z[20], 854831035414738096, b)
		z[21], b = bits.Sub64(z[21], 2260305572347853835, b)
		z[22], b = bits.Sub64(z[22], 5347326701889135155, b)
		z[23], b = bits.Sub64(z[23], 4279901139938023971, b)
		z[24], b = bits.Sub64(z[24], 4531757068977706609, b)
		z[25], b = bits.Sub64(z[25], 9735365819670254271, b)
		z[26], b = bits.Sub64(z[26], 3870673539892635154, b)
		z[27], b = bits.Sub64(z[27], 15996650252674570430, b)
		z[28], _ = bits.Sub64(z[28], 7470438302128334459, b)
	}
	return z
}

func (z *Element29) Legendre() int {
	var l Element29
	// z^((p-1)/2)
	l.Exp(*z,
		12502270647149440427,
		5708529751725345454,
		16075642794691136055,
		15626776440638450103,
		3137641166062406299,
		11425986615950461224,
		6084222661882593844,
		5335801204783867541,
		8596598223609943622,
		984088759011354289,
		18128481988737571099,
		7212889363507643121,
		3523007055206871040,
		10238649564262476811,
		10405477371388884505,
		15673583349409175250,
		965203137601405633,
		7145388989128834545,
		2966254097917533449,
		7925168490609972858,
		9650787554562144856,
		10353524823028702725,
		11897035387799343385,
		11363322606823787793,
		11489250571343629112,
		4867682909835127135,
		1935336769946317577,
		17221697163192061023,
		3735219151064167229,
	)

	if l.IsZero() {
		return 0
	}

	// if l == 1
	if (l[28] == 3505867469452882696) && (l[27] == 4900187642069962371) && (l[26] == 10705396993924281306) && (l[25] == 17422756508078594689) && (l[24] == 9383229935754138397) && (l[23] == 9886941793833503673) && (l[22] == 7752090669931281305) && (l[21] == 13926132929013843945) && (l[20] == 16737082002880075422) && (l[19] == 5192814184979211799) && (l[18] == 6581727682039417818) && (l[17] == 8311932190903765051) && (l[16] == 14585931523303929080) && (l[15] == 11092642897201505461) && (l[14] == 13718322735573116825) && (l[13] == 14385633964078747603) && (l[12] == 4354715852882067454) && (l[11] == 8041930693388530744) && (l[10] == 1273048339887922067) && (l[9] == 14510389037664134458) && (l[8] == 2507095252979328742) && (l[7] == 15550283328283633066) && (l[6] == 12556597499888727853) && (l[5] == 9636285757326809951) && (l[4] == 5896179409459926416) && (l[3] == 11279870532284406048) && (l[2] == 9484405116073662242) && (l[1] == 14059369140517721413) && (l[0] == 5331149632530893138) {
		return 1
	}
	return -1
}

// Sqrt z = √x mod q
// if the square root doesn't exist (x is not a square mod q)
// Sqrt leaves z unchanged and returns nil
func (z *Element29) Sqrt(x *Element29) *Element29 {
	switch x.Legendre() {
	case -1:
		return nil
	case 0:
		return z.SetZero()
	case 1:
		break
	}
	// q ≡ 3 (mod 4)
	// using  z ≡ ± x^((p+1)/4) (mod q)
	return z.Exp(*x,
		6251135323574720214,
		12077636912717448535,
		17261193434200343835,
		17036760257174000859,
		1568820583031203149,
		5712993307975230612,
		12265483367796072730,
		2667900602391933770,
		13521671148659747619,
		9715416416360452952,
		18287613031223561357,
		3606444681753821560,
		10984875564458211328,
		14342696818986014213,
		5202738685694442252,
		17060163711559363433,
		9705973605655478624,
		12796066531419193080,
		1483127048958766724,
		3962584245304986429,
		14048765814135848236,
		14400134448369127170,
		15171889730754447500,
		5681661303411893896,
		14967997322526590364,
		11657213491772339375,
		10191040421827934596,
		17834220618450806319,
		1867609575532083614,
	)
}

// Square z = x * x mod q
func (z *Element29) Square(x *Element29) *Element29 {
	return z.Mul(x, x)
}

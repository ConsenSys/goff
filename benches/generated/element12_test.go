// Code generated by goff DO NOT EDIT
package generated

import (
	"crypto/rand"
	"math/big"
	"math/bits"
	mrand "math/rand"
	"testing"
)

func TestELEMENT12CorrectessAgainstBigInt(t *testing.T) {
	modulus, _ := new(big.Int).SetString("651634509597060592379289903005803044784347612883915154061934710111613582472338221021541117261719905870915131702960938697024329897252647533155993600012101792436316464825017164484222826810062412288859862798133473858156931583275459521", 10)
	cmpEandB := func(e *Element12, b *big.Int, name string) {
		var _e big.Int
		if e.FromMont().ToBigInt(&_e).Cmp(b) != 0 {
			t.Fatal(name, "failed")
		}
	}
	var modulusMinusOne, one big.Int
	one.SetUint64(1)

	modulusMinusOne.Sub(modulus, &one)

	for i := 0; i < 10000; i++ {

		// sample 2 random big int
		b1, _ := rand.Int(rand.Reader, modulus)
		b2, _ := rand.Int(rand.Reader, modulus)
		rExp := mrand.Uint64()

		// adding edge cases
		// TODO need more edge cases
		switch i {
		case 0:
			rExp = 0
			b1.SetUint64(0)
		case 1:
			b2.SetUint64(0)
		case 2:
			b1.SetUint64(0)
			b2.SetUint64(0)
		case 3:
			rExp = 0
		case 4:
			rExp = 1
		case 5:
			rExp = ^uint64(0) // max uint
		case 6:
			rExp = 2
			b1.Set(&modulusMinusOne)
		case 7:
			b2.Set(&modulusMinusOne)
		case 8:
			b1.Set(&modulusMinusOne)
			b2.Set(&modulusMinusOne)
		}

		rbExp := new(big.Int).SetUint64(rExp)

		var bMul, bAdd, bSub, bDiv, bNeg, bLsh, bInv, bExp, bSquare big.Int

		// e1 = mont(b1), e2 = mont(b2)
		var e1, e2, eMul, eAdd, eSub, eDiv, eNeg, eLsh, eInv, eExp, eSquare, eMulAssign, eSubAssign, eAddAssign Element12
		e1.SetBigInt(b1)
		e2.SetBigInt(b2)

		// (e1*e2).FromMont() === b1*b2 mod q ... etc
		eSquare.Square(&e1)
		eMul.Mul(&e1, &e2)
		eMulAssign.Set(&e1)
		eMulAssign.MulAssign(&e2)
		eAdd.Add(&e1, &e2)
		eAddAssign.Set(&e1)
		eAddAssign.AddAssign(&e2)
		eSub.Sub(&e1, &e2)
		eSubAssign.Set(&e1)
		eSubAssign.SubAssign(&e2)
		eDiv.Div(&e1, &e2)
		eNeg.Neg(&e1)
		eInv.Inverse(&e1)
		eExp.Exp(e1, rExp)
		eLsh.Double(&e1)

		// same operations with big int
		bAdd.Add(b1, b2).Mod(&bAdd, modulus)
		bMul.Mul(b1, b2).Mod(&bMul, modulus)
		bSquare.Mul(b1, b1).Mod(&bSquare, modulus)
		bSub.Sub(b1, b2).Mod(&bSub, modulus)
		bDiv.ModInverse(b2, modulus)
		bDiv.Mul(&bDiv, b1).
			Mod(&bDiv, modulus)
		bNeg.Neg(b1).Mod(&bNeg, modulus)

		bInv.ModInverse(b1, modulus)
		bExp.Exp(b1, rbExp, modulus)
		bLsh.Lsh(b1, 1).Mod(&bLsh, modulus)

		cmpEandB(&eSquare, &bSquare, "Square")
		cmpEandB(&eMul, &bMul, "Mul")
		cmpEandB(&eMulAssign, &bMul, "MulAssign")
		cmpEandB(&eAdd, &bAdd, "Add")
		cmpEandB(&eAddAssign, &bAdd, "AddAssign")
		cmpEandB(&eSub, &bSub, "Sub")
		cmpEandB(&eSubAssign, &bSub, "SubAssign")
		cmpEandB(&eDiv, &bDiv, "Div")
		cmpEandB(&eNeg, &bNeg, "Neg")
		cmpEandB(&eInv, &bInv, "Inv")
		cmpEandB(&eExp, &bExp, "Exp")
		cmpEandB(&eLsh, &bLsh, "Lsh")
	}
}

func TestELEMENT12IsRandom(t *testing.T) {
	for i := 0; i < 1000; i++ {
		var x, y Element12
		x.SetRandom()
		y.SetRandom()
		if x.Equal(&y) {
			t.Fatal("2 random numbers are unlikely to be equal")
		}
	}
}

// -------------------------------------------------------------------------------------------------
// benchmarks
// most benchmarks are rudimentary and should sample a large number of random inputs
// or be run multiple times to ensure it didn't measure the fastest path of the function
// TODO: clean up and push benchmarking branch

var benchResElement12 Element12

func BenchmarkInverseELEMENT12(b *testing.B) {
	var x Element12
	x.SetRandom()
	benchResElement12.SetRandom()
	b.ResetTimer()

	for i := 0; i < b.N; i++ {
		benchResElement12.Inverse(&x)
	}

}
func BenchmarkExpELEMENT12(b *testing.B) {
	var x Element12
	x.SetRandom()
	benchResElement12.SetRandom()
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		benchResElement12.Exp(x, mrand.Uint64())
	}
}

func BenchmarkDoubleELEMENT12(b *testing.B) {
	benchResElement12.SetRandom()
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		benchResElement12.Double(&benchResElement12)
	}
}

func BenchmarkAddELEMENT12(b *testing.B) {
	var x Element12
	x.SetRandom()
	benchResElement12.SetRandom()
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		benchResElement12.Add(&x, &benchResElement12)
	}
}

func BenchmarkSubELEMENT12(b *testing.B) {
	var x Element12
	x.SetRandom()
	benchResElement12.SetRandom()
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		benchResElement12.Sub(&x, &benchResElement12)
	}
}

func BenchmarkNegELEMENT12(b *testing.B) {
	benchResElement12.SetRandom()
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		benchResElement12.Neg(&benchResElement12)
	}
}

func BenchmarkDivELEMENT12(b *testing.B) {
	var x Element12
	x.SetRandom()
	benchResElement12.SetRandom()
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		benchResElement12.Div(&x, &benchResElement12)
	}
}

func BenchmarkFromMontELEMENT12(b *testing.B) {
	benchResElement12.SetRandom()
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		benchResElement12.FromMont()
	}
}

func BenchmarkToMontELEMENT12(b *testing.B) {
	benchResElement12.SetRandom()
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		benchResElement12.ToMont()
	}
}
func BenchmarkSquareELEMENT12(b *testing.B) {
	benchResElement12.SetRandom()
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		benchResElement12.Square(&benchResElement12)
	}
}

func BenchmarkMulAssignELEMENT12(b *testing.B) {
	x := Element12{
		8627266122992636208,
		8293069564550117897,
		5718808737612239708,
		13341852196805508268,
		16864287701276868771,
		8216765245140596293,
		4500728489885691909,
		12610435794894631991,
		1810448264617102251,
		7680505162529335161,
		12899484429470930314,
		7109699468797419729,
	}
	benchResElement12.SetOne()
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		benchResElement12.MulAssign(&x)
	}
}

// Montgomery multiplication benchmarks
func (z *Element12) mulCIOS(x *Element12) *Element12 {

	var t [13]uint64
	var D uint64
	var m, C uint64
	// -----------------------------------
	// First loop

	C, t[0] = bits.Mul64(x[0], z[0])
	C, t[1] = madd1(x[0], z[1], C)
	C, t[2] = madd1(x[0], z[2], C)
	C, t[3] = madd1(x[0], z[3], C)
	C, t[4] = madd1(x[0], z[4], C)
	C, t[5] = madd1(x[0], z[5], C)
	C, t[6] = madd1(x[0], z[6], C)
	C, t[7] = madd1(x[0], z[7], C)
	C, t[8] = madd1(x[0], z[8], C)
	C, t[9] = madd1(x[0], z[9], C)
	C, t[10] = madd1(x[0], z[10], C)
	C, t[11] = madd1(x[0], z[11], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 5835146174840067007

	// -----------------------------------
	// Second loop
	C = madd0(m, 7656501765637170113, t[0])

	C, t[0] = madd2(m, 995431890602415175, t[1], C)

	C, t[1] = madd2(m, 17147986121063705172, t[2], C)

	C, t[2] = madd2(m, 8433803164972306302, t[3], C)

	C, t[3] = madd2(m, 4445149597556670472, t[4], C)

	C, t[4] = madd2(m, 16657431670835164191, t[5], C)

	C, t[5] = madd2(m, 6903462234106192363, t[6], C)

	C, t[6] = madd2(m, 14015292340317556369, t[7], C)

	C, t[7] = madd2(m, 6194206169627483649, t[8], C)

	C, t[8] = madd2(m, 16227442830635305454, t[9], C)

	C, t[9] = madd2(m, 15245204190150714528, t[10], C)

	C, t[10] = madd3(m, 7742605440636589233, t[11], C, t[12])

	t[11], t[12] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[1], z[0], t[0])
	C, t[1] = madd2(x[1], z[1], t[1], C)
	C, t[2] = madd2(x[1], z[2], t[2], C)
	C, t[3] = madd2(x[1], z[3], t[3], C)
	C, t[4] = madd2(x[1], z[4], t[4], C)
	C, t[5] = madd2(x[1], z[5], t[5], C)
	C, t[6] = madd2(x[1], z[6], t[6], C)
	C, t[7] = madd2(x[1], z[7], t[7], C)
	C, t[8] = madd2(x[1], z[8], t[8], C)
	C, t[9] = madd2(x[1], z[9], t[9], C)
	C, t[10] = madd2(x[1], z[10], t[10], C)
	C, t[11] = madd2(x[1], z[11], t[11], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 5835146174840067007

	// -----------------------------------
	// Second loop
	C = madd0(m, 7656501765637170113, t[0])

	C, t[0] = madd2(m, 995431890602415175, t[1], C)

	C, t[1] = madd2(m, 17147986121063705172, t[2], C)

	C, t[2] = madd2(m, 8433803164972306302, t[3], C)

	C, t[3] = madd2(m, 4445149597556670472, t[4], C)

	C, t[4] = madd2(m, 16657431670835164191, t[5], C)

	C, t[5] = madd2(m, 6903462234106192363, t[6], C)

	C, t[6] = madd2(m, 14015292340317556369, t[7], C)

	C, t[7] = madd2(m, 6194206169627483649, t[8], C)

	C, t[8] = madd2(m, 16227442830635305454, t[9], C)

	C, t[9] = madd2(m, 15245204190150714528, t[10], C)

	C, t[10] = madd3(m, 7742605440636589233, t[11], C, t[12])

	t[11], t[12] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[2], z[0], t[0])
	C, t[1] = madd2(x[2], z[1], t[1], C)
	C, t[2] = madd2(x[2], z[2], t[2], C)
	C, t[3] = madd2(x[2], z[3], t[3], C)
	C, t[4] = madd2(x[2], z[4], t[4], C)
	C, t[5] = madd2(x[2], z[5], t[5], C)
	C, t[6] = madd2(x[2], z[6], t[6], C)
	C, t[7] = madd2(x[2], z[7], t[7], C)
	C, t[8] = madd2(x[2], z[8], t[8], C)
	C, t[9] = madd2(x[2], z[9], t[9], C)
	C, t[10] = madd2(x[2], z[10], t[10], C)
	C, t[11] = madd2(x[2], z[11], t[11], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 5835146174840067007

	// -----------------------------------
	// Second loop
	C = madd0(m, 7656501765637170113, t[0])

	C, t[0] = madd2(m, 995431890602415175, t[1], C)

	C, t[1] = madd2(m, 17147986121063705172, t[2], C)

	C, t[2] = madd2(m, 8433803164972306302, t[3], C)

	C, t[3] = madd2(m, 4445149597556670472, t[4], C)

	C, t[4] = madd2(m, 16657431670835164191, t[5], C)

	C, t[5] = madd2(m, 6903462234106192363, t[6], C)

	C, t[6] = madd2(m, 14015292340317556369, t[7], C)

	C, t[7] = madd2(m, 6194206169627483649, t[8], C)

	C, t[8] = madd2(m, 16227442830635305454, t[9], C)

	C, t[9] = madd2(m, 15245204190150714528, t[10], C)

	C, t[10] = madd3(m, 7742605440636589233, t[11], C, t[12])

	t[11], t[12] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[3], z[0], t[0])
	C, t[1] = madd2(x[3], z[1], t[1], C)
	C, t[2] = madd2(x[3], z[2], t[2], C)
	C, t[3] = madd2(x[3], z[3], t[3], C)
	C, t[4] = madd2(x[3], z[4], t[4], C)
	C, t[5] = madd2(x[3], z[5], t[5], C)
	C, t[6] = madd2(x[3], z[6], t[6], C)
	C, t[7] = madd2(x[3], z[7], t[7], C)
	C, t[8] = madd2(x[3], z[8], t[8], C)
	C, t[9] = madd2(x[3], z[9], t[9], C)
	C, t[10] = madd2(x[3], z[10], t[10], C)
	C, t[11] = madd2(x[3], z[11], t[11], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 5835146174840067007

	// -----------------------------------
	// Second loop
	C = madd0(m, 7656501765637170113, t[0])

	C, t[0] = madd2(m, 995431890602415175, t[1], C)

	C, t[1] = madd2(m, 17147986121063705172, t[2], C)

	C, t[2] = madd2(m, 8433803164972306302, t[3], C)

	C, t[3] = madd2(m, 4445149597556670472, t[4], C)

	C, t[4] = madd2(m, 16657431670835164191, t[5], C)

	C, t[5] = madd2(m, 6903462234106192363, t[6], C)

	C, t[6] = madd2(m, 14015292340317556369, t[7], C)

	C, t[7] = madd2(m, 6194206169627483649, t[8], C)

	C, t[8] = madd2(m, 16227442830635305454, t[9], C)

	C, t[9] = madd2(m, 15245204190150714528, t[10], C)

	C, t[10] = madd3(m, 7742605440636589233, t[11], C, t[12])

	t[11], t[12] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[4], z[0], t[0])
	C, t[1] = madd2(x[4], z[1], t[1], C)
	C, t[2] = madd2(x[4], z[2], t[2], C)
	C, t[3] = madd2(x[4], z[3], t[3], C)
	C, t[4] = madd2(x[4], z[4], t[4], C)
	C, t[5] = madd2(x[4], z[5], t[5], C)
	C, t[6] = madd2(x[4], z[6], t[6], C)
	C, t[7] = madd2(x[4], z[7], t[7], C)
	C, t[8] = madd2(x[4], z[8], t[8], C)
	C, t[9] = madd2(x[4], z[9], t[9], C)
	C, t[10] = madd2(x[4], z[10], t[10], C)
	C, t[11] = madd2(x[4], z[11], t[11], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 5835146174840067007

	// -----------------------------------
	// Second loop
	C = madd0(m, 7656501765637170113, t[0])

	C, t[0] = madd2(m, 995431890602415175, t[1], C)

	C, t[1] = madd2(m, 17147986121063705172, t[2], C)

	C, t[2] = madd2(m, 8433803164972306302, t[3], C)

	C, t[3] = madd2(m, 4445149597556670472, t[4], C)

	C, t[4] = madd2(m, 16657431670835164191, t[5], C)

	C, t[5] = madd2(m, 6903462234106192363, t[6], C)

	C, t[6] = madd2(m, 14015292340317556369, t[7], C)

	C, t[7] = madd2(m, 6194206169627483649, t[8], C)

	C, t[8] = madd2(m, 16227442830635305454, t[9], C)

	C, t[9] = madd2(m, 15245204190150714528, t[10], C)

	C, t[10] = madd3(m, 7742605440636589233, t[11], C, t[12])

	t[11], t[12] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[5], z[0], t[0])
	C, t[1] = madd2(x[5], z[1], t[1], C)
	C, t[2] = madd2(x[5], z[2], t[2], C)
	C, t[3] = madd2(x[5], z[3], t[3], C)
	C, t[4] = madd2(x[5], z[4], t[4], C)
	C, t[5] = madd2(x[5], z[5], t[5], C)
	C, t[6] = madd2(x[5], z[6], t[6], C)
	C, t[7] = madd2(x[5], z[7], t[7], C)
	C, t[8] = madd2(x[5], z[8], t[8], C)
	C, t[9] = madd2(x[5], z[9], t[9], C)
	C, t[10] = madd2(x[5], z[10], t[10], C)
	C, t[11] = madd2(x[5], z[11], t[11], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 5835146174840067007

	// -----------------------------------
	// Second loop
	C = madd0(m, 7656501765637170113, t[0])

	C, t[0] = madd2(m, 995431890602415175, t[1], C)

	C, t[1] = madd2(m, 17147986121063705172, t[2], C)

	C, t[2] = madd2(m, 8433803164972306302, t[3], C)

	C, t[3] = madd2(m, 4445149597556670472, t[4], C)

	C, t[4] = madd2(m, 16657431670835164191, t[5], C)

	C, t[5] = madd2(m, 6903462234106192363, t[6], C)

	C, t[6] = madd2(m, 14015292340317556369, t[7], C)

	C, t[7] = madd2(m, 6194206169627483649, t[8], C)

	C, t[8] = madd2(m, 16227442830635305454, t[9], C)

	C, t[9] = madd2(m, 15245204190150714528, t[10], C)

	C, t[10] = madd3(m, 7742605440636589233, t[11], C, t[12])

	t[11], t[12] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[6], z[0], t[0])
	C, t[1] = madd2(x[6], z[1], t[1], C)
	C, t[2] = madd2(x[6], z[2], t[2], C)
	C, t[3] = madd2(x[6], z[3], t[3], C)
	C, t[4] = madd2(x[6], z[4], t[4], C)
	C, t[5] = madd2(x[6], z[5], t[5], C)
	C, t[6] = madd2(x[6], z[6], t[6], C)
	C, t[7] = madd2(x[6], z[7], t[7], C)
	C, t[8] = madd2(x[6], z[8], t[8], C)
	C, t[9] = madd2(x[6], z[9], t[9], C)
	C, t[10] = madd2(x[6], z[10], t[10], C)
	C, t[11] = madd2(x[6], z[11], t[11], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 5835146174840067007

	// -----------------------------------
	// Second loop
	C = madd0(m, 7656501765637170113, t[0])

	C, t[0] = madd2(m, 995431890602415175, t[1], C)

	C, t[1] = madd2(m, 17147986121063705172, t[2], C)

	C, t[2] = madd2(m, 8433803164972306302, t[3], C)

	C, t[3] = madd2(m, 4445149597556670472, t[4], C)

	C, t[4] = madd2(m, 16657431670835164191, t[5], C)

	C, t[5] = madd2(m, 6903462234106192363, t[6], C)

	C, t[6] = madd2(m, 14015292340317556369, t[7], C)

	C, t[7] = madd2(m, 6194206169627483649, t[8], C)

	C, t[8] = madd2(m, 16227442830635305454, t[9], C)

	C, t[9] = madd2(m, 15245204190150714528, t[10], C)

	C, t[10] = madd3(m, 7742605440636589233, t[11], C, t[12])

	t[11], t[12] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[7], z[0], t[0])
	C, t[1] = madd2(x[7], z[1], t[1], C)
	C, t[2] = madd2(x[7], z[2], t[2], C)
	C, t[3] = madd2(x[7], z[3], t[3], C)
	C, t[4] = madd2(x[7], z[4], t[4], C)
	C, t[5] = madd2(x[7], z[5], t[5], C)
	C, t[6] = madd2(x[7], z[6], t[6], C)
	C, t[7] = madd2(x[7], z[7], t[7], C)
	C, t[8] = madd2(x[7], z[8], t[8], C)
	C, t[9] = madd2(x[7], z[9], t[9], C)
	C, t[10] = madd2(x[7], z[10], t[10], C)
	C, t[11] = madd2(x[7], z[11], t[11], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 5835146174840067007

	// -----------------------------------
	// Second loop
	C = madd0(m, 7656501765637170113, t[0])

	C, t[0] = madd2(m, 995431890602415175, t[1], C)

	C, t[1] = madd2(m, 17147986121063705172, t[2], C)

	C, t[2] = madd2(m, 8433803164972306302, t[3], C)

	C, t[3] = madd2(m, 4445149597556670472, t[4], C)

	C, t[4] = madd2(m, 16657431670835164191, t[5], C)

	C, t[5] = madd2(m, 6903462234106192363, t[6], C)

	C, t[6] = madd2(m, 14015292340317556369, t[7], C)

	C, t[7] = madd2(m, 6194206169627483649, t[8], C)

	C, t[8] = madd2(m, 16227442830635305454, t[9], C)

	C, t[9] = madd2(m, 15245204190150714528, t[10], C)

	C, t[10] = madd3(m, 7742605440636589233, t[11], C, t[12])

	t[11], t[12] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[8], z[0], t[0])
	C, t[1] = madd2(x[8], z[1], t[1], C)
	C, t[2] = madd2(x[8], z[2], t[2], C)
	C, t[3] = madd2(x[8], z[3], t[3], C)
	C, t[4] = madd2(x[8], z[4], t[4], C)
	C, t[5] = madd2(x[8], z[5], t[5], C)
	C, t[6] = madd2(x[8], z[6], t[6], C)
	C, t[7] = madd2(x[8], z[7], t[7], C)
	C, t[8] = madd2(x[8], z[8], t[8], C)
	C, t[9] = madd2(x[8], z[9], t[9], C)
	C, t[10] = madd2(x[8], z[10], t[10], C)
	C, t[11] = madd2(x[8], z[11], t[11], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 5835146174840067007

	// -----------------------------------
	// Second loop
	C = madd0(m, 7656501765637170113, t[0])

	C, t[0] = madd2(m, 995431890602415175, t[1], C)

	C, t[1] = madd2(m, 17147986121063705172, t[2], C)

	C, t[2] = madd2(m, 8433803164972306302, t[3], C)

	C, t[3] = madd2(m, 4445149597556670472, t[4], C)

	C, t[4] = madd2(m, 16657431670835164191, t[5], C)

	C, t[5] = madd2(m, 6903462234106192363, t[6], C)

	C, t[6] = madd2(m, 14015292340317556369, t[7], C)

	C, t[7] = madd2(m, 6194206169627483649, t[8], C)

	C, t[8] = madd2(m, 16227442830635305454, t[9], C)

	C, t[9] = madd2(m, 15245204190150714528, t[10], C)

	C, t[10] = madd3(m, 7742605440636589233, t[11], C, t[12])

	t[11], t[12] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[9], z[0], t[0])
	C, t[1] = madd2(x[9], z[1], t[1], C)
	C, t[2] = madd2(x[9], z[2], t[2], C)
	C, t[3] = madd2(x[9], z[3], t[3], C)
	C, t[4] = madd2(x[9], z[4], t[4], C)
	C, t[5] = madd2(x[9], z[5], t[5], C)
	C, t[6] = madd2(x[9], z[6], t[6], C)
	C, t[7] = madd2(x[9], z[7], t[7], C)
	C, t[8] = madd2(x[9], z[8], t[8], C)
	C, t[9] = madd2(x[9], z[9], t[9], C)
	C, t[10] = madd2(x[9], z[10], t[10], C)
	C, t[11] = madd2(x[9], z[11], t[11], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 5835146174840067007

	// -----------------------------------
	// Second loop
	C = madd0(m, 7656501765637170113, t[0])

	C, t[0] = madd2(m, 995431890602415175, t[1], C)

	C, t[1] = madd2(m, 17147986121063705172, t[2], C)

	C, t[2] = madd2(m, 8433803164972306302, t[3], C)

	C, t[3] = madd2(m, 4445149597556670472, t[4], C)

	C, t[4] = madd2(m, 16657431670835164191, t[5], C)

	C, t[5] = madd2(m, 6903462234106192363, t[6], C)

	C, t[6] = madd2(m, 14015292340317556369, t[7], C)

	C, t[7] = madd2(m, 6194206169627483649, t[8], C)

	C, t[8] = madd2(m, 16227442830635305454, t[9], C)

	C, t[9] = madd2(m, 15245204190150714528, t[10], C)

	C, t[10] = madd3(m, 7742605440636589233, t[11], C, t[12])

	t[11], t[12] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[10], z[0], t[0])
	C, t[1] = madd2(x[10], z[1], t[1], C)
	C, t[2] = madd2(x[10], z[2], t[2], C)
	C, t[3] = madd2(x[10], z[3], t[3], C)
	C, t[4] = madd2(x[10], z[4], t[4], C)
	C, t[5] = madd2(x[10], z[5], t[5], C)
	C, t[6] = madd2(x[10], z[6], t[6], C)
	C, t[7] = madd2(x[10], z[7], t[7], C)
	C, t[8] = madd2(x[10], z[8], t[8], C)
	C, t[9] = madd2(x[10], z[9], t[9], C)
	C, t[10] = madd2(x[10], z[10], t[10], C)
	C, t[11] = madd2(x[10], z[11], t[11], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 5835146174840067007

	// -----------------------------------
	// Second loop
	C = madd0(m, 7656501765637170113, t[0])

	C, t[0] = madd2(m, 995431890602415175, t[1], C)

	C, t[1] = madd2(m, 17147986121063705172, t[2], C)

	C, t[2] = madd2(m, 8433803164972306302, t[3], C)

	C, t[3] = madd2(m, 4445149597556670472, t[4], C)

	C, t[4] = madd2(m, 16657431670835164191, t[5], C)

	C, t[5] = madd2(m, 6903462234106192363, t[6], C)

	C, t[6] = madd2(m, 14015292340317556369, t[7], C)

	C, t[7] = madd2(m, 6194206169627483649, t[8], C)

	C, t[8] = madd2(m, 16227442830635305454, t[9], C)

	C, t[9] = madd2(m, 15245204190150714528, t[10], C)

	C, t[10] = madd3(m, 7742605440636589233, t[11], C, t[12])

	t[11], t[12] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[11], z[0], t[0])
	C, t[1] = madd2(x[11], z[1], t[1], C)
	C, t[2] = madd2(x[11], z[2], t[2], C)
	C, t[3] = madd2(x[11], z[3], t[3], C)
	C, t[4] = madd2(x[11], z[4], t[4], C)
	C, t[5] = madd2(x[11], z[5], t[5], C)
	C, t[6] = madd2(x[11], z[6], t[6], C)
	C, t[7] = madd2(x[11], z[7], t[7], C)
	C, t[8] = madd2(x[11], z[8], t[8], C)
	C, t[9] = madd2(x[11], z[9], t[9], C)
	C, t[10] = madd2(x[11], z[10], t[10], C)
	C, t[11] = madd2(x[11], z[11], t[11], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 5835146174840067007

	// -----------------------------------
	// Second loop
	C = madd0(m, 7656501765637170113, t[0])

	C, t[0] = madd2(m, 995431890602415175, t[1], C)

	C, t[1] = madd2(m, 17147986121063705172, t[2], C)

	C, t[2] = madd2(m, 8433803164972306302, t[3], C)

	C, t[3] = madd2(m, 4445149597556670472, t[4], C)

	C, t[4] = madd2(m, 16657431670835164191, t[5], C)

	C, t[5] = madd2(m, 6903462234106192363, t[6], C)

	C, t[6] = madd2(m, 14015292340317556369, t[7], C)

	C, t[7] = madd2(m, 6194206169627483649, t[8], C)

	C, t[8] = madd2(m, 16227442830635305454, t[9], C)

	C, t[9] = madd2(m, 15245204190150714528, t[10], C)

	C, t[10] = madd3(m, 7742605440636589233, t[11], C, t[12])

	t[11], t[12] = bits.Add64(D, C, 0)

	if t[12] != 0 {
		// we need to reduce, we have a result on 13 words
		var b uint64
		z[0], b = bits.Sub64(t[0], 7656501765637170113, 0)
		z[1], b = bits.Sub64(t[1], 995431890602415175, b)
		z[2], b = bits.Sub64(t[2], 17147986121063705172, b)
		z[3], b = bits.Sub64(t[3], 8433803164972306302, b)
		z[4], b = bits.Sub64(t[4], 4445149597556670472, b)
		z[5], b = bits.Sub64(t[5], 16657431670835164191, b)
		z[6], b = bits.Sub64(t[6], 6903462234106192363, b)
		z[7], b = bits.Sub64(t[7], 14015292340317556369, b)
		z[8], b = bits.Sub64(t[8], 6194206169627483649, b)
		z[9], b = bits.Sub64(t[9], 16227442830635305454, b)
		z[10], b = bits.Sub64(t[10], 15245204190150714528, b)
		z[11], _ = bits.Sub64(t[11], 7742605440636589233, b)
		return z
	}

	// copy t into z
	z[0] = t[0]
	z[1] = t[1]
	z[2] = t[2]
	z[3] = t[3]
	z[4] = t[4]
	z[5] = t[5]
	z[6] = t[6]
	z[7] = t[7]
	z[8] = t[8]
	z[9] = t[9]
	z[10] = t[10]
	z[11] = t[11]

	// if z > q --> z -= q
	if !(z[11] < 7742605440636589233 || (z[11] == 7742605440636589233 && (z[10] < 15245204190150714528 || (z[10] == 15245204190150714528 && (z[9] < 16227442830635305454 || (z[9] == 16227442830635305454 && (z[8] < 6194206169627483649 || (z[8] == 6194206169627483649 && (z[7] < 14015292340317556369 || (z[7] == 14015292340317556369 && (z[6] < 6903462234106192363 || (z[6] == 6903462234106192363 && (z[5] < 16657431670835164191 || (z[5] == 16657431670835164191 && (z[4] < 4445149597556670472 || (z[4] == 4445149597556670472 && (z[3] < 8433803164972306302 || (z[3] == 8433803164972306302 && (z[2] < 17147986121063705172 || (z[2] == 17147986121063705172 && (z[1] < 995431890602415175 || (z[1] == 995431890602415175 && (z[0] < 7656501765637170113))))))))))))))))))))))) {
		var b uint64
		z[0], b = bits.Sub64(z[0], 7656501765637170113, 0)
		z[1], b = bits.Sub64(z[1], 995431890602415175, b)
		z[2], b = bits.Sub64(z[2], 17147986121063705172, b)
		z[3], b = bits.Sub64(z[3], 8433803164972306302, b)
		z[4], b = bits.Sub64(z[4], 4445149597556670472, b)
		z[5], b = bits.Sub64(z[5], 16657431670835164191, b)
		z[6], b = bits.Sub64(z[6], 6903462234106192363, b)
		z[7], b = bits.Sub64(z[7], 14015292340317556369, b)
		z[8], b = bits.Sub64(z[8], 6194206169627483649, b)
		z[9], b = bits.Sub64(z[9], 16227442830635305454, b)
		z[10], b = bits.Sub64(z[10], 15245204190150714528, b)
		z[11], _ = bits.Sub64(z[11], 7742605440636589233, b)
	}
	return z
}

func (z *Element12) mulNoCarry(x *Element12) *Element12 {

	var t [12]uint64
	var c [3]uint64
	{
		// round 0
		v := z[0]
		c[1], c[0] = bits.Mul64(v, x[0])
		m := c[0] * 5835146174840067007
		c[2] = madd0(m, 7656501765637170113, c[0])
		c[1], c[0] = madd1(v, x[1], c[1])
		c[2], t[0] = madd2(m, 995431890602415175, c[2], c[0])
		c[1], c[0] = madd1(v, x[2], c[1])
		c[2], t[1] = madd2(m, 17147986121063705172, c[2], c[0])
		c[1], c[0] = madd1(v, x[3], c[1])
		c[2], t[2] = madd2(m, 8433803164972306302, c[2], c[0])
		c[1], c[0] = madd1(v, x[4], c[1])
		c[2], t[3] = madd2(m, 4445149597556670472, c[2], c[0])
		c[1], c[0] = madd1(v, x[5], c[1])
		c[2], t[4] = madd2(m, 16657431670835164191, c[2], c[0])
		c[1], c[0] = madd1(v, x[6], c[1])
		c[2], t[5] = madd2(m, 6903462234106192363, c[2], c[0])
		c[1], c[0] = madd1(v, x[7], c[1])
		c[2], t[6] = madd2(m, 14015292340317556369, c[2], c[0])
		c[1], c[0] = madd1(v, x[8], c[1])
		c[2], t[7] = madd2(m, 6194206169627483649, c[2], c[0])
		c[1], c[0] = madd1(v, x[9], c[1])
		c[2], t[8] = madd2(m, 16227442830635305454, c[2], c[0])
		c[1], c[0] = madd1(v, x[10], c[1])
		c[2], t[9] = madd2(m, 15245204190150714528, c[2], c[0])
		c[1], c[0] = madd1(v, x[11], c[1])
		t[11], t[10] = madd3(m, 7742605440636589233, c[0], c[2], c[1])
	}
	{
		// round 1
		v := z[1]
		c[1], c[0] = madd1(v, x[0], t[0])
		m := c[0] * 5835146174840067007
		c[2] = madd0(m, 7656501765637170113, c[0])
		c[1], c[0] = madd2(v, x[1], c[1], t[1])
		c[2], t[0] = madd2(m, 995431890602415175, c[2], c[0])
		c[1], c[0] = madd2(v, x[2], c[1], t[2])
		c[2], t[1] = madd2(m, 17147986121063705172, c[2], c[0])
		c[1], c[0] = madd2(v, x[3], c[1], t[3])
		c[2], t[2] = madd2(m, 8433803164972306302, c[2], c[0])
		c[1], c[0] = madd2(v, x[4], c[1], t[4])
		c[2], t[3] = madd2(m, 4445149597556670472, c[2], c[0])
		c[1], c[0] = madd2(v, x[5], c[1], t[5])
		c[2], t[4] = madd2(m, 16657431670835164191, c[2], c[0])
		c[1], c[0] = madd2(v, x[6], c[1], t[6])
		c[2], t[5] = madd2(m, 6903462234106192363, c[2], c[0])
		c[1], c[0] = madd2(v, x[7], c[1], t[7])
		c[2], t[6] = madd2(m, 14015292340317556369, c[2], c[0])
		c[1], c[0] = madd2(v, x[8], c[1], t[8])
		c[2], t[7] = madd2(m, 6194206169627483649, c[2], c[0])
		c[1], c[0] = madd2(v, x[9], c[1], t[9])
		c[2], t[8] = madd2(m, 16227442830635305454, c[2], c[0])
		c[1], c[0] = madd2(v, x[10], c[1], t[10])
		c[2], t[9] = madd2(m, 15245204190150714528, c[2], c[0])
		c[1], c[0] = madd2(v, x[11], c[1], t[11])
		t[11], t[10] = madd3(m, 7742605440636589233, c[0], c[2], c[1])
	}
	{
		// round 2
		v := z[2]
		c[1], c[0] = madd1(v, x[0], t[0])
		m := c[0] * 5835146174840067007
		c[2] = madd0(m, 7656501765637170113, c[0])
		c[1], c[0] = madd2(v, x[1], c[1], t[1])
		c[2], t[0] = madd2(m, 995431890602415175, c[2], c[0])
		c[1], c[0] = madd2(v, x[2], c[1], t[2])
		c[2], t[1] = madd2(m, 17147986121063705172, c[2], c[0])
		c[1], c[0] = madd2(v, x[3], c[1], t[3])
		c[2], t[2] = madd2(m, 8433803164972306302, c[2], c[0])
		c[1], c[0] = madd2(v, x[4], c[1], t[4])
		c[2], t[3] = madd2(m, 4445149597556670472, c[2], c[0])
		c[1], c[0] = madd2(v, x[5], c[1], t[5])
		c[2], t[4] = madd2(m, 16657431670835164191, c[2], c[0])
		c[1], c[0] = madd2(v, x[6], c[1], t[6])
		c[2], t[5] = madd2(m, 6903462234106192363, c[2], c[0])
		c[1], c[0] = madd2(v, x[7], c[1], t[7])
		c[2], t[6] = madd2(m, 14015292340317556369, c[2], c[0])
		c[1], c[0] = madd2(v, x[8], c[1], t[8])
		c[2], t[7] = madd2(m, 6194206169627483649, c[2], c[0])
		c[1], c[0] = madd2(v, x[9], c[1], t[9])
		c[2], t[8] = madd2(m, 16227442830635305454, c[2], c[0])
		c[1], c[0] = madd2(v, x[10], c[1], t[10])
		c[2], t[9] = madd2(m, 15245204190150714528, c[2], c[0])
		c[1], c[0] = madd2(v, x[11], c[1], t[11])
		t[11], t[10] = madd3(m, 7742605440636589233, c[0], c[2], c[1])
	}
	{
		// round 3
		v := z[3]
		c[1], c[0] = madd1(v, x[0], t[0])
		m := c[0] * 5835146174840067007
		c[2] = madd0(m, 7656501765637170113, c[0])
		c[1], c[0] = madd2(v, x[1], c[1], t[1])
		c[2], t[0] = madd2(m, 995431890602415175, c[2], c[0])
		c[1], c[0] = madd2(v, x[2], c[1], t[2])
		c[2], t[1] = madd2(m, 17147986121063705172, c[2], c[0])
		c[1], c[0] = madd2(v, x[3], c[1], t[3])
		c[2], t[2] = madd2(m, 8433803164972306302, c[2], c[0])
		c[1], c[0] = madd2(v, x[4], c[1], t[4])
		c[2], t[3] = madd2(m, 4445149597556670472, c[2], c[0])
		c[1], c[0] = madd2(v, x[5], c[1], t[5])
		c[2], t[4] = madd2(m, 16657431670835164191, c[2], c[0])
		c[1], c[0] = madd2(v, x[6], c[1], t[6])
		c[2], t[5] = madd2(m, 6903462234106192363, c[2], c[0])
		c[1], c[0] = madd2(v, x[7], c[1], t[7])
		c[2], t[6] = madd2(m, 14015292340317556369, c[2], c[0])
		c[1], c[0] = madd2(v, x[8], c[1], t[8])
		c[2], t[7] = madd2(m, 6194206169627483649, c[2], c[0])
		c[1], c[0] = madd2(v, x[9], c[1], t[9])
		c[2], t[8] = madd2(m, 16227442830635305454, c[2], c[0])
		c[1], c[0] = madd2(v, x[10], c[1], t[10])
		c[2], t[9] = madd2(m, 15245204190150714528, c[2], c[0])
		c[1], c[0] = madd2(v, x[11], c[1], t[11])
		t[11], t[10] = madd3(m, 7742605440636589233, c[0], c[2], c[1])
	}
	{
		// round 4
		v := z[4]
		c[1], c[0] = madd1(v, x[0], t[0])
		m := c[0] * 5835146174840067007
		c[2] = madd0(m, 7656501765637170113, c[0])
		c[1], c[0] = madd2(v, x[1], c[1], t[1])
		c[2], t[0] = madd2(m, 995431890602415175, c[2], c[0])
		c[1], c[0] = madd2(v, x[2], c[1], t[2])
		c[2], t[1] = madd2(m, 17147986121063705172, c[2], c[0])
		c[1], c[0] = madd2(v, x[3], c[1], t[3])
		c[2], t[2] = madd2(m, 8433803164972306302, c[2], c[0])
		c[1], c[0] = madd2(v, x[4], c[1], t[4])
		c[2], t[3] = madd2(m, 4445149597556670472, c[2], c[0])
		c[1], c[0] = madd2(v, x[5], c[1], t[5])
		c[2], t[4] = madd2(m, 16657431670835164191, c[2], c[0])
		c[1], c[0] = madd2(v, x[6], c[1], t[6])
		c[2], t[5] = madd2(m, 6903462234106192363, c[2], c[0])
		c[1], c[0] = madd2(v, x[7], c[1], t[7])
		c[2], t[6] = madd2(m, 14015292340317556369, c[2], c[0])
		c[1], c[0] = madd2(v, x[8], c[1], t[8])
		c[2], t[7] = madd2(m, 6194206169627483649, c[2], c[0])
		c[1], c[0] = madd2(v, x[9], c[1], t[9])
		c[2], t[8] = madd2(m, 16227442830635305454, c[2], c[0])
		c[1], c[0] = madd2(v, x[10], c[1], t[10])
		c[2], t[9] = madd2(m, 15245204190150714528, c[2], c[0])
		c[1], c[0] = madd2(v, x[11], c[1], t[11])
		t[11], t[10] = madd3(m, 7742605440636589233, c[0], c[2], c[1])
	}
	{
		// round 5
		v := z[5]
		c[1], c[0] = madd1(v, x[0], t[0])
		m := c[0] * 5835146174840067007
		c[2] = madd0(m, 7656501765637170113, c[0])
		c[1], c[0] = madd2(v, x[1], c[1], t[1])
		c[2], t[0] = madd2(m, 995431890602415175, c[2], c[0])
		c[1], c[0] = madd2(v, x[2], c[1], t[2])
		c[2], t[1] = madd2(m, 17147986121063705172, c[2], c[0])
		c[1], c[0] = madd2(v, x[3], c[1], t[3])
		c[2], t[2] = madd2(m, 8433803164972306302, c[2], c[0])
		c[1], c[0] = madd2(v, x[4], c[1], t[4])
		c[2], t[3] = madd2(m, 4445149597556670472, c[2], c[0])
		c[1], c[0] = madd2(v, x[5], c[1], t[5])
		c[2], t[4] = madd2(m, 16657431670835164191, c[2], c[0])
		c[1], c[0] = madd2(v, x[6], c[1], t[6])
		c[2], t[5] = madd2(m, 6903462234106192363, c[2], c[0])
		c[1], c[0] = madd2(v, x[7], c[1], t[7])
		c[2], t[6] = madd2(m, 14015292340317556369, c[2], c[0])
		c[1], c[0] = madd2(v, x[8], c[1], t[8])
		c[2], t[7] = madd2(m, 6194206169627483649, c[2], c[0])
		c[1], c[0] = madd2(v, x[9], c[1], t[9])
		c[2], t[8] = madd2(m, 16227442830635305454, c[2], c[0])
		c[1], c[0] = madd2(v, x[10], c[1], t[10])
		c[2], t[9] = madd2(m, 15245204190150714528, c[2], c[0])
		c[1], c[0] = madd2(v, x[11], c[1], t[11])
		t[11], t[10] = madd3(m, 7742605440636589233, c[0], c[2], c[1])
	}
	{
		// round 6
		v := z[6]
		c[1], c[0] = madd1(v, x[0], t[0])
		m := c[0] * 5835146174840067007
		c[2] = madd0(m, 7656501765637170113, c[0])
		c[1], c[0] = madd2(v, x[1], c[1], t[1])
		c[2], t[0] = madd2(m, 995431890602415175, c[2], c[0])
		c[1], c[0] = madd2(v, x[2], c[1], t[2])
		c[2], t[1] = madd2(m, 17147986121063705172, c[2], c[0])
		c[1], c[0] = madd2(v, x[3], c[1], t[3])
		c[2], t[2] = madd2(m, 8433803164972306302, c[2], c[0])
		c[1], c[0] = madd2(v, x[4], c[1], t[4])
		c[2], t[3] = madd2(m, 4445149597556670472, c[2], c[0])
		c[1], c[0] = madd2(v, x[5], c[1], t[5])
		c[2], t[4] = madd2(m, 16657431670835164191, c[2], c[0])
		c[1], c[0] = madd2(v, x[6], c[1], t[6])
		c[2], t[5] = madd2(m, 6903462234106192363, c[2], c[0])
		c[1], c[0] = madd2(v, x[7], c[1], t[7])
		c[2], t[6] = madd2(m, 14015292340317556369, c[2], c[0])
		c[1], c[0] = madd2(v, x[8], c[1], t[8])
		c[2], t[7] = madd2(m, 6194206169627483649, c[2], c[0])
		c[1], c[0] = madd2(v, x[9], c[1], t[9])
		c[2], t[8] = madd2(m, 16227442830635305454, c[2], c[0])
		c[1], c[0] = madd2(v, x[10], c[1], t[10])
		c[2], t[9] = madd2(m, 15245204190150714528, c[2], c[0])
		c[1], c[0] = madd2(v, x[11], c[1], t[11])
		t[11], t[10] = madd3(m, 7742605440636589233, c[0], c[2], c[1])
	}
	{
		// round 7
		v := z[7]
		c[1], c[0] = madd1(v, x[0], t[0])
		m := c[0] * 5835146174840067007
		c[2] = madd0(m, 7656501765637170113, c[0])
		c[1], c[0] = madd2(v, x[1], c[1], t[1])
		c[2], t[0] = madd2(m, 995431890602415175, c[2], c[0])
		c[1], c[0] = madd2(v, x[2], c[1], t[2])
		c[2], t[1] = madd2(m, 17147986121063705172, c[2], c[0])
		c[1], c[0] = madd2(v, x[3], c[1], t[3])
		c[2], t[2] = madd2(m, 8433803164972306302, c[2], c[0])
		c[1], c[0] = madd2(v, x[4], c[1], t[4])
		c[2], t[3] = madd2(m, 4445149597556670472, c[2], c[0])
		c[1], c[0] = madd2(v, x[5], c[1], t[5])
		c[2], t[4] = madd2(m, 16657431670835164191, c[2], c[0])
		c[1], c[0] = madd2(v, x[6], c[1], t[6])
		c[2], t[5] = madd2(m, 6903462234106192363, c[2], c[0])
		c[1], c[0] = madd2(v, x[7], c[1], t[7])
		c[2], t[6] = madd2(m, 14015292340317556369, c[2], c[0])
		c[1], c[0] = madd2(v, x[8], c[1], t[8])
		c[2], t[7] = madd2(m, 6194206169627483649, c[2], c[0])
		c[1], c[0] = madd2(v, x[9], c[1], t[9])
		c[2], t[8] = madd2(m, 16227442830635305454, c[2], c[0])
		c[1], c[0] = madd2(v, x[10], c[1], t[10])
		c[2], t[9] = madd2(m, 15245204190150714528, c[2], c[0])
		c[1], c[0] = madd2(v, x[11], c[1], t[11])
		t[11], t[10] = madd3(m, 7742605440636589233, c[0], c[2], c[1])
	}
	{
		// round 8
		v := z[8]
		c[1], c[0] = madd1(v, x[0], t[0])
		m := c[0] * 5835146174840067007
		c[2] = madd0(m, 7656501765637170113, c[0])
		c[1], c[0] = madd2(v, x[1], c[1], t[1])
		c[2], t[0] = madd2(m, 995431890602415175, c[2], c[0])
		c[1], c[0] = madd2(v, x[2], c[1], t[2])
		c[2], t[1] = madd2(m, 17147986121063705172, c[2], c[0])
		c[1], c[0] = madd2(v, x[3], c[1], t[3])
		c[2], t[2] = madd2(m, 8433803164972306302, c[2], c[0])
		c[1], c[0] = madd2(v, x[4], c[1], t[4])
		c[2], t[3] = madd2(m, 4445149597556670472, c[2], c[0])
		c[1], c[0] = madd2(v, x[5], c[1], t[5])
		c[2], t[4] = madd2(m, 16657431670835164191, c[2], c[0])
		c[1], c[0] = madd2(v, x[6], c[1], t[6])
		c[2], t[5] = madd2(m, 6903462234106192363, c[2], c[0])
		c[1], c[0] = madd2(v, x[7], c[1], t[7])
		c[2], t[6] = madd2(m, 14015292340317556369, c[2], c[0])
		c[1], c[0] = madd2(v, x[8], c[1], t[8])
		c[2], t[7] = madd2(m, 6194206169627483649, c[2], c[0])
		c[1], c[0] = madd2(v, x[9], c[1], t[9])
		c[2], t[8] = madd2(m, 16227442830635305454, c[2], c[0])
		c[1], c[0] = madd2(v, x[10], c[1], t[10])
		c[2], t[9] = madd2(m, 15245204190150714528, c[2], c[0])
		c[1], c[0] = madd2(v, x[11], c[1], t[11])
		t[11], t[10] = madd3(m, 7742605440636589233, c[0], c[2], c[1])
	}
	{
		// round 9
		v := z[9]
		c[1], c[0] = madd1(v, x[0], t[0])
		m := c[0] * 5835146174840067007
		c[2] = madd0(m, 7656501765637170113, c[0])
		c[1], c[0] = madd2(v, x[1], c[1], t[1])
		c[2], t[0] = madd2(m, 995431890602415175, c[2], c[0])
		c[1], c[0] = madd2(v, x[2], c[1], t[2])
		c[2], t[1] = madd2(m, 17147986121063705172, c[2], c[0])
		c[1], c[0] = madd2(v, x[3], c[1], t[3])
		c[2], t[2] = madd2(m, 8433803164972306302, c[2], c[0])
		c[1], c[0] = madd2(v, x[4], c[1], t[4])
		c[2], t[3] = madd2(m, 4445149597556670472, c[2], c[0])
		c[1], c[0] = madd2(v, x[5], c[1], t[5])
		c[2], t[4] = madd2(m, 16657431670835164191, c[2], c[0])
		c[1], c[0] = madd2(v, x[6], c[1], t[6])
		c[2], t[5] = madd2(m, 6903462234106192363, c[2], c[0])
		c[1], c[0] = madd2(v, x[7], c[1], t[7])
		c[2], t[6] = madd2(m, 14015292340317556369, c[2], c[0])
		c[1], c[0] = madd2(v, x[8], c[1], t[8])
		c[2], t[7] = madd2(m, 6194206169627483649, c[2], c[0])
		c[1], c[0] = madd2(v, x[9], c[1], t[9])
		c[2], t[8] = madd2(m, 16227442830635305454, c[2], c[0])
		c[1], c[0] = madd2(v, x[10], c[1], t[10])
		c[2], t[9] = madd2(m, 15245204190150714528, c[2], c[0])
		c[1], c[0] = madd2(v, x[11], c[1], t[11])
		t[11], t[10] = madd3(m, 7742605440636589233, c[0], c[2], c[1])
	}
	{
		// round 10
		v := z[10]
		c[1], c[0] = madd1(v, x[0], t[0])
		m := c[0] * 5835146174840067007
		c[2] = madd0(m, 7656501765637170113, c[0])
		c[1], c[0] = madd2(v, x[1], c[1], t[1])
		c[2], t[0] = madd2(m, 995431890602415175, c[2], c[0])
		c[1], c[0] = madd2(v, x[2], c[1], t[2])
		c[2], t[1] = madd2(m, 17147986121063705172, c[2], c[0])
		c[1], c[0] = madd2(v, x[3], c[1], t[3])
		c[2], t[2] = madd2(m, 8433803164972306302, c[2], c[0])
		c[1], c[0] = madd2(v, x[4], c[1], t[4])
		c[2], t[3] = madd2(m, 4445149597556670472, c[2], c[0])
		c[1], c[0] = madd2(v, x[5], c[1], t[5])
		c[2], t[4] = madd2(m, 16657431670835164191, c[2], c[0])
		c[1], c[0] = madd2(v, x[6], c[1], t[6])
		c[2], t[5] = madd2(m, 6903462234106192363, c[2], c[0])
		c[1], c[0] = madd2(v, x[7], c[1], t[7])
		c[2], t[6] = madd2(m, 14015292340317556369, c[2], c[0])
		c[1], c[0] = madd2(v, x[8], c[1], t[8])
		c[2], t[7] = madd2(m, 6194206169627483649, c[2], c[0])
		c[1], c[0] = madd2(v, x[9], c[1], t[9])
		c[2], t[8] = madd2(m, 16227442830635305454, c[2], c[0])
		c[1], c[0] = madd2(v, x[10], c[1], t[10])
		c[2], t[9] = madd2(m, 15245204190150714528, c[2], c[0])
		c[1], c[0] = madd2(v, x[11], c[1], t[11])
		t[11], t[10] = madd3(m, 7742605440636589233, c[0], c[2], c[1])
	}
	{
		// round 11
		v := z[11]
		c[1], c[0] = madd1(v, x[0], t[0])
		m := c[0] * 5835146174840067007
		c[2] = madd0(m, 7656501765637170113, c[0])
		c[1], c[0] = madd2(v, x[1], c[1], t[1])
		c[2], z[0] = madd2(m, 995431890602415175, c[2], c[0])
		c[1], c[0] = madd2(v, x[2], c[1], t[2])
		c[2], z[1] = madd2(m, 17147986121063705172, c[2], c[0])
		c[1], c[0] = madd2(v, x[3], c[1], t[3])
		c[2], z[2] = madd2(m, 8433803164972306302, c[2], c[0])
		c[1], c[0] = madd2(v, x[4], c[1], t[4])
		c[2], z[3] = madd2(m, 4445149597556670472, c[2], c[0])
		c[1], c[0] = madd2(v, x[5], c[1], t[5])
		c[2], z[4] = madd2(m, 16657431670835164191, c[2], c[0])
		c[1], c[0] = madd2(v, x[6], c[1], t[6])
		c[2], z[5] = madd2(m, 6903462234106192363, c[2], c[0])
		c[1], c[0] = madd2(v, x[7], c[1], t[7])
		c[2], z[6] = madd2(m, 14015292340317556369, c[2], c[0])
		c[1], c[0] = madd2(v, x[8], c[1], t[8])
		c[2], z[7] = madd2(m, 6194206169627483649, c[2], c[0])
		c[1], c[0] = madd2(v, x[9], c[1], t[9])
		c[2], z[8] = madd2(m, 16227442830635305454, c[2], c[0])
		c[1], c[0] = madd2(v, x[10], c[1], t[10])
		c[2], z[9] = madd2(m, 15245204190150714528, c[2], c[0])
		c[1], c[0] = madd2(v, x[11], c[1], t[11])
		z[11], z[10] = madd3(m, 7742605440636589233, c[0], c[2], c[1])
	}

	// if z > q --> z -= q
	if !(z[11] < 7742605440636589233 || (z[11] == 7742605440636589233 && (z[10] < 15245204190150714528 || (z[10] == 15245204190150714528 && (z[9] < 16227442830635305454 || (z[9] == 16227442830635305454 && (z[8] < 6194206169627483649 || (z[8] == 6194206169627483649 && (z[7] < 14015292340317556369 || (z[7] == 14015292340317556369 && (z[6] < 6903462234106192363 || (z[6] == 6903462234106192363 && (z[5] < 16657431670835164191 || (z[5] == 16657431670835164191 && (z[4] < 4445149597556670472 || (z[4] == 4445149597556670472 && (z[3] < 8433803164972306302 || (z[3] == 8433803164972306302 && (z[2] < 17147986121063705172 || (z[2] == 17147986121063705172 && (z[1] < 995431890602415175 || (z[1] == 995431890602415175 && (z[0] < 7656501765637170113))))))))))))))))))))))) {
		var b uint64
		z[0], b = bits.Sub64(z[0], 7656501765637170113, 0)
		z[1], b = bits.Sub64(z[1], 995431890602415175, b)
		z[2], b = bits.Sub64(z[2], 17147986121063705172, b)
		z[3], b = bits.Sub64(z[3], 8433803164972306302, b)
		z[4], b = bits.Sub64(z[4], 4445149597556670472, b)
		z[5], b = bits.Sub64(z[5], 16657431670835164191, b)
		z[6], b = bits.Sub64(z[6], 6903462234106192363, b)
		z[7], b = bits.Sub64(z[7], 14015292340317556369, b)
		z[8], b = bits.Sub64(z[8], 6194206169627483649, b)
		z[9], b = bits.Sub64(z[9], 16227442830635305454, b)
		z[10], b = bits.Sub64(z[10], 15245204190150714528, b)
		z[11], _ = bits.Sub64(z[11], 7742605440636589233, b)
	}
	return z
}

func (z *Element12) mulFIPS(x *Element12) *Element12 {

	var p [12]uint64
	var t, u, v uint64
	u, v = bits.Mul64(z[0], x[0])
	p[0] = v * 5835146174840067007
	u, v, _ = madd(p[0], 7656501765637170113, 0, u, v)
	t, u, v = madd(z[0], x[1], 0, u, v)
	t, u, v = madd(p[0], 995431890602415175, t, u, v)
	t, u, v = madd(z[1], x[0], t, u, v)
	p[1] = v * 5835146174840067007
	u, v, _ = madd(p[1], 7656501765637170113, t, u, v)
	t, u, v = madd(z[0], x[2], 0, u, v)
	t, u, v = madd(p[0], 17147986121063705172, t, u, v)
	t, u, v = madd(z[1], x[1], t, u, v)
	t, u, v = madd(p[1], 995431890602415175, t, u, v)
	t, u, v = madd(z[2], x[0], t, u, v)
	p[2] = v * 5835146174840067007
	u, v, _ = madd(p[2], 7656501765637170113, t, u, v)
	t, u, v = madd(z[0], x[3], 0, u, v)
	t, u, v = madd(p[0], 8433803164972306302, t, u, v)
	t, u, v = madd(z[1], x[2], t, u, v)
	t, u, v = madd(p[1], 17147986121063705172, t, u, v)
	t, u, v = madd(z[2], x[1], t, u, v)
	t, u, v = madd(p[2], 995431890602415175, t, u, v)
	t, u, v = madd(z[3], x[0], t, u, v)
	p[3] = v * 5835146174840067007
	u, v, _ = madd(p[3], 7656501765637170113, t, u, v)
	t, u, v = madd(z[0], x[4], 0, u, v)
	t, u, v = madd(p[0], 4445149597556670472, t, u, v)
	t, u, v = madd(z[1], x[3], t, u, v)
	t, u, v = madd(p[1], 8433803164972306302, t, u, v)
	t, u, v = madd(z[2], x[2], t, u, v)
	t, u, v = madd(p[2], 17147986121063705172, t, u, v)
	t, u, v = madd(z[3], x[1], t, u, v)
	t, u, v = madd(p[3], 995431890602415175, t, u, v)
	t, u, v = madd(z[4], x[0], t, u, v)
	p[4] = v * 5835146174840067007
	u, v, _ = madd(p[4], 7656501765637170113, t, u, v)
	t, u, v = madd(z[0], x[5], 0, u, v)
	t, u, v = madd(p[0], 16657431670835164191, t, u, v)
	t, u, v = madd(z[1], x[4], t, u, v)
	t, u, v = madd(p[1], 4445149597556670472, t, u, v)
	t, u, v = madd(z[2], x[3], t, u, v)
	t, u, v = madd(p[2], 8433803164972306302, t, u, v)
	t, u, v = madd(z[3], x[2], t, u, v)
	t, u, v = madd(p[3], 17147986121063705172, t, u, v)
	t, u, v = madd(z[4], x[1], t, u, v)
	t, u, v = madd(p[4], 995431890602415175, t, u, v)
	t, u, v = madd(z[5], x[0], t, u, v)
	p[5] = v * 5835146174840067007
	u, v, _ = madd(p[5], 7656501765637170113, t, u, v)
	t, u, v = madd(z[0], x[6], 0, u, v)
	t, u, v = madd(p[0], 6903462234106192363, t, u, v)
	t, u, v = madd(z[1], x[5], t, u, v)
	t, u, v = madd(p[1], 16657431670835164191, t, u, v)
	t, u, v = madd(z[2], x[4], t, u, v)
	t, u, v = madd(p[2], 4445149597556670472, t, u, v)
	t, u, v = madd(z[3], x[3], t, u, v)
	t, u, v = madd(p[3], 8433803164972306302, t, u, v)
	t, u, v = madd(z[4], x[2], t, u, v)
	t, u, v = madd(p[4], 17147986121063705172, t, u, v)
	t, u, v = madd(z[5], x[1], t, u, v)
	t, u, v = madd(p[5], 995431890602415175, t, u, v)
	t, u, v = madd(z[6], x[0], t, u, v)
	p[6] = v * 5835146174840067007
	u, v, _ = madd(p[6], 7656501765637170113, t, u, v)
	t, u, v = madd(z[0], x[7], 0, u, v)
	t, u, v = madd(p[0], 14015292340317556369, t, u, v)
	t, u, v = madd(z[1], x[6], t, u, v)
	t, u, v = madd(p[1], 6903462234106192363, t, u, v)
	t, u, v = madd(z[2], x[5], t, u, v)
	t, u, v = madd(p[2], 16657431670835164191, t, u, v)
	t, u, v = madd(z[3], x[4], t, u, v)
	t, u, v = madd(p[3], 4445149597556670472, t, u, v)
	t, u, v = madd(z[4], x[3], t, u, v)
	t, u, v = madd(p[4], 8433803164972306302, t, u, v)
	t, u, v = madd(z[5], x[2], t, u, v)
	t, u, v = madd(p[5], 17147986121063705172, t, u, v)
	t, u, v = madd(z[6], x[1], t, u, v)
	t, u, v = madd(p[6], 995431890602415175, t, u, v)
	t, u, v = madd(z[7], x[0], t, u, v)
	p[7] = v * 5835146174840067007
	u, v, _ = madd(p[7], 7656501765637170113, t, u, v)
	t, u, v = madd(z[0], x[8], 0, u, v)
	t, u, v = madd(p[0], 6194206169627483649, t, u, v)
	t, u, v = madd(z[1], x[7], t, u, v)
	t, u, v = madd(p[1], 14015292340317556369, t, u, v)
	t, u, v = madd(z[2], x[6], t, u, v)
	t, u, v = madd(p[2], 6903462234106192363, t, u, v)
	t, u, v = madd(z[3], x[5], t, u, v)
	t, u, v = madd(p[3], 16657431670835164191, t, u, v)
	t, u, v = madd(z[4], x[4], t, u, v)
	t, u, v = madd(p[4], 4445149597556670472, t, u, v)
	t, u, v = madd(z[5], x[3], t, u, v)
	t, u, v = madd(p[5], 8433803164972306302, t, u, v)
	t, u, v = madd(z[6], x[2], t, u, v)
	t, u, v = madd(p[6], 17147986121063705172, t, u, v)
	t, u, v = madd(z[7], x[1], t, u, v)
	t, u, v = madd(p[7], 995431890602415175, t, u, v)
	t, u, v = madd(z[8], x[0], t, u, v)
	p[8] = v * 5835146174840067007
	u, v, _ = madd(p[8], 7656501765637170113, t, u, v)
	t, u, v = madd(z[0], x[9], 0, u, v)
	t, u, v = madd(p[0], 16227442830635305454, t, u, v)
	t, u, v = madd(z[1], x[8], t, u, v)
	t, u, v = madd(p[1], 6194206169627483649, t, u, v)
	t, u, v = madd(z[2], x[7], t, u, v)
	t, u, v = madd(p[2], 14015292340317556369, t, u, v)
	t, u, v = madd(z[3], x[6], t, u, v)
	t, u, v = madd(p[3], 6903462234106192363, t, u, v)
	t, u, v = madd(z[4], x[5], t, u, v)
	t, u, v = madd(p[4], 16657431670835164191, t, u, v)
	t, u, v = madd(z[5], x[4], t, u, v)
	t, u, v = madd(p[5], 4445149597556670472, t, u, v)
	t, u, v = madd(z[6], x[3], t, u, v)
	t, u, v = madd(p[6], 8433803164972306302, t, u, v)
	t, u, v = madd(z[7], x[2], t, u, v)
	t, u, v = madd(p[7], 17147986121063705172, t, u, v)
	t, u, v = madd(z[8], x[1], t, u, v)
	t, u, v = madd(p[8], 995431890602415175, t, u, v)
	t, u, v = madd(z[9], x[0], t, u, v)
	p[9] = v * 5835146174840067007
	u, v, _ = madd(p[9], 7656501765637170113, t, u, v)
	t, u, v = madd(z[0], x[10], 0, u, v)
	t, u, v = madd(p[0], 15245204190150714528, t, u, v)
	t, u, v = madd(z[1], x[9], t, u, v)
	t, u, v = madd(p[1], 16227442830635305454, t, u, v)
	t, u, v = madd(z[2], x[8], t, u, v)
	t, u, v = madd(p[2], 6194206169627483649, t, u, v)
	t, u, v = madd(z[3], x[7], t, u, v)
	t, u, v = madd(p[3], 14015292340317556369, t, u, v)
	t, u, v = madd(z[4], x[6], t, u, v)
	t, u, v = madd(p[4], 6903462234106192363, t, u, v)
	t, u, v = madd(z[5], x[5], t, u, v)
	t, u, v = madd(p[5], 16657431670835164191, t, u, v)
	t, u, v = madd(z[6], x[4], t, u, v)
	t, u, v = madd(p[6], 4445149597556670472, t, u, v)
	t, u, v = madd(z[7], x[3], t, u, v)
	t, u, v = madd(p[7], 8433803164972306302, t, u, v)
	t, u, v = madd(z[8], x[2], t, u, v)
	t, u, v = madd(p[8], 17147986121063705172, t, u, v)
	t, u, v = madd(z[9], x[1], t, u, v)
	t, u, v = madd(p[9], 995431890602415175, t, u, v)
	t, u, v = madd(z[10], x[0], t, u, v)
	p[10] = v * 5835146174840067007
	u, v, _ = madd(p[10], 7656501765637170113, t, u, v)
	t, u, v = madd(z[0], x[11], 0, u, v)
	t, u, v = madd(p[0], 7742605440636589233, t, u, v)
	t, u, v = madd(z[1], x[10], t, u, v)
	t, u, v = madd(p[1], 15245204190150714528, t, u, v)
	t, u, v = madd(z[2], x[9], t, u, v)
	t, u, v = madd(p[2], 16227442830635305454, t, u, v)
	t, u, v = madd(z[3], x[8], t, u, v)
	t, u, v = madd(p[3], 6194206169627483649, t, u, v)
	t, u, v = madd(z[4], x[7], t, u, v)
	t, u, v = madd(p[4], 14015292340317556369, t, u, v)
	t, u, v = madd(z[5], x[6], t, u, v)
	t, u, v = madd(p[5], 6903462234106192363, t, u, v)
	t, u, v = madd(z[6], x[5], t, u, v)
	t, u, v = madd(p[6], 16657431670835164191, t, u, v)
	t, u, v = madd(z[7], x[4], t, u, v)
	t, u, v = madd(p[7], 4445149597556670472, t, u, v)
	t, u, v = madd(z[8], x[3], t, u, v)
	t, u, v = madd(p[8], 8433803164972306302, t, u, v)
	t, u, v = madd(z[9], x[2], t, u, v)
	t, u, v = madd(p[9], 17147986121063705172, t, u, v)
	t, u, v = madd(z[10], x[1], t, u, v)
	t, u, v = madd(p[10], 995431890602415175, t, u, v)
	t, u, v = madd(z[11], x[0], t, u, v)
	p[11] = v * 5835146174840067007
	u, v, _ = madd(p[11], 7656501765637170113, t, u, v)
	t, u, v = madd(z[1], x[11], 0, u, v)
	t, u, v = madd(p[1], 7742605440636589233, t, u, v)
	t, u, v = madd(z[2], x[10], t, u, v)
	t, u, v = madd(p[2], 15245204190150714528, t, u, v)
	t, u, v = madd(z[3], x[9], t, u, v)
	t, u, v = madd(p[3], 16227442830635305454, t, u, v)
	t, u, v = madd(z[4], x[8], t, u, v)
	t, u, v = madd(p[4], 6194206169627483649, t, u, v)
	t, u, v = madd(z[5], x[7], t, u, v)
	t, u, v = madd(p[5], 14015292340317556369, t, u, v)
	t, u, v = madd(z[6], x[6], t, u, v)
	t, u, v = madd(p[6], 6903462234106192363, t, u, v)
	t, u, v = madd(z[7], x[5], t, u, v)
	t, u, v = madd(p[7], 16657431670835164191, t, u, v)
	t, u, v = madd(z[8], x[4], t, u, v)
	t, u, v = madd(p[8], 4445149597556670472, t, u, v)
	t, u, v = madd(z[9], x[3], t, u, v)
	t, u, v = madd(p[9], 8433803164972306302, t, u, v)
	t, u, v = madd(z[10], x[2], t, u, v)
	t, u, v = madd(p[10], 17147986121063705172, t, u, v)
	t, u, v = madd(z[11], x[1], t, u, v)
	u, v, p[0] = madd(p[11], 995431890602415175, t, u, v)
	t, u, v = madd(z[2], x[11], 0, u, v)
	t, u, v = madd(p[2], 7742605440636589233, t, u, v)
	t, u, v = madd(z[3], x[10], t, u, v)
	t, u, v = madd(p[3], 15245204190150714528, t, u, v)
	t, u, v = madd(z[4], x[9], t, u, v)
	t, u, v = madd(p[4], 16227442830635305454, t, u, v)
	t, u, v = madd(z[5], x[8], t, u, v)
	t, u, v = madd(p[5], 6194206169627483649, t, u, v)
	t, u, v = madd(z[6], x[7], t, u, v)
	t, u, v = madd(p[6], 14015292340317556369, t, u, v)
	t, u, v = madd(z[7], x[6], t, u, v)
	t, u, v = madd(p[7], 6903462234106192363, t, u, v)
	t, u, v = madd(z[8], x[5], t, u, v)
	t, u, v = madd(p[8], 16657431670835164191, t, u, v)
	t, u, v = madd(z[9], x[4], t, u, v)
	t, u, v = madd(p[9], 4445149597556670472, t, u, v)
	t, u, v = madd(z[10], x[3], t, u, v)
	t, u, v = madd(p[10], 8433803164972306302, t, u, v)
	t, u, v = madd(z[11], x[2], t, u, v)
	u, v, p[1] = madd(p[11], 17147986121063705172, t, u, v)
	t, u, v = madd(z[3], x[11], 0, u, v)
	t, u, v = madd(p[3], 7742605440636589233, t, u, v)
	t, u, v = madd(z[4], x[10], t, u, v)
	t, u, v = madd(p[4], 15245204190150714528, t, u, v)
	t, u, v = madd(z[5], x[9], t, u, v)
	t, u, v = madd(p[5], 16227442830635305454, t, u, v)
	t, u, v = madd(z[6], x[8], t, u, v)
	t, u, v = madd(p[6], 6194206169627483649, t, u, v)
	t, u, v = madd(z[7], x[7], t, u, v)
	t, u, v = madd(p[7], 14015292340317556369, t, u, v)
	t, u, v = madd(z[8], x[6], t, u, v)
	t, u, v = madd(p[8], 6903462234106192363, t, u, v)
	t, u, v = madd(z[9], x[5], t, u, v)
	t, u, v = madd(p[9], 16657431670835164191, t, u, v)
	t, u, v = madd(z[10], x[4], t, u, v)
	t, u, v = madd(p[10], 4445149597556670472, t, u, v)
	t, u, v = madd(z[11], x[3], t, u, v)
	u, v, p[2] = madd(p[11], 8433803164972306302, t, u, v)
	t, u, v = madd(z[4], x[11], 0, u, v)
	t, u, v = madd(p[4], 7742605440636589233, t, u, v)
	t, u, v = madd(z[5], x[10], t, u, v)
	t, u, v = madd(p[5], 15245204190150714528, t, u, v)
	t, u, v = madd(z[6], x[9], t, u, v)
	t, u, v = madd(p[6], 16227442830635305454, t, u, v)
	t, u, v = madd(z[7], x[8], t, u, v)
	t, u, v = madd(p[7], 6194206169627483649, t, u, v)
	t, u, v = madd(z[8], x[7], t, u, v)
	t, u, v = madd(p[8], 14015292340317556369, t, u, v)
	t, u, v = madd(z[9], x[6], t, u, v)
	t, u, v = madd(p[9], 6903462234106192363, t, u, v)
	t, u, v = madd(z[10], x[5], t, u, v)
	t, u, v = madd(p[10], 16657431670835164191, t, u, v)
	t, u, v = madd(z[11], x[4], t, u, v)
	u, v, p[3] = madd(p[11], 4445149597556670472, t, u, v)
	t, u, v = madd(z[5], x[11], 0, u, v)
	t, u, v = madd(p[5], 7742605440636589233, t, u, v)
	t, u, v = madd(z[6], x[10], t, u, v)
	t, u, v = madd(p[6], 15245204190150714528, t, u, v)
	t, u, v = madd(z[7], x[9], t, u, v)
	t, u, v = madd(p[7], 16227442830635305454, t, u, v)
	t, u, v = madd(z[8], x[8], t, u, v)
	t, u, v = madd(p[8], 6194206169627483649, t, u, v)
	t, u, v = madd(z[9], x[7], t, u, v)
	t, u, v = madd(p[9], 14015292340317556369, t, u, v)
	t, u, v = madd(z[10], x[6], t, u, v)
	t, u, v = madd(p[10], 6903462234106192363, t, u, v)
	t, u, v = madd(z[11], x[5], t, u, v)
	u, v, p[4] = madd(p[11], 16657431670835164191, t, u, v)
	t, u, v = madd(z[6], x[11], 0, u, v)
	t, u, v = madd(p[6], 7742605440636589233, t, u, v)
	t, u, v = madd(z[7], x[10], t, u, v)
	t, u, v = madd(p[7], 15245204190150714528, t, u, v)
	t, u, v = madd(z[8], x[9], t, u, v)
	t, u, v = madd(p[8], 16227442830635305454, t, u, v)
	t, u, v = madd(z[9], x[8], t, u, v)
	t, u, v = madd(p[9], 6194206169627483649, t, u, v)
	t, u, v = madd(z[10], x[7], t, u, v)
	t, u, v = madd(p[10], 14015292340317556369, t, u, v)
	t, u, v = madd(z[11], x[6], t, u, v)
	u, v, p[5] = madd(p[11], 6903462234106192363, t, u, v)
	t, u, v = madd(z[7], x[11], 0, u, v)
	t, u, v = madd(p[7], 7742605440636589233, t, u, v)
	t, u, v = madd(z[8], x[10], t, u, v)
	t, u, v = madd(p[8], 15245204190150714528, t, u, v)
	t, u, v = madd(z[9], x[9], t, u, v)
	t, u, v = madd(p[9], 16227442830635305454, t, u, v)
	t, u, v = madd(z[10], x[8], t, u, v)
	t, u, v = madd(p[10], 6194206169627483649, t, u, v)
	t, u, v = madd(z[11], x[7], t, u, v)
	u, v, p[6] = madd(p[11], 14015292340317556369, t, u, v)
	t, u, v = madd(z[8], x[11], 0, u, v)
	t, u, v = madd(p[8], 7742605440636589233, t, u, v)
	t, u, v = madd(z[9], x[10], t, u, v)
	t, u, v = madd(p[9], 15245204190150714528, t, u, v)
	t, u, v = madd(z[10], x[9], t, u, v)
	t, u, v = madd(p[10], 16227442830635305454, t, u, v)
	t, u, v = madd(z[11], x[8], t, u, v)
	u, v, p[7] = madd(p[11], 6194206169627483649, t, u, v)
	t, u, v = madd(z[9], x[11], 0, u, v)
	t, u, v = madd(p[9], 7742605440636589233, t, u, v)
	t, u, v = madd(z[10], x[10], t, u, v)
	t, u, v = madd(p[10], 15245204190150714528, t, u, v)
	t, u, v = madd(z[11], x[9], t, u, v)
	u, v, p[8] = madd(p[11], 16227442830635305454, t, u, v)
	t, u, v = madd(z[10], x[11], 0, u, v)
	t, u, v = madd(p[10], 7742605440636589233, t, u, v)
	t, u, v = madd(z[11], x[10], t, u, v)
	u, v, p[9] = madd(p[11], 15245204190150714528, t, u, v)
	t, u, v = madd(z[11], x[11], t, u, v)
	u, v, p[10] = madd(p[11], 7742605440636589233, t, u, v)

	p[11] = v
	z[11] = p[11]
	z[10] = p[10]
	z[9] = p[9]
	z[8] = p[8]
	z[7] = p[7]
	z[6] = p[6]
	z[5] = p[5]
	z[4] = p[4]
	z[3] = p[3]
	z[2] = p[2]
	z[1] = p[1]
	z[0] = p[0]
	// copy(z[:], p[:])

	// if z > q --> z -= q
	if !(z[11] < 7742605440636589233 || (z[11] == 7742605440636589233 && (z[10] < 15245204190150714528 || (z[10] == 15245204190150714528 && (z[9] < 16227442830635305454 || (z[9] == 16227442830635305454 && (z[8] < 6194206169627483649 || (z[8] == 6194206169627483649 && (z[7] < 14015292340317556369 || (z[7] == 14015292340317556369 && (z[6] < 6903462234106192363 || (z[6] == 6903462234106192363 && (z[5] < 16657431670835164191 || (z[5] == 16657431670835164191 && (z[4] < 4445149597556670472 || (z[4] == 4445149597556670472 && (z[3] < 8433803164972306302 || (z[3] == 8433803164972306302 && (z[2] < 17147986121063705172 || (z[2] == 17147986121063705172 && (z[1] < 995431890602415175 || (z[1] == 995431890602415175 && (z[0] < 7656501765637170113))))))))))))))))))))))) {
		var b uint64
		z[0], b = bits.Sub64(z[0], 7656501765637170113, 0)
		z[1], b = bits.Sub64(z[1], 995431890602415175, b)
		z[2], b = bits.Sub64(z[2], 17147986121063705172, b)
		z[3], b = bits.Sub64(z[3], 8433803164972306302, b)
		z[4], b = bits.Sub64(z[4], 4445149597556670472, b)
		z[5], b = bits.Sub64(z[5], 16657431670835164191, b)
		z[6], b = bits.Sub64(z[6], 6903462234106192363, b)
		z[7], b = bits.Sub64(z[7], 14015292340317556369, b)
		z[8], b = bits.Sub64(z[8], 6194206169627483649, b)
		z[9], b = bits.Sub64(z[9], 16227442830635305454, b)
		z[10], b = bits.Sub64(z[10], 15245204190150714528, b)
		z[11], _ = bits.Sub64(z[11], 7742605440636589233, b)
	}
	return z
}

func BenchmarkMulCIOSELEMENT12(b *testing.B) {
	x := Element12{
		8627266122992636208,
		8293069564550117897,
		5718808737612239708,
		13341852196805508268,
		16864287701276868771,
		8216765245140596293,
		4500728489885691909,
		12610435794894631991,
		1810448264617102251,
		7680505162529335161,
		12899484429470930314,
		7109699468797419729,
	}
	benchResElement12.SetOne()
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		benchResElement12.mulCIOS(&x)
	}
}

func BenchmarkMulFIPSELEMENT12(b *testing.B) {
	x := Element12{
		8627266122992636208,
		8293069564550117897,
		5718808737612239708,
		13341852196805508268,
		16864287701276868771,
		8216765245140596293,
		4500728489885691909,
		12610435794894631991,
		1810448264617102251,
		7680505162529335161,
		12899484429470930314,
		7109699468797419729,
	}
	benchResElement12.SetOne()
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		benchResElement12.mulFIPS(&x)
	}
}

func BenchmarkMulNoCarryELEMENT12(b *testing.B) {
	x := Element12{
		8627266122992636208,
		8293069564550117897,
		5718808737612239708,
		13341852196805508268,
		16864287701276868771,
		8216765245140596293,
		4500728489885691909,
		12610435794894631991,
		1810448264617102251,
		7680505162529335161,
		12899484429470930314,
		7109699468797419729,
	}
	benchResElement12.SetOne()
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		benchResElement12.mulNoCarry(&x)
	}
}

// Copyright 2019 ConsenSys AG
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Package generated implements field arithmetics with field modulus q =
//
// 55976462361061239617300043275175963021493194087675031586894593362752876841413240080836815146798402081219231928644753312664857228996252505379829179034215317496019040735945457349282010276534436400870556014657918330700819182661846311491907156827125485789702799450096542232905832349835885346799500516060165442324154978474674881558706678511606806237454988512525615663500137488610231002033552703681128875425614450397024179758248685524055043734913477
//
// Code generated by goff DO NOT EDIT
// Element23 are assumed to be in Montgomery form in all methods
package generated

import (
	"crypto/rand"
	"encoding/binary"
	"io"
	"math/big"
	"math/bits"
	"sync"
	"unsafe"
)

// Element23 represents a field element stored on 23 words (uint64)
// Element23 are assumed to be in Montgomery form in all methods
type Element23 [23]uint64

// Element23Limbs number of 64 bits words needed to represent Element23
const Element23Limbs = 23

// Element23Bits number bits needed to represent Element23
const Element23Bits = 1471

// SetUint64 z = v, sets z LSB to v (non-Montgomery form) and convert z to Montgomery form
func (z *Element23) SetUint64(v uint64) *Element23 {
	z[0] = v
	z[1] = 0
	z[2] = 0
	z[3] = 0
	z[4] = 0
	z[5] = 0
	z[6] = 0
	z[7] = 0
	z[8] = 0
	z[9] = 0
	z[10] = 0
	z[11] = 0
	z[12] = 0
	z[13] = 0
	z[14] = 0
	z[15] = 0
	z[16] = 0
	z[17] = 0
	z[18] = 0
	z[19] = 0
	z[20] = 0
	z[21] = 0
	z[22] = 0
	return z.ToMont()
}

// Set z = x
func (z *Element23) Set(x *Element23) *Element23 {
	z[0] = x[0]
	z[1] = x[1]
	z[2] = x[2]
	z[3] = x[3]
	z[4] = x[4]
	z[5] = x[5]
	z[6] = x[6]
	z[7] = x[7]
	z[8] = x[8]
	z[9] = x[9]
	z[10] = x[10]
	z[11] = x[11]
	z[12] = x[12]
	z[13] = x[13]
	z[14] = x[14]
	z[15] = x[15]
	z[16] = x[16]
	z[17] = x[17]
	z[18] = x[18]
	z[19] = x[19]
	z[20] = x[20]
	z[21] = x[21]
	z[22] = x[22]
	return z
}

// SetZero z = 0
func (z *Element23) SetZero() *Element23 {
	z[0] = 0
	z[1] = 0
	z[2] = 0
	z[3] = 0
	z[4] = 0
	z[5] = 0
	z[6] = 0
	z[7] = 0
	z[8] = 0
	z[9] = 0
	z[10] = 0
	z[11] = 0
	z[12] = 0
	z[13] = 0
	z[14] = 0
	z[15] = 0
	z[16] = 0
	z[17] = 0
	z[18] = 0
	z[19] = 0
	z[20] = 0
	z[21] = 0
	z[22] = 0
	return z
}

// SetOne z = 1 (in Montgomery form)
func (z *Element23) SetOne() *Element23 {
	z[0] = 12491060184677055606
	z[1] = 7713466675936314351
	z[2] = 3904429228909398099
	z[3] = 16613926952710417752
	z[4] = 15431646732503560788
	z[5] = 10399758381122156114
	z[6] = 7453985509652031171
	z[7] = 8104874242820954708
	z[8] = 17606388413297058934
	z[9] = 309356217794118791
	z[10] = 3835083985772602342
	z[11] = 17796508693864415064
	z[12] = 2107658022026911933
	z[13] = 5555141215771687772
	z[14] = 7949712323560324022
	z[15] = 3688053523785559930
	z[16] = 4513058968463491193
	z[17] = 1676973235375104804
	z[18] = 8522280693833848047
	z[19] = 4096062487015159618
	z[20] = 18247237007901772025
	z[21] = 15871969998944674327
	z[22] = 2641487550666456321
	return z
}

// Neg z = q - x
func (z *Element23) Neg(x *Element23) *Element23 {
	if x.IsZero() {
		return z.SetZero()
	}
	var borrow uint64
	z[0], borrow = bits.Sub64(2977841944516248005, x[0], 0)
	z[1], borrow = bits.Sub64(5366638698886618632, x[1], borrow)
	z[2], borrow = bits.Sub64(16494529459254852566, x[2], borrow)
	z[3], borrow = bits.Sub64(10139780597354342739, x[3], borrow)
	z[4], borrow = bits.Sub64(10730920707457771221, x[4], borrow)
	z[5], borrow = bits.Sub64(4023492846293697750, x[5], borrow)
	z[6], borrow = bits.Sub64(14719751318883536030, x[6], borrow)
	z[7], borrow = bits.Sub64(14394306952299074261, x[7], borrow)
	z[8], borrow = bits.Sub64(420177830206246340, x[8], borrow)
	z[9], borrow = bits.Sub64(18292065964812492220, x[9], borrow)
	z[10], borrow = bits.Sub64(16529202080823250444, x[10], borrow)
	z[11], borrow = bits.Sub64(325117689922568275, x[11], borrow)
	z[12], borrow = bits.Sub64(17392915062696095649, x[12], borrow)
	z[13], borrow = bits.Sub64(15669173465823707729, x[13], borrow)
	z[14], borrow = bits.Sub64(14471887911929389604, x[14], borrow)
	z[15], borrow = bits.Sub64(7379345274961995842, x[15], borrow)
	z[16], borrow = bits.Sub64(16190214589477806019, x[16], borrow)
	z[17], borrow = bits.Sub64(8384885419167223405, x[17], borrow)
	z[18], borrow = bits.Sub64(14185603726792627592, x[18], borrow)
	z[19], borrow = bits.Sub64(7175340793347195998, x[19], borrow)
	z[20], borrow = bits.Sub64(99753532903889795, x[20], borrow)
	z[21], borrow = bits.Sub64(1287387037382438644, x[21], borrow)
	z[22], _ = bits.Sub64(7902628261521547647, x[22], borrow)
	return z
}

// Div z = x*y^-1 mod q
func (z *Element23) Div(x, y *Element23) *Element23 {
	var yInv Element23
	yInv.Inverse(y)
	z.Mul(x, &yInv)
	return z
}

// Equal returns z == x
func (z *Element23) Equal(x *Element23) bool {
	return (z[22] == x[22]) && (z[21] == x[21]) && (z[20] == x[20]) && (z[19] == x[19]) && (z[18] == x[18]) && (z[17] == x[17]) && (z[16] == x[16]) && (z[15] == x[15]) && (z[14] == x[14]) && (z[13] == x[13]) && (z[12] == x[12]) && (z[11] == x[11]) && (z[10] == x[10]) && (z[9] == x[9]) && (z[8] == x[8]) && (z[7] == x[7]) && (z[6] == x[6]) && (z[5] == x[5]) && (z[4] == x[4]) && (z[3] == x[3]) && (z[2] == x[2]) && (z[1] == x[1]) && (z[0] == x[0])
}

// IsZero returns z == 0
func (z *Element23) IsZero() bool {
	return (z[22] | z[21] | z[20] | z[19] | z[18] | z[17] | z[16] | z[15] | z[14] | z[13] | z[12] | z[11] | z[10] | z[9] | z[8] | z[7] | z[6] | z[5] | z[4] | z[3] | z[2] | z[1] | z[0]) == 0
}

// field modulus stored as big.Int
var _element23ModulusBigInt big.Int
var onceelement23Modulus sync.Once

func element23ModulusBigInt() *big.Int {
	onceelement23Modulus.Do(func() {
		_element23ModulusBigInt.SetString("55976462361061239617300043275175963021493194087675031586894593362752876841413240080836815146798402081219231928644753312664857228996252505379829179034215317496019040735945457349282010276534436400870556014657918330700819182661846311491907156827125485789702799450096542232905832349835885346799500516060165442324154978474674881558706678511606806237454988512525615663500137488610231002033552703681128875425614450397024179758248685524055043734913477", 10)
	})
	return &_element23ModulusBigInt
}

// Inverse z = x^-1 mod q
// note: allocates a big.Int (math/big)
func (z *Element23) Inverse(x *Element23) *Element23 {
	var _xNonMont big.Int
	x.ToBigIntRegular(&_xNonMont)
	_xNonMont.ModInverse(&_xNonMont, element23ModulusBigInt())
	z.SetBigInt(&_xNonMont)
	return z
}

// SetRandom sets z to a random element < q
func (z *Element23) SetRandom() *Element23 {
	bytes := make([]byte, 1472)
	io.ReadFull(rand.Reader, bytes)
	z[0] = binary.BigEndian.Uint64(bytes[0:64])
	z[1] = binary.BigEndian.Uint64(bytes[64:128])
	z[2] = binary.BigEndian.Uint64(bytes[128:192])
	z[3] = binary.BigEndian.Uint64(bytes[192:256])
	z[4] = binary.BigEndian.Uint64(bytes[256:320])
	z[5] = binary.BigEndian.Uint64(bytes[320:384])
	z[6] = binary.BigEndian.Uint64(bytes[384:448])
	z[7] = binary.BigEndian.Uint64(bytes[448:512])
	z[8] = binary.BigEndian.Uint64(bytes[512:576])
	z[9] = binary.BigEndian.Uint64(bytes[576:640])
	z[10] = binary.BigEndian.Uint64(bytes[640:704])
	z[11] = binary.BigEndian.Uint64(bytes[704:768])
	z[12] = binary.BigEndian.Uint64(bytes[768:832])
	z[13] = binary.BigEndian.Uint64(bytes[832:896])
	z[14] = binary.BigEndian.Uint64(bytes[896:960])
	z[15] = binary.BigEndian.Uint64(bytes[960:1024])
	z[16] = binary.BigEndian.Uint64(bytes[1024:1088])
	z[17] = binary.BigEndian.Uint64(bytes[1088:1152])
	z[18] = binary.BigEndian.Uint64(bytes[1152:1216])
	z[19] = binary.BigEndian.Uint64(bytes[1216:1280])
	z[20] = binary.BigEndian.Uint64(bytes[1280:1344])
	z[21] = binary.BigEndian.Uint64(bytes[1344:1408])
	z[22] = binary.BigEndian.Uint64(bytes[1408:1472])
	z[22] %= 7902628261521547647

	// if z > q --> z -= q
	if !(z[22] < 7902628261521547647 || (z[22] == 7902628261521547647 && (z[21] < 1287387037382438644 || (z[21] == 1287387037382438644 && (z[20] < 99753532903889795 || (z[20] == 99753532903889795 && (z[19] < 7175340793347195998 || (z[19] == 7175340793347195998 && (z[18] < 14185603726792627592 || (z[18] == 14185603726792627592 && (z[17] < 8384885419167223405 || (z[17] == 8384885419167223405 && (z[16] < 16190214589477806019 || (z[16] == 16190214589477806019 && (z[15] < 7379345274961995842 || (z[15] == 7379345274961995842 && (z[14] < 14471887911929389604 || (z[14] == 14471887911929389604 && (z[13] < 15669173465823707729 || (z[13] == 15669173465823707729 && (z[12] < 17392915062696095649 || (z[12] == 17392915062696095649 && (z[11] < 325117689922568275 || (z[11] == 325117689922568275 && (z[10] < 16529202080823250444 || (z[10] == 16529202080823250444 && (z[9] < 18292065964812492220 || (z[9] == 18292065964812492220 && (z[8] < 420177830206246340 || (z[8] == 420177830206246340 && (z[7] < 14394306952299074261 || (z[7] == 14394306952299074261 && (z[6] < 14719751318883536030 || (z[6] == 14719751318883536030 && (z[5] < 4023492846293697750 || (z[5] == 4023492846293697750 && (z[4] < 10730920707457771221 || (z[4] == 10730920707457771221 && (z[3] < 10139780597354342739 || (z[3] == 10139780597354342739 && (z[2] < 16494529459254852566 || (z[2] == 16494529459254852566 && (z[1] < 5366638698886618632 || (z[1] == 5366638698886618632 && (z[0] < 2977841944516248005))))))))))))))))))))))))))))))))))))))))))))) {
		var b uint64
		z[0], b = bits.Sub64(z[0], 2977841944516248005, 0)
		z[1], b = bits.Sub64(z[1], 5366638698886618632, b)
		z[2], b = bits.Sub64(z[2], 16494529459254852566, b)
		z[3], b = bits.Sub64(z[3], 10139780597354342739, b)
		z[4], b = bits.Sub64(z[4], 10730920707457771221, b)
		z[5], b = bits.Sub64(z[5], 4023492846293697750, b)
		z[6], b = bits.Sub64(z[6], 14719751318883536030, b)
		z[7], b = bits.Sub64(z[7], 14394306952299074261, b)
		z[8], b = bits.Sub64(z[8], 420177830206246340, b)
		z[9], b = bits.Sub64(z[9], 18292065964812492220, b)
		z[10], b = bits.Sub64(z[10], 16529202080823250444, b)
		z[11], b = bits.Sub64(z[11], 325117689922568275, b)
		z[12], b = bits.Sub64(z[12], 17392915062696095649, b)
		z[13], b = bits.Sub64(z[13], 15669173465823707729, b)
		z[14], b = bits.Sub64(z[14], 14471887911929389604, b)
		z[15], b = bits.Sub64(z[15], 7379345274961995842, b)
		z[16], b = bits.Sub64(z[16], 16190214589477806019, b)
		z[17], b = bits.Sub64(z[17], 8384885419167223405, b)
		z[18], b = bits.Sub64(z[18], 14185603726792627592, b)
		z[19], b = bits.Sub64(z[19], 7175340793347195998, b)
		z[20], b = bits.Sub64(z[20], 99753532903889795, b)
		z[21], b = bits.Sub64(z[21], 1287387037382438644, b)
		z[22], _ = bits.Sub64(z[22], 7902628261521547647, b)
	}

	return z
}

// Add z = x + y mod q
func (z *Element23) Add(x, y *Element23) *Element23 {
	var carry uint64

	z[0], carry = bits.Add64(x[0], y[0], 0)
	z[1], carry = bits.Add64(x[1], y[1], carry)
	z[2], carry = bits.Add64(x[2], y[2], carry)
	z[3], carry = bits.Add64(x[3], y[3], carry)
	z[4], carry = bits.Add64(x[4], y[4], carry)
	z[5], carry = bits.Add64(x[5], y[5], carry)
	z[6], carry = bits.Add64(x[6], y[6], carry)
	z[7], carry = bits.Add64(x[7], y[7], carry)
	z[8], carry = bits.Add64(x[8], y[8], carry)
	z[9], carry = bits.Add64(x[9], y[9], carry)
	z[10], carry = bits.Add64(x[10], y[10], carry)
	z[11], carry = bits.Add64(x[11], y[11], carry)
	z[12], carry = bits.Add64(x[12], y[12], carry)
	z[13], carry = bits.Add64(x[13], y[13], carry)
	z[14], carry = bits.Add64(x[14], y[14], carry)
	z[15], carry = bits.Add64(x[15], y[15], carry)
	z[16], carry = bits.Add64(x[16], y[16], carry)
	z[17], carry = bits.Add64(x[17], y[17], carry)
	z[18], carry = bits.Add64(x[18], y[18], carry)
	z[19], carry = bits.Add64(x[19], y[19], carry)
	z[20], carry = bits.Add64(x[20], y[20], carry)
	z[21], carry = bits.Add64(x[21], y[21], carry)
	z[22], carry = bits.Add64(x[22], y[22], carry)
	// if we overflowed the last addition, z >= q
	// if z >= q, z = z - q
	if carry != 0 {
		// we overflowed, so z >= q
		z[0], carry = bits.Sub64(z[0], 2977841944516248005, 0)
		z[1], carry = bits.Sub64(z[1], 5366638698886618632, carry)
		z[2], carry = bits.Sub64(z[2], 16494529459254852566, carry)
		z[3], carry = bits.Sub64(z[3], 10139780597354342739, carry)
		z[4], carry = bits.Sub64(z[4], 10730920707457771221, carry)
		z[5], carry = bits.Sub64(z[5], 4023492846293697750, carry)
		z[6], carry = bits.Sub64(z[6], 14719751318883536030, carry)
		z[7], carry = bits.Sub64(z[7], 14394306952299074261, carry)
		z[8], carry = bits.Sub64(z[8], 420177830206246340, carry)
		z[9], carry = bits.Sub64(z[9], 18292065964812492220, carry)
		z[10], carry = bits.Sub64(z[10], 16529202080823250444, carry)
		z[11], carry = bits.Sub64(z[11], 325117689922568275, carry)
		z[12], carry = bits.Sub64(z[12], 17392915062696095649, carry)
		z[13], carry = bits.Sub64(z[13], 15669173465823707729, carry)
		z[14], carry = bits.Sub64(z[14], 14471887911929389604, carry)
		z[15], carry = bits.Sub64(z[15], 7379345274961995842, carry)
		z[16], carry = bits.Sub64(z[16], 16190214589477806019, carry)
		z[17], carry = bits.Sub64(z[17], 8384885419167223405, carry)
		z[18], carry = bits.Sub64(z[18], 14185603726792627592, carry)
		z[19], carry = bits.Sub64(z[19], 7175340793347195998, carry)
		z[20], carry = bits.Sub64(z[20], 99753532903889795, carry)
		z[21], carry = bits.Sub64(z[21], 1287387037382438644, carry)
		z[22], carry = bits.Sub64(z[22], 7902628261521547647, carry)
		return z
	}

	// if z > q --> z -= q
	if !(z[22] < 7902628261521547647 || (z[22] == 7902628261521547647 && (z[21] < 1287387037382438644 || (z[21] == 1287387037382438644 && (z[20] < 99753532903889795 || (z[20] == 99753532903889795 && (z[19] < 7175340793347195998 || (z[19] == 7175340793347195998 && (z[18] < 14185603726792627592 || (z[18] == 14185603726792627592 && (z[17] < 8384885419167223405 || (z[17] == 8384885419167223405 && (z[16] < 16190214589477806019 || (z[16] == 16190214589477806019 && (z[15] < 7379345274961995842 || (z[15] == 7379345274961995842 && (z[14] < 14471887911929389604 || (z[14] == 14471887911929389604 && (z[13] < 15669173465823707729 || (z[13] == 15669173465823707729 && (z[12] < 17392915062696095649 || (z[12] == 17392915062696095649 && (z[11] < 325117689922568275 || (z[11] == 325117689922568275 && (z[10] < 16529202080823250444 || (z[10] == 16529202080823250444 && (z[9] < 18292065964812492220 || (z[9] == 18292065964812492220 && (z[8] < 420177830206246340 || (z[8] == 420177830206246340 && (z[7] < 14394306952299074261 || (z[7] == 14394306952299074261 && (z[6] < 14719751318883536030 || (z[6] == 14719751318883536030 && (z[5] < 4023492846293697750 || (z[5] == 4023492846293697750 && (z[4] < 10730920707457771221 || (z[4] == 10730920707457771221 && (z[3] < 10139780597354342739 || (z[3] == 10139780597354342739 && (z[2] < 16494529459254852566 || (z[2] == 16494529459254852566 && (z[1] < 5366638698886618632 || (z[1] == 5366638698886618632 && (z[0] < 2977841944516248005))))))))))))))))))))))))))))))))))))))))))))) {
		var b uint64
		z[0], b = bits.Sub64(z[0], 2977841944516248005, 0)
		z[1], b = bits.Sub64(z[1], 5366638698886618632, b)
		z[2], b = bits.Sub64(z[2], 16494529459254852566, b)
		z[3], b = bits.Sub64(z[3], 10139780597354342739, b)
		z[4], b = bits.Sub64(z[4], 10730920707457771221, b)
		z[5], b = bits.Sub64(z[5], 4023492846293697750, b)
		z[6], b = bits.Sub64(z[6], 14719751318883536030, b)
		z[7], b = bits.Sub64(z[7], 14394306952299074261, b)
		z[8], b = bits.Sub64(z[8], 420177830206246340, b)
		z[9], b = bits.Sub64(z[9], 18292065964812492220, b)
		z[10], b = bits.Sub64(z[10], 16529202080823250444, b)
		z[11], b = bits.Sub64(z[11], 325117689922568275, b)
		z[12], b = bits.Sub64(z[12], 17392915062696095649, b)
		z[13], b = bits.Sub64(z[13], 15669173465823707729, b)
		z[14], b = bits.Sub64(z[14], 14471887911929389604, b)
		z[15], b = bits.Sub64(z[15], 7379345274961995842, b)
		z[16], b = bits.Sub64(z[16], 16190214589477806019, b)
		z[17], b = bits.Sub64(z[17], 8384885419167223405, b)
		z[18], b = bits.Sub64(z[18], 14185603726792627592, b)
		z[19], b = bits.Sub64(z[19], 7175340793347195998, b)
		z[20], b = bits.Sub64(z[20], 99753532903889795, b)
		z[21], b = bits.Sub64(z[21], 1287387037382438644, b)
		z[22], _ = bits.Sub64(z[22], 7902628261521547647, b)
	}
	return z
}

// AddAssign z = z + x mod q
func (z *Element23) AddAssign(x *Element23) *Element23 {
	var carry uint64

	z[0], carry = bits.Add64(z[0], x[0], 0)
	z[1], carry = bits.Add64(z[1], x[1], carry)
	z[2], carry = bits.Add64(z[2], x[2], carry)
	z[3], carry = bits.Add64(z[3], x[3], carry)
	z[4], carry = bits.Add64(z[4], x[4], carry)
	z[5], carry = bits.Add64(z[5], x[5], carry)
	z[6], carry = bits.Add64(z[6], x[6], carry)
	z[7], carry = bits.Add64(z[7], x[7], carry)
	z[8], carry = bits.Add64(z[8], x[8], carry)
	z[9], carry = bits.Add64(z[9], x[9], carry)
	z[10], carry = bits.Add64(z[10], x[10], carry)
	z[11], carry = bits.Add64(z[11], x[11], carry)
	z[12], carry = bits.Add64(z[12], x[12], carry)
	z[13], carry = bits.Add64(z[13], x[13], carry)
	z[14], carry = bits.Add64(z[14], x[14], carry)
	z[15], carry = bits.Add64(z[15], x[15], carry)
	z[16], carry = bits.Add64(z[16], x[16], carry)
	z[17], carry = bits.Add64(z[17], x[17], carry)
	z[18], carry = bits.Add64(z[18], x[18], carry)
	z[19], carry = bits.Add64(z[19], x[19], carry)
	z[20], carry = bits.Add64(z[20], x[20], carry)
	z[21], carry = bits.Add64(z[21], x[21], carry)
	z[22], carry = bits.Add64(z[22], x[22], carry)
	// if we overflowed the last addition, z >= q
	// if z >= q, z = z - q
	if carry != 0 {
		// we overflowed, so z >= q
		z[0], carry = bits.Sub64(z[0], 2977841944516248005, 0)
		z[1], carry = bits.Sub64(z[1], 5366638698886618632, carry)
		z[2], carry = bits.Sub64(z[2], 16494529459254852566, carry)
		z[3], carry = bits.Sub64(z[3], 10139780597354342739, carry)
		z[4], carry = bits.Sub64(z[4], 10730920707457771221, carry)
		z[5], carry = bits.Sub64(z[5], 4023492846293697750, carry)
		z[6], carry = bits.Sub64(z[6], 14719751318883536030, carry)
		z[7], carry = bits.Sub64(z[7], 14394306952299074261, carry)
		z[8], carry = bits.Sub64(z[8], 420177830206246340, carry)
		z[9], carry = bits.Sub64(z[9], 18292065964812492220, carry)
		z[10], carry = bits.Sub64(z[10], 16529202080823250444, carry)
		z[11], carry = bits.Sub64(z[11], 325117689922568275, carry)
		z[12], carry = bits.Sub64(z[12], 17392915062696095649, carry)
		z[13], carry = bits.Sub64(z[13], 15669173465823707729, carry)
		z[14], carry = bits.Sub64(z[14], 14471887911929389604, carry)
		z[15], carry = bits.Sub64(z[15], 7379345274961995842, carry)
		z[16], carry = bits.Sub64(z[16], 16190214589477806019, carry)
		z[17], carry = bits.Sub64(z[17], 8384885419167223405, carry)
		z[18], carry = bits.Sub64(z[18], 14185603726792627592, carry)
		z[19], carry = bits.Sub64(z[19], 7175340793347195998, carry)
		z[20], carry = bits.Sub64(z[20], 99753532903889795, carry)
		z[21], carry = bits.Sub64(z[21], 1287387037382438644, carry)
		z[22], carry = bits.Sub64(z[22], 7902628261521547647, carry)
		return z
	}

	// if z > q --> z -= q
	if !(z[22] < 7902628261521547647 || (z[22] == 7902628261521547647 && (z[21] < 1287387037382438644 || (z[21] == 1287387037382438644 && (z[20] < 99753532903889795 || (z[20] == 99753532903889795 && (z[19] < 7175340793347195998 || (z[19] == 7175340793347195998 && (z[18] < 14185603726792627592 || (z[18] == 14185603726792627592 && (z[17] < 8384885419167223405 || (z[17] == 8384885419167223405 && (z[16] < 16190214589477806019 || (z[16] == 16190214589477806019 && (z[15] < 7379345274961995842 || (z[15] == 7379345274961995842 && (z[14] < 14471887911929389604 || (z[14] == 14471887911929389604 && (z[13] < 15669173465823707729 || (z[13] == 15669173465823707729 && (z[12] < 17392915062696095649 || (z[12] == 17392915062696095649 && (z[11] < 325117689922568275 || (z[11] == 325117689922568275 && (z[10] < 16529202080823250444 || (z[10] == 16529202080823250444 && (z[9] < 18292065964812492220 || (z[9] == 18292065964812492220 && (z[8] < 420177830206246340 || (z[8] == 420177830206246340 && (z[7] < 14394306952299074261 || (z[7] == 14394306952299074261 && (z[6] < 14719751318883536030 || (z[6] == 14719751318883536030 && (z[5] < 4023492846293697750 || (z[5] == 4023492846293697750 && (z[4] < 10730920707457771221 || (z[4] == 10730920707457771221 && (z[3] < 10139780597354342739 || (z[3] == 10139780597354342739 && (z[2] < 16494529459254852566 || (z[2] == 16494529459254852566 && (z[1] < 5366638698886618632 || (z[1] == 5366638698886618632 && (z[0] < 2977841944516248005))))))))))))))))))))))))))))))))))))))))))))) {
		var b uint64
		z[0], b = bits.Sub64(z[0], 2977841944516248005, 0)
		z[1], b = bits.Sub64(z[1], 5366638698886618632, b)
		z[2], b = bits.Sub64(z[2], 16494529459254852566, b)
		z[3], b = bits.Sub64(z[3], 10139780597354342739, b)
		z[4], b = bits.Sub64(z[4], 10730920707457771221, b)
		z[5], b = bits.Sub64(z[5], 4023492846293697750, b)
		z[6], b = bits.Sub64(z[6], 14719751318883536030, b)
		z[7], b = bits.Sub64(z[7], 14394306952299074261, b)
		z[8], b = bits.Sub64(z[8], 420177830206246340, b)
		z[9], b = bits.Sub64(z[9], 18292065964812492220, b)
		z[10], b = bits.Sub64(z[10], 16529202080823250444, b)
		z[11], b = bits.Sub64(z[11], 325117689922568275, b)
		z[12], b = bits.Sub64(z[12], 17392915062696095649, b)
		z[13], b = bits.Sub64(z[13], 15669173465823707729, b)
		z[14], b = bits.Sub64(z[14], 14471887911929389604, b)
		z[15], b = bits.Sub64(z[15], 7379345274961995842, b)
		z[16], b = bits.Sub64(z[16], 16190214589477806019, b)
		z[17], b = bits.Sub64(z[17], 8384885419167223405, b)
		z[18], b = bits.Sub64(z[18], 14185603726792627592, b)
		z[19], b = bits.Sub64(z[19], 7175340793347195998, b)
		z[20], b = bits.Sub64(z[20], 99753532903889795, b)
		z[21], b = bits.Sub64(z[21], 1287387037382438644, b)
		z[22], _ = bits.Sub64(z[22], 7902628261521547647, b)
	}
	return z
}

// Double z = x + x mod q, aka Lsh 1
func (z *Element23) Double(x *Element23) *Element23 {
	var carry uint64

	z[0], carry = bits.Add64(x[0], x[0], 0)
	z[1], carry = bits.Add64(x[1], x[1], carry)
	z[2], carry = bits.Add64(x[2], x[2], carry)
	z[3], carry = bits.Add64(x[3], x[3], carry)
	z[4], carry = bits.Add64(x[4], x[4], carry)
	z[5], carry = bits.Add64(x[5], x[5], carry)
	z[6], carry = bits.Add64(x[6], x[6], carry)
	z[7], carry = bits.Add64(x[7], x[7], carry)
	z[8], carry = bits.Add64(x[8], x[8], carry)
	z[9], carry = bits.Add64(x[9], x[9], carry)
	z[10], carry = bits.Add64(x[10], x[10], carry)
	z[11], carry = bits.Add64(x[11], x[11], carry)
	z[12], carry = bits.Add64(x[12], x[12], carry)
	z[13], carry = bits.Add64(x[13], x[13], carry)
	z[14], carry = bits.Add64(x[14], x[14], carry)
	z[15], carry = bits.Add64(x[15], x[15], carry)
	z[16], carry = bits.Add64(x[16], x[16], carry)
	z[17], carry = bits.Add64(x[17], x[17], carry)
	z[18], carry = bits.Add64(x[18], x[18], carry)
	z[19], carry = bits.Add64(x[19], x[19], carry)
	z[20], carry = bits.Add64(x[20], x[20], carry)
	z[21], carry = bits.Add64(x[21], x[21], carry)
	z[22], carry = bits.Add64(x[22], x[22], carry)
	// if we overflowed the last addition, z >= q
	// if z >= q, z = z - q
	if carry != 0 {
		// we overflowed, so z >= q
		z[0], carry = bits.Sub64(z[0], 2977841944516248005, 0)
		z[1], carry = bits.Sub64(z[1], 5366638698886618632, carry)
		z[2], carry = bits.Sub64(z[2], 16494529459254852566, carry)
		z[3], carry = bits.Sub64(z[3], 10139780597354342739, carry)
		z[4], carry = bits.Sub64(z[4], 10730920707457771221, carry)
		z[5], carry = bits.Sub64(z[5], 4023492846293697750, carry)
		z[6], carry = bits.Sub64(z[6], 14719751318883536030, carry)
		z[7], carry = bits.Sub64(z[7], 14394306952299074261, carry)
		z[8], carry = bits.Sub64(z[8], 420177830206246340, carry)
		z[9], carry = bits.Sub64(z[9], 18292065964812492220, carry)
		z[10], carry = bits.Sub64(z[10], 16529202080823250444, carry)
		z[11], carry = bits.Sub64(z[11], 325117689922568275, carry)
		z[12], carry = bits.Sub64(z[12], 17392915062696095649, carry)
		z[13], carry = bits.Sub64(z[13], 15669173465823707729, carry)
		z[14], carry = bits.Sub64(z[14], 14471887911929389604, carry)
		z[15], carry = bits.Sub64(z[15], 7379345274961995842, carry)
		z[16], carry = bits.Sub64(z[16], 16190214589477806019, carry)
		z[17], carry = bits.Sub64(z[17], 8384885419167223405, carry)
		z[18], carry = bits.Sub64(z[18], 14185603726792627592, carry)
		z[19], carry = bits.Sub64(z[19], 7175340793347195998, carry)
		z[20], carry = bits.Sub64(z[20], 99753532903889795, carry)
		z[21], carry = bits.Sub64(z[21], 1287387037382438644, carry)
		z[22], carry = bits.Sub64(z[22], 7902628261521547647, carry)
		return z
	}

	// if z > q --> z -= q
	if !(z[22] < 7902628261521547647 || (z[22] == 7902628261521547647 && (z[21] < 1287387037382438644 || (z[21] == 1287387037382438644 && (z[20] < 99753532903889795 || (z[20] == 99753532903889795 && (z[19] < 7175340793347195998 || (z[19] == 7175340793347195998 && (z[18] < 14185603726792627592 || (z[18] == 14185603726792627592 && (z[17] < 8384885419167223405 || (z[17] == 8384885419167223405 && (z[16] < 16190214589477806019 || (z[16] == 16190214589477806019 && (z[15] < 7379345274961995842 || (z[15] == 7379345274961995842 && (z[14] < 14471887911929389604 || (z[14] == 14471887911929389604 && (z[13] < 15669173465823707729 || (z[13] == 15669173465823707729 && (z[12] < 17392915062696095649 || (z[12] == 17392915062696095649 && (z[11] < 325117689922568275 || (z[11] == 325117689922568275 && (z[10] < 16529202080823250444 || (z[10] == 16529202080823250444 && (z[9] < 18292065964812492220 || (z[9] == 18292065964812492220 && (z[8] < 420177830206246340 || (z[8] == 420177830206246340 && (z[7] < 14394306952299074261 || (z[7] == 14394306952299074261 && (z[6] < 14719751318883536030 || (z[6] == 14719751318883536030 && (z[5] < 4023492846293697750 || (z[5] == 4023492846293697750 && (z[4] < 10730920707457771221 || (z[4] == 10730920707457771221 && (z[3] < 10139780597354342739 || (z[3] == 10139780597354342739 && (z[2] < 16494529459254852566 || (z[2] == 16494529459254852566 && (z[1] < 5366638698886618632 || (z[1] == 5366638698886618632 && (z[0] < 2977841944516248005))))))))))))))))))))))))))))))))))))))))))))) {
		var b uint64
		z[0], b = bits.Sub64(z[0], 2977841944516248005, 0)
		z[1], b = bits.Sub64(z[1], 5366638698886618632, b)
		z[2], b = bits.Sub64(z[2], 16494529459254852566, b)
		z[3], b = bits.Sub64(z[3], 10139780597354342739, b)
		z[4], b = bits.Sub64(z[4], 10730920707457771221, b)
		z[5], b = bits.Sub64(z[5], 4023492846293697750, b)
		z[6], b = bits.Sub64(z[6], 14719751318883536030, b)
		z[7], b = bits.Sub64(z[7], 14394306952299074261, b)
		z[8], b = bits.Sub64(z[8], 420177830206246340, b)
		z[9], b = bits.Sub64(z[9], 18292065964812492220, b)
		z[10], b = bits.Sub64(z[10], 16529202080823250444, b)
		z[11], b = bits.Sub64(z[11], 325117689922568275, b)
		z[12], b = bits.Sub64(z[12], 17392915062696095649, b)
		z[13], b = bits.Sub64(z[13], 15669173465823707729, b)
		z[14], b = bits.Sub64(z[14], 14471887911929389604, b)
		z[15], b = bits.Sub64(z[15], 7379345274961995842, b)
		z[16], b = bits.Sub64(z[16], 16190214589477806019, b)
		z[17], b = bits.Sub64(z[17], 8384885419167223405, b)
		z[18], b = bits.Sub64(z[18], 14185603726792627592, b)
		z[19], b = bits.Sub64(z[19], 7175340793347195998, b)
		z[20], b = bits.Sub64(z[20], 99753532903889795, b)
		z[21], b = bits.Sub64(z[21], 1287387037382438644, b)
		z[22], _ = bits.Sub64(z[22], 7902628261521547647, b)
	}
	return z
}

// Sub  z = x - y mod q
func (z *Element23) Sub(x, y *Element23) *Element23 {
	var b uint64
	z[0], b = bits.Sub64(x[0], y[0], 0)
	z[1], b = bits.Sub64(x[1], y[1], b)
	z[2], b = bits.Sub64(x[2], y[2], b)
	z[3], b = bits.Sub64(x[3], y[3], b)
	z[4], b = bits.Sub64(x[4], y[4], b)
	z[5], b = bits.Sub64(x[5], y[5], b)
	z[6], b = bits.Sub64(x[6], y[6], b)
	z[7], b = bits.Sub64(x[7], y[7], b)
	z[8], b = bits.Sub64(x[8], y[8], b)
	z[9], b = bits.Sub64(x[9], y[9], b)
	z[10], b = bits.Sub64(x[10], y[10], b)
	z[11], b = bits.Sub64(x[11], y[11], b)
	z[12], b = bits.Sub64(x[12], y[12], b)
	z[13], b = bits.Sub64(x[13], y[13], b)
	z[14], b = bits.Sub64(x[14], y[14], b)
	z[15], b = bits.Sub64(x[15], y[15], b)
	z[16], b = bits.Sub64(x[16], y[16], b)
	z[17], b = bits.Sub64(x[17], y[17], b)
	z[18], b = bits.Sub64(x[18], y[18], b)
	z[19], b = bits.Sub64(x[19], y[19], b)
	z[20], b = bits.Sub64(x[20], y[20], b)
	z[21], b = bits.Sub64(x[21], y[21], b)
	z[22], b = bits.Sub64(x[22], y[22], b)
	if b != 0 {
		var c uint64
		z[0], c = bits.Add64(z[0], 2977841944516248005, 0)
		z[1], c = bits.Add64(z[1], 5366638698886618632, c)
		z[2], c = bits.Add64(z[2], 16494529459254852566, c)
		z[3], c = bits.Add64(z[3], 10139780597354342739, c)
		z[4], c = bits.Add64(z[4], 10730920707457771221, c)
		z[5], c = bits.Add64(z[5], 4023492846293697750, c)
		z[6], c = bits.Add64(z[6], 14719751318883536030, c)
		z[7], c = bits.Add64(z[7], 14394306952299074261, c)
		z[8], c = bits.Add64(z[8], 420177830206246340, c)
		z[9], c = bits.Add64(z[9], 18292065964812492220, c)
		z[10], c = bits.Add64(z[10], 16529202080823250444, c)
		z[11], c = bits.Add64(z[11], 325117689922568275, c)
		z[12], c = bits.Add64(z[12], 17392915062696095649, c)
		z[13], c = bits.Add64(z[13], 15669173465823707729, c)
		z[14], c = bits.Add64(z[14], 14471887911929389604, c)
		z[15], c = bits.Add64(z[15], 7379345274961995842, c)
		z[16], c = bits.Add64(z[16], 16190214589477806019, c)
		z[17], c = bits.Add64(z[17], 8384885419167223405, c)
		z[18], c = bits.Add64(z[18], 14185603726792627592, c)
		z[19], c = bits.Add64(z[19], 7175340793347195998, c)
		z[20], c = bits.Add64(z[20], 99753532903889795, c)
		z[21], c = bits.Add64(z[21], 1287387037382438644, c)
		z[22], _ = bits.Add64(z[22], 7902628261521547647, c)
	}
	return z
}

// SubAssign  z = z - x mod q
func (z *Element23) SubAssign(x *Element23) *Element23 {
	var b uint64
	z[0], b = bits.Sub64(z[0], x[0], 0)
	z[1], b = bits.Sub64(z[1], x[1], b)
	z[2], b = bits.Sub64(z[2], x[2], b)
	z[3], b = bits.Sub64(z[3], x[3], b)
	z[4], b = bits.Sub64(z[4], x[4], b)
	z[5], b = bits.Sub64(z[5], x[5], b)
	z[6], b = bits.Sub64(z[6], x[6], b)
	z[7], b = bits.Sub64(z[7], x[7], b)
	z[8], b = bits.Sub64(z[8], x[8], b)
	z[9], b = bits.Sub64(z[9], x[9], b)
	z[10], b = bits.Sub64(z[10], x[10], b)
	z[11], b = bits.Sub64(z[11], x[11], b)
	z[12], b = bits.Sub64(z[12], x[12], b)
	z[13], b = bits.Sub64(z[13], x[13], b)
	z[14], b = bits.Sub64(z[14], x[14], b)
	z[15], b = bits.Sub64(z[15], x[15], b)
	z[16], b = bits.Sub64(z[16], x[16], b)
	z[17], b = bits.Sub64(z[17], x[17], b)
	z[18], b = bits.Sub64(z[18], x[18], b)
	z[19], b = bits.Sub64(z[19], x[19], b)
	z[20], b = bits.Sub64(z[20], x[20], b)
	z[21], b = bits.Sub64(z[21], x[21], b)
	z[22], b = bits.Sub64(z[22], x[22], b)
	if b != 0 {
		var c uint64
		z[0], c = bits.Add64(z[0], 2977841944516248005, 0)
		z[1], c = bits.Add64(z[1], 5366638698886618632, c)
		z[2], c = bits.Add64(z[2], 16494529459254852566, c)
		z[3], c = bits.Add64(z[3], 10139780597354342739, c)
		z[4], c = bits.Add64(z[4], 10730920707457771221, c)
		z[5], c = bits.Add64(z[5], 4023492846293697750, c)
		z[6], c = bits.Add64(z[6], 14719751318883536030, c)
		z[7], c = bits.Add64(z[7], 14394306952299074261, c)
		z[8], c = bits.Add64(z[8], 420177830206246340, c)
		z[9], c = bits.Add64(z[9], 18292065964812492220, c)
		z[10], c = bits.Add64(z[10], 16529202080823250444, c)
		z[11], c = bits.Add64(z[11], 325117689922568275, c)
		z[12], c = bits.Add64(z[12], 17392915062696095649, c)
		z[13], c = bits.Add64(z[13], 15669173465823707729, c)
		z[14], c = bits.Add64(z[14], 14471887911929389604, c)
		z[15], c = bits.Add64(z[15], 7379345274961995842, c)
		z[16], c = bits.Add64(z[16], 16190214589477806019, c)
		z[17], c = bits.Add64(z[17], 8384885419167223405, c)
		z[18], c = bits.Add64(z[18], 14185603726792627592, c)
		z[19], c = bits.Add64(z[19], 7175340793347195998, c)
		z[20], c = bits.Add64(z[20], 99753532903889795, c)
		z[21], c = bits.Add64(z[21], 1287387037382438644, c)
		z[22], _ = bits.Add64(z[22], 7902628261521547647, c)
	}
	return z
}

// Exp z = x^e mod q
func (z *Element23) Exp(x Element23, e uint64) *Element23 {
	if e == 0 {
		return z.SetOne()
	}

	z.Set(&x)

	l := bits.Len64(e) - 2
	for i := l; i >= 0; i-- {
		z.Square(z)
		if e&(1<<uint(i)) != 0 {
			z.MulAssign(&x)
		}
	}
	return z
}

// FromMont converts z in place (i.e. mutates) from Montgomery to regular representation
// sets and returns z = z * 1
func (z *Element23) FromMont() *Element23 {

	// the following lines implement z = z * 1
	// with a modified CIOS montgomery multiplication
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 17264235192267336435
		C := madd0(m, 2977841944516248005, z[0])
		C, z[0] = madd2(m, 5366638698886618632, z[1], C)
		C, z[1] = madd2(m, 16494529459254852566, z[2], C)
		C, z[2] = madd2(m, 10139780597354342739, z[3], C)
		C, z[3] = madd2(m, 10730920707457771221, z[4], C)
		C, z[4] = madd2(m, 4023492846293697750, z[5], C)
		C, z[5] = madd2(m, 14719751318883536030, z[6], C)
		C, z[6] = madd2(m, 14394306952299074261, z[7], C)
		C, z[7] = madd2(m, 420177830206246340, z[8], C)
		C, z[8] = madd2(m, 18292065964812492220, z[9], C)
		C, z[9] = madd2(m, 16529202080823250444, z[10], C)
		C, z[10] = madd2(m, 325117689922568275, z[11], C)
		C, z[11] = madd2(m, 17392915062696095649, z[12], C)
		C, z[12] = madd2(m, 15669173465823707729, z[13], C)
		C, z[13] = madd2(m, 14471887911929389604, z[14], C)
		C, z[14] = madd2(m, 7379345274961995842, z[15], C)
		C, z[15] = madd2(m, 16190214589477806019, z[16], C)
		C, z[16] = madd2(m, 8384885419167223405, z[17], C)
		C, z[17] = madd2(m, 14185603726792627592, z[18], C)
		C, z[18] = madd2(m, 7175340793347195998, z[19], C)
		C, z[19] = madd2(m, 99753532903889795, z[20], C)
		C, z[20] = madd2(m, 1287387037382438644, z[21], C)
		C, z[21] = madd2(m, 7902628261521547647, z[22], C)
		z[22] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 17264235192267336435
		C := madd0(m, 2977841944516248005, z[0])
		C, z[0] = madd2(m, 5366638698886618632, z[1], C)
		C, z[1] = madd2(m, 16494529459254852566, z[2], C)
		C, z[2] = madd2(m, 10139780597354342739, z[3], C)
		C, z[3] = madd2(m, 10730920707457771221, z[4], C)
		C, z[4] = madd2(m, 4023492846293697750, z[5], C)
		C, z[5] = madd2(m, 14719751318883536030, z[6], C)
		C, z[6] = madd2(m, 14394306952299074261, z[7], C)
		C, z[7] = madd2(m, 420177830206246340, z[8], C)
		C, z[8] = madd2(m, 18292065964812492220, z[9], C)
		C, z[9] = madd2(m, 16529202080823250444, z[10], C)
		C, z[10] = madd2(m, 325117689922568275, z[11], C)
		C, z[11] = madd2(m, 17392915062696095649, z[12], C)
		C, z[12] = madd2(m, 15669173465823707729, z[13], C)
		C, z[13] = madd2(m, 14471887911929389604, z[14], C)
		C, z[14] = madd2(m, 7379345274961995842, z[15], C)
		C, z[15] = madd2(m, 16190214589477806019, z[16], C)
		C, z[16] = madd2(m, 8384885419167223405, z[17], C)
		C, z[17] = madd2(m, 14185603726792627592, z[18], C)
		C, z[18] = madd2(m, 7175340793347195998, z[19], C)
		C, z[19] = madd2(m, 99753532903889795, z[20], C)
		C, z[20] = madd2(m, 1287387037382438644, z[21], C)
		C, z[21] = madd2(m, 7902628261521547647, z[22], C)
		z[22] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 17264235192267336435
		C := madd0(m, 2977841944516248005, z[0])
		C, z[0] = madd2(m, 5366638698886618632, z[1], C)
		C, z[1] = madd2(m, 16494529459254852566, z[2], C)
		C, z[2] = madd2(m, 10139780597354342739, z[3], C)
		C, z[3] = madd2(m, 10730920707457771221, z[4], C)
		C, z[4] = madd2(m, 4023492846293697750, z[5], C)
		C, z[5] = madd2(m, 14719751318883536030, z[6], C)
		C, z[6] = madd2(m, 14394306952299074261, z[7], C)
		C, z[7] = madd2(m, 420177830206246340, z[8], C)
		C, z[8] = madd2(m, 18292065964812492220, z[9], C)
		C, z[9] = madd2(m, 16529202080823250444, z[10], C)
		C, z[10] = madd2(m, 325117689922568275, z[11], C)
		C, z[11] = madd2(m, 17392915062696095649, z[12], C)
		C, z[12] = madd2(m, 15669173465823707729, z[13], C)
		C, z[13] = madd2(m, 14471887911929389604, z[14], C)
		C, z[14] = madd2(m, 7379345274961995842, z[15], C)
		C, z[15] = madd2(m, 16190214589477806019, z[16], C)
		C, z[16] = madd2(m, 8384885419167223405, z[17], C)
		C, z[17] = madd2(m, 14185603726792627592, z[18], C)
		C, z[18] = madd2(m, 7175340793347195998, z[19], C)
		C, z[19] = madd2(m, 99753532903889795, z[20], C)
		C, z[20] = madd2(m, 1287387037382438644, z[21], C)
		C, z[21] = madd2(m, 7902628261521547647, z[22], C)
		z[22] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 17264235192267336435
		C := madd0(m, 2977841944516248005, z[0])
		C, z[0] = madd2(m, 5366638698886618632, z[1], C)
		C, z[1] = madd2(m, 16494529459254852566, z[2], C)
		C, z[2] = madd2(m, 10139780597354342739, z[3], C)
		C, z[3] = madd2(m, 10730920707457771221, z[4], C)
		C, z[4] = madd2(m, 4023492846293697750, z[5], C)
		C, z[5] = madd2(m, 14719751318883536030, z[6], C)
		C, z[6] = madd2(m, 14394306952299074261, z[7], C)
		C, z[7] = madd2(m, 420177830206246340, z[8], C)
		C, z[8] = madd2(m, 18292065964812492220, z[9], C)
		C, z[9] = madd2(m, 16529202080823250444, z[10], C)
		C, z[10] = madd2(m, 325117689922568275, z[11], C)
		C, z[11] = madd2(m, 17392915062696095649, z[12], C)
		C, z[12] = madd2(m, 15669173465823707729, z[13], C)
		C, z[13] = madd2(m, 14471887911929389604, z[14], C)
		C, z[14] = madd2(m, 7379345274961995842, z[15], C)
		C, z[15] = madd2(m, 16190214589477806019, z[16], C)
		C, z[16] = madd2(m, 8384885419167223405, z[17], C)
		C, z[17] = madd2(m, 14185603726792627592, z[18], C)
		C, z[18] = madd2(m, 7175340793347195998, z[19], C)
		C, z[19] = madd2(m, 99753532903889795, z[20], C)
		C, z[20] = madd2(m, 1287387037382438644, z[21], C)
		C, z[21] = madd2(m, 7902628261521547647, z[22], C)
		z[22] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 17264235192267336435
		C := madd0(m, 2977841944516248005, z[0])
		C, z[0] = madd2(m, 5366638698886618632, z[1], C)
		C, z[1] = madd2(m, 16494529459254852566, z[2], C)
		C, z[2] = madd2(m, 10139780597354342739, z[3], C)
		C, z[3] = madd2(m, 10730920707457771221, z[4], C)
		C, z[4] = madd2(m, 4023492846293697750, z[5], C)
		C, z[5] = madd2(m, 14719751318883536030, z[6], C)
		C, z[6] = madd2(m, 14394306952299074261, z[7], C)
		C, z[7] = madd2(m, 420177830206246340, z[8], C)
		C, z[8] = madd2(m, 18292065964812492220, z[9], C)
		C, z[9] = madd2(m, 16529202080823250444, z[10], C)
		C, z[10] = madd2(m, 325117689922568275, z[11], C)
		C, z[11] = madd2(m, 17392915062696095649, z[12], C)
		C, z[12] = madd2(m, 15669173465823707729, z[13], C)
		C, z[13] = madd2(m, 14471887911929389604, z[14], C)
		C, z[14] = madd2(m, 7379345274961995842, z[15], C)
		C, z[15] = madd2(m, 16190214589477806019, z[16], C)
		C, z[16] = madd2(m, 8384885419167223405, z[17], C)
		C, z[17] = madd2(m, 14185603726792627592, z[18], C)
		C, z[18] = madd2(m, 7175340793347195998, z[19], C)
		C, z[19] = madd2(m, 99753532903889795, z[20], C)
		C, z[20] = madd2(m, 1287387037382438644, z[21], C)
		C, z[21] = madd2(m, 7902628261521547647, z[22], C)
		z[22] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 17264235192267336435
		C := madd0(m, 2977841944516248005, z[0])
		C, z[0] = madd2(m, 5366638698886618632, z[1], C)
		C, z[1] = madd2(m, 16494529459254852566, z[2], C)
		C, z[2] = madd2(m, 10139780597354342739, z[3], C)
		C, z[3] = madd2(m, 10730920707457771221, z[4], C)
		C, z[4] = madd2(m, 4023492846293697750, z[5], C)
		C, z[5] = madd2(m, 14719751318883536030, z[6], C)
		C, z[6] = madd2(m, 14394306952299074261, z[7], C)
		C, z[7] = madd2(m, 420177830206246340, z[8], C)
		C, z[8] = madd2(m, 18292065964812492220, z[9], C)
		C, z[9] = madd2(m, 16529202080823250444, z[10], C)
		C, z[10] = madd2(m, 325117689922568275, z[11], C)
		C, z[11] = madd2(m, 17392915062696095649, z[12], C)
		C, z[12] = madd2(m, 15669173465823707729, z[13], C)
		C, z[13] = madd2(m, 14471887911929389604, z[14], C)
		C, z[14] = madd2(m, 7379345274961995842, z[15], C)
		C, z[15] = madd2(m, 16190214589477806019, z[16], C)
		C, z[16] = madd2(m, 8384885419167223405, z[17], C)
		C, z[17] = madd2(m, 14185603726792627592, z[18], C)
		C, z[18] = madd2(m, 7175340793347195998, z[19], C)
		C, z[19] = madd2(m, 99753532903889795, z[20], C)
		C, z[20] = madd2(m, 1287387037382438644, z[21], C)
		C, z[21] = madd2(m, 7902628261521547647, z[22], C)
		z[22] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 17264235192267336435
		C := madd0(m, 2977841944516248005, z[0])
		C, z[0] = madd2(m, 5366638698886618632, z[1], C)
		C, z[1] = madd2(m, 16494529459254852566, z[2], C)
		C, z[2] = madd2(m, 10139780597354342739, z[3], C)
		C, z[3] = madd2(m, 10730920707457771221, z[4], C)
		C, z[4] = madd2(m, 4023492846293697750, z[5], C)
		C, z[5] = madd2(m, 14719751318883536030, z[6], C)
		C, z[6] = madd2(m, 14394306952299074261, z[7], C)
		C, z[7] = madd2(m, 420177830206246340, z[8], C)
		C, z[8] = madd2(m, 18292065964812492220, z[9], C)
		C, z[9] = madd2(m, 16529202080823250444, z[10], C)
		C, z[10] = madd2(m, 325117689922568275, z[11], C)
		C, z[11] = madd2(m, 17392915062696095649, z[12], C)
		C, z[12] = madd2(m, 15669173465823707729, z[13], C)
		C, z[13] = madd2(m, 14471887911929389604, z[14], C)
		C, z[14] = madd2(m, 7379345274961995842, z[15], C)
		C, z[15] = madd2(m, 16190214589477806019, z[16], C)
		C, z[16] = madd2(m, 8384885419167223405, z[17], C)
		C, z[17] = madd2(m, 14185603726792627592, z[18], C)
		C, z[18] = madd2(m, 7175340793347195998, z[19], C)
		C, z[19] = madd2(m, 99753532903889795, z[20], C)
		C, z[20] = madd2(m, 1287387037382438644, z[21], C)
		C, z[21] = madd2(m, 7902628261521547647, z[22], C)
		z[22] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 17264235192267336435
		C := madd0(m, 2977841944516248005, z[0])
		C, z[0] = madd2(m, 5366638698886618632, z[1], C)
		C, z[1] = madd2(m, 16494529459254852566, z[2], C)
		C, z[2] = madd2(m, 10139780597354342739, z[3], C)
		C, z[3] = madd2(m, 10730920707457771221, z[4], C)
		C, z[4] = madd2(m, 4023492846293697750, z[5], C)
		C, z[5] = madd2(m, 14719751318883536030, z[6], C)
		C, z[6] = madd2(m, 14394306952299074261, z[7], C)
		C, z[7] = madd2(m, 420177830206246340, z[8], C)
		C, z[8] = madd2(m, 18292065964812492220, z[9], C)
		C, z[9] = madd2(m, 16529202080823250444, z[10], C)
		C, z[10] = madd2(m, 325117689922568275, z[11], C)
		C, z[11] = madd2(m, 17392915062696095649, z[12], C)
		C, z[12] = madd2(m, 15669173465823707729, z[13], C)
		C, z[13] = madd2(m, 14471887911929389604, z[14], C)
		C, z[14] = madd2(m, 7379345274961995842, z[15], C)
		C, z[15] = madd2(m, 16190214589477806019, z[16], C)
		C, z[16] = madd2(m, 8384885419167223405, z[17], C)
		C, z[17] = madd2(m, 14185603726792627592, z[18], C)
		C, z[18] = madd2(m, 7175340793347195998, z[19], C)
		C, z[19] = madd2(m, 99753532903889795, z[20], C)
		C, z[20] = madd2(m, 1287387037382438644, z[21], C)
		C, z[21] = madd2(m, 7902628261521547647, z[22], C)
		z[22] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 17264235192267336435
		C := madd0(m, 2977841944516248005, z[0])
		C, z[0] = madd2(m, 5366638698886618632, z[1], C)
		C, z[1] = madd2(m, 16494529459254852566, z[2], C)
		C, z[2] = madd2(m, 10139780597354342739, z[3], C)
		C, z[3] = madd2(m, 10730920707457771221, z[4], C)
		C, z[4] = madd2(m, 4023492846293697750, z[5], C)
		C, z[5] = madd2(m, 14719751318883536030, z[6], C)
		C, z[6] = madd2(m, 14394306952299074261, z[7], C)
		C, z[7] = madd2(m, 420177830206246340, z[8], C)
		C, z[8] = madd2(m, 18292065964812492220, z[9], C)
		C, z[9] = madd2(m, 16529202080823250444, z[10], C)
		C, z[10] = madd2(m, 325117689922568275, z[11], C)
		C, z[11] = madd2(m, 17392915062696095649, z[12], C)
		C, z[12] = madd2(m, 15669173465823707729, z[13], C)
		C, z[13] = madd2(m, 14471887911929389604, z[14], C)
		C, z[14] = madd2(m, 7379345274961995842, z[15], C)
		C, z[15] = madd2(m, 16190214589477806019, z[16], C)
		C, z[16] = madd2(m, 8384885419167223405, z[17], C)
		C, z[17] = madd2(m, 14185603726792627592, z[18], C)
		C, z[18] = madd2(m, 7175340793347195998, z[19], C)
		C, z[19] = madd2(m, 99753532903889795, z[20], C)
		C, z[20] = madd2(m, 1287387037382438644, z[21], C)
		C, z[21] = madd2(m, 7902628261521547647, z[22], C)
		z[22] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 17264235192267336435
		C := madd0(m, 2977841944516248005, z[0])
		C, z[0] = madd2(m, 5366638698886618632, z[1], C)
		C, z[1] = madd2(m, 16494529459254852566, z[2], C)
		C, z[2] = madd2(m, 10139780597354342739, z[3], C)
		C, z[3] = madd2(m, 10730920707457771221, z[4], C)
		C, z[4] = madd2(m, 4023492846293697750, z[5], C)
		C, z[5] = madd2(m, 14719751318883536030, z[6], C)
		C, z[6] = madd2(m, 14394306952299074261, z[7], C)
		C, z[7] = madd2(m, 420177830206246340, z[8], C)
		C, z[8] = madd2(m, 18292065964812492220, z[9], C)
		C, z[9] = madd2(m, 16529202080823250444, z[10], C)
		C, z[10] = madd2(m, 325117689922568275, z[11], C)
		C, z[11] = madd2(m, 17392915062696095649, z[12], C)
		C, z[12] = madd2(m, 15669173465823707729, z[13], C)
		C, z[13] = madd2(m, 14471887911929389604, z[14], C)
		C, z[14] = madd2(m, 7379345274961995842, z[15], C)
		C, z[15] = madd2(m, 16190214589477806019, z[16], C)
		C, z[16] = madd2(m, 8384885419167223405, z[17], C)
		C, z[17] = madd2(m, 14185603726792627592, z[18], C)
		C, z[18] = madd2(m, 7175340793347195998, z[19], C)
		C, z[19] = madd2(m, 99753532903889795, z[20], C)
		C, z[20] = madd2(m, 1287387037382438644, z[21], C)
		C, z[21] = madd2(m, 7902628261521547647, z[22], C)
		z[22] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 17264235192267336435
		C := madd0(m, 2977841944516248005, z[0])
		C, z[0] = madd2(m, 5366638698886618632, z[1], C)
		C, z[1] = madd2(m, 16494529459254852566, z[2], C)
		C, z[2] = madd2(m, 10139780597354342739, z[3], C)
		C, z[3] = madd2(m, 10730920707457771221, z[4], C)
		C, z[4] = madd2(m, 4023492846293697750, z[5], C)
		C, z[5] = madd2(m, 14719751318883536030, z[6], C)
		C, z[6] = madd2(m, 14394306952299074261, z[7], C)
		C, z[7] = madd2(m, 420177830206246340, z[8], C)
		C, z[8] = madd2(m, 18292065964812492220, z[9], C)
		C, z[9] = madd2(m, 16529202080823250444, z[10], C)
		C, z[10] = madd2(m, 325117689922568275, z[11], C)
		C, z[11] = madd2(m, 17392915062696095649, z[12], C)
		C, z[12] = madd2(m, 15669173465823707729, z[13], C)
		C, z[13] = madd2(m, 14471887911929389604, z[14], C)
		C, z[14] = madd2(m, 7379345274961995842, z[15], C)
		C, z[15] = madd2(m, 16190214589477806019, z[16], C)
		C, z[16] = madd2(m, 8384885419167223405, z[17], C)
		C, z[17] = madd2(m, 14185603726792627592, z[18], C)
		C, z[18] = madd2(m, 7175340793347195998, z[19], C)
		C, z[19] = madd2(m, 99753532903889795, z[20], C)
		C, z[20] = madd2(m, 1287387037382438644, z[21], C)
		C, z[21] = madd2(m, 7902628261521547647, z[22], C)
		z[22] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 17264235192267336435
		C := madd0(m, 2977841944516248005, z[0])
		C, z[0] = madd2(m, 5366638698886618632, z[1], C)
		C, z[1] = madd2(m, 16494529459254852566, z[2], C)
		C, z[2] = madd2(m, 10139780597354342739, z[3], C)
		C, z[3] = madd2(m, 10730920707457771221, z[4], C)
		C, z[4] = madd2(m, 4023492846293697750, z[5], C)
		C, z[5] = madd2(m, 14719751318883536030, z[6], C)
		C, z[6] = madd2(m, 14394306952299074261, z[7], C)
		C, z[7] = madd2(m, 420177830206246340, z[8], C)
		C, z[8] = madd2(m, 18292065964812492220, z[9], C)
		C, z[9] = madd2(m, 16529202080823250444, z[10], C)
		C, z[10] = madd2(m, 325117689922568275, z[11], C)
		C, z[11] = madd2(m, 17392915062696095649, z[12], C)
		C, z[12] = madd2(m, 15669173465823707729, z[13], C)
		C, z[13] = madd2(m, 14471887911929389604, z[14], C)
		C, z[14] = madd2(m, 7379345274961995842, z[15], C)
		C, z[15] = madd2(m, 16190214589477806019, z[16], C)
		C, z[16] = madd2(m, 8384885419167223405, z[17], C)
		C, z[17] = madd2(m, 14185603726792627592, z[18], C)
		C, z[18] = madd2(m, 7175340793347195998, z[19], C)
		C, z[19] = madd2(m, 99753532903889795, z[20], C)
		C, z[20] = madd2(m, 1287387037382438644, z[21], C)
		C, z[21] = madd2(m, 7902628261521547647, z[22], C)
		z[22] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 17264235192267336435
		C := madd0(m, 2977841944516248005, z[0])
		C, z[0] = madd2(m, 5366638698886618632, z[1], C)
		C, z[1] = madd2(m, 16494529459254852566, z[2], C)
		C, z[2] = madd2(m, 10139780597354342739, z[3], C)
		C, z[3] = madd2(m, 10730920707457771221, z[4], C)
		C, z[4] = madd2(m, 4023492846293697750, z[5], C)
		C, z[5] = madd2(m, 14719751318883536030, z[6], C)
		C, z[6] = madd2(m, 14394306952299074261, z[7], C)
		C, z[7] = madd2(m, 420177830206246340, z[8], C)
		C, z[8] = madd2(m, 18292065964812492220, z[9], C)
		C, z[9] = madd2(m, 16529202080823250444, z[10], C)
		C, z[10] = madd2(m, 325117689922568275, z[11], C)
		C, z[11] = madd2(m, 17392915062696095649, z[12], C)
		C, z[12] = madd2(m, 15669173465823707729, z[13], C)
		C, z[13] = madd2(m, 14471887911929389604, z[14], C)
		C, z[14] = madd2(m, 7379345274961995842, z[15], C)
		C, z[15] = madd2(m, 16190214589477806019, z[16], C)
		C, z[16] = madd2(m, 8384885419167223405, z[17], C)
		C, z[17] = madd2(m, 14185603726792627592, z[18], C)
		C, z[18] = madd2(m, 7175340793347195998, z[19], C)
		C, z[19] = madd2(m, 99753532903889795, z[20], C)
		C, z[20] = madd2(m, 1287387037382438644, z[21], C)
		C, z[21] = madd2(m, 7902628261521547647, z[22], C)
		z[22] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 17264235192267336435
		C := madd0(m, 2977841944516248005, z[0])
		C, z[0] = madd2(m, 5366638698886618632, z[1], C)
		C, z[1] = madd2(m, 16494529459254852566, z[2], C)
		C, z[2] = madd2(m, 10139780597354342739, z[3], C)
		C, z[3] = madd2(m, 10730920707457771221, z[4], C)
		C, z[4] = madd2(m, 4023492846293697750, z[5], C)
		C, z[5] = madd2(m, 14719751318883536030, z[6], C)
		C, z[6] = madd2(m, 14394306952299074261, z[7], C)
		C, z[7] = madd2(m, 420177830206246340, z[8], C)
		C, z[8] = madd2(m, 18292065964812492220, z[9], C)
		C, z[9] = madd2(m, 16529202080823250444, z[10], C)
		C, z[10] = madd2(m, 325117689922568275, z[11], C)
		C, z[11] = madd2(m, 17392915062696095649, z[12], C)
		C, z[12] = madd2(m, 15669173465823707729, z[13], C)
		C, z[13] = madd2(m, 14471887911929389604, z[14], C)
		C, z[14] = madd2(m, 7379345274961995842, z[15], C)
		C, z[15] = madd2(m, 16190214589477806019, z[16], C)
		C, z[16] = madd2(m, 8384885419167223405, z[17], C)
		C, z[17] = madd2(m, 14185603726792627592, z[18], C)
		C, z[18] = madd2(m, 7175340793347195998, z[19], C)
		C, z[19] = madd2(m, 99753532903889795, z[20], C)
		C, z[20] = madd2(m, 1287387037382438644, z[21], C)
		C, z[21] = madd2(m, 7902628261521547647, z[22], C)
		z[22] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 17264235192267336435
		C := madd0(m, 2977841944516248005, z[0])
		C, z[0] = madd2(m, 5366638698886618632, z[1], C)
		C, z[1] = madd2(m, 16494529459254852566, z[2], C)
		C, z[2] = madd2(m, 10139780597354342739, z[3], C)
		C, z[3] = madd2(m, 10730920707457771221, z[4], C)
		C, z[4] = madd2(m, 4023492846293697750, z[5], C)
		C, z[5] = madd2(m, 14719751318883536030, z[6], C)
		C, z[6] = madd2(m, 14394306952299074261, z[7], C)
		C, z[7] = madd2(m, 420177830206246340, z[8], C)
		C, z[8] = madd2(m, 18292065964812492220, z[9], C)
		C, z[9] = madd2(m, 16529202080823250444, z[10], C)
		C, z[10] = madd2(m, 325117689922568275, z[11], C)
		C, z[11] = madd2(m, 17392915062696095649, z[12], C)
		C, z[12] = madd2(m, 15669173465823707729, z[13], C)
		C, z[13] = madd2(m, 14471887911929389604, z[14], C)
		C, z[14] = madd2(m, 7379345274961995842, z[15], C)
		C, z[15] = madd2(m, 16190214589477806019, z[16], C)
		C, z[16] = madd2(m, 8384885419167223405, z[17], C)
		C, z[17] = madd2(m, 14185603726792627592, z[18], C)
		C, z[18] = madd2(m, 7175340793347195998, z[19], C)
		C, z[19] = madd2(m, 99753532903889795, z[20], C)
		C, z[20] = madd2(m, 1287387037382438644, z[21], C)
		C, z[21] = madd2(m, 7902628261521547647, z[22], C)
		z[22] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 17264235192267336435
		C := madd0(m, 2977841944516248005, z[0])
		C, z[0] = madd2(m, 5366638698886618632, z[1], C)
		C, z[1] = madd2(m, 16494529459254852566, z[2], C)
		C, z[2] = madd2(m, 10139780597354342739, z[3], C)
		C, z[3] = madd2(m, 10730920707457771221, z[4], C)
		C, z[4] = madd2(m, 4023492846293697750, z[5], C)
		C, z[5] = madd2(m, 14719751318883536030, z[6], C)
		C, z[6] = madd2(m, 14394306952299074261, z[7], C)
		C, z[7] = madd2(m, 420177830206246340, z[8], C)
		C, z[8] = madd2(m, 18292065964812492220, z[9], C)
		C, z[9] = madd2(m, 16529202080823250444, z[10], C)
		C, z[10] = madd2(m, 325117689922568275, z[11], C)
		C, z[11] = madd2(m, 17392915062696095649, z[12], C)
		C, z[12] = madd2(m, 15669173465823707729, z[13], C)
		C, z[13] = madd2(m, 14471887911929389604, z[14], C)
		C, z[14] = madd2(m, 7379345274961995842, z[15], C)
		C, z[15] = madd2(m, 16190214589477806019, z[16], C)
		C, z[16] = madd2(m, 8384885419167223405, z[17], C)
		C, z[17] = madd2(m, 14185603726792627592, z[18], C)
		C, z[18] = madd2(m, 7175340793347195998, z[19], C)
		C, z[19] = madd2(m, 99753532903889795, z[20], C)
		C, z[20] = madd2(m, 1287387037382438644, z[21], C)
		C, z[21] = madd2(m, 7902628261521547647, z[22], C)
		z[22] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 17264235192267336435
		C := madd0(m, 2977841944516248005, z[0])
		C, z[0] = madd2(m, 5366638698886618632, z[1], C)
		C, z[1] = madd2(m, 16494529459254852566, z[2], C)
		C, z[2] = madd2(m, 10139780597354342739, z[3], C)
		C, z[3] = madd2(m, 10730920707457771221, z[4], C)
		C, z[4] = madd2(m, 4023492846293697750, z[5], C)
		C, z[5] = madd2(m, 14719751318883536030, z[6], C)
		C, z[6] = madd2(m, 14394306952299074261, z[7], C)
		C, z[7] = madd2(m, 420177830206246340, z[8], C)
		C, z[8] = madd2(m, 18292065964812492220, z[9], C)
		C, z[9] = madd2(m, 16529202080823250444, z[10], C)
		C, z[10] = madd2(m, 325117689922568275, z[11], C)
		C, z[11] = madd2(m, 17392915062696095649, z[12], C)
		C, z[12] = madd2(m, 15669173465823707729, z[13], C)
		C, z[13] = madd2(m, 14471887911929389604, z[14], C)
		C, z[14] = madd2(m, 7379345274961995842, z[15], C)
		C, z[15] = madd2(m, 16190214589477806019, z[16], C)
		C, z[16] = madd2(m, 8384885419167223405, z[17], C)
		C, z[17] = madd2(m, 14185603726792627592, z[18], C)
		C, z[18] = madd2(m, 7175340793347195998, z[19], C)
		C, z[19] = madd2(m, 99753532903889795, z[20], C)
		C, z[20] = madd2(m, 1287387037382438644, z[21], C)
		C, z[21] = madd2(m, 7902628261521547647, z[22], C)
		z[22] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 17264235192267336435
		C := madd0(m, 2977841944516248005, z[0])
		C, z[0] = madd2(m, 5366638698886618632, z[1], C)
		C, z[1] = madd2(m, 16494529459254852566, z[2], C)
		C, z[2] = madd2(m, 10139780597354342739, z[3], C)
		C, z[3] = madd2(m, 10730920707457771221, z[4], C)
		C, z[4] = madd2(m, 4023492846293697750, z[5], C)
		C, z[5] = madd2(m, 14719751318883536030, z[6], C)
		C, z[6] = madd2(m, 14394306952299074261, z[7], C)
		C, z[7] = madd2(m, 420177830206246340, z[8], C)
		C, z[8] = madd2(m, 18292065964812492220, z[9], C)
		C, z[9] = madd2(m, 16529202080823250444, z[10], C)
		C, z[10] = madd2(m, 325117689922568275, z[11], C)
		C, z[11] = madd2(m, 17392915062696095649, z[12], C)
		C, z[12] = madd2(m, 15669173465823707729, z[13], C)
		C, z[13] = madd2(m, 14471887911929389604, z[14], C)
		C, z[14] = madd2(m, 7379345274961995842, z[15], C)
		C, z[15] = madd2(m, 16190214589477806019, z[16], C)
		C, z[16] = madd2(m, 8384885419167223405, z[17], C)
		C, z[17] = madd2(m, 14185603726792627592, z[18], C)
		C, z[18] = madd2(m, 7175340793347195998, z[19], C)
		C, z[19] = madd2(m, 99753532903889795, z[20], C)
		C, z[20] = madd2(m, 1287387037382438644, z[21], C)
		C, z[21] = madd2(m, 7902628261521547647, z[22], C)
		z[22] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 17264235192267336435
		C := madd0(m, 2977841944516248005, z[0])
		C, z[0] = madd2(m, 5366638698886618632, z[1], C)
		C, z[1] = madd2(m, 16494529459254852566, z[2], C)
		C, z[2] = madd2(m, 10139780597354342739, z[3], C)
		C, z[3] = madd2(m, 10730920707457771221, z[4], C)
		C, z[4] = madd2(m, 4023492846293697750, z[5], C)
		C, z[5] = madd2(m, 14719751318883536030, z[6], C)
		C, z[6] = madd2(m, 14394306952299074261, z[7], C)
		C, z[7] = madd2(m, 420177830206246340, z[8], C)
		C, z[8] = madd2(m, 18292065964812492220, z[9], C)
		C, z[9] = madd2(m, 16529202080823250444, z[10], C)
		C, z[10] = madd2(m, 325117689922568275, z[11], C)
		C, z[11] = madd2(m, 17392915062696095649, z[12], C)
		C, z[12] = madd2(m, 15669173465823707729, z[13], C)
		C, z[13] = madd2(m, 14471887911929389604, z[14], C)
		C, z[14] = madd2(m, 7379345274961995842, z[15], C)
		C, z[15] = madd2(m, 16190214589477806019, z[16], C)
		C, z[16] = madd2(m, 8384885419167223405, z[17], C)
		C, z[17] = madd2(m, 14185603726792627592, z[18], C)
		C, z[18] = madd2(m, 7175340793347195998, z[19], C)
		C, z[19] = madd2(m, 99753532903889795, z[20], C)
		C, z[20] = madd2(m, 1287387037382438644, z[21], C)
		C, z[21] = madd2(m, 7902628261521547647, z[22], C)
		z[22] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 17264235192267336435
		C := madd0(m, 2977841944516248005, z[0])
		C, z[0] = madd2(m, 5366638698886618632, z[1], C)
		C, z[1] = madd2(m, 16494529459254852566, z[2], C)
		C, z[2] = madd2(m, 10139780597354342739, z[3], C)
		C, z[3] = madd2(m, 10730920707457771221, z[4], C)
		C, z[4] = madd2(m, 4023492846293697750, z[5], C)
		C, z[5] = madd2(m, 14719751318883536030, z[6], C)
		C, z[6] = madd2(m, 14394306952299074261, z[7], C)
		C, z[7] = madd2(m, 420177830206246340, z[8], C)
		C, z[8] = madd2(m, 18292065964812492220, z[9], C)
		C, z[9] = madd2(m, 16529202080823250444, z[10], C)
		C, z[10] = madd2(m, 325117689922568275, z[11], C)
		C, z[11] = madd2(m, 17392915062696095649, z[12], C)
		C, z[12] = madd2(m, 15669173465823707729, z[13], C)
		C, z[13] = madd2(m, 14471887911929389604, z[14], C)
		C, z[14] = madd2(m, 7379345274961995842, z[15], C)
		C, z[15] = madd2(m, 16190214589477806019, z[16], C)
		C, z[16] = madd2(m, 8384885419167223405, z[17], C)
		C, z[17] = madd2(m, 14185603726792627592, z[18], C)
		C, z[18] = madd2(m, 7175340793347195998, z[19], C)
		C, z[19] = madd2(m, 99753532903889795, z[20], C)
		C, z[20] = madd2(m, 1287387037382438644, z[21], C)
		C, z[21] = madd2(m, 7902628261521547647, z[22], C)
		z[22] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 17264235192267336435
		C := madd0(m, 2977841944516248005, z[0])
		C, z[0] = madd2(m, 5366638698886618632, z[1], C)
		C, z[1] = madd2(m, 16494529459254852566, z[2], C)
		C, z[2] = madd2(m, 10139780597354342739, z[3], C)
		C, z[3] = madd2(m, 10730920707457771221, z[4], C)
		C, z[4] = madd2(m, 4023492846293697750, z[5], C)
		C, z[5] = madd2(m, 14719751318883536030, z[6], C)
		C, z[6] = madd2(m, 14394306952299074261, z[7], C)
		C, z[7] = madd2(m, 420177830206246340, z[8], C)
		C, z[8] = madd2(m, 18292065964812492220, z[9], C)
		C, z[9] = madd2(m, 16529202080823250444, z[10], C)
		C, z[10] = madd2(m, 325117689922568275, z[11], C)
		C, z[11] = madd2(m, 17392915062696095649, z[12], C)
		C, z[12] = madd2(m, 15669173465823707729, z[13], C)
		C, z[13] = madd2(m, 14471887911929389604, z[14], C)
		C, z[14] = madd2(m, 7379345274961995842, z[15], C)
		C, z[15] = madd2(m, 16190214589477806019, z[16], C)
		C, z[16] = madd2(m, 8384885419167223405, z[17], C)
		C, z[17] = madd2(m, 14185603726792627592, z[18], C)
		C, z[18] = madd2(m, 7175340793347195998, z[19], C)
		C, z[19] = madd2(m, 99753532903889795, z[20], C)
		C, z[20] = madd2(m, 1287387037382438644, z[21], C)
		C, z[21] = madd2(m, 7902628261521547647, z[22], C)
		z[22] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 17264235192267336435
		C := madd0(m, 2977841944516248005, z[0])
		C, z[0] = madd2(m, 5366638698886618632, z[1], C)
		C, z[1] = madd2(m, 16494529459254852566, z[2], C)
		C, z[2] = madd2(m, 10139780597354342739, z[3], C)
		C, z[3] = madd2(m, 10730920707457771221, z[4], C)
		C, z[4] = madd2(m, 4023492846293697750, z[5], C)
		C, z[5] = madd2(m, 14719751318883536030, z[6], C)
		C, z[6] = madd2(m, 14394306952299074261, z[7], C)
		C, z[7] = madd2(m, 420177830206246340, z[8], C)
		C, z[8] = madd2(m, 18292065964812492220, z[9], C)
		C, z[9] = madd2(m, 16529202080823250444, z[10], C)
		C, z[10] = madd2(m, 325117689922568275, z[11], C)
		C, z[11] = madd2(m, 17392915062696095649, z[12], C)
		C, z[12] = madd2(m, 15669173465823707729, z[13], C)
		C, z[13] = madd2(m, 14471887911929389604, z[14], C)
		C, z[14] = madd2(m, 7379345274961995842, z[15], C)
		C, z[15] = madd2(m, 16190214589477806019, z[16], C)
		C, z[16] = madd2(m, 8384885419167223405, z[17], C)
		C, z[17] = madd2(m, 14185603726792627592, z[18], C)
		C, z[18] = madd2(m, 7175340793347195998, z[19], C)
		C, z[19] = madd2(m, 99753532903889795, z[20], C)
		C, z[20] = madd2(m, 1287387037382438644, z[21], C)
		C, z[21] = madd2(m, 7902628261521547647, z[22], C)
		z[22] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 17264235192267336435
		C := madd0(m, 2977841944516248005, z[0])
		C, z[0] = madd2(m, 5366638698886618632, z[1], C)
		C, z[1] = madd2(m, 16494529459254852566, z[2], C)
		C, z[2] = madd2(m, 10139780597354342739, z[3], C)
		C, z[3] = madd2(m, 10730920707457771221, z[4], C)
		C, z[4] = madd2(m, 4023492846293697750, z[5], C)
		C, z[5] = madd2(m, 14719751318883536030, z[6], C)
		C, z[6] = madd2(m, 14394306952299074261, z[7], C)
		C, z[7] = madd2(m, 420177830206246340, z[8], C)
		C, z[8] = madd2(m, 18292065964812492220, z[9], C)
		C, z[9] = madd2(m, 16529202080823250444, z[10], C)
		C, z[10] = madd2(m, 325117689922568275, z[11], C)
		C, z[11] = madd2(m, 17392915062696095649, z[12], C)
		C, z[12] = madd2(m, 15669173465823707729, z[13], C)
		C, z[13] = madd2(m, 14471887911929389604, z[14], C)
		C, z[14] = madd2(m, 7379345274961995842, z[15], C)
		C, z[15] = madd2(m, 16190214589477806019, z[16], C)
		C, z[16] = madd2(m, 8384885419167223405, z[17], C)
		C, z[17] = madd2(m, 14185603726792627592, z[18], C)
		C, z[18] = madd2(m, 7175340793347195998, z[19], C)
		C, z[19] = madd2(m, 99753532903889795, z[20], C)
		C, z[20] = madd2(m, 1287387037382438644, z[21], C)
		C, z[21] = madd2(m, 7902628261521547647, z[22], C)
		z[22] = C
	}

	// if z > q --> z -= q
	if !(z[22] < 7902628261521547647 || (z[22] == 7902628261521547647 && (z[21] < 1287387037382438644 || (z[21] == 1287387037382438644 && (z[20] < 99753532903889795 || (z[20] == 99753532903889795 && (z[19] < 7175340793347195998 || (z[19] == 7175340793347195998 && (z[18] < 14185603726792627592 || (z[18] == 14185603726792627592 && (z[17] < 8384885419167223405 || (z[17] == 8384885419167223405 && (z[16] < 16190214589477806019 || (z[16] == 16190214589477806019 && (z[15] < 7379345274961995842 || (z[15] == 7379345274961995842 && (z[14] < 14471887911929389604 || (z[14] == 14471887911929389604 && (z[13] < 15669173465823707729 || (z[13] == 15669173465823707729 && (z[12] < 17392915062696095649 || (z[12] == 17392915062696095649 && (z[11] < 325117689922568275 || (z[11] == 325117689922568275 && (z[10] < 16529202080823250444 || (z[10] == 16529202080823250444 && (z[9] < 18292065964812492220 || (z[9] == 18292065964812492220 && (z[8] < 420177830206246340 || (z[8] == 420177830206246340 && (z[7] < 14394306952299074261 || (z[7] == 14394306952299074261 && (z[6] < 14719751318883536030 || (z[6] == 14719751318883536030 && (z[5] < 4023492846293697750 || (z[5] == 4023492846293697750 && (z[4] < 10730920707457771221 || (z[4] == 10730920707457771221 && (z[3] < 10139780597354342739 || (z[3] == 10139780597354342739 && (z[2] < 16494529459254852566 || (z[2] == 16494529459254852566 && (z[1] < 5366638698886618632 || (z[1] == 5366638698886618632 && (z[0] < 2977841944516248005))))))))))))))))))))))))))))))))))))))))))))) {
		var b uint64
		z[0], b = bits.Sub64(z[0], 2977841944516248005, 0)
		z[1], b = bits.Sub64(z[1], 5366638698886618632, b)
		z[2], b = bits.Sub64(z[2], 16494529459254852566, b)
		z[3], b = bits.Sub64(z[3], 10139780597354342739, b)
		z[4], b = bits.Sub64(z[4], 10730920707457771221, b)
		z[5], b = bits.Sub64(z[5], 4023492846293697750, b)
		z[6], b = bits.Sub64(z[6], 14719751318883536030, b)
		z[7], b = bits.Sub64(z[7], 14394306952299074261, b)
		z[8], b = bits.Sub64(z[8], 420177830206246340, b)
		z[9], b = bits.Sub64(z[9], 18292065964812492220, b)
		z[10], b = bits.Sub64(z[10], 16529202080823250444, b)
		z[11], b = bits.Sub64(z[11], 325117689922568275, b)
		z[12], b = bits.Sub64(z[12], 17392915062696095649, b)
		z[13], b = bits.Sub64(z[13], 15669173465823707729, b)
		z[14], b = bits.Sub64(z[14], 14471887911929389604, b)
		z[15], b = bits.Sub64(z[15], 7379345274961995842, b)
		z[16], b = bits.Sub64(z[16], 16190214589477806019, b)
		z[17], b = bits.Sub64(z[17], 8384885419167223405, b)
		z[18], b = bits.Sub64(z[18], 14185603726792627592, b)
		z[19], b = bits.Sub64(z[19], 7175340793347195998, b)
		z[20], b = bits.Sub64(z[20], 99753532903889795, b)
		z[21], b = bits.Sub64(z[21], 1287387037382438644, b)
		z[22], _ = bits.Sub64(z[22], 7902628261521547647, b)
	}
	return z
}

// ToMont converts z to Montgomery form
// sets and returns z = z * r^2
func (z *Element23) ToMont() *Element23 {
	var rSquare = Element23{
		11239991038759031014,
		3754806140116555011,
		2528447837425852361,
		11261080447199715620,
		11722942648073953975,
		9297068370815335087,
		16649912189234511170,
		10870539536990609536,
		4841299978517626008,
		14066144906054458655,
		4025620844003602172,
		3872067695498790700,
		2122575492548040727,
		3341447673318253284,
		2722778590481891590,
		14126872453599780753,
		9297238823989661131,
		16847005460904173809,
		6199066945873863576,
		2313077993651793613,
		16437665156882850467,
		1172378204356831219,
		5556148361506257330,
	}
	return z.MulAssign(&rSquare)
}

// ToRegular returns z in regular form (doesn't mutate z)
func (z Element23) ToRegular() Element23 {
	return *z.FromMont()
}

// String returns the string form of an Element23 in Montgomery form
func (z *Element23) String() string {
	var _z big.Int
	return z.ToBigIntRegular(&_z).String()
}

// ToBigInt returns z as a big.Int in Montgomery form
func (z *Element23) ToBigInt(res *big.Int) *big.Int {
	bits := (*[23]big.Word)(unsafe.Pointer(z))
	return res.SetBits(bits[:])
}

// ToBigIntRegular returns z as a big.Int in regular form
func (z Element23) ToBigIntRegular(res *big.Int) *big.Int {
	z.FromMont()
	bits := (*[23]big.Word)(unsafe.Pointer(&z))
	return res.SetBits(bits[:])
}

// SetBigInt sets z to v (regular form) and returns z in Montgomery form
func (z *Element23) SetBigInt(v *big.Int) *Element23 {
	z.SetZero()

	zero := big.NewInt(0)
	q := element23ModulusBigInt()

	// copy input
	vv := new(big.Int).Set(v)

	// while v < 0, v+=q
	for vv.Cmp(zero) == -1 {
		vv.Add(vv, q)
	}
	// while v > q, v-=q
	for vv.Cmp(q) == 1 {
		vv.Sub(vv, q)
	}
	// if v == q, return 0
	if vv.Cmp(q) == 0 {
		return z
	}
	// v should
	vBits := vv.Bits()
	for i := 0; i < len(vBits); i++ {
		z[i] = uint64(vBits[i])
	}
	return z.ToMont()
}

// SetString creates a big.Int with s (in base 10) and calls SetBigInt on z
func (z *Element23) SetString(s string) *Element23 {
	x, ok := new(big.Int).SetString(s, 10)
	if !ok {
		panic("Element23.SetString failed -> can't parse number in base10 into a big.Int")
	}
	return z.SetBigInt(x)
}

// Mul z = x * y mod q
func (z *Element23) Mul(x, y *Element23) *Element23 {

	var t [24]uint64
	var D uint64
	var m, C uint64
	// -----------------------------------
	// First loop

	C, t[0] = bits.Mul64(y[0], x[0])
	C, t[1] = madd1(y[0], x[1], C)
	C, t[2] = madd1(y[0], x[2], C)
	C, t[3] = madd1(y[0], x[3], C)
	C, t[4] = madd1(y[0], x[4], C)
	C, t[5] = madd1(y[0], x[5], C)
	C, t[6] = madd1(y[0], x[6], C)
	C, t[7] = madd1(y[0], x[7], C)
	C, t[8] = madd1(y[0], x[8], C)
	C, t[9] = madd1(y[0], x[9], C)
	C, t[10] = madd1(y[0], x[10], C)
	C, t[11] = madd1(y[0], x[11], C)
	C, t[12] = madd1(y[0], x[12], C)
	C, t[13] = madd1(y[0], x[13], C)
	C, t[14] = madd1(y[0], x[14], C)
	C, t[15] = madd1(y[0], x[15], C)
	C, t[16] = madd1(y[0], x[16], C)
	C, t[17] = madd1(y[0], x[17], C)
	C, t[18] = madd1(y[0], x[18], C)
	C, t[19] = madd1(y[0], x[19], C)
	C, t[20] = madd1(y[0], x[20], C)
	C, t[21] = madd1(y[0], x[21], C)
	C, t[22] = madd1(y[0], x[22], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17264235192267336435

	// -----------------------------------
	// Second loop
	C = madd0(m, 2977841944516248005, t[0])

	C, t[0] = madd2(m, 5366638698886618632, t[1], C)

	C, t[1] = madd2(m, 16494529459254852566, t[2], C)

	C, t[2] = madd2(m, 10139780597354342739, t[3], C)

	C, t[3] = madd2(m, 10730920707457771221, t[4], C)

	C, t[4] = madd2(m, 4023492846293697750, t[5], C)

	C, t[5] = madd2(m, 14719751318883536030, t[6], C)

	C, t[6] = madd2(m, 14394306952299074261, t[7], C)

	C, t[7] = madd2(m, 420177830206246340, t[8], C)

	C, t[8] = madd2(m, 18292065964812492220, t[9], C)

	C, t[9] = madd2(m, 16529202080823250444, t[10], C)

	C, t[10] = madd2(m, 325117689922568275, t[11], C)

	C, t[11] = madd2(m, 17392915062696095649, t[12], C)

	C, t[12] = madd2(m, 15669173465823707729, t[13], C)

	C, t[13] = madd2(m, 14471887911929389604, t[14], C)

	C, t[14] = madd2(m, 7379345274961995842, t[15], C)

	C, t[15] = madd2(m, 16190214589477806019, t[16], C)

	C, t[16] = madd2(m, 8384885419167223405, t[17], C)

	C, t[17] = madd2(m, 14185603726792627592, t[18], C)

	C, t[18] = madd2(m, 7175340793347195998, t[19], C)

	C, t[19] = madd2(m, 99753532903889795, t[20], C)

	C, t[20] = madd2(m, 1287387037382438644, t[21], C)

	C, t[21] = madd3(m, 7902628261521547647, t[22], C, t[23])

	t[22], t[23] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[1], x[0], t[0])
	C, t[1] = madd2(y[1], x[1], t[1], C)
	C, t[2] = madd2(y[1], x[2], t[2], C)
	C, t[3] = madd2(y[1], x[3], t[3], C)
	C, t[4] = madd2(y[1], x[4], t[4], C)
	C, t[5] = madd2(y[1], x[5], t[5], C)
	C, t[6] = madd2(y[1], x[6], t[6], C)
	C, t[7] = madd2(y[1], x[7], t[7], C)
	C, t[8] = madd2(y[1], x[8], t[8], C)
	C, t[9] = madd2(y[1], x[9], t[9], C)
	C, t[10] = madd2(y[1], x[10], t[10], C)
	C, t[11] = madd2(y[1], x[11], t[11], C)
	C, t[12] = madd2(y[1], x[12], t[12], C)
	C, t[13] = madd2(y[1], x[13], t[13], C)
	C, t[14] = madd2(y[1], x[14], t[14], C)
	C, t[15] = madd2(y[1], x[15], t[15], C)
	C, t[16] = madd2(y[1], x[16], t[16], C)
	C, t[17] = madd2(y[1], x[17], t[17], C)
	C, t[18] = madd2(y[1], x[18], t[18], C)
	C, t[19] = madd2(y[1], x[19], t[19], C)
	C, t[20] = madd2(y[1], x[20], t[20], C)
	C, t[21] = madd2(y[1], x[21], t[21], C)
	C, t[22] = madd2(y[1], x[22], t[22], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17264235192267336435

	// -----------------------------------
	// Second loop
	C = madd0(m, 2977841944516248005, t[0])

	C, t[0] = madd2(m, 5366638698886618632, t[1], C)

	C, t[1] = madd2(m, 16494529459254852566, t[2], C)

	C, t[2] = madd2(m, 10139780597354342739, t[3], C)

	C, t[3] = madd2(m, 10730920707457771221, t[4], C)

	C, t[4] = madd2(m, 4023492846293697750, t[5], C)

	C, t[5] = madd2(m, 14719751318883536030, t[6], C)

	C, t[6] = madd2(m, 14394306952299074261, t[7], C)

	C, t[7] = madd2(m, 420177830206246340, t[8], C)

	C, t[8] = madd2(m, 18292065964812492220, t[9], C)

	C, t[9] = madd2(m, 16529202080823250444, t[10], C)

	C, t[10] = madd2(m, 325117689922568275, t[11], C)

	C, t[11] = madd2(m, 17392915062696095649, t[12], C)

	C, t[12] = madd2(m, 15669173465823707729, t[13], C)

	C, t[13] = madd2(m, 14471887911929389604, t[14], C)

	C, t[14] = madd2(m, 7379345274961995842, t[15], C)

	C, t[15] = madd2(m, 16190214589477806019, t[16], C)

	C, t[16] = madd2(m, 8384885419167223405, t[17], C)

	C, t[17] = madd2(m, 14185603726792627592, t[18], C)

	C, t[18] = madd2(m, 7175340793347195998, t[19], C)

	C, t[19] = madd2(m, 99753532903889795, t[20], C)

	C, t[20] = madd2(m, 1287387037382438644, t[21], C)

	C, t[21] = madd3(m, 7902628261521547647, t[22], C, t[23])

	t[22], t[23] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[2], x[0], t[0])
	C, t[1] = madd2(y[2], x[1], t[1], C)
	C, t[2] = madd2(y[2], x[2], t[2], C)
	C, t[3] = madd2(y[2], x[3], t[3], C)
	C, t[4] = madd2(y[2], x[4], t[4], C)
	C, t[5] = madd2(y[2], x[5], t[5], C)
	C, t[6] = madd2(y[2], x[6], t[6], C)
	C, t[7] = madd2(y[2], x[7], t[7], C)
	C, t[8] = madd2(y[2], x[8], t[8], C)
	C, t[9] = madd2(y[2], x[9], t[9], C)
	C, t[10] = madd2(y[2], x[10], t[10], C)
	C, t[11] = madd2(y[2], x[11], t[11], C)
	C, t[12] = madd2(y[2], x[12], t[12], C)
	C, t[13] = madd2(y[2], x[13], t[13], C)
	C, t[14] = madd2(y[2], x[14], t[14], C)
	C, t[15] = madd2(y[2], x[15], t[15], C)
	C, t[16] = madd2(y[2], x[16], t[16], C)
	C, t[17] = madd2(y[2], x[17], t[17], C)
	C, t[18] = madd2(y[2], x[18], t[18], C)
	C, t[19] = madd2(y[2], x[19], t[19], C)
	C, t[20] = madd2(y[2], x[20], t[20], C)
	C, t[21] = madd2(y[2], x[21], t[21], C)
	C, t[22] = madd2(y[2], x[22], t[22], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17264235192267336435

	// -----------------------------------
	// Second loop
	C = madd0(m, 2977841944516248005, t[0])

	C, t[0] = madd2(m, 5366638698886618632, t[1], C)

	C, t[1] = madd2(m, 16494529459254852566, t[2], C)

	C, t[2] = madd2(m, 10139780597354342739, t[3], C)

	C, t[3] = madd2(m, 10730920707457771221, t[4], C)

	C, t[4] = madd2(m, 4023492846293697750, t[5], C)

	C, t[5] = madd2(m, 14719751318883536030, t[6], C)

	C, t[6] = madd2(m, 14394306952299074261, t[7], C)

	C, t[7] = madd2(m, 420177830206246340, t[8], C)

	C, t[8] = madd2(m, 18292065964812492220, t[9], C)

	C, t[9] = madd2(m, 16529202080823250444, t[10], C)

	C, t[10] = madd2(m, 325117689922568275, t[11], C)

	C, t[11] = madd2(m, 17392915062696095649, t[12], C)

	C, t[12] = madd2(m, 15669173465823707729, t[13], C)

	C, t[13] = madd2(m, 14471887911929389604, t[14], C)

	C, t[14] = madd2(m, 7379345274961995842, t[15], C)

	C, t[15] = madd2(m, 16190214589477806019, t[16], C)

	C, t[16] = madd2(m, 8384885419167223405, t[17], C)

	C, t[17] = madd2(m, 14185603726792627592, t[18], C)

	C, t[18] = madd2(m, 7175340793347195998, t[19], C)

	C, t[19] = madd2(m, 99753532903889795, t[20], C)

	C, t[20] = madd2(m, 1287387037382438644, t[21], C)

	C, t[21] = madd3(m, 7902628261521547647, t[22], C, t[23])

	t[22], t[23] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[3], x[0], t[0])
	C, t[1] = madd2(y[3], x[1], t[1], C)
	C, t[2] = madd2(y[3], x[2], t[2], C)
	C, t[3] = madd2(y[3], x[3], t[3], C)
	C, t[4] = madd2(y[3], x[4], t[4], C)
	C, t[5] = madd2(y[3], x[5], t[5], C)
	C, t[6] = madd2(y[3], x[6], t[6], C)
	C, t[7] = madd2(y[3], x[7], t[7], C)
	C, t[8] = madd2(y[3], x[8], t[8], C)
	C, t[9] = madd2(y[3], x[9], t[9], C)
	C, t[10] = madd2(y[3], x[10], t[10], C)
	C, t[11] = madd2(y[3], x[11], t[11], C)
	C, t[12] = madd2(y[3], x[12], t[12], C)
	C, t[13] = madd2(y[3], x[13], t[13], C)
	C, t[14] = madd2(y[3], x[14], t[14], C)
	C, t[15] = madd2(y[3], x[15], t[15], C)
	C, t[16] = madd2(y[3], x[16], t[16], C)
	C, t[17] = madd2(y[3], x[17], t[17], C)
	C, t[18] = madd2(y[3], x[18], t[18], C)
	C, t[19] = madd2(y[3], x[19], t[19], C)
	C, t[20] = madd2(y[3], x[20], t[20], C)
	C, t[21] = madd2(y[3], x[21], t[21], C)
	C, t[22] = madd2(y[3], x[22], t[22], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17264235192267336435

	// -----------------------------------
	// Second loop
	C = madd0(m, 2977841944516248005, t[0])

	C, t[0] = madd2(m, 5366638698886618632, t[1], C)

	C, t[1] = madd2(m, 16494529459254852566, t[2], C)

	C, t[2] = madd2(m, 10139780597354342739, t[3], C)

	C, t[3] = madd2(m, 10730920707457771221, t[4], C)

	C, t[4] = madd2(m, 4023492846293697750, t[5], C)

	C, t[5] = madd2(m, 14719751318883536030, t[6], C)

	C, t[6] = madd2(m, 14394306952299074261, t[7], C)

	C, t[7] = madd2(m, 420177830206246340, t[8], C)

	C, t[8] = madd2(m, 18292065964812492220, t[9], C)

	C, t[9] = madd2(m, 16529202080823250444, t[10], C)

	C, t[10] = madd2(m, 325117689922568275, t[11], C)

	C, t[11] = madd2(m, 17392915062696095649, t[12], C)

	C, t[12] = madd2(m, 15669173465823707729, t[13], C)

	C, t[13] = madd2(m, 14471887911929389604, t[14], C)

	C, t[14] = madd2(m, 7379345274961995842, t[15], C)

	C, t[15] = madd2(m, 16190214589477806019, t[16], C)

	C, t[16] = madd2(m, 8384885419167223405, t[17], C)

	C, t[17] = madd2(m, 14185603726792627592, t[18], C)

	C, t[18] = madd2(m, 7175340793347195998, t[19], C)

	C, t[19] = madd2(m, 99753532903889795, t[20], C)

	C, t[20] = madd2(m, 1287387037382438644, t[21], C)

	C, t[21] = madd3(m, 7902628261521547647, t[22], C, t[23])

	t[22], t[23] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[4], x[0], t[0])
	C, t[1] = madd2(y[4], x[1], t[1], C)
	C, t[2] = madd2(y[4], x[2], t[2], C)
	C, t[3] = madd2(y[4], x[3], t[3], C)
	C, t[4] = madd2(y[4], x[4], t[4], C)
	C, t[5] = madd2(y[4], x[5], t[5], C)
	C, t[6] = madd2(y[4], x[6], t[6], C)
	C, t[7] = madd2(y[4], x[7], t[7], C)
	C, t[8] = madd2(y[4], x[8], t[8], C)
	C, t[9] = madd2(y[4], x[9], t[9], C)
	C, t[10] = madd2(y[4], x[10], t[10], C)
	C, t[11] = madd2(y[4], x[11], t[11], C)
	C, t[12] = madd2(y[4], x[12], t[12], C)
	C, t[13] = madd2(y[4], x[13], t[13], C)
	C, t[14] = madd2(y[4], x[14], t[14], C)
	C, t[15] = madd2(y[4], x[15], t[15], C)
	C, t[16] = madd2(y[4], x[16], t[16], C)
	C, t[17] = madd2(y[4], x[17], t[17], C)
	C, t[18] = madd2(y[4], x[18], t[18], C)
	C, t[19] = madd2(y[4], x[19], t[19], C)
	C, t[20] = madd2(y[4], x[20], t[20], C)
	C, t[21] = madd2(y[4], x[21], t[21], C)
	C, t[22] = madd2(y[4], x[22], t[22], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17264235192267336435

	// -----------------------------------
	// Second loop
	C = madd0(m, 2977841944516248005, t[0])

	C, t[0] = madd2(m, 5366638698886618632, t[1], C)

	C, t[1] = madd2(m, 16494529459254852566, t[2], C)

	C, t[2] = madd2(m, 10139780597354342739, t[3], C)

	C, t[3] = madd2(m, 10730920707457771221, t[4], C)

	C, t[4] = madd2(m, 4023492846293697750, t[5], C)

	C, t[5] = madd2(m, 14719751318883536030, t[6], C)

	C, t[6] = madd2(m, 14394306952299074261, t[7], C)

	C, t[7] = madd2(m, 420177830206246340, t[8], C)

	C, t[8] = madd2(m, 18292065964812492220, t[9], C)

	C, t[9] = madd2(m, 16529202080823250444, t[10], C)

	C, t[10] = madd2(m, 325117689922568275, t[11], C)

	C, t[11] = madd2(m, 17392915062696095649, t[12], C)

	C, t[12] = madd2(m, 15669173465823707729, t[13], C)

	C, t[13] = madd2(m, 14471887911929389604, t[14], C)

	C, t[14] = madd2(m, 7379345274961995842, t[15], C)

	C, t[15] = madd2(m, 16190214589477806019, t[16], C)

	C, t[16] = madd2(m, 8384885419167223405, t[17], C)

	C, t[17] = madd2(m, 14185603726792627592, t[18], C)

	C, t[18] = madd2(m, 7175340793347195998, t[19], C)

	C, t[19] = madd2(m, 99753532903889795, t[20], C)

	C, t[20] = madd2(m, 1287387037382438644, t[21], C)

	C, t[21] = madd3(m, 7902628261521547647, t[22], C, t[23])

	t[22], t[23] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[5], x[0], t[0])
	C, t[1] = madd2(y[5], x[1], t[1], C)
	C, t[2] = madd2(y[5], x[2], t[2], C)
	C, t[3] = madd2(y[5], x[3], t[3], C)
	C, t[4] = madd2(y[5], x[4], t[4], C)
	C, t[5] = madd2(y[5], x[5], t[5], C)
	C, t[6] = madd2(y[5], x[6], t[6], C)
	C, t[7] = madd2(y[5], x[7], t[7], C)
	C, t[8] = madd2(y[5], x[8], t[8], C)
	C, t[9] = madd2(y[5], x[9], t[9], C)
	C, t[10] = madd2(y[5], x[10], t[10], C)
	C, t[11] = madd2(y[5], x[11], t[11], C)
	C, t[12] = madd2(y[5], x[12], t[12], C)
	C, t[13] = madd2(y[5], x[13], t[13], C)
	C, t[14] = madd2(y[5], x[14], t[14], C)
	C, t[15] = madd2(y[5], x[15], t[15], C)
	C, t[16] = madd2(y[5], x[16], t[16], C)
	C, t[17] = madd2(y[5], x[17], t[17], C)
	C, t[18] = madd2(y[5], x[18], t[18], C)
	C, t[19] = madd2(y[5], x[19], t[19], C)
	C, t[20] = madd2(y[5], x[20], t[20], C)
	C, t[21] = madd2(y[5], x[21], t[21], C)
	C, t[22] = madd2(y[5], x[22], t[22], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17264235192267336435

	// -----------------------------------
	// Second loop
	C = madd0(m, 2977841944516248005, t[0])

	C, t[0] = madd2(m, 5366638698886618632, t[1], C)

	C, t[1] = madd2(m, 16494529459254852566, t[2], C)

	C, t[2] = madd2(m, 10139780597354342739, t[3], C)

	C, t[3] = madd2(m, 10730920707457771221, t[4], C)

	C, t[4] = madd2(m, 4023492846293697750, t[5], C)

	C, t[5] = madd2(m, 14719751318883536030, t[6], C)

	C, t[6] = madd2(m, 14394306952299074261, t[7], C)

	C, t[7] = madd2(m, 420177830206246340, t[8], C)

	C, t[8] = madd2(m, 18292065964812492220, t[9], C)

	C, t[9] = madd2(m, 16529202080823250444, t[10], C)

	C, t[10] = madd2(m, 325117689922568275, t[11], C)

	C, t[11] = madd2(m, 17392915062696095649, t[12], C)

	C, t[12] = madd2(m, 15669173465823707729, t[13], C)

	C, t[13] = madd2(m, 14471887911929389604, t[14], C)

	C, t[14] = madd2(m, 7379345274961995842, t[15], C)

	C, t[15] = madd2(m, 16190214589477806019, t[16], C)

	C, t[16] = madd2(m, 8384885419167223405, t[17], C)

	C, t[17] = madd2(m, 14185603726792627592, t[18], C)

	C, t[18] = madd2(m, 7175340793347195998, t[19], C)

	C, t[19] = madd2(m, 99753532903889795, t[20], C)

	C, t[20] = madd2(m, 1287387037382438644, t[21], C)

	C, t[21] = madd3(m, 7902628261521547647, t[22], C, t[23])

	t[22], t[23] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[6], x[0], t[0])
	C, t[1] = madd2(y[6], x[1], t[1], C)
	C, t[2] = madd2(y[6], x[2], t[2], C)
	C, t[3] = madd2(y[6], x[3], t[3], C)
	C, t[4] = madd2(y[6], x[4], t[4], C)
	C, t[5] = madd2(y[6], x[5], t[5], C)
	C, t[6] = madd2(y[6], x[6], t[6], C)
	C, t[7] = madd2(y[6], x[7], t[7], C)
	C, t[8] = madd2(y[6], x[8], t[8], C)
	C, t[9] = madd2(y[6], x[9], t[9], C)
	C, t[10] = madd2(y[6], x[10], t[10], C)
	C, t[11] = madd2(y[6], x[11], t[11], C)
	C, t[12] = madd2(y[6], x[12], t[12], C)
	C, t[13] = madd2(y[6], x[13], t[13], C)
	C, t[14] = madd2(y[6], x[14], t[14], C)
	C, t[15] = madd2(y[6], x[15], t[15], C)
	C, t[16] = madd2(y[6], x[16], t[16], C)
	C, t[17] = madd2(y[6], x[17], t[17], C)
	C, t[18] = madd2(y[6], x[18], t[18], C)
	C, t[19] = madd2(y[6], x[19], t[19], C)
	C, t[20] = madd2(y[6], x[20], t[20], C)
	C, t[21] = madd2(y[6], x[21], t[21], C)
	C, t[22] = madd2(y[6], x[22], t[22], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17264235192267336435

	// -----------------------------------
	// Second loop
	C = madd0(m, 2977841944516248005, t[0])

	C, t[0] = madd2(m, 5366638698886618632, t[1], C)

	C, t[1] = madd2(m, 16494529459254852566, t[2], C)

	C, t[2] = madd2(m, 10139780597354342739, t[3], C)

	C, t[3] = madd2(m, 10730920707457771221, t[4], C)

	C, t[4] = madd2(m, 4023492846293697750, t[5], C)

	C, t[5] = madd2(m, 14719751318883536030, t[6], C)

	C, t[6] = madd2(m, 14394306952299074261, t[7], C)

	C, t[7] = madd2(m, 420177830206246340, t[8], C)

	C, t[8] = madd2(m, 18292065964812492220, t[9], C)

	C, t[9] = madd2(m, 16529202080823250444, t[10], C)

	C, t[10] = madd2(m, 325117689922568275, t[11], C)

	C, t[11] = madd2(m, 17392915062696095649, t[12], C)

	C, t[12] = madd2(m, 15669173465823707729, t[13], C)

	C, t[13] = madd2(m, 14471887911929389604, t[14], C)

	C, t[14] = madd2(m, 7379345274961995842, t[15], C)

	C, t[15] = madd2(m, 16190214589477806019, t[16], C)

	C, t[16] = madd2(m, 8384885419167223405, t[17], C)

	C, t[17] = madd2(m, 14185603726792627592, t[18], C)

	C, t[18] = madd2(m, 7175340793347195998, t[19], C)

	C, t[19] = madd2(m, 99753532903889795, t[20], C)

	C, t[20] = madd2(m, 1287387037382438644, t[21], C)

	C, t[21] = madd3(m, 7902628261521547647, t[22], C, t[23])

	t[22], t[23] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[7], x[0], t[0])
	C, t[1] = madd2(y[7], x[1], t[1], C)
	C, t[2] = madd2(y[7], x[2], t[2], C)
	C, t[3] = madd2(y[7], x[3], t[3], C)
	C, t[4] = madd2(y[7], x[4], t[4], C)
	C, t[5] = madd2(y[7], x[5], t[5], C)
	C, t[6] = madd2(y[7], x[6], t[6], C)
	C, t[7] = madd2(y[7], x[7], t[7], C)
	C, t[8] = madd2(y[7], x[8], t[8], C)
	C, t[9] = madd2(y[7], x[9], t[9], C)
	C, t[10] = madd2(y[7], x[10], t[10], C)
	C, t[11] = madd2(y[7], x[11], t[11], C)
	C, t[12] = madd2(y[7], x[12], t[12], C)
	C, t[13] = madd2(y[7], x[13], t[13], C)
	C, t[14] = madd2(y[7], x[14], t[14], C)
	C, t[15] = madd2(y[7], x[15], t[15], C)
	C, t[16] = madd2(y[7], x[16], t[16], C)
	C, t[17] = madd2(y[7], x[17], t[17], C)
	C, t[18] = madd2(y[7], x[18], t[18], C)
	C, t[19] = madd2(y[7], x[19], t[19], C)
	C, t[20] = madd2(y[7], x[20], t[20], C)
	C, t[21] = madd2(y[7], x[21], t[21], C)
	C, t[22] = madd2(y[7], x[22], t[22], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17264235192267336435

	// -----------------------------------
	// Second loop
	C = madd0(m, 2977841944516248005, t[0])

	C, t[0] = madd2(m, 5366638698886618632, t[1], C)

	C, t[1] = madd2(m, 16494529459254852566, t[2], C)

	C, t[2] = madd2(m, 10139780597354342739, t[3], C)

	C, t[3] = madd2(m, 10730920707457771221, t[4], C)

	C, t[4] = madd2(m, 4023492846293697750, t[5], C)

	C, t[5] = madd2(m, 14719751318883536030, t[6], C)

	C, t[6] = madd2(m, 14394306952299074261, t[7], C)

	C, t[7] = madd2(m, 420177830206246340, t[8], C)

	C, t[8] = madd2(m, 18292065964812492220, t[9], C)

	C, t[9] = madd2(m, 16529202080823250444, t[10], C)

	C, t[10] = madd2(m, 325117689922568275, t[11], C)

	C, t[11] = madd2(m, 17392915062696095649, t[12], C)

	C, t[12] = madd2(m, 15669173465823707729, t[13], C)

	C, t[13] = madd2(m, 14471887911929389604, t[14], C)

	C, t[14] = madd2(m, 7379345274961995842, t[15], C)

	C, t[15] = madd2(m, 16190214589477806019, t[16], C)

	C, t[16] = madd2(m, 8384885419167223405, t[17], C)

	C, t[17] = madd2(m, 14185603726792627592, t[18], C)

	C, t[18] = madd2(m, 7175340793347195998, t[19], C)

	C, t[19] = madd2(m, 99753532903889795, t[20], C)

	C, t[20] = madd2(m, 1287387037382438644, t[21], C)

	C, t[21] = madd3(m, 7902628261521547647, t[22], C, t[23])

	t[22], t[23] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[8], x[0], t[0])
	C, t[1] = madd2(y[8], x[1], t[1], C)
	C, t[2] = madd2(y[8], x[2], t[2], C)
	C, t[3] = madd2(y[8], x[3], t[3], C)
	C, t[4] = madd2(y[8], x[4], t[4], C)
	C, t[5] = madd2(y[8], x[5], t[5], C)
	C, t[6] = madd2(y[8], x[6], t[6], C)
	C, t[7] = madd2(y[8], x[7], t[7], C)
	C, t[8] = madd2(y[8], x[8], t[8], C)
	C, t[9] = madd2(y[8], x[9], t[9], C)
	C, t[10] = madd2(y[8], x[10], t[10], C)
	C, t[11] = madd2(y[8], x[11], t[11], C)
	C, t[12] = madd2(y[8], x[12], t[12], C)
	C, t[13] = madd2(y[8], x[13], t[13], C)
	C, t[14] = madd2(y[8], x[14], t[14], C)
	C, t[15] = madd2(y[8], x[15], t[15], C)
	C, t[16] = madd2(y[8], x[16], t[16], C)
	C, t[17] = madd2(y[8], x[17], t[17], C)
	C, t[18] = madd2(y[8], x[18], t[18], C)
	C, t[19] = madd2(y[8], x[19], t[19], C)
	C, t[20] = madd2(y[8], x[20], t[20], C)
	C, t[21] = madd2(y[8], x[21], t[21], C)
	C, t[22] = madd2(y[8], x[22], t[22], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17264235192267336435

	// -----------------------------------
	// Second loop
	C = madd0(m, 2977841944516248005, t[0])

	C, t[0] = madd2(m, 5366638698886618632, t[1], C)

	C, t[1] = madd2(m, 16494529459254852566, t[2], C)

	C, t[2] = madd2(m, 10139780597354342739, t[3], C)

	C, t[3] = madd2(m, 10730920707457771221, t[4], C)

	C, t[4] = madd2(m, 4023492846293697750, t[5], C)

	C, t[5] = madd2(m, 14719751318883536030, t[6], C)

	C, t[6] = madd2(m, 14394306952299074261, t[7], C)

	C, t[7] = madd2(m, 420177830206246340, t[8], C)

	C, t[8] = madd2(m, 18292065964812492220, t[9], C)

	C, t[9] = madd2(m, 16529202080823250444, t[10], C)

	C, t[10] = madd2(m, 325117689922568275, t[11], C)

	C, t[11] = madd2(m, 17392915062696095649, t[12], C)

	C, t[12] = madd2(m, 15669173465823707729, t[13], C)

	C, t[13] = madd2(m, 14471887911929389604, t[14], C)

	C, t[14] = madd2(m, 7379345274961995842, t[15], C)

	C, t[15] = madd2(m, 16190214589477806019, t[16], C)

	C, t[16] = madd2(m, 8384885419167223405, t[17], C)

	C, t[17] = madd2(m, 14185603726792627592, t[18], C)

	C, t[18] = madd2(m, 7175340793347195998, t[19], C)

	C, t[19] = madd2(m, 99753532903889795, t[20], C)

	C, t[20] = madd2(m, 1287387037382438644, t[21], C)

	C, t[21] = madd3(m, 7902628261521547647, t[22], C, t[23])

	t[22], t[23] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[9], x[0], t[0])
	C, t[1] = madd2(y[9], x[1], t[1], C)
	C, t[2] = madd2(y[9], x[2], t[2], C)
	C, t[3] = madd2(y[9], x[3], t[3], C)
	C, t[4] = madd2(y[9], x[4], t[4], C)
	C, t[5] = madd2(y[9], x[5], t[5], C)
	C, t[6] = madd2(y[9], x[6], t[6], C)
	C, t[7] = madd2(y[9], x[7], t[7], C)
	C, t[8] = madd2(y[9], x[8], t[8], C)
	C, t[9] = madd2(y[9], x[9], t[9], C)
	C, t[10] = madd2(y[9], x[10], t[10], C)
	C, t[11] = madd2(y[9], x[11], t[11], C)
	C, t[12] = madd2(y[9], x[12], t[12], C)
	C, t[13] = madd2(y[9], x[13], t[13], C)
	C, t[14] = madd2(y[9], x[14], t[14], C)
	C, t[15] = madd2(y[9], x[15], t[15], C)
	C, t[16] = madd2(y[9], x[16], t[16], C)
	C, t[17] = madd2(y[9], x[17], t[17], C)
	C, t[18] = madd2(y[9], x[18], t[18], C)
	C, t[19] = madd2(y[9], x[19], t[19], C)
	C, t[20] = madd2(y[9], x[20], t[20], C)
	C, t[21] = madd2(y[9], x[21], t[21], C)
	C, t[22] = madd2(y[9], x[22], t[22], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17264235192267336435

	// -----------------------------------
	// Second loop
	C = madd0(m, 2977841944516248005, t[0])

	C, t[0] = madd2(m, 5366638698886618632, t[1], C)

	C, t[1] = madd2(m, 16494529459254852566, t[2], C)

	C, t[2] = madd2(m, 10139780597354342739, t[3], C)

	C, t[3] = madd2(m, 10730920707457771221, t[4], C)

	C, t[4] = madd2(m, 4023492846293697750, t[5], C)

	C, t[5] = madd2(m, 14719751318883536030, t[6], C)

	C, t[6] = madd2(m, 14394306952299074261, t[7], C)

	C, t[7] = madd2(m, 420177830206246340, t[8], C)

	C, t[8] = madd2(m, 18292065964812492220, t[9], C)

	C, t[9] = madd2(m, 16529202080823250444, t[10], C)

	C, t[10] = madd2(m, 325117689922568275, t[11], C)

	C, t[11] = madd2(m, 17392915062696095649, t[12], C)

	C, t[12] = madd2(m, 15669173465823707729, t[13], C)

	C, t[13] = madd2(m, 14471887911929389604, t[14], C)

	C, t[14] = madd2(m, 7379345274961995842, t[15], C)

	C, t[15] = madd2(m, 16190214589477806019, t[16], C)

	C, t[16] = madd2(m, 8384885419167223405, t[17], C)

	C, t[17] = madd2(m, 14185603726792627592, t[18], C)

	C, t[18] = madd2(m, 7175340793347195998, t[19], C)

	C, t[19] = madd2(m, 99753532903889795, t[20], C)

	C, t[20] = madd2(m, 1287387037382438644, t[21], C)

	C, t[21] = madd3(m, 7902628261521547647, t[22], C, t[23])

	t[22], t[23] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[10], x[0], t[0])
	C, t[1] = madd2(y[10], x[1], t[1], C)
	C, t[2] = madd2(y[10], x[2], t[2], C)
	C, t[3] = madd2(y[10], x[3], t[3], C)
	C, t[4] = madd2(y[10], x[4], t[4], C)
	C, t[5] = madd2(y[10], x[5], t[5], C)
	C, t[6] = madd2(y[10], x[6], t[6], C)
	C, t[7] = madd2(y[10], x[7], t[7], C)
	C, t[8] = madd2(y[10], x[8], t[8], C)
	C, t[9] = madd2(y[10], x[9], t[9], C)
	C, t[10] = madd2(y[10], x[10], t[10], C)
	C, t[11] = madd2(y[10], x[11], t[11], C)
	C, t[12] = madd2(y[10], x[12], t[12], C)
	C, t[13] = madd2(y[10], x[13], t[13], C)
	C, t[14] = madd2(y[10], x[14], t[14], C)
	C, t[15] = madd2(y[10], x[15], t[15], C)
	C, t[16] = madd2(y[10], x[16], t[16], C)
	C, t[17] = madd2(y[10], x[17], t[17], C)
	C, t[18] = madd2(y[10], x[18], t[18], C)
	C, t[19] = madd2(y[10], x[19], t[19], C)
	C, t[20] = madd2(y[10], x[20], t[20], C)
	C, t[21] = madd2(y[10], x[21], t[21], C)
	C, t[22] = madd2(y[10], x[22], t[22], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17264235192267336435

	// -----------------------------------
	// Second loop
	C = madd0(m, 2977841944516248005, t[0])

	C, t[0] = madd2(m, 5366638698886618632, t[1], C)

	C, t[1] = madd2(m, 16494529459254852566, t[2], C)

	C, t[2] = madd2(m, 10139780597354342739, t[3], C)

	C, t[3] = madd2(m, 10730920707457771221, t[4], C)

	C, t[4] = madd2(m, 4023492846293697750, t[5], C)

	C, t[5] = madd2(m, 14719751318883536030, t[6], C)

	C, t[6] = madd2(m, 14394306952299074261, t[7], C)

	C, t[7] = madd2(m, 420177830206246340, t[8], C)

	C, t[8] = madd2(m, 18292065964812492220, t[9], C)

	C, t[9] = madd2(m, 16529202080823250444, t[10], C)

	C, t[10] = madd2(m, 325117689922568275, t[11], C)

	C, t[11] = madd2(m, 17392915062696095649, t[12], C)

	C, t[12] = madd2(m, 15669173465823707729, t[13], C)

	C, t[13] = madd2(m, 14471887911929389604, t[14], C)

	C, t[14] = madd2(m, 7379345274961995842, t[15], C)

	C, t[15] = madd2(m, 16190214589477806019, t[16], C)

	C, t[16] = madd2(m, 8384885419167223405, t[17], C)

	C, t[17] = madd2(m, 14185603726792627592, t[18], C)

	C, t[18] = madd2(m, 7175340793347195998, t[19], C)

	C, t[19] = madd2(m, 99753532903889795, t[20], C)

	C, t[20] = madd2(m, 1287387037382438644, t[21], C)

	C, t[21] = madd3(m, 7902628261521547647, t[22], C, t[23])

	t[22], t[23] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[11], x[0], t[0])
	C, t[1] = madd2(y[11], x[1], t[1], C)
	C, t[2] = madd2(y[11], x[2], t[2], C)
	C, t[3] = madd2(y[11], x[3], t[3], C)
	C, t[4] = madd2(y[11], x[4], t[4], C)
	C, t[5] = madd2(y[11], x[5], t[5], C)
	C, t[6] = madd2(y[11], x[6], t[6], C)
	C, t[7] = madd2(y[11], x[7], t[7], C)
	C, t[8] = madd2(y[11], x[8], t[8], C)
	C, t[9] = madd2(y[11], x[9], t[9], C)
	C, t[10] = madd2(y[11], x[10], t[10], C)
	C, t[11] = madd2(y[11], x[11], t[11], C)
	C, t[12] = madd2(y[11], x[12], t[12], C)
	C, t[13] = madd2(y[11], x[13], t[13], C)
	C, t[14] = madd2(y[11], x[14], t[14], C)
	C, t[15] = madd2(y[11], x[15], t[15], C)
	C, t[16] = madd2(y[11], x[16], t[16], C)
	C, t[17] = madd2(y[11], x[17], t[17], C)
	C, t[18] = madd2(y[11], x[18], t[18], C)
	C, t[19] = madd2(y[11], x[19], t[19], C)
	C, t[20] = madd2(y[11], x[20], t[20], C)
	C, t[21] = madd2(y[11], x[21], t[21], C)
	C, t[22] = madd2(y[11], x[22], t[22], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17264235192267336435

	// -----------------------------------
	// Second loop
	C = madd0(m, 2977841944516248005, t[0])

	C, t[0] = madd2(m, 5366638698886618632, t[1], C)

	C, t[1] = madd2(m, 16494529459254852566, t[2], C)

	C, t[2] = madd2(m, 10139780597354342739, t[3], C)

	C, t[3] = madd2(m, 10730920707457771221, t[4], C)

	C, t[4] = madd2(m, 4023492846293697750, t[5], C)

	C, t[5] = madd2(m, 14719751318883536030, t[6], C)

	C, t[6] = madd2(m, 14394306952299074261, t[7], C)

	C, t[7] = madd2(m, 420177830206246340, t[8], C)

	C, t[8] = madd2(m, 18292065964812492220, t[9], C)

	C, t[9] = madd2(m, 16529202080823250444, t[10], C)

	C, t[10] = madd2(m, 325117689922568275, t[11], C)

	C, t[11] = madd2(m, 17392915062696095649, t[12], C)

	C, t[12] = madd2(m, 15669173465823707729, t[13], C)

	C, t[13] = madd2(m, 14471887911929389604, t[14], C)

	C, t[14] = madd2(m, 7379345274961995842, t[15], C)

	C, t[15] = madd2(m, 16190214589477806019, t[16], C)

	C, t[16] = madd2(m, 8384885419167223405, t[17], C)

	C, t[17] = madd2(m, 14185603726792627592, t[18], C)

	C, t[18] = madd2(m, 7175340793347195998, t[19], C)

	C, t[19] = madd2(m, 99753532903889795, t[20], C)

	C, t[20] = madd2(m, 1287387037382438644, t[21], C)

	C, t[21] = madd3(m, 7902628261521547647, t[22], C, t[23])

	t[22], t[23] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[12], x[0], t[0])
	C, t[1] = madd2(y[12], x[1], t[1], C)
	C, t[2] = madd2(y[12], x[2], t[2], C)
	C, t[3] = madd2(y[12], x[3], t[3], C)
	C, t[4] = madd2(y[12], x[4], t[4], C)
	C, t[5] = madd2(y[12], x[5], t[5], C)
	C, t[6] = madd2(y[12], x[6], t[6], C)
	C, t[7] = madd2(y[12], x[7], t[7], C)
	C, t[8] = madd2(y[12], x[8], t[8], C)
	C, t[9] = madd2(y[12], x[9], t[9], C)
	C, t[10] = madd2(y[12], x[10], t[10], C)
	C, t[11] = madd2(y[12], x[11], t[11], C)
	C, t[12] = madd2(y[12], x[12], t[12], C)
	C, t[13] = madd2(y[12], x[13], t[13], C)
	C, t[14] = madd2(y[12], x[14], t[14], C)
	C, t[15] = madd2(y[12], x[15], t[15], C)
	C, t[16] = madd2(y[12], x[16], t[16], C)
	C, t[17] = madd2(y[12], x[17], t[17], C)
	C, t[18] = madd2(y[12], x[18], t[18], C)
	C, t[19] = madd2(y[12], x[19], t[19], C)
	C, t[20] = madd2(y[12], x[20], t[20], C)
	C, t[21] = madd2(y[12], x[21], t[21], C)
	C, t[22] = madd2(y[12], x[22], t[22], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17264235192267336435

	// -----------------------------------
	// Second loop
	C = madd0(m, 2977841944516248005, t[0])

	C, t[0] = madd2(m, 5366638698886618632, t[1], C)

	C, t[1] = madd2(m, 16494529459254852566, t[2], C)

	C, t[2] = madd2(m, 10139780597354342739, t[3], C)

	C, t[3] = madd2(m, 10730920707457771221, t[4], C)

	C, t[4] = madd2(m, 4023492846293697750, t[5], C)

	C, t[5] = madd2(m, 14719751318883536030, t[6], C)

	C, t[6] = madd2(m, 14394306952299074261, t[7], C)

	C, t[7] = madd2(m, 420177830206246340, t[8], C)

	C, t[8] = madd2(m, 18292065964812492220, t[9], C)

	C, t[9] = madd2(m, 16529202080823250444, t[10], C)

	C, t[10] = madd2(m, 325117689922568275, t[11], C)

	C, t[11] = madd2(m, 17392915062696095649, t[12], C)

	C, t[12] = madd2(m, 15669173465823707729, t[13], C)

	C, t[13] = madd2(m, 14471887911929389604, t[14], C)

	C, t[14] = madd2(m, 7379345274961995842, t[15], C)

	C, t[15] = madd2(m, 16190214589477806019, t[16], C)

	C, t[16] = madd2(m, 8384885419167223405, t[17], C)

	C, t[17] = madd2(m, 14185603726792627592, t[18], C)

	C, t[18] = madd2(m, 7175340793347195998, t[19], C)

	C, t[19] = madd2(m, 99753532903889795, t[20], C)

	C, t[20] = madd2(m, 1287387037382438644, t[21], C)

	C, t[21] = madd3(m, 7902628261521547647, t[22], C, t[23])

	t[22], t[23] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[13], x[0], t[0])
	C, t[1] = madd2(y[13], x[1], t[1], C)
	C, t[2] = madd2(y[13], x[2], t[2], C)
	C, t[3] = madd2(y[13], x[3], t[3], C)
	C, t[4] = madd2(y[13], x[4], t[4], C)
	C, t[5] = madd2(y[13], x[5], t[5], C)
	C, t[6] = madd2(y[13], x[6], t[6], C)
	C, t[7] = madd2(y[13], x[7], t[7], C)
	C, t[8] = madd2(y[13], x[8], t[8], C)
	C, t[9] = madd2(y[13], x[9], t[9], C)
	C, t[10] = madd2(y[13], x[10], t[10], C)
	C, t[11] = madd2(y[13], x[11], t[11], C)
	C, t[12] = madd2(y[13], x[12], t[12], C)
	C, t[13] = madd2(y[13], x[13], t[13], C)
	C, t[14] = madd2(y[13], x[14], t[14], C)
	C, t[15] = madd2(y[13], x[15], t[15], C)
	C, t[16] = madd2(y[13], x[16], t[16], C)
	C, t[17] = madd2(y[13], x[17], t[17], C)
	C, t[18] = madd2(y[13], x[18], t[18], C)
	C, t[19] = madd2(y[13], x[19], t[19], C)
	C, t[20] = madd2(y[13], x[20], t[20], C)
	C, t[21] = madd2(y[13], x[21], t[21], C)
	C, t[22] = madd2(y[13], x[22], t[22], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17264235192267336435

	// -----------------------------------
	// Second loop
	C = madd0(m, 2977841944516248005, t[0])

	C, t[0] = madd2(m, 5366638698886618632, t[1], C)

	C, t[1] = madd2(m, 16494529459254852566, t[2], C)

	C, t[2] = madd2(m, 10139780597354342739, t[3], C)

	C, t[3] = madd2(m, 10730920707457771221, t[4], C)

	C, t[4] = madd2(m, 4023492846293697750, t[5], C)

	C, t[5] = madd2(m, 14719751318883536030, t[6], C)

	C, t[6] = madd2(m, 14394306952299074261, t[7], C)

	C, t[7] = madd2(m, 420177830206246340, t[8], C)

	C, t[8] = madd2(m, 18292065964812492220, t[9], C)

	C, t[9] = madd2(m, 16529202080823250444, t[10], C)

	C, t[10] = madd2(m, 325117689922568275, t[11], C)

	C, t[11] = madd2(m, 17392915062696095649, t[12], C)

	C, t[12] = madd2(m, 15669173465823707729, t[13], C)

	C, t[13] = madd2(m, 14471887911929389604, t[14], C)

	C, t[14] = madd2(m, 7379345274961995842, t[15], C)

	C, t[15] = madd2(m, 16190214589477806019, t[16], C)

	C, t[16] = madd2(m, 8384885419167223405, t[17], C)

	C, t[17] = madd2(m, 14185603726792627592, t[18], C)

	C, t[18] = madd2(m, 7175340793347195998, t[19], C)

	C, t[19] = madd2(m, 99753532903889795, t[20], C)

	C, t[20] = madd2(m, 1287387037382438644, t[21], C)

	C, t[21] = madd3(m, 7902628261521547647, t[22], C, t[23])

	t[22], t[23] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[14], x[0], t[0])
	C, t[1] = madd2(y[14], x[1], t[1], C)
	C, t[2] = madd2(y[14], x[2], t[2], C)
	C, t[3] = madd2(y[14], x[3], t[3], C)
	C, t[4] = madd2(y[14], x[4], t[4], C)
	C, t[5] = madd2(y[14], x[5], t[5], C)
	C, t[6] = madd2(y[14], x[6], t[6], C)
	C, t[7] = madd2(y[14], x[7], t[7], C)
	C, t[8] = madd2(y[14], x[8], t[8], C)
	C, t[9] = madd2(y[14], x[9], t[9], C)
	C, t[10] = madd2(y[14], x[10], t[10], C)
	C, t[11] = madd2(y[14], x[11], t[11], C)
	C, t[12] = madd2(y[14], x[12], t[12], C)
	C, t[13] = madd2(y[14], x[13], t[13], C)
	C, t[14] = madd2(y[14], x[14], t[14], C)
	C, t[15] = madd2(y[14], x[15], t[15], C)
	C, t[16] = madd2(y[14], x[16], t[16], C)
	C, t[17] = madd2(y[14], x[17], t[17], C)
	C, t[18] = madd2(y[14], x[18], t[18], C)
	C, t[19] = madd2(y[14], x[19], t[19], C)
	C, t[20] = madd2(y[14], x[20], t[20], C)
	C, t[21] = madd2(y[14], x[21], t[21], C)
	C, t[22] = madd2(y[14], x[22], t[22], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17264235192267336435

	// -----------------------------------
	// Second loop
	C = madd0(m, 2977841944516248005, t[0])

	C, t[0] = madd2(m, 5366638698886618632, t[1], C)

	C, t[1] = madd2(m, 16494529459254852566, t[2], C)

	C, t[2] = madd2(m, 10139780597354342739, t[3], C)

	C, t[3] = madd2(m, 10730920707457771221, t[4], C)

	C, t[4] = madd2(m, 4023492846293697750, t[5], C)

	C, t[5] = madd2(m, 14719751318883536030, t[6], C)

	C, t[6] = madd2(m, 14394306952299074261, t[7], C)

	C, t[7] = madd2(m, 420177830206246340, t[8], C)

	C, t[8] = madd2(m, 18292065964812492220, t[9], C)

	C, t[9] = madd2(m, 16529202080823250444, t[10], C)

	C, t[10] = madd2(m, 325117689922568275, t[11], C)

	C, t[11] = madd2(m, 17392915062696095649, t[12], C)

	C, t[12] = madd2(m, 15669173465823707729, t[13], C)

	C, t[13] = madd2(m, 14471887911929389604, t[14], C)

	C, t[14] = madd2(m, 7379345274961995842, t[15], C)

	C, t[15] = madd2(m, 16190214589477806019, t[16], C)

	C, t[16] = madd2(m, 8384885419167223405, t[17], C)

	C, t[17] = madd2(m, 14185603726792627592, t[18], C)

	C, t[18] = madd2(m, 7175340793347195998, t[19], C)

	C, t[19] = madd2(m, 99753532903889795, t[20], C)

	C, t[20] = madd2(m, 1287387037382438644, t[21], C)

	C, t[21] = madd3(m, 7902628261521547647, t[22], C, t[23])

	t[22], t[23] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[15], x[0], t[0])
	C, t[1] = madd2(y[15], x[1], t[1], C)
	C, t[2] = madd2(y[15], x[2], t[2], C)
	C, t[3] = madd2(y[15], x[3], t[3], C)
	C, t[4] = madd2(y[15], x[4], t[4], C)
	C, t[5] = madd2(y[15], x[5], t[5], C)
	C, t[6] = madd2(y[15], x[6], t[6], C)
	C, t[7] = madd2(y[15], x[7], t[7], C)
	C, t[8] = madd2(y[15], x[8], t[8], C)
	C, t[9] = madd2(y[15], x[9], t[9], C)
	C, t[10] = madd2(y[15], x[10], t[10], C)
	C, t[11] = madd2(y[15], x[11], t[11], C)
	C, t[12] = madd2(y[15], x[12], t[12], C)
	C, t[13] = madd2(y[15], x[13], t[13], C)
	C, t[14] = madd2(y[15], x[14], t[14], C)
	C, t[15] = madd2(y[15], x[15], t[15], C)
	C, t[16] = madd2(y[15], x[16], t[16], C)
	C, t[17] = madd2(y[15], x[17], t[17], C)
	C, t[18] = madd2(y[15], x[18], t[18], C)
	C, t[19] = madd2(y[15], x[19], t[19], C)
	C, t[20] = madd2(y[15], x[20], t[20], C)
	C, t[21] = madd2(y[15], x[21], t[21], C)
	C, t[22] = madd2(y[15], x[22], t[22], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17264235192267336435

	// -----------------------------------
	// Second loop
	C = madd0(m, 2977841944516248005, t[0])

	C, t[0] = madd2(m, 5366638698886618632, t[1], C)

	C, t[1] = madd2(m, 16494529459254852566, t[2], C)

	C, t[2] = madd2(m, 10139780597354342739, t[3], C)

	C, t[3] = madd2(m, 10730920707457771221, t[4], C)

	C, t[4] = madd2(m, 4023492846293697750, t[5], C)

	C, t[5] = madd2(m, 14719751318883536030, t[6], C)

	C, t[6] = madd2(m, 14394306952299074261, t[7], C)

	C, t[7] = madd2(m, 420177830206246340, t[8], C)

	C, t[8] = madd2(m, 18292065964812492220, t[9], C)

	C, t[9] = madd2(m, 16529202080823250444, t[10], C)

	C, t[10] = madd2(m, 325117689922568275, t[11], C)

	C, t[11] = madd2(m, 17392915062696095649, t[12], C)

	C, t[12] = madd2(m, 15669173465823707729, t[13], C)

	C, t[13] = madd2(m, 14471887911929389604, t[14], C)

	C, t[14] = madd2(m, 7379345274961995842, t[15], C)

	C, t[15] = madd2(m, 16190214589477806019, t[16], C)

	C, t[16] = madd2(m, 8384885419167223405, t[17], C)

	C, t[17] = madd2(m, 14185603726792627592, t[18], C)

	C, t[18] = madd2(m, 7175340793347195998, t[19], C)

	C, t[19] = madd2(m, 99753532903889795, t[20], C)

	C, t[20] = madd2(m, 1287387037382438644, t[21], C)

	C, t[21] = madd3(m, 7902628261521547647, t[22], C, t[23])

	t[22], t[23] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[16], x[0], t[0])
	C, t[1] = madd2(y[16], x[1], t[1], C)
	C, t[2] = madd2(y[16], x[2], t[2], C)
	C, t[3] = madd2(y[16], x[3], t[3], C)
	C, t[4] = madd2(y[16], x[4], t[4], C)
	C, t[5] = madd2(y[16], x[5], t[5], C)
	C, t[6] = madd2(y[16], x[6], t[6], C)
	C, t[7] = madd2(y[16], x[7], t[7], C)
	C, t[8] = madd2(y[16], x[8], t[8], C)
	C, t[9] = madd2(y[16], x[9], t[9], C)
	C, t[10] = madd2(y[16], x[10], t[10], C)
	C, t[11] = madd2(y[16], x[11], t[11], C)
	C, t[12] = madd2(y[16], x[12], t[12], C)
	C, t[13] = madd2(y[16], x[13], t[13], C)
	C, t[14] = madd2(y[16], x[14], t[14], C)
	C, t[15] = madd2(y[16], x[15], t[15], C)
	C, t[16] = madd2(y[16], x[16], t[16], C)
	C, t[17] = madd2(y[16], x[17], t[17], C)
	C, t[18] = madd2(y[16], x[18], t[18], C)
	C, t[19] = madd2(y[16], x[19], t[19], C)
	C, t[20] = madd2(y[16], x[20], t[20], C)
	C, t[21] = madd2(y[16], x[21], t[21], C)
	C, t[22] = madd2(y[16], x[22], t[22], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17264235192267336435

	// -----------------------------------
	// Second loop
	C = madd0(m, 2977841944516248005, t[0])

	C, t[0] = madd2(m, 5366638698886618632, t[1], C)

	C, t[1] = madd2(m, 16494529459254852566, t[2], C)

	C, t[2] = madd2(m, 10139780597354342739, t[3], C)

	C, t[3] = madd2(m, 10730920707457771221, t[4], C)

	C, t[4] = madd2(m, 4023492846293697750, t[5], C)

	C, t[5] = madd2(m, 14719751318883536030, t[6], C)

	C, t[6] = madd2(m, 14394306952299074261, t[7], C)

	C, t[7] = madd2(m, 420177830206246340, t[8], C)

	C, t[8] = madd2(m, 18292065964812492220, t[9], C)

	C, t[9] = madd2(m, 16529202080823250444, t[10], C)

	C, t[10] = madd2(m, 325117689922568275, t[11], C)

	C, t[11] = madd2(m, 17392915062696095649, t[12], C)

	C, t[12] = madd2(m, 15669173465823707729, t[13], C)

	C, t[13] = madd2(m, 14471887911929389604, t[14], C)

	C, t[14] = madd2(m, 7379345274961995842, t[15], C)

	C, t[15] = madd2(m, 16190214589477806019, t[16], C)

	C, t[16] = madd2(m, 8384885419167223405, t[17], C)

	C, t[17] = madd2(m, 14185603726792627592, t[18], C)

	C, t[18] = madd2(m, 7175340793347195998, t[19], C)

	C, t[19] = madd2(m, 99753532903889795, t[20], C)

	C, t[20] = madd2(m, 1287387037382438644, t[21], C)

	C, t[21] = madd3(m, 7902628261521547647, t[22], C, t[23])

	t[22], t[23] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[17], x[0], t[0])
	C, t[1] = madd2(y[17], x[1], t[1], C)
	C, t[2] = madd2(y[17], x[2], t[2], C)
	C, t[3] = madd2(y[17], x[3], t[3], C)
	C, t[4] = madd2(y[17], x[4], t[4], C)
	C, t[5] = madd2(y[17], x[5], t[5], C)
	C, t[6] = madd2(y[17], x[6], t[6], C)
	C, t[7] = madd2(y[17], x[7], t[7], C)
	C, t[8] = madd2(y[17], x[8], t[8], C)
	C, t[9] = madd2(y[17], x[9], t[9], C)
	C, t[10] = madd2(y[17], x[10], t[10], C)
	C, t[11] = madd2(y[17], x[11], t[11], C)
	C, t[12] = madd2(y[17], x[12], t[12], C)
	C, t[13] = madd2(y[17], x[13], t[13], C)
	C, t[14] = madd2(y[17], x[14], t[14], C)
	C, t[15] = madd2(y[17], x[15], t[15], C)
	C, t[16] = madd2(y[17], x[16], t[16], C)
	C, t[17] = madd2(y[17], x[17], t[17], C)
	C, t[18] = madd2(y[17], x[18], t[18], C)
	C, t[19] = madd2(y[17], x[19], t[19], C)
	C, t[20] = madd2(y[17], x[20], t[20], C)
	C, t[21] = madd2(y[17], x[21], t[21], C)
	C, t[22] = madd2(y[17], x[22], t[22], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17264235192267336435

	// -----------------------------------
	// Second loop
	C = madd0(m, 2977841944516248005, t[0])

	C, t[0] = madd2(m, 5366638698886618632, t[1], C)

	C, t[1] = madd2(m, 16494529459254852566, t[2], C)

	C, t[2] = madd2(m, 10139780597354342739, t[3], C)

	C, t[3] = madd2(m, 10730920707457771221, t[4], C)

	C, t[4] = madd2(m, 4023492846293697750, t[5], C)

	C, t[5] = madd2(m, 14719751318883536030, t[6], C)

	C, t[6] = madd2(m, 14394306952299074261, t[7], C)

	C, t[7] = madd2(m, 420177830206246340, t[8], C)

	C, t[8] = madd2(m, 18292065964812492220, t[9], C)

	C, t[9] = madd2(m, 16529202080823250444, t[10], C)

	C, t[10] = madd2(m, 325117689922568275, t[11], C)

	C, t[11] = madd2(m, 17392915062696095649, t[12], C)

	C, t[12] = madd2(m, 15669173465823707729, t[13], C)

	C, t[13] = madd2(m, 14471887911929389604, t[14], C)

	C, t[14] = madd2(m, 7379345274961995842, t[15], C)

	C, t[15] = madd2(m, 16190214589477806019, t[16], C)

	C, t[16] = madd2(m, 8384885419167223405, t[17], C)

	C, t[17] = madd2(m, 14185603726792627592, t[18], C)

	C, t[18] = madd2(m, 7175340793347195998, t[19], C)

	C, t[19] = madd2(m, 99753532903889795, t[20], C)

	C, t[20] = madd2(m, 1287387037382438644, t[21], C)

	C, t[21] = madd3(m, 7902628261521547647, t[22], C, t[23])

	t[22], t[23] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[18], x[0], t[0])
	C, t[1] = madd2(y[18], x[1], t[1], C)
	C, t[2] = madd2(y[18], x[2], t[2], C)
	C, t[3] = madd2(y[18], x[3], t[3], C)
	C, t[4] = madd2(y[18], x[4], t[4], C)
	C, t[5] = madd2(y[18], x[5], t[5], C)
	C, t[6] = madd2(y[18], x[6], t[6], C)
	C, t[7] = madd2(y[18], x[7], t[7], C)
	C, t[8] = madd2(y[18], x[8], t[8], C)
	C, t[9] = madd2(y[18], x[9], t[9], C)
	C, t[10] = madd2(y[18], x[10], t[10], C)
	C, t[11] = madd2(y[18], x[11], t[11], C)
	C, t[12] = madd2(y[18], x[12], t[12], C)
	C, t[13] = madd2(y[18], x[13], t[13], C)
	C, t[14] = madd2(y[18], x[14], t[14], C)
	C, t[15] = madd2(y[18], x[15], t[15], C)
	C, t[16] = madd2(y[18], x[16], t[16], C)
	C, t[17] = madd2(y[18], x[17], t[17], C)
	C, t[18] = madd2(y[18], x[18], t[18], C)
	C, t[19] = madd2(y[18], x[19], t[19], C)
	C, t[20] = madd2(y[18], x[20], t[20], C)
	C, t[21] = madd2(y[18], x[21], t[21], C)
	C, t[22] = madd2(y[18], x[22], t[22], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17264235192267336435

	// -----------------------------------
	// Second loop
	C = madd0(m, 2977841944516248005, t[0])

	C, t[0] = madd2(m, 5366638698886618632, t[1], C)

	C, t[1] = madd2(m, 16494529459254852566, t[2], C)

	C, t[2] = madd2(m, 10139780597354342739, t[3], C)

	C, t[3] = madd2(m, 10730920707457771221, t[4], C)

	C, t[4] = madd2(m, 4023492846293697750, t[5], C)

	C, t[5] = madd2(m, 14719751318883536030, t[6], C)

	C, t[6] = madd2(m, 14394306952299074261, t[7], C)

	C, t[7] = madd2(m, 420177830206246340, t[8], C)

	C, t[8] = madd2(m, 18292065964812492220, t[9], C)

	C, t[9] = madd2(m, 16529202080823250444, t[10], C)

	C, t[10] = madd2(m, 325117689922568275, t[11], C)

	C, t[11] = madd2(m, 17392915062696095649, t[12], C)

	C, t[12] = madd2(m, 15669173465823707729, t[13], C)

	C, t[13] = madd2(m, 14471887911929389604, t[14], C)

	C, t[14] = madd2(m, 7379345274961995842, t[15], C)

	C, t[15] = madd2(m, 16190214589477806019, t[16], C)

	C, t[16] = madd2(m, 8384885419167223405, t[17], C)

	C, t[17] = madd2(m, 14185603726792627592, t[18], C)

	C, t[18] = madd2(m, 7175340793347195998, t[19], C)

	C, t[19] = madd2(m, 99753532903889795, t[20], C)

	C, t[20] = madd2(m, 1287387037382438644, t[21], C)

	C, t[21] = madd3(m, 7902628261521547647, t[22], C, t[23])

	t[22], t[23] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[19], x[0], t[0])
	C, t[1] = madd2(y[19], x[1], t[1], C)
	C, t[2] = madd2(y[19], x[2], t[2], C)
	C, t[3] = madd2(y[19], x[3], t[3], C)
	C, t[4] = madd2(y[19], x[4], t[4], C)
	C, t[5] = madd2(y[19], x[5], t[5], C)
	C, t[6] = madd2(y[19], x[6], t[6], C)
	C, t[7] = madd2(y[19], x[7], t[7], C)
	C, t[8] = madd2(y[19], x[8], t[8], C)
	C, t[9] = madd2(y[19], x[9], t[9], C)
	C, t[10] = madd2(y[19], x[10], t[10], C)
	C, t[11] = madd2(y[19], x[11], t[11], C)
	C, t[12] = madd2(y[19], x[12], t[12], C)
	C, t[13] = madd2(y[19], x[13], t[13], C)
	C, t[14] = madd2(y[19], x[14], t[14], C)
	C, t[15] = madd2(y[19], x[15], t[15], C)
	C, t[16] = madd2(y[19], x[16], t[16], C)
	C, t[17] = madd2(y[19], x[17], t[17], C)
	C, t[18] = madd2(y[19], x[18], t[18], C)
	C, t[19] = madd2(y[19], x[19], t[19], C)
	C, t[20] = madd2(y[19], x[20], t[20], C)
	C, t[21] = madd2(y[19], x[21], t[21], C)
	C, t[22] = madd2(y[19], x[22], t[22], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17264235192267336435

	// -----------------------------------
	// Second loop
	C = madd0(m, 2977841944516248005, t[0])

	C, t[0] = madd2(m, 5366638698886618632, t[1], C)

	C, t[1] = madd2(m, 16494529459254852566, t[2], C)

	C, t[2] = madd2(m, 10139780597354342739, t[3], C)

	C, t[3] = madd2(m, 10730920707457771221, t[4], C)

	C, t[4] = madd2(m, 4023492846293697750, t[5], C)

	C, t[5] = madd2(m, 14719751318883536030, t[6], C)

	C, t[6] = madd2(m, 14394306952299074261, t[7], C)

	C, t[7] = madd2(m, 420177830206246340, t[8], C)

	C, t[8] = madd2(m, 18292065964812492220, t[9], C)

	C, t[9] = madd2(m, 16529202080823250444, t[10], C)

	C, t[10] = madd2(m, 325117689922568275, t[11], C)

	C, t[11] = madd2(m, 17392915062696095649, t[12], C)

	C, t[12] = madd2(m, 15669173465823707729, t[13], C)

	C, t[13] = madd2(m, 14471887911929389604, t[14], C)

	C, t[14] = madd2(m, 7379345274961995842, t[15], C)

	C, t[15] = madd2(m, 16190214589477806019, t[16], C)

	C, t[16] = madd2(m, 8384885419167223405, t[17], C)

	C, t[17] = madd2(m, 14185603726792627592, t[18], C)

	C, t[18] = madd2(m, 7175340793347195998, t[19], C)

	C, t[19] = madd2(m, 99753532903889795, t[20], C)

	C, t[20] = madd2(m, 1287387037382438644, t[21], C)

	C, t[21] = madd3(m, 7902628261521547647, t[22], C, t[23])

	t[22], t[23] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[20], x[0], t[0])
	C, t[1] = madd2(y[20], x[1], t[1], C)
	C, t[2] = madd2(y[20], x[2], t[2], C)
	C, t[3] = madd2(y[20], x[3], t[3], C)
	C, t[4] = madd2(y[20], x[4], t[4], C)
	C, t[5] = madd2(y[20], x[5], t[5], C)
	C, t[6] = madd2(y[20], x[6], t[6], C)
	C, t[7] = madd2(y[20], x[7], t[7], C)
	C, t[8] = madd2(y[20], x[8], t[8], C)
	C, t[9] = madd2(y[20], x[9], t[9], C)
	C, t[10] = madd2(y[20], x[10], t[10], C)
	C, t[11] = madd2(y[20], x[11], t[11], C)
	C, t[12] = madd2(y[20], x[12], t[12], C)
	C, t[13] = madd2(y[20], x[13], t[13], C)
	C, t[14] = madd2(y[20], x[14], t[14], C)
	C, t[15] = madd2(y[20], x[15], t[15], C)
	C, t[16] = madd2(y[20], x[16], t[16], C)
	C, t[17] = madd2(y[20], x[17], t[17], C)
	C, t[18] = madd2(y[20], x[18], t[18], C)
	C, t[19] = madd2(y[20], x[19], t[19], C)
	C, t[20] = madd2(y[20], x[20], t[20], C)
	C, t[21] = madd2(y[20], x[21], t[21], C)
	C, t[22] = madd2(y[20], x[22], t[22], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17264235192267336435

	// -----------------------------------
	// Second loop
	C = madd0(m, 2977841944516248005, t[0])

	C, t[0] = madd2(m, 5366638698886618632, t[1], C)

	C, t[1] = madd2(m, 16494529459254852566, t[2], C)

	C, t[2] = madd2(m, 10139780597354342739, t[3], C)

	C, t[3] = madd2(m, 10730920707457771221, t[4], C)

	C, t[4] = madd2(m, 4023492846293697750, t[5], C)

	C, t[5] = madd2(m, 14719751318883536030, t[6], C)

	C, t[6] = madd2(m, 14394306952299074261, t[7], C)

	C, t[7] = madd2(m, 420177830206246340, t[8], C)

	C, t[8] = madd2(m, 18292065964812492220, t[9], C)

	C, t[9] = madd2(m, 16529202080823250444, t[10], C)

	C, t[10] = madd2(m, 325117689922568275, t[11], C)

	C, t[11] = madd2(m, 17392915062696095649, t[12], C)

	C, t[12] = madd2(m, 15669173465823707729, t[13], C)

	C, t[13] = madd2(m, 14471887911929389604, t[14], C)

	C, t[14] = madd2(m, 7379345274961995842, t[15], C)

	C, t[15] = madd2(m, 16190214589477806019, t[16], C)

	C, t[16] = madd2(m, 8384885419167223405, t[17], C)

	C, t[17] = madd2(m, 14185603726792627592, t[18], C)

	C, t[18] = madd2(m, 7175340793347195998, t[19], C)

	C, t[19] = madd2(m, 99753532903889795, t[20], C)

	C, t[20] = madd2(m, 1287387037382438644, t[21], C)

	C, t[21] = madd3(m, 7902628261521547647, t[22], C, t[23])

	t[22], t[23] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[21], x[0], t[0])
	C, t[1] = madd2(y[21], x[1], t[1], C)
	C, t[2] = madd2(y[21], x[2], t[2], C)
	C, t[3] = madd2(y[21], x[3], t[3], C)
	C, t[4] = madd2(y[21], x[4], t[4], C)
	C, t[5] = madd2(y[21], x[5], t[5], C)
	C, t[6] = madd2(y[21], x[6], t[6], C)
	C, t[7] = madd2(y[21], x[7], t[7], C)
	C, t[8] = madd2(y[21], x[8], t[8], C)
	C, t[9] = madd2(y[21], x[9], t[9], C)
	C, t[10] = madd2(y[21], x[10], t[10], C)
	C, t[11] = madd2(y[21], x[11], t[11], C)
	C, t[12] = madd2(y[21], x[12], t[12], C)
	C, t[13] = madd2(y[21], x[13], t[13], C)
	C, t[14] = madd2(y[21], x[14], t[14], C)
	C, t[15] = madd2(y[21], x[15], t[15], C)
	C, t[16] = madd2(y[21], x[16], t[16], C)
	C, t[17] = madd2(y[21], x[17], t[17], C)
	C, t[18] = madd2(y[21], x[18], t[18], C)
	C, t[19] = madd2(y[21], x[19], t[19], C)
	C, t[20] = madd2(y[21], x[20], t[20], C)
	C, t[21] = madd2(y[21], x[21], t[21], C)
	C, t[22] = madd2(y[21], x[22], t[22], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17264235192267336435

	// -----------------------------------
	// Second loop
	C = madd0(m, 2977841944516248005, t[0])

	C, t[0] = madd2(m, 5366638698886618632, t[1], C)

	C, t[1] = madd2(m, 16494529459254852566, t[2], C)

	C, t[2] = madd2(m, 10139780597354342739, t[3], C)

	C, t[3] = madd2(m, 10730920707457771221, t[4], C)

	C, t[4] = madd2(m, 4023492846293697750, t[5], C)

	C, t[5] = madd2(m, 14719751318883536030, t[6], C)

	C, t[6] = madd2(m, 14394306952299074261, t[7], C)

	C, t[7] = madd2(m, 420177830206246340, t[8], C)

	C, t[8] = madd2(m, 18292065964812492220, t[9], C)

	C, t[9] = madd2(m, 16529202080823250444, t[10], C)

	C, t[10] = madd2(m, 325117689922568275, t[11], C)

	C, t[11] = madd2(m, 17392915062696095649, t[12], C)

	C, t[12] = madd2(m, 15669173465823707729, t[13], C)

	C, t[13] = madd2(m, 14471887911929389604, t[14], C)

	C, t[14] = madd2(m, 7379345274961995842, t[15], C)

	C, t[15] = madd2(m, 16190214589477806019, t[16], C)

	C, t[16] = madd2(m, 8384885419167223405, t[17], C)

	C, t[17] = madd2(m, 14185603726792627592, t[18], C)

	C, t[18] = madd2(m, 7175340793347195998, t[19], C)

	C, t[19] = madd2(m, 99753532903889795, t[20], C)

	C, t[20] = madd2(m, 1287387037382438644, t[21], C)

	C, t[21] = madd3(m, 7902628261521547647, t[22], C, t[23])

	t[22], t[23] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[22], x[0], t[0])
	C, t[1] = madd2(y[22], x[1], t[1], C)
	C, t[2] = madd2(y[22], x[2], t[2], C)
	C, t[3] = madd2(y[22], x[3], t[3], C)
	C, t[4] = madd2(y[22], x[4], t[4], C)
	C, t[5] = madd2(y[22], x[5], t[5], C)
	C, t[6] = madd2(y[22], x[6], t[6], C)
	C, t[7] = madd2(y[22], x[7], t[7], C)
	C, t[8] = madd2(y[22], x[8], t[8], C)
	C, t[9] = madd2(y[22], x[9], t[9], C)
	C, t[10] = madd2(y[22], x[10], t[10], C)
	C, t[11] = madd2(y[22], x[11], t[11], C)
	C, t[12] = madd2(y[22], x[12], t[12], C)
	C, t[13] = madd2(y[22], x[13], t[13], C)
	C, t[14] = madd2(y[22], x[14], t[14], C)
	C, t[15] = madd2(y[22], x[15], t[15], C)
	C, t[16] = madd2(y[22], x[16], t[16], C)
	C, t[17] = madd2(y[22], x[17], t[17], C)
	C, t[18] = madd2(y[22], x[18], t[18], C)
	C, t[19] = madd2(y[22], x[19], t[19], C)
	C, t[20] = madd2(y[22], x[20], t[20], C)
	C, t[21] = madd2(y[22], x[21], t[21], C)
	C, t[22] = madd2(y[22], x[22], t[22], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17264235192267336435

	// -----------------------------------
	// Second loop
	C = madd0(m, 2977841944516248005, t[0])

	C, t[0] = madd2(m, 5366638698886618632, t[1], C)

	C, t[1] = madd2(m, 16494529459254852566, t[2], C)

	C, t[2] = madd2(m, 10139780597354342739, t[3], C)

	C, t[3] = madd2(m, 10730920707457771221, t[4], C)

	C, t[4] = madd2(m, 4023492846293697750, t[5], C)

	C, t[5] = madd2(m, 14719751318883536030, t[6], C)

	C, t[6] = madd2(m, 14394306952299074261, t[7], C)

	C, t[7] = madd2(m, 420177830206246340, t[8], C)

	C, t[8] = madd2(m, 18292065964812492220, t[9], C)

	C, t[9] = madd2(m, 16529202080823250444, t[10], C)

	C, t[10] = madd2(m, 325117689922568275, t[11], C)

	C, t[11] = madd2(m, 17392915062696095649, t[12], C)

	C, t[12] = madd2(m, 15669173465823707729, t[13], C)

	C, t[13] = madd2(m, 14471887911929389604, t[14], C)

	C, t[14] = madd2(m, 7379345274961995842, t[15], C)

	C, t[15] = madd2(m, 16190214589477806019, t[16], C)

	C, t[16] = madd2(m, 8384885419167223405, t[17], C)

	C, t[17] = madd2(m, 14185603726792627592, t[18], C)

	C, t[18] = madd2(m, 7175340793347195998, t[19], C)

	C, t[19] = madd2(m, 99753532903889795, t[20], C)

	C, t[20] = madd2(m, 1287387037382438644, t[21], C)

	C, t[21] = madd3(m, 7902628261521547647, t[22], C, t[23])

	t[22], t[23] = bits.Add64(D, C, 0)

	if t[23] != 0 {
		// we need to reduce, we have a result on 24 words
		var b uint64
		z[0], b = bits.Sub64(t[0], 2977841944516248005, 0)
		z[1], b = bits.Sub64(t[1], 5366638698886618632, b)
		z[2], b = bits.Sub64(t[2], 16494529459254852566, b)
		z[3], b = bits.Sub64(t[3], 10139780597354342739, b)
		z[4], b = bits.Sub64(t[4], 10730920707457771221, b)
		z[5], b = bits.Sub64(t[5], 4023492846293697750, b)
		z[6], b = bits.Sub64(t[6], 14719751318883536030, b)
		z[7], b = bits.Sub64(t[7], 14394306952299074261, b)
		z[8], b = bits.Sub64(t[8], 420177830206246340, b)
		z[9], b = bits.Sub64(t[9], 18292065964812492220, b)
		z[10], b = bits.Sub64(t[10], 16529202080823250444, b)
		z[11], b = bits.Sub64(t[11], 325117689922568275, b)
		z[12], b = bits.Sub64(t[12], 17392915062696095649, b)
		z[13], b = bits.Sub64(t[13], 15669173465823707729, b)
		z[14], b = bits.Sub64(t[14], 14471887911929389604, b)
		z[15], b = bits.Sub64(t[15], 7379345274961995842, b)
		z[16], b = bits.Sub64(t[16], 16190214589477806019, b)
		z[17], b = bits.Sub64(t[17], 8384885419167223405, b)
		z[18], b = bits.Sub64(t[18], 14185603726792627592, b)
		z[19], b = bits.Sub64(t[19], 7175340793347195998, b)
		z[20], b = bits.Sub64(t[20], 99753532903889795, b)
		z[21], b = bits.Sub64(t[21], 1287387037382438644, b)
		z[22], _ = bits.Sub64(t[22], 7902628261521547647, b)
		return z
	}

	// copy t into z
	z[0] = t[0]
	z[1] = t[1]
	z[2] = t[2]
	z[3] = t[3]
	z[4] = t[4]
	z[5] = t[5]
	z[6] = t[6]
	z[7] = t[7]
	z[8] = t[8]
	z[9] = t[9]
	z[10] = t[10]
	z[11] = t[11]
	z[12] = t[12]
	z[13] = t[13]
	z[14] = t[14]
	z[15] = t[15]
	z[16] = t[16]
	z[17] = t[17]
	z[18] = t[18]
	z[19] = t[19]
	z[20] = t[20]
	z[21] = t[21]
	z[22] = t[22]

	// if z > q --> z -= q
	if !(z[22] < 7902628261521547647 || (z[22] == 7902628261521547647 && (z[21] < 1287387037382438644 || (z[21] == 1287387037382438644 && (z[20] < 99753532903889795 || (z[20] == 99753532903889795 && (z[19] < 7175340793347195998 || (z[19] == 7175340793347195998 && (z[18] < 14185603726792627592 || (z[18] == 14185603726792627592 && (z[17] < 8384885419167223405 || (z[17] == 8384885419167223405 && (z[16] < 16190214589477806019 || (z[16] == 16190214589477806019 && (z[15] < 7379345274961995842 || (z[15] == 7379345274961995842 && (z[14] < 14471887911929389604 || (z[14] == 14471887911929389604 && (z[13] < 15669173465823707729 || (z[13] == 15669173465823707729 && (z[12] < 17392915062696095649 || (z[12] == 17392915062696095649 && (z[11] < 325117689922568275 || (z[11] == 325117689922568275 && (z[10] < 16529202080823250444 || (z[10] == 16529202080823250444 && (z[9] < 18292065964812492220 || (z[9] == 18292065964812492220 && (z[8] < 420177830206246340 || (z[8] == 420177830206246340 && (z[7] < 14394306952299074261 || (z[7] == 14394306952299074261 && (z[6] < 14719751318883536030 || (z[6] == 14719751318883536030 && (z[5] < 4023492846293697750 || (z[5] == 4023492846293697750 && (z[4] < 10730920707457771221 || (z[4] == 10730920707457771221 && (z[3] < 10139780597354342739 || (z[3] == 10139780597354342739 && (z[2] < 16494529459254852566 || (z[2] == 16494529459254852566 && (z[1] < 5366638698886618632 || (z[1] == 5366638698886618632 && (z[0] < 2977841944516248005))))))))))))))))))))))))))))))))))))))))))))) {
		var b uint64
		z[0], b = bits.Sub64(z[0], 2977841944516248005, 0)
		z[1], b = bits.Sub64(z[1], 5366638698886618632, b)
		z[2], b = bits.Sub64(z[2], 16494529459254852566, b)
		z[3], b = bits.Sub64(z[3], 10139780597354342739, b)
		z[4], b = bits.Sub64(z[4], 10730920707457771221, b)
		z[5], b = bits.Sub64(z[5], 4023492846293697750, b)
		z[6], b = bits.Sub64(z[6], 14719751318883536030, b)
		z[7], b = bits.Sub64(z[7], 14394306952299074261, b)
		z[8], b = bits.Sub64(z[8], 420177830206246340, b)
		z[9], b = bits.Sub64(z[9], 18292065964812492220, b)
		z[10], b = bits.Sub64(z[10], 16529202080823250444, b)
		z[11], b = bits.Sub64(z[11], 325117689922568275, b)
		z[12], b = bits.Sub64(z[12], 17392915062696095649, b)
		z[13], b = bits.Sub64(z[13], 15669173465823707729, b)
		z[14], b = bits.Sub64(z[14], 14471887911929389604, b)
		z[15], b = bits.Sub64(z[15], 7379345274961995842, b)
		z[16], b = bits.Sub64(z[16], 16190214589477806019, b)
		z[17], b = bits.Sub64(z[17], 8384885419167223405, b)
		z[18], b = bits.Sub64(z[18], 14185603726792627592, b)
		z[19], b = bits.Sub64(z[19], 7175340793347195998, b)
		z[20], b = bits.Sub64(z[20], 99753532903889795, b)
		z[21], b = bits.Sub64(z[21], 1287387037382438644, b)
		z[22], _ = bits.Sub64(z[22], 7902628261521547647, b)
	}
	return z
}

// MulAssign z = z * x mod q
func (z *Element23) MulAssign(x *Element23) *Element23 {

	var t [24]uint64
	var D uint64
	var m, C uint64
	// -----------------------------------
	// First loop

	C, t[0] = bits.Mul64(x[0], z[0])
	C, t[1] = madd1(x[0], z[1], C)
	C, t[2] = madd1(x[0], z[2], C)
	C, t[3] = madd1(x[0], z[3], C)
	C, t[4] = madd1(x[0], z[4], C)
	C, t[5] = madd1(x[0], z[5], C)
	C, t[6] = madd1(x[0], z[6], C)
	C, t[7] = madd1(x[0], z[7], C)
	C, t[8] = madd1(x[0], z[8], C)
	C, t[9] = madd1(x[0], z[9], C)
	C, t[10] = madd1(x[0], z[10], C)
	C, t[11] = madd1(x[0], z[11], C)
	C, t[12] = madd1(x[0], z[12], C)
	C, t[13] = madd1(x[0], z[13], C)
	C, t[14] = madd1(x[0], z[14], C)
	C, t[15] = madd1(x[0], z[15], C)
	C, t[16] = madd1(x[0], z[16], C)
	C, t[17] = madd1(x[0], z[17], C)
	C, t[18] = madd1(x[0], z[18], C)
	C, t[19] = madd1(x[0], z[19], C)
	C, t[20] = madd1(x[0], z[20], C)
	C, t[21] = madd1(x[0], z[21], C)
	C, t[22] = madd1(x[0], z[22], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17264235192267336435

	// -----------------------------------
	// Second loop
	C = madd0(m, 2977841944516248005, t[0])

	C, t[0] = madd2(m, 5366638698886618632, t[1], C)

	C, t[1] = madd2(m, 16494529459254852566, t[2], C)

	C, t[2] = madd2(m, 10139780597354342739, t[3], C)

	C, t[3] = madd2(m, 10730920707457771221, t[4], C)

	C, t[4] = madd2(m, 4023492846293697750, t[5], C)

	C, t[5] = madd2(m, 14719751318883536030, t[6], C)

	C, t[6] = madd2(m, 14394306952299074261, t[7], C)

	C, t[7] = madd2(m, 420177830206246340, t[8], C)

	C, t[8] = madd2(m, 18292065964812492220, t[9], C)

	C, t[9] = madd2(m, 16529202080823250444, t[10], C)

	C, t[10] = madd2(m, 325117689922568275, t[11], C)

	C, t[11] = madd2(m, 17392915062696095649, t[12], C)

	C, t[12] = madd2(m, 15669173465823707729, t[13], C)

	C, t[13] = madd2(m, 14471887911929389604, t[14], C)

	C, t[14] = madd2(m, 7379345274961995842, t[15], C)

	C, t[15] = madd2(m, 16190214589477806019, t[16], C)

	C, t[16] = madd2(m, 8384885419167223405, t[17], C)

	C, t[17] = madd2(m, 14185603726792627592, t[18], C)

	C, t[18] = madd2(m, 7175340793347195998, t[19], C)

	C, t[19] = madd2(m, 99753532903889795, t[20], C)

	C, t[20] = madd2(m, 1287387037382438644, t[21], C)

	C, t[21] = madd3(m, 7902628261521547647, t[22], C, t[23])

	t[22], t[23] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[1], z[0], t[0])
	C, t[1] = madd2(x[1], z[1], t[1], C)
	C, t[2] = madd2(x[1], z[2], t[2], C)
	C, t[3] = madd2(x[1], z[3], t[3], C)
	C, t[4] = madd2(x[1], z[4], t[4], C)
	C, t[5] = madd2(x[1], z[5], t[5], C)
	C, t[6] = madd2(x[1], z[6], t[6], C)
	C, t[7] = madd2(x[1], z[7], t[7], C)
	C, t[8] = madd2(x[1], z[8], t[8], C)
	C, t[9] = madd2(x[1], z[9], t[9], C)
	C, t[10] = madd2(x[1], z[10], t[10], C)
	C, t[11] = madd2(x[1], z[11], t[11], C)
	C, t[12] = madd2(x[1], z[12], t[12], C)
	C, t[13] = madd2(x[1], z[13], t[13], C)
	C, t[14] = madd2(x[1], z[14], t[14], C)
	C, t[15] = madd2(x[1], z[15], t[15], C)
	C, t[16] = madd2(x[1], z[16], t[16], C)
	C, t[17] = madd2(x[1], z[17], t[17], C)
	C, t[18] = madd2(x[1], z[18], t[18], C)
	C, t[19] = madd2(x[1], z[19], t[19], C)
	C, t[20] = madd2(x[1], z[20], t[20], C)
	C, t[21] = madd2(x[1], z[21], t[21], C)
	C, t[22] = madd2(x[1], z[22], t[22], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17264235192267336435

	// -----------------------------------
	// Second loop
	C = madd0(m, 2977841944516248005, t[0])

	C, t[0] = madd2(m, 5366638698886618632, t[1], C)

	C, t[1] = madd2(m, 16494529459254852566, t[2], C)

	C, t[2] = madd2(m, 10139780597354342739, t[3], C)

	C, t[3] = madd2(m, 10730920707457771221, t[4], C)

	C, t[4] = madd2(m, 4023492846293697750, t[5], C)

	C, t[5] = madd2(m, 14719751318883536030, t[6], C)

	C, t[6] = madd2(m, 14394306952299074261, t[7], C)

	C, t[7] = madd2(m, 420177830206246340, t[8], C)

	C, t[8] = madd2(m, 18292065964812492220, t[9], C)

	C, t[9] = madd2(m, 16529202080823250444, t[10], C)

	C, t[10] = madd2(m, 325117689922568275, t[11], C)

	C, t[11] = madd2(m, 17392915062696095649, t[12], C)

	C, t[12] = madd2(m, 15669173465823707729, t[13], C)

	C, t[13] = madd2(m, 14471887911929389604, t[14], C)

	C, t[14] = madd2(m, 7379345274961995842, t[15], C)

	C, t[15] = madd2(m, 16190214589477806019, t[16], C)

	C, t[16] = madd2(m, 8384885419167223405, t[17], C)

	C, t[17] = madd2(m, 14185603726792627592, t[18], C)

	C, t[18] = madd2(m, 7175340793347195998, t[19], C)

	C, t[19] = madd2(m, 99753532903889795, t[20], C)

	C, t[20] = madd2(m, 1287387037382438644, t[21], C)

	C, t[21] = madd3(m, 7902628261521547647, t[22], C, t[23])

	t[22], t[23] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[2], z[0], t[0])
	C, t[1] = madd2(x[2], z[1], t[1], C)
	C, t[2] = madd2(x[2], z[2], t[2], C)
	C, t[3] = madd2(x[2], z[3], t[3], C)
	C, t[4] = madd2(x[2], z[4], t[4], C)
	C, t[5] = madd2(x[2], z[5], t[5], C)
	C, t[6] = madd2(x[2], z[6], t[6], C)
	C, t[7] = madd2(x[2], z[7], t[7], C)
	C, t[8] = madd2(x[2], z[8], t[8], C)
	C, t[9] = madd2(x[2], z[9], t[9], C)
	C, t[10] = madd2(x[2], z[10], t[10], C)
	C, t[11] = madd2(x[2], z[11], t[11], C)
	C, t[12] = madd2(x[2], z[12], t[12], C)
	C, t[13] = madd2(x[2], z[13], t[13], C)
	C, t[14] = madd2(x[2], z[14], t[14], C)
	C, t[15] = madd2(x[2], z[15], t[15], C)
	C, t[16] = madd2(x[2], z[16], t[16], C)
	C, t[17] = madd2(x[2], z[17], t[17], C)
	C, t[18] = madd2(x[2], z[18], t[18], C)
	C, t[19] = madd2(x[2], z[19], t[19], C)
	C, t[20] = madd2(x[2], z[20], t[20], C)
	C, t[21] = madd2(x[2], z[21], t[21], C)
	C, t[22] = madd2(x[2], z[22], t[22], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17264235192267336435

	// -----------------------------------
	// Second loop
	C = madd0(m, 2977841944516248005, t[0])

	C, t[0] = madd2(m, 5366638698886618632, t[1], C)

	C, t[1] = madd2(m, 16494529459254852566, t[2], C)

	C, t[2] = madd2(m, 10139780597354342739, t[3], C)

	C, t[3] = madd2(m, 10730920707457771221, t[4], C)

	C, t[4] = madd2(m, 4023492846293697750, t[5], C)

	C, t[5] = madd2(m, 14719751318883536030, t[6], C)

	C, t[6] = madd2(m, 14394306952299074261, t[7], C)

	C, t[7] = madd2(m, 420177830206246340, t[8], C)

	C, t[8] = madd2(m, 18292065964812492220, t[9], C)

	C, t[9] = madd2(m, 16529202080823250444, t[10], C)

	C, t[10] = madd2(m, 325117689922568275, t[11], C)

	C, t[11] = madd2(m, 17392915062696095649, t[12], C)

	C, t[12] = madd2(m, 15669173465823707729, t[13], C)

	C, t[13] = madd2(m, 14471887911929389604, t[14], C)

	C, t[14] = madd2(m, 7379345274961995842, t[15], C)

	C, t[15] = madd2(m, 16190214589477806019, t[16], C)

	C, t[16] = madd2(m, 8384885419167223405, t[17], C)

	C, t[17] = madd2(m, 14185603726792627592, t[18], C)

	C, t[18] = madd2(m, 7175340793347195998, t[19], C)

	C, t[19] = madd2(m, 99753532903889795, t[20], C)

	C, t[20] = madd2(m, 1287387037382438644, t[21], C)

	C, t[21] = madd3(m, 7902628261521547647, t[22], C, t[23])

	t[22], t[23] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[3], z[0], t[0])
	C, t[1] = madd2(x[3], z[1], t[1], C)
	C, t[2] = madd2(x[3], z[2], t[2], C)
	C, t[3] = madd2(x[3], z[3], t[3], C)
	C, t[4] = madd2(x[3], z[4], t[4], C)
	C, t[5] = madd2(x[3], z[5], t[5], C)
	C, t[6] = madd2(x[3], z[6], t[6], C)
	C, t[7] = madd2(x[3], z[7], t[7], C)
	C, t[8] = madd2(x[3], z[8], t[8], C)
	C, t[9] = madd2(x[3], z[9], t[9], C)
	C, t[10] = madd2(x[3], z[10], t[10], C)
	C, t[11] = madd2(x[3], z[11], t[11], C)
	C, t[12] = madd2(x[3], z[12], t[12], C)
	C, t[13] = madd2(x[3], z[13], t[13], C)
	C, t[14] = madd2(x[3], z[14], t[14], C)
	C, t[15] = madd2(x[3], z[15], t[15], C)
	C, t[16] = madd2(x[3], z[16], t[16], C)
	C, t[17] = madd2(x[3], z[17], t[17], C)
	C, t[18] = madd2(x[3], z[18], t[18], C)
	C, t[19] = madd2(x[3], z[19], t[19], C)
	C, t[20] = madd2(x[3], z[20], t[20], C)
	C, t[21] = madd2(x[3], z[21], t[21], C)
	C, t[22] = madd2(x[3], z[22], t[22], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17264235192267336435

	// -----------------------------------
	// Second loop
	C = madd0(m, 2977841944516248005, t[0])

	C, t[0] = madd2(m, 5366638698886618632, t[1], C)

	C, t[1] = madd2(m, 16494529459254852566, t[2], C)

	C, t[2] = madd2(m, 10139780597354342739, t[3], C)

	C, t[3] = madd2(m, 10730920707457771221, t[4], C)

	C, t[4] = madd2(m, 4023492846293697750, t[5], C)

	C, t[5] = madd2(m, 14719751318883536030, t[6], C)

	C, t[6] = madd2(m, 14394306952299074261, t[7], C)

	C, t[7] = madd2(m, 420177830206246340, t[8], C)

	C, t[8] = madd2(m, 18292065964812492220, t[9], C)

	C, t[9] = madd2(m, 16529202080823250444, t[10], C)

	C, t[10] = madd2(m, 325117689922568275, t[11], C)

	C, t[11] = madd2(m, 17392915062696095649, t[12], C)

	C, t[12] = madd2(m, 15669173465823707729, t[13], C)

	C, t[13] = madd2(m, 14471887911929389604, t[14], C)

	C, t[14] = madd2(m, 7379345274961995842, t[15], C)

	C, t[15] = madd2(m, 16190214589477806019, t[16], C)

	C, t[16] = madd2(m, 8384885419167223405, t[17], C)

	C, t[17] = madd2(m, 14185603726792627592, t[18], C)

	C, t[18] = madd2(m, 7175340793347195998, t[19], C)

	C, t[19] = madd2(m, 99753532903889795, t[20], C)

	C, t[20] = madd2(m, 1287387037382438644, t[21], C)

	C, t[21] = madd3(m, 7902628261521547647, t[22], C, t[23])

	t[22], t[23] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[4], z[0], t[0])
	C, t[1] = madd2(x[4], z[1], t[1], C)
	C, t[2] = madd2(x[4], z[2], t[2], C)
	C, t[3] = madd2(x[4], z[3], t[3], C)
	C, t[4] = madd2(x[4], z[4], t[4], C)
	C, t[5] = madd2(x[4], z[5], t[5], C)
	C, t[6] = madd2(x[4], z[6], t[6], C)
	C, t[7] = madd2(x[4], z[7], t[7], C)
	C, t[8] = madd2(x[4], z[8], t[8], C)
	C, t[9] = madd2(x[4], z[9], t[9], C)
	C, t[10] = madd2(x[4], z[10], t[10], C)
	C, t[11] = madd2(x[4], z[11], t[11], C)
	C, t[12] = madd2(x[4], z[12], t[12], C)
	C, t[13] = madd2(x[4], z[13], t[13], C)
	C, t[14] = madd2(x[4], z[14], t[14], C)
	C, t[15] = madd2(x[4], z[15], t[15], C)
	C, t[16] = madd2(x[4], z[16], t[16], C)
	C, t[17] = madd2(x[4], z[17], t[17], C)
	C, t[18] = madd2(x[4], z[18], t[18], C)
	C, t[19] = madd2(x[4], z[19], t[19], C)
	C, t[20] = madd2(x[4], z[20], t[20], C)
	C, t[21] = madd2(x[4], z[21], t[21], C)
	C, t[22] = madd2(x[4], z[22], t[22], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17264235192267336435

	// -----------------------------------
	// Second loop
	C = madd0(m, 2977841944516248005, t[0])

	C, t[0] = madd2(m, 5366638698886618632, t[1], C)

	C, t[1] = madd2(m, 16494529459254852566, t[2], C)

	C, t[2] = madd2(m, 10139780597354342739, t[3], C)

	C, t[3] = madd2(m, 10730920707457771221, t[4], C)

	C, t[4] = madd2(m, 4023492846293697750, t[5], C)

	C, t[5] = madd2(m, 14719751318883536030, t[6], C)

	C, t[6] = madd2(m, 14394306952299074261, t[7], C)

	C, t[7] = madd2(m, 420177830206246340, t[8], C)

	C, t[8] = madd2(m, 18292065964812492220, t[9], C)

	C, t[9] = madd2(m, 16529202080823250444, t[10], C)

	C, t[10] = madd2(m, 325117689922568275, t[11], C)

	C, t[11] = madd2(m, 17392915062696095649, t[12], C)

	C, t[12] = madd2(m, 15669173465823707729, t[13], C)

	C, t[13] = madd2(m, 14471887911929389604, t[14], C)

	C, t[14] = madd2(m, 7379345274961995842, t[15], C)

	C, t[15] = madd2(m, 16190214589477806019, t[16], C)

	C, t[16] = madd2(m, 8384885419167223405, t[17], C)

	C, t[17] = madd2(m, 14185603726792627592, t[18], C)

	C, t[18] = madd2(m, 7175340793347195998, t[19], C)

	C, t[19] = madd2(m, 99753532903889795, t[20], C)

	C, t[20] = madd2(m, 1287387037382438644, t[21], C)

	C, t[21] = madd3(m, 7902628261521547647, t[22], C, t[23])

	t[22], t[23] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[5], z[0], t[0])
	C, t[1] = madd2(x[5], z[1], t[1], C)
	C, t[2] = madd2(x[5], z[2], t[2], C)
	C, t[3] = madd2(x[5], z[3], t[3], C)
	C, t[4] = madd2(x[5], z[4], t[4], C)
	C, t[5] = madd2(x[5], z[5], t[5], C)
	C, t[6] = madd2(x[5], z[6], t[6], C)
	C, t[7] = madd2(x[5], z[7], t[7], C)
	C, t[8] = madd2(x[5], z[8], t[8], C)
	C, t[9] = madd2(x[5], z[9], t[9], C)
	C, t[10] = madd2(x[5], z[10], t[10], C)
	C, t[11] = madd2(x[5], z[11], t[11], C)
	C, t[12] = madd2(x[5], z[12], t[12], C)
	C, t[13] = madd2(x[5], z[13], t[13], C)
	C, t[14] = madd2(x[5], z[14], t[14], C)
	C, t[15] = madd2(x[5], z[15], t[15], C)
	C, t[16] = madd2(x[5], z[16], t[16], C)
	C, t[17] = madd2(x[5], z[17], t[17], C)
	C, t[18] = madd2(x[5], z[18], t[18], C)
	C, t[19] = madd2(x[5], z[19], t[19], C)
	C, t[20] = madd2(x[5], z[20], t[20], C)
	C, t[21] = madd2(x[5], z[21], t[21], C)
	C, t[22] = madd2(x[5], z[22], t[22], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17264235192267336435

	// -----------------------------------
	// Second loop
	C = madd0(m, 2977841944516248005, t[0])

	C, t[0] = madd2(m, 5366638698886618632, t[1], C)

	C, t[1] = madd2(m, 16494529459254852566, t[2], C)

	C, t[2] = madd2(m, 10139780597354342739, t[3], C)

	C, t[3] = madd2(m, 10730920707457771221, t[4], C)

	C, t[4] = madd2(m, 4023492846293697750, t[5], C)

	C, t[5] = madd2(m, 14719751318883536030, t[6], C)

	C, t[6] = madd2(m, 14394306952299074261, t[7], C)

	C, t[7] = madd2(m, 420177830206246340, t[8], C)

	C, t[8] = madd2(m, 18292065964812492220, t[9], C)

	C, t[9] = madd2(m, 16529202080823250444, t[10], C)

	C, t[10] = madd2(m, 325117689922568275, t[11], C)

	C, t[11] = madd2(m, 17392915062696095649, t[12], C)

	C, t[12] = madd2(m, 15669173465823707729, t[13], C)

	C, t[13] = madd2(m, 14471887911929389604, t[14], C)

	C, t[14] = madd2(m, 7379345274961995842, t[15], C)

	C, t[15] = madd2(m, 16190214589477806019, t[16], C)

	C, t[16] = madd2(m, 8384885419167223405, t[17], C)

	C, t[17] = madd2(m, 14185603726792627592, t[18], C)

	C, t[18] = madd2(m, 7175340793347195998, t[19], C)

	C, t[19] = madd2(m, 99753532903889795, t[20], C)

	C, t[20] = madd2(m, 1287387037382438644, t[21], C)

	C, t[21] = madd3(m, 7902628261521547647, t[22], C, t[23])

	t[22], t[23] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[6], z[0], t[0])
	C, t[1] = madd2(x[6], z[1], t[1], C)
	C, t[2] = madd2(x[6], z[2], t[2], C)
	C, t[3] = madd2(x[6], z[3], t[3], C)
	C, t[4] = madd2(x[6], z[4], t[4], C)
	C, t[5] = madd2(x[6], z[5], t[5], C)
	C, t[6] = madd2(x[6], z[6], t[6], C)
	C, t[7] = madd2(x[6], z[7], t[7], C)
	C, t[8] = madd2(x[6], z[8], t[8], C)
	C, t[9] = madd2(x[6], z[9], t[9], C)
	C, t[10] = madd2(x[6], z[10], t[10], C)
	C, t[11] = madd2(x[6], z[11], t[11], C)
	C, t[12] = madd2(x[6], z[12], t[12], C)
	C, t[13] = madd2(x[6], z[13], t[13], C)
	C, t[14] = madd2(x[6], z[14], t[14], C)
	C, t[15] = madd2(x[6], z[15], t[15], C)
	C, t[16] = madd2(x[6], z[16], t[16], C)
	C, t[17] = madd2(x[6], z[17], t[17], C)
	C, t[18] = madd2(x[6], z[18], t[18], C)
	C, t[19] = madd2(x[6], z[19], t[19], C)
	C, t[20] = madd2(x[6], z[20], t[20], C)
	C, t[21] = madd2(x[6], z[21], t[21], C)
	C, t[22] = madd2(x[6], z[22], t[22], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17264235192267336435

	// -----------------------------------
	// Second loop
	C = madd0(m, 2977841944516248005, t[0])

	C, t[0] = madd2(m, 5366638698886618632, t[1], C)

	C, t[1] = madd2(m, 16494529459254852566, t[2], C)

	C, t[2] = madd2(m, 10139780597354342739, t[3], C)

	C, t[3] = madd2(m, 10730920707457771221, t[4], C)

	C, t[4] = madd2(m, 4023492846293697750, t[5], C)

	C, t[5] = madd2(m, 14719751318883536030, t[6], C)

	C, t[6] = madd2(m, 14394306952299074261, t[7], C)

	C, t[7] = madd2(m, 420177830206246340, t[8], C)

	C, t[8] = madd2(m, 18292065964812492220, t[9], C)

	C, t[9] = madd2(m, 16529202080823250444, t[10], C)

	C, t[10] = madd2(m, 325117689922568275, t[11], C)

	C, t[11] = madd2(m, 17392915062696095649, t[12], C)

	C, t[12] = madd2(m, 15669173465823707729, t[13], C)

	C, t[13] = madd2(m, 14471887911929389604, t[14], C)

	C, t[14] = madd2(m, 7379345274961995842, t[15], C)

	C, t[15] = madd2(m, 16190214589477806019, t[16], C)

	C, t[16] = madd2(m, 8384885419167223405, t[17], C)

	C, t[17] = madd2(m, 14185603726792627592, t[18], C)

	C, t[18] = madd2(m, 7175340793347195998, t[19], C)

	C, t[19] = madd2(m, 99753532903889795, t[20], C)

	C, t[20] = madd2(m, 1287387037382438644, t[21], C)

	C, t[21] = madd3(m, 7902628261521547647, t[22], C, t[23])

	t[22], t[23] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[7], z[0], t[0])
	C, t[1] = madd2(x[7], z[1], t[1], C)
	C, t[2] = madd2(x[7], z[2], t[2], C)
	C, t[3] = madd2(x[7], z[3], t[3], C)
	C, t[4] = madd2(x[7], z[4], t[4], C)
	C, t[5] = madd2(x[7], z[5], t[5], C)
	C, t[6] = madd2(x[7], z[6], t[6], C)
	C, t[7] = madd2(x[7], z[7], t[7], C)
	C, t[8] = madd2(x[7], z[8], t[8], C)
	C, t[9] = madd2(x[7], z[9], t[9], C)
	C, t[10] = madd2(x[7], z[10], t[10], C)
	C, t[11] = madd2(x[7], z[11], t[11], C)
	C, t[12] = madd2(x[7], z[12], t[12], C)
	C, t[13] = madd2(x[7], z[13], t[13], C)
	C, t[14] = madd2(x[7], z[14], t[14], C)
	C, t[15] = madd2(x[7], z[15], t[15], C)
	C, t[16] = madd2(x[7], z[16], t[16], C)
	C, t[17] = madd2(x[7], z[17], t[17], C)
	C, t[18] = madd2(x[7], z[18], t[18], C)
	C, t[19] = madd2(x[7], z[19], t[19], C)
	C, t[20] = madd2(x[7], z[20], t[20], C)
	C, t[21] = madd2(x[7], z[21], t[21], C)
	C, t[22] = madd2(x[7], z[22], t[22], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17264235192267336435

	// -----------------------------------
	// Second loop
	C = madd0(m, 2977841944516248005, t[0])

	C, t[0] = madd2(m, 5366638698886618632, t[1], C)

	C, t[1] = madd2(m, 16494529459254852566, t[2], C)

	C, t[2] = madd2(m, 10139780597354342739, t[3], C)

	C, t[3] = madd2(m, 10730920707457771221, t[4], C)

	C, t[4] = madd2(m, 4023492846293697750, t[5], C)

	C, t[5] = madd2(m, 14719751318883536030, t[6], C)

	C, t[6] = madd2(m, 14394306952299074261, t[7], C)

	C, t[7] = madd2(m, 420177830206246340, t[8], C)

	C, t[8] = madd2(m, 18292065964812492220, t[9], C)

	C, t[9] = madd2(m, 16529202080823250444, t[10], C)

	C, t[10] = madd2(m, 325117689922568275, t[11], C)

	C, t[11] = madd2(m, 17392915062696095649, t[12], C)

	C, t[12] = madd2(m, 15669173465823707729, t[13], C)

	C, t[13] = madd2(m, 14471887911929389604, t[14], C)

	C, t[14] = madd2(m, 7379345274961995842, t[15], C)

	C, t[15] = madd2(m, 16190214589477806019, t[16], C)

	C, t[16] = madd2(m, 8384885419167223405, t[17], C)

	C, t[17] = madd2(m, 14185603726792627592, t[18], C)

	C, t[18] = madd2(m, 7175340793347195998, t[19], C)

	C, t[19] = madd2(m, 99753532903889795, t[20], C)

	C, t[20] = madd2(m, 1287387037382438644, t[21], C)

	C, t[21] = madd3(m, 7902628261521547647, t[22], C, t[23])

	t[22], t[23] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[8], z[0], t[0])
	C, t[1] = madd2(x[8], z[1], t[1], C)
	C, t[2] = madd2(x[8], z[2], t[2], C)
	C, t[3] = madd2(x[8], z[3], t[3], C)
	C, t[4] = madd2(x[8], z[4], t[4], C)
	C, t[5] = madd2(x[8], z[5], t[5], C)
	C, t[6] = madd2(x[8], z[6], t[6], C)
	C, t[7] = madd2(x[8], z[7], t[7], C)
	C, t[8] = madd2(x[8], z[8], t[8], C)
	C, t[9] = madd2(x[8], z[9], t[9], C)
	C, t[10] = madd2(x[8], z[10], t[10], C)
	C, t[11] = madd2(x[8], z[11], t[11], C)
	C, t[12] = madd2(x[8], z[12], t[12], C)
	C, t[13] = madd2(x[8], z[13], t[13], C)
	C, t[14] = madd2(x[8], z[14], t[14], C)
	C, t[15] = madd2(x[8], z[15], t[15], C)
	C, t[16] = madd2(x[8], z[16], t[16], C)
	C, t[17] = madd2(x[8], z[17], t[17], C)
	C, t[18] = madd2(x[8], z[18], t[18], C)
	C, t[19] = madd2(x[8], z[19], t[19], C)
	C, t[20] = madd2(x[8], z[20], t[20], C)
	C, t[21] = madd2(x[8], z[21], t[21], C)
	C, t[22] = madd2(x[8], z[22], t[22], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17264235192267336435

	// -----------------------------------
	// Second loop
	C = madd0(m, 2977841944516248005, t[0])

	C, t[0] = madd2(m, 5366638698886618632, t[1], C)

	C, t[1] = madd2(m, 16494529459254852566, t[2], C)

	C, t[2] = madd2(m, 10139780597354342739, t[3], C)

	C, t[3] = madd2(m, 10730920707457771221, t[4], C)

	C, t[4] = madd2(m, 4023492846293697750, t[5], C)

	C, t[5] = madd2(m, 14719751318883536030, t[6], C)

	C, t[6] = madd2(m, 14394306952299074261, t[7], C)

	C, t[7] = madd2(m, 420177830206246340, t[8], C)

	C, t[8] = madd2(m, 18292065964812492220, t[9], C)

	C, t[9] = madd2(m, 16529202080823250444, t[10], C)

	C, t[10] = madd2(m, 325117689922568275, t[11], C)

	C, t[11] = madd2(m, 17392915062696095649, t[12], C)

	C, t[12] = madd2(m, 15669173465823707729, t[13], C)

	C, t[13] = madd2(m, 14471887911929389604, t[14], C)

	C, t[14] = madd2(m, 7379345274961995842, t[15], C)

	C, t[15] = madd2(m, 16190214589477806019, t[16], C)

	C, t[16] = madd2(m, 8384885419167223405, t[17], C)

	C, t[17] = madd2(m, 14185603726792627592, t[18], C)

	C, t[18] = madd2(m, 7175340793347195998, t[19], C)

	C, t[19] = madd2(m, 99753532903889795, t[20], C)

	C, t[20] = madd2(m, 1287387037382438644, t[21], C)

	C, t[21] = madd3(m, 7902628261521547647, t[22], C, t[23])

	t[22], t[23] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[9], z[0], t[0])
	C, t[1] = madd2(x[9], z[1], t[1], C)
	C, t[2] = madd2(x[9], z[2], t[2], C)
	C, t[3] = madd2(x[9], z[3], t[3], C)
	C, t[4] = madd2(x[9], z[4], t[4], C)
	C, t[5] = madd2(x[9], z[5], t[5], C)
	C, t[6] = madd2(x[9], z[6], t[6], C)
	C, t[7] = madd2(x[9], z[7], t[7], C)
	C, t[8] = madd2(x[9], z[8], t[8], C)
	C, t[9] = madd2(x[9], z[9], t[9], C)
	C, t[10] = madd2(x[9], z[10], t[10], C)
	C, t[11] = madd2(x[9], z[11], t[11], C)
	C, t[12] = madd2(x[9], z[12], t[12], C)
	C, t[13] = madd2(x[9], z[13], t[13], C)
	C, t[14] = madd2(x[9], z[14], t[14], C)
	C, t[15] = madd2(x[9], z[15], t[15], C)
	C, t[16] = madd2(x[9], z[16], t[16], C)
	C, t[17] = madd2(x[9], z[17], t[17], C)
	C, t[18] = madd2(x[9], z[18], t[18], C)
	C, t[19] = madd2(x[9], z[19], t[19], C)
	C, t[20] = madd2(x[9], z[20], t[20], C)
	C, t[21] = madd2(x[9], z[21], t[21], C)
	C, t[22] = madd2(x[9], z[22], t[22], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17264235192267336435

	// -----------------------------------
	// Second loop
	C = madd0(m, 2977841944516248005, t[0])

	C, t[0] = madd2(m, 5366638698886618632, t[1], C)

	C, t[1] = madd2(m, 16494529459254852566, t[2], C)

	C, t[2] = madd2(m, 10139780597354342739, t[3], C)

	C, t[3] = madd2(m, 10730920707457771221, t[4], C)

	C, t[4] = madd2(m, 4023492846293697750, t[5], C)

	C, t[5] = madd2(m, 14719751318883536030, t[6], C)

	C, t[6] = madd2(m, 14394306952299074261, t[7], C)

	C, t[7] = madd2(m, 420177830206246340, t[8], C)

	C, t[8] = madd2(m, 18292065964812492220, t[9], C)

	C, t[9] = madd2(m, 16529202080823250444, t[10], C)

	C, t[10] = madd2(m, 325117689922568275, t[11], C)

	C, t[11] = madd2(m, 17392915062696095649, t[12], C)

	C, t[12] = madd2(m, 15669173465823707729, t[13], C)

	C, t[13] = madd2(m, 14471887911929389604, t[14], C)

	C, t[14] = madd2(m, 7379345274961995842, t[15], C)

	C, t[15] = madd2(m, 16190214589477806019, t[16], C)

	C, t[16] = madd2(m, 8384885419167223405, t[17], C)

	C, t[17] = madd2(m, 14185603726792627592, t[18], C)

	C, t[18] = madd2(m, 7175340793347195998, t[19], C)

	C, t[19] = madd2(m, 99753532903889795, t[20], C)

	C, t[20] = madd2(m, 1287387037382438644, t[21], C)

	C, t[21] = madd3(m, 7902628261521547647, t[22], C, t[23])

	t[22], t[23] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[10], z[0], t[0])
	C, t[1] = madd2(x[10], z[1], t[1], C)
	C, t[2] = madd2(x[10], z[2], t[2], C)
	C, t[3] = madd2(x[10], z[3], t[3], C)
	C, t[4] = madd2(x[10], z[4], t[4], C)
	C, t[5] = madd2(x[10], z[5], t[5], C)
	C, t[6] = madd2(x[10], z[6], t[6], C)
	C, t[7] = madd2(x[10], z[7], t[7], C)
	C, t[8] = madd2(x[10], z[8], t[8], C)
	C, t[9] = madd2(x[10], z[9], t[9], C)
	C, t[10] = madd2(x[10], z[10], t[10], C)
	C, t[11] = madd2(x[10], z[11], t[11], C)
	C, t[12] = madd2(x[10], z[12], t[12], C)
	C, t[13] = madd2(x[10], z[13], t[13], C)
	C, t[14] = madd2(x[10], z[14], t[14], C)
	C, t[15] = madd2(x[10], z[15], t[15], C)
	C, t[16] = madd2(x[10], z[16], t[16], C)
	C, t[17] = madd2(x[10], z[17], t[17], C)
	C, t[18] = madd2(x[10], z[18], t[18], C)
	C, t[19] = madd2(x[10], z[19], t[19], C)
	C, t[20] = madd2(x[10], z[20], t[20], C)
	C, t[21] = madd2(x[10], z[21], t[21], C)
	C, t[22] = madd2(x[10], z[22], t[22], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17264235192267336435

	// -----------------------------------
	// Second loop
	C = madd0(m, 2977841944516248005, t[0])

	C, t[0] = madd2(m, 5366638698886618632, t[1], C)

	C, t[1] = madd2(m, 16494529459254852566, t[2], C)

	C, t[2] = madd2(m, 10139780597354342739, t[3], C)

	C, t[3] = madd2(m, 10730920707457771221, t[4], C)

	C, t[4] = madd2(m, 4023492846293697750, t[5], C)

	C, t[5] = madd2(m, 14719751318883536030, t[6], C)

	C, t[6] = madd2(m, 14394306952299074261, t[7], C)

	C, t[7] = madd2(m, 420177830206246340, t[8], C)

	C, t[8] = madd2(m, 18292065964812492220, t[9], C)

	C, t[9] = madd2(m, 16529202080823250444, t[10], C)

	C, t[10] = madd2(m, 325117689922568275, t[11], C)

	C, t[11] = madd2(m, 17392915062696095649, t[12], C)

	C, t[12] = madd2(m, 15669173465823707729, t[13], C)

	C, t[13] = madd2(m, 14471887911929389604, t[14], C)

	C, t[14] = madd2(m, 7379345274961995842, t[15], C)

	C, t[15] = madd2(m, 16190214589477806019, t[16], C)

	C, t[16] = madd2(m, 8384885419167223405, t[17], C)

	C, t[17] = madd2(m, 14185603726792627592, t[18], C)

	C, t[18] = madd2(m, 7175340793347195998, t[19], C)

	C, t[19] = madd2(m, 99753532903889795, t[20], C)

	C, t[20] = madd2(m, 1287387037382438644, t[21], C)

	C, t[21] = madd3(m, 7902628261521547647, t[22], C, t[23])

	t[22], t[23] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[11], z[0], t[0])
	C, t[1] = madd2(x[11], z[1], t[1], C)
	C, t[2] = madd2(x[11], z[2], t[2], C)
	C, t[3] = madd2(x[11], z[3], t[3], C)
	C, t[4] = madd2(x[11], z[4], t[4], C)
	C, t[5] = madd2(x[11], z[5], t[5], C)
	C, t[6] = madd2(x[11], z[6], t[6], C)
	C, t[7] = madd2(x[11], z[7], t[7], C)
	C, t[8] = madd2(x[11], z[8], t[8], C)
	C, t[9] = madd2(x[11], z[9], t[9], C)
	C, t[10] = madd2(x[11], z[10], t[10], C)
	C, t[11] = madd2(x[11], z[11], t[11], C)
	C, t[12] = madd2(x[11], z[12], t[12], C)
	C, t[13] = madd2(x[11], z[13], t[13], C)
	C, t[14] = madd2(x[11], z[14], t[14], C)
	C, t[15] = madd2(x[11], z[15], t[15], C)
	C, t[16] = madd2(x[11], z[16], t[16], C)
	C, t[17] = madd2(x[11], z[17], t[17], C)
	C, t[18] = madd2(x[11], z[18], t[18], C)
	C, t[19] = madd2(x[11], z[19], t[19], C)
	C, t[20] = madd2(x[11], z[20], t[20], C)
	C, t[21] = madd2(x[11], z[21], t[21], C)
	C, t[22] = madd2(x[11], z[22], t[22], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17264235192267336435

	// -----------------------------------
	// Second loop
	C = madd0(m, 2977841944516248005, t[0])

	C, t[0] = madd2(m, 5366638698886618632, t[1], C)

	C, t[1] = madd2(m, 16494529459254852566, t[2], C)

	C, t[2] = madd2(m, 10139780597354342739, t[3], C)

	C, t[3] = madd2(m, 10730920707457771221, t[4], C)

	C, t[4] = madd2(m, 4023492846293697750, t[5], C)

	C, t[5] = madd2(m, 14719751318883536030, t[6], C)

	C, t[6] = madd2(m, 14394306952299074261, t[7], C)

	C, t[7] = madd2(m, 420177830206246340, t[8], C)

	C, t[8] = madd2(m, 18292065964812492220, t[9], C)

	C, t[9] = madd2(m, 16529202080823250444, t[10], C)

	C, t[10] = madd2(m, 325117689922568275, t[11], C)

	C, t[11] = madd2(m, 17392915062696095649, t[12], C)

	C, t[12] = madd2(m, 15669173465823707729, t[13], C)

	C, t[13] = madd2(m, 14471887911929389604, t[14], C)

	C, t[14] = madd2(m, 7379345274961995842, t[15], C)

	C, t[15] = madd2(m, 16190214589477806019, t[16], C)

	C, t[16] = madd2(m, 8384885419167223405, t[17], C)

	C, t[17] = madd2(m, 14185603726792627592, t[18], C)

	C, t[18] = madd2(m, 7175340793347195998, t[19], C)

	C, t[19] = madd2(m, 99753532903889795, t[20], C)

	C, t[20] = madd2(m, 1287387037382438644, t[21], C)

	C, t[21] = madd3(m, 7902628261521547647, t[22], C, t[23])

	t[22], t[23] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[12], z[0], t[0])
	C, t[1] = madd2(x[12], z[1], t[1], C)
	C, t[2] = madd2(x[12], z[2], t[2], C)
	C, t[3] = madd2(x[12], z[3], t[3], C)
	C, t[4] = madd2(x[12], z[4], t[4], C)
	C, t[5] = madd2(x[12], z[5], t[5], C)
	C, t[6] = madd2(x[12], z[6], t[6], C)
	C, t[7] = madd2(x[12], z[7], t[7], C)
	C, t[8] = madd2(x[12], z[8], t[8], C)
	C, t[9] = madd2(x[12], z[9], t[9], C)
	C, t[10] = madd2(x[12], z[10], t[10], C)
	C, t[11] = madd2(x[12], z[11], t[11], C)
	C, t[12] = madd2(x[12], z[12], t[12], C)
	C, t[13] = madd2(x[12], z[13], t[13], C)
	C, t[14] = madd2(x[12], z[14], t[14], C)
	C, t[15] = madd2(x[12], z[15], t[15], C)
	C, t[16] = madd2(x[12], z[16], t[16], C)
	C, t[17] = madd2(x[12], z[17], t[17], C)
	C, t[18] = madd2(x[12], z[18], t[18], C)
	C, t[19] = madd2(x[12], z[19], t[19], C)
	C, t[20] = madd2(x[12], z[20], t[20], C)
	C, t[21] = madd2(x[12], z[21], t[21], C)
	C, t[22] = madd2(x[12], z[22], t[22], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17264235192267336435

	// -----------------------------------
	// Second loop
	C = madd0(m, 2977841944516248005, t[0])

	C, t[0] = madd2(m, 5366638698886618632, t[1], C)

	C, t[1] = madd2(m, 16494529459254852566, t[2], C)

	C, t[2] = madd2(m, 10139780597354342739, t[3], C)

	C, t[3] = madd2(m, 10730920707457771221, t[4], C)

	C, t[4] = madd2(m, 4023492846293697750, t[5], C)

	C, t[5] = madd2(m, 14719751318883536030, t[6], C)

	C, t[6] = madd2(m, 14394306952299074261, t[7], C)

	C, t[7] = madd2(m, 420177830206246340, t[8], C)

	C, t[8] = madd2(m, 18292065964812492220, t[9], C)

	C, t[9] = madd2(m, 16529202080823250444, t[10], C)

	C, t[10] = madd2(m, 325117689922568275, t[11], C)

	C, t[11] = madd2(m, 17392915062696095649, t[12], C)

	C, t[12] = madd2(m, 15669173465823707729, t[13], C)

	C, t[13] = madd2(m, 14471887911929389604, t[14], C)

	C, t[14] = madd2(m, 7379345274961995842, t[15], C)

	C, t[15] = madd2(m, 16190214589477806019, t[16], C)

	C, t[16] = madd2(m, 8384885419167223405, t[17], C)

	C, t[17] = madd2(m, 14185603726792627592, t[18], C)

	C, t[18] = madd2(m, 7175340793347195998, t[19], C)

	C, t[19] = madd2(m, 99753532903889795, t[20], C)

	C, t[20] = madd2(m, 1287387037382438644, t[21], C)

	C, t[21] = madd3(m, 7902628261521547647, t[22], C, t[23])

	t[22], t[23] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[13], z[0], t[0])
	C, t[1] = madd2(x[13], z[1], t[1], C)
	C, t[2] = madd2(x[13], z[2], t[2], C)
	C, t[3] = madd2(x[13], z[3], t[3], C)
	C, t[4] = madd2(x[13], z[4], t[4], C)
	C, t[5] = madd2(x[13], z[5], t[5], C)
	C, t[6] = madd2(x[13], z[6], t[6], C)
	C, t[7] = madd2(x[13], z[7], t[7], C)
	C, t[8] = madd2(x[13], z[8], t[8], C)
	C, t[9] = madd2(x[13], z[9], t[9], C)
	C, t[10] = madd2(x[13], z[10], t[10], C)
	C, t[11] = madd2(x[13], z[11], t[11], C)
	C, t[12] = madd2(x[13], z[12], t[12], C)
	C, t[13] = madd2(x[13], z[13], t[13], C)
	C, t[14] = madd2(x[13], z[14], t[14], C)
	C, t[15] = madd2(x[13], z[15], t[15], C)
	C, t[16] = madd2(x[13], z[16], t[16], C)
	C, t[17] = madd2(x[13], z[17], t[17], C)
	C, t[18] = madd2(x[13], z[18], t[18], C)
	C, t[19] = madd2(x[13], z[19], t[19], C)
	C, t[20] = madd2(x[13], z[20], t[20], C)
	C, t[21] = madd2(x[13], z[21], t[21], C)
	C, t[22] = madd2(x[13], z[22], t[22], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17264235192267336435

	// -----------------------------------
	// Second loop
	C = madd0(m, 2977841944516248005, t[0])

	C, t[0] = madd2(m, 5366638698886618632, t[1], C)

	C, t[1] = madd2(m, 16494529459254852566, t[2], C)

	C, t[2] = madd2(m, 10139780597354342739, t[3], C)

	C, t[3] = madd2(m, 10730920707457771221, t[4], C)

	C, t[4] = madd2(m, 4023492846293697750, t[5], C)

	C, t[5] = madd2(m, 14719751318883536030, t[6], C)

	C, t[6] = madd2(m, 14394306952299074261, t[7], C)

	C, t[7] = madd2(m, 420177830206246340, t[8], C)

	C, t[8] = madd2(m, 18292065964812492220, t[9], C)

	C, t[9] = madd2(m, 16529202080823250444, t[10], C)

	C, t[10] = madd2(m, 325117689922568275, t[11], C)

	C, t[11] = madd2(m, 17392915062696095649, t[12], C)

	C, t[12] = madd2(m, 15669173465823707729, t[13], C)

	C, t[13] = madd2(m, 14471887911929389604, t[14], C)

	C, t[14] = madd2(m, 7379345274961995842, t[15], C)

	C, t[15] = madd2(m, 16190214589477806019, t[16], C)

	C, t[16] = madd2(m, 8384885419167223405, t[17], C)

	C, t[17] = madd2(m, 14185603726792627592, t[18], C)

	C, t[18] = madd2(m, 7175340793347195998, t[19], C)

	C, t[19] = madd2(m, 99753532903889795, t[20], C)

	C, t[20] = madd2(m, 1287387037382438644, t[21], C)

	C, t[21] = madd3(m, 7902628261521547647, t[22], C, t[23])

	t[22], t[23] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[14], z[0], t[0])
	C, t[1] = madd2(x[14], z[1], t[1], C)
	C, t[2] = madd2(x[14], z[2], t[2], C)
	C, t[3] = madd2(x[14], z[3], t[3], C)
	C, t[4] = madd2(x[14], z[4], t[4], C)
	C, t[5] = madd2(x[14], z[5], t[5], C)
	C, t[6] = madd2(x[14], z[6], t[6], C)
	C, t[7] = madd2(x[14], z[7], t[7], C)
	C, t[8] = madd2(x[14], z[8], t[8], C)
	C, t[9] = madd2(x[14], z[9], t[9], C)
	C, t[10] = madd2(x[14], z[10], t[10], C)
	C, t[11] = madd2(x[14], z[11], t[11], C)
	C, t[12] = madd2(x[14], z[12], t[12], C)
	C, t[13] = madd2(x[14], z[13], t[13], C)
	C, t[14] = madd2(x[14], z[14], t[14], C)
	C, t[15] = madd2(x[14], z[15], t[15], C)
	C, t[16] = madd2(x[14], z[16], t[16], C)
	C, t[17] = madd2(x[14], z[17], t[17], C)
	C, t[18] = madd2(x[14], z[18], t[18], C)
	C, t[19] = madd2(x[14], z[19], t[19], C)
	C, t[20] = madd2(x[14], z[20], t[20], C)
	C, t[21] = madd2(x[14], z[21], t[21], C)
	C, t[22] = madd2(x[14], z[22], t[22], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17264235192267336435

	// -----------------------------------
	// Second loop
	C = madd0(m, 2977841944516248005, t[0])

	C, t[0] = madd2(m, 5366638698886618632, t[1], C)

	C, t[1] = madd2(m, 16494529459254852566, t[2], C)

	C, t[2] = madd2(m, 10139780597354342739, t[3], C)

	C, t[3] = madd2(m, 10730920707457771221, t[4], C)

	C, t[4] = madd2(m, 4023492846293697750, t[5], C)

	C, t[5] = madd2(m, 14719751318883536030, t[6], C)

	C, t[6] = madd2(m, 14394306952299074261, t[7], C)

	C, t[7] = madd2(m, 420177830206246340, t[8], C)

	C, t[8] = madd2(m, 18292065964812492220, t[9], C)

	C, t[9] = madd2(m, 16529202080823250444, t[10], C)

	C, t[10] = madd2(m, 325117689922568275, t[11], C)

	C, t[11] = madd2(m, 17392915062696095649, t[12], C)

	C, t[12] = madd2(m, 15669173465823707729, t[13], C)

	C, t[13] = madd2(m, 14471887911929389604, t[14], C)

	C, t[14] = madd2(m, 7379345274961995842, t[15], C)

	C, t[15] = madd2(m, 16190214589477806019, t[16], C)

	C, t[16] = madd2(m, 8384885419167223405, t[17], C)

	C, t[17] = madd2(m, 14185603726792627592, t[18], C)

	C, t[18] = madd2(m, 7175340793347195998, t[19], C)

	C, t[19] = madd2(m, 99753532903889795, t[20], C)

	C, t[20] = madd2(m, 1287387037382438644, t[21], C)

	C, t[21] = madd3(m, 7902628261521547647, t[22], C, t[23])

	t[22], t[23] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[15], z[0], t[0])
	C, t[1] = madd2(x[15], z[1], t[1], C)
	C, t[2] = madd2(x[15], z[2], t[2], C)
	C, t[3] = madd2(x[15], z[3], t[3], C)
	C, t[4] = madd2(x[15], z[4], t[4], C)
	C, t[5] = madd2(x[15], z[5], t[5], C)
	C, t[6] = madd2(x[15], z[6], t[6], C)
	C, t[7] = madd2(x[15], z[7], t[7], C)
	C, t[8] = madd2(x[15], z[8], t[8], C)
	C, t[9] = madd2(x[15], z[9], t[9], C)
	C, t[10] = madd2(x[15], z[10], t[10], C)
	C, t[11] = madd2(x[15], z[11], t[11], C)
	C, t[12] = madd2(x[15], z[12], t[12], C)
	C, t[13] = madd2(x[15], z[13], t[13], C)
	C, t[14] = madd2(x[15], z[14], t[14], C)
	C, t[15] = madd2(x[15], z[15], t[15], C)
	C, t[16] = madd2(x[15], z[16], t[16], C)
	C, t[17] = madd2(x[15], z[17], t[17], C)
	C, t[18] = madd2(x[15], z[18], t[18], C)
	C, t[19] = madd2(x[15], z[19], t[19], C)
	C, t[20] = madd2(x[15], z[20], t[20], C)
	C, t[21] = madd2(x[15], z[21], t[21], C)
	C, t[22] = madd2(x[15], z[22], t[22], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17264235192267336435

	// -----------------------------------
	// Second loop
	C = madd0(m, 2977841944516248005, t[0])

	C, t[0] = madd2(m, 5366638698886618632, t[1], C)

	C, t[1] = madd2(m, 16494529459254852566, t[2], C)

	C, t[2] = madd2(m, 10139780597354342739, t[3], C)

	C, t[3] = madd2(m, 10730920707457771221, t[4], C)

	C, t[4] = madd2(m, 4023492846293697750, t[5], C)

	C, t[5] = madd2(m, 14719751318883536030, t[6], C)

	C, t[6] = madd2(m, 14394306952299074261, t[7], C)

	C, t[7] = madd2(m, 420177830206246340, t[8], C)

	C, t[8] = madd2(m, 18292065964812492220, t[9], C)

	C, t[9] = madd2(m, 16529202080823250444, t[10], C)

	C, t[10] = madd2(m, 325117689922568275, t[11], C)

	C, t[11] = madd2(m, 17392915062696095649, t[12], C)

	C, t[12] = madd2(m, 15669173465823707729, t[13], C)

	C, t[13] = madd2(m, 14471887911929389604, t[14], C)

	C, t[14] = madd2(m, 7379345274961995842, t[15], C)

	C, t[15] = madd2(m, 16190214589477806019, t[16], C)

	C, t[16] = madd2(m, 8384885419167223405, t[17], C)

	C, t[17] = madd2(m, 14185603726792627592, t[18], C)

	C, t[18] = madd2(m, 7175340793347195998, t[19], C)

	C, t[19] = madd2(m, 99753532903889795, t[20], C)

	C, t[20] = madd2(m, 1287387037382438644, t[21], C)

	C, t[21] = madd3(m, 7902628261521547647, t[22], C, t[23])

	t[22], t[23] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[16], z[0], t[0])
	C, t[1] = madd2(x[16], z[1], t[1], C)
	C, t[2] = madd2(x[16], z[2], t[2], C)
	C, t[3] = madd2(x[16], z[3], t[3], C)
	C, t[4] = madd2(x[16], z[4], t[4], C)
	C, t[5] = madd2(x[16], z[5], t[5], C)
	C, t[6] = madd2(x[16], z[6], t[6], C)
	C, t[7] = madd2(x[16], z[7], t[7], C)
	C, t[8] = madd2(x[16], z[8], t[8], C)
	C, t[9] = madd2(x[16], z[9], t[9], C)
	C, t[10] = madd2(x[16], z[10], t[10], C)
	C, t[11] = madd2(x[16], z[11], t[11], C)
	C, t[12] = madd2(x[16], z[12], t[12], C)
	C, t[13] = madd2(x[16], z[13], t[13], C)
	C, t[14] = madd2(x[16], z[14], t[14], C)
	C, t[15] = madd2(x[16], z[15], t[15], C)
	C, t[16] = madd2(x[16], z[16], t[16], C)
	C, t[17] = madd2(x[16], z[17], t[17], C)
	C, t[18] = madd2(x[16], z[18], t[18], C)
	C, t[19] = madd2(x[16], z[19], t[19], C)
	C, t[20] = madd2(x[16], z[20], t[20], C)
	C, t[21] = madd2(x[16], z[21], t[21], C)
	C, t[22] = madd2(x[16], z[22], t[22], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17264235192267336435

	// -----------------------------------
	// Second loop
	C = madd0(m, 2977841944516248005, t[0])

	C, t[0] = madd2(m, 5366638698886618632, t[1], C)

	C, t[1] = madd2(m, 16494529459254852566, t[2], C)

	C, t[2] = madd2(m, 10139780597354342739, t[3], C)

	C, t[3] = madd2(m, 10730920707457771221, t[4], C)

	C, t[4] = madd2(m, 4023492846293697750, t[5], C)

	C, t[5] = madd2(m, 14719751318883536030, t[6], C)

	C, t[6] = madd2(m, 14394306952299074261, t[7], C)

	C, t[7] = madd2(m, 420177830206246340, t[8], C)

	C, t[8] = madd2(m, 18292065964812492220, t[9], C)

	C, t[9] = madd2(m, 16529202080823250444, t[10], C)

	C, t[10] = madd2(m, 325117689922568275, t[11], C)

	C, t[11] = madd2(m, 17392915062696095649, t[12], C)

	C, t[12] = madd2(m, 15669173465823707729, t[13], C)

	C, t[13] = madd2(m, 14471887911929389604, t[14], C)

	C, t[14] = madd2(m, 7379345274961995842, t[15], C)

	C, t[15] = madd2(m, 16190214589477806019, t[16], C)

	C, t[16] = madd2(m, 8384885419167223405, t[17], C)

	C, t[17] = madd2(m, 14185603726792627592, t[18], C)

	C, t[18] = madd2(m, 7175340793347195998, t[19], C)

	C, t[19] = madd2(m, 99753532903889795, t[20], C)

	C, t[20] = madd2(m, 1287387037382438644, t[21], C)

	C, t[21] = madd3(m, 7902628261521547647, t[22], C, t[23])

	t[22], t[23] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[17], z[0], t[0])
	C, t[1] = madd2(x[17], z[1], t[1], C)
	C, t[2] = madd2(x[17], z[2], t[2], C)
	C, t[3] = madd2(x[17], z[3], t[3], C)
	C, t[4] = madd2(x[17], z[4], t[4], C)
	C, t[5] = madd2(x[17], z[5], t[5], C)
	C, t[6] = madd2(x[17], z[6], t[6], C)
	C, t[7] = madd2(x[17], z[7], t[7], C)
	C, t[8] = madd2(x[17], z[8], t[8], C)
	C, t[9] = madd2(x[17], z[9], t[9], C)
	C, t[10] = madd2(x[17], z[10], t[10], C)
	C, t[11] = madd2(x[17], z[11], t[11], C)
	C, t[12] = madd2(x[17], z[12], t[12], C)
	C, t[13] = madd2(x[17], z[13], t[13], C)
	C, t[14] = madd2(x[17], z[14], t[14], C)
	C, t[15] = madd2(x[17], z[15], t[15], C)
	C, t[16] = madd2(x[17], z[16], t[16], C)
	C, t[17] = madd2(x[17], z[17], t[17], C)
	C, t[18] = madd2(x[17], z[18], t[18], C)
	C, t[19] = madd2(x[17], z[19], t[19], C)
	C, t[20] = madd2(x[17], z[20], t[20], C)
	C, t[21] = madd2(x[17], z[21], t[21], C)
	C, t[22] = madd2(x[17], z[22], t[22], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17264235192267336435

	// -----------------------------------
	// Second loop
	C = madd0(m, 2977841944516248005, t[0])

	C, t[0] = madd2(m, 5366638698886618632, t[1], C)

	C, t[1] = madd2(m, 16494529459254852566, t[2], C)

	C, t[2] = madd2(m, 10139780597354342739, t[3], C)

	C, t[3] = madd2(m, 10730920707457771221, t[4], C)

	C, t[4] = madd2(m, 4023492846293697750, t[5], C)

	C, t[5] = madd2(m, 14719751318883536030, t[6], C)

	C, t[6] = madd2(m, 14394306952299074261, t[7], C)

	C, t[7] = madd2(m, 420177830206246340, t[8], C)

	C, t[8] = madd2(m, 18292065964812492220, t[9], C)

	C, t[9] = madd2(m, 16529202080823250444, t[10], C)

	C, t[10] = madd2(m, 325117689922568275, t[11], C)

	C, t[11] = madd2(m, 17392915062696095649, t[12], C)

	C, t[12] = madd2(m, 15669173465823707729, t[13], C)

	C, t[13] = madd2(m, 14471887911929389604, t[14], C)

	C, t[14] = madd2(m, 7379345274961995842, t[15], C)

	C, t[15] = madd2(m, 16190214589477806019, t[16], C)

	C, t[16] = madd2(m, 8384885419167223405, t[17], C)

	C, t[17] = madd2(m, 14185603726792627592, t[18], C)

	C, t[18] = madd2(m, 7175340793347195998, t[19], C)

	C, t[19] = madd2(m, 99753532903889795, t[20], C)

	C, t[20] = madd2(m, 1287387037382438644, t[21], C)

	C, t[21] = madd3(m, 7902628261521547647, t[22], C, t[23])

	t[22], t[23] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[18], z[0], t[0])
	C, t[1] = madd2(x[18], z[1], t[1], C)
	C, t[2] = madd2(x[18], z[2], t[2], C)
	C, t[3] = madd2(x[18], z[3], t[3], C)
	C, t[4] = madd2(x[18], z[4], t[4], C)
	C, t[5] = madd2(x[18], z[5], t[5], C)
	C, t[6] = madd2(x[18], z[6], t[6], C)
	C, t[7] = madd2(x[18], z[7], t[7], C)
	C, t[8] = madd2(x[18], z[8], t[8], C)
	C, t[9] = madd2(x[18], z[9], t[9], C)
	C, t[10] = madd2(x[18], z[10], t[10], C)
	C, t[11] = madd2(x[18], z[11], t[11], C)
	C, t[12] = madd2(x[18], z[12], t[12], C)
	C, t[13] = madd2(x[18], z[13], t[13], C)
	C, t[14] = madd2(x[18], z[14], t[14], C)
	C, t[15] = madd2(x[18], z[15], t[15], C)
	C, t[16] = madd2(x[18], z[16], t[16], C)
	C, t[17] = madd2(x[18], z[17], t[17], C)
	C, t[18] = madd2(x[18], z[18], t[18], C)
	C, t[19] = madd2(x[18], z[19], t[19], C)
	C, t[20] = madd2(x[18], z[20], t[20], C)
	C, t[21] = madd2(x[18], z[21], t[21], C)
	C, t[22] = madd2(x[18], z[22], t[22], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17264235192267336435

	// -----------------------------------
	// Second loop
	C = madd0(m, 2977841944516248005, t[0])

	C, t[0] = madd2(m, 5366638698886618632, t[1], C)

	C, t[1] = madd2(m, 16494529459254852566, t[2], C)

	C, t[2] = madd2(m, 10139780597354342739, t[3], C)

	C, t[3] = madd2(m, 10730920707457771221, t[4], C)

	C, t[4] = madd2(m, 4023492846293697750, t[5], C)

	C, t[5] = madd2(m, 14719751318883536030, t[6], C)

	C, t[6] = madd2(m, 14394306952299074261, t[7], C)

	C, t[7] = madd2(m, 420177830206246340, t[8], C)

	C, t[8] = madd2(m, 18292065964812492220, t[9], C)

	C, t[9] = madd2(m, 16529202080823250444, t[10], C)

	C, t[10] = madd2(m, 325117689922568275, t[11], C)

	C, t[11] = madd2(m, 17392915062696095649, t[12], C)

	C, t[12] = madd2(m, 15669173465823707729, t[13], C)

	C, t[13] = madd2(m, 14471887911929389604, t[14], C)

	C, t[14] = madd2(m, 7379345274961995842, t[15], C)

	C, t[15] = madd2(m, 16190214589477806019, t[16], C)

	C, t[16] = madd2(m, 8384885419167223405, t[17], C)

	C, t[17] = madd2(m, 14185603726792627592, t[18], C)

	C, t[18] = madd2(m, 7175340793347195998, t[19], C)

	C, t[19] = madd2(m, 99753532903889795, t[20], C)

	C, t[20] = madd2(m, 1287387037382438644, t[21], C)

	C, t[21] = madd3(m, 7902628261521547647, t[22], C, t[23])

	t[22], t[23] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[19], z[0], t[0])
	C, t[1] = madd2(x[19], z[1], t[1], C)
	C, t[2] = madd2(x[19], z[2], t[2], C)
	C, t[3] = madd2(x[19], z[3], t[3], C)
	C, t[4] = madd2(x[19], z[4], t[4], C)
	C, t[5] = madd2(x[19], z[5], t[5], C)
	C, t[6] = madd2(x[19], z[6], t[6], C)
	C, t[7] = madd2(x[19], z[7], t[7], C)
	C, t[8] = madd2(x[19], z[8], t[8], C)
	C, t[9] = madd2(x[19], z[9], t[9], C)
	C, t[10] = madd2(x[19], z[10], t[10], C)
	C, t[11] = madd2(x[19], z[11], t[11], C)
	C, t[12] = madd2(x[19], z[12], t[12], C)
	C, t[13] = madd2(x[19], z[13], t[13], C)
	C, t[14] = madd2(x[19], z[14], t[14], C)
	C, t[15] = madd2(x[19], z[15], t[15], C)
	C, t[16] = madd2(x[19], z[16], t[16], C)
	C, t[17] = madd2(x[19], z[17], t[17], C)
	C, t[18] = madd2(x[19], z[18], t[18], C)
	C, t[19] = madd2(x[19], z[19], t[19], C)
	C, t[20] = madd2(x[19], z[20], t[20], C)
	C, t[21] = madd2(x[19], z[21], t[21], C)
	C, t[22] = madd2(x[19], z[22], t[22], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17264235192267336435

	// -----------------------------------
	// Second loop
	C = madd0(m, 2977841944516248005, t[0])

	C, t[0] = madd2(m, 5366638698886618632, t[1], C)

	C, t[1] = madd2(m, 16494529459254852566, t[2], C)

	C, t[2] = madd2(m, 10139780597354342739, t[3], C)

	C, t[3] = madd2(m, 10730920707457771221, t[4], C)

	C, t[4] = madd2(m, 4023492846293697750, t[5], C)

	C, t[5] = madd2(m, 14719751318883536030, t[6], C)

	C, t[6] = madd2(m, 14394306952299074261, t[7], C)

	C, t[7] = madd2(m, 420177830206246340, t[8], C)

	C, t[8] = madd2(m, 18292065964812492220, t[9], C)

	C, t[9] = madd2(m, 16529202080823250444, t[10], C)

	C, t[10] = madd2(m, 325117689922568275, t[11], C)

	C, t[11] = madd2(m, 17392915062696095649, t[12], C)

	C, t[12] = madd2(m, 15669173465823707729, t[13], C)

	C, t[13] = madd2(m, 14471887911929389604, t[14], C)

	C, t[14] = madd2(m, 7379345274961995842, t[15], C)

	C, t[15] = madd2(m, 16190214589477806019, t[16], C)

	C, t[16] = madd2(m, 8384885419167223405, t[17], C)

	C, t[17] = madd2(m, 14185603726792627592, t[18], C)

	C, t[18] = madd2(m, 7175340793347195998, t[19], C)

	C, t[19] = madd2(m, 99753532903889795, t[20], C)

	C, t[20] = madd2(m, 1287387037382438644, t[21], C)

	C, t[21] = madd3(m, 7902628261521547647, t[22], C, t[23])

	t[22], t[23] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[20], z[0], t[0])
	C, t[1] = madd2(x[20], z[1], t[1], C)
	C, t[2] = madd2(x[20], z[2], t[2], C)
	C, t[3] = madd2(x[20], z[3], t[3], C)
	C, t[4] = madd2(x[20], z[4], t[4], C)
	C, t[5] = madd2(x[20], z[5], t[5], C)
	C, t[6] = madd2(x[20], z[6], t[6], C)
	C, t[7] = madd2(x[20], z[7], t[7], C)
	C, t[8] = madd2(x[20], z[8], t[8], C)
	C, t[9] = madd2(x[20], z[9], t[9], C)
	C, t[10] = madd2(x[20], z[10], t[10], C)
	C, t[11] = madd2(x[20], z[11], t[11], C)
	C, t[12] = madd2(x[20], z[12], t[12], C)
	C, t[13] = madd2(x[20], z[13], t[13], C)
	C, t[14] = madd2(x[20], z[14], t[14], C)
	C, t[15] = madd2(x[20], z[15], t[15], C)
	C, t[16] = madd2(x[20], z[16], t[16], C)
	C, t[17] = madd2(x[20], z[17], t[17], C)
	C, t[18] = madd2(x[20], z[18], t[18], C)
	C, t[19] = madd2(x[20], z[19], t[19], C)
	C, t[20] = madd2(x[20], z[20], t[20], C)
	C, t[21] = madd2(x[20], z[21], t[21], C)
	C, t[22] = madd2(x[20], z[22], t[22], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17264235192267336435

	// -----------------------------------
	// Second loop
	C = madd0(m, 2977841944516248005, t[0])

	C, t[0] = madd2(m, 5366638698886618632, t[1], C)

	C, t[1] = madd2(m, 16494529459254852566, t[2], C)

	C, t[2] = madd2(m, 10139780597354342739, t[3], C)

	C, t[3] = madd2(m, 10730920707457771221, t[4], C)

	C, t[4] = madd2(m, 4023492846293697750, t[5], C)

	C, t[5] = madd2(m, 14719751318883536030, t[6], C)

	C, t[6] = madd2(m, 14394306952299074261, t[7], C)

	C, t[7] = madd2(m, 420177830206246340, t[8], C)

	C, t[8] = madd2(m, 18292065964812492220, t[9], C)

	C, t[9] = madd2(m, 16529202080823250444, t[10], C)

	C, t[10] = madd2(m, 325117689922568275, t[11], C)

	C, t[11] = madd2(m, 17392915062696095649, t[12], C)

	C, t[12] = madd2(m, 15669173465823707729, t[13], C)

	C, t[13] = madd2(m, 14471887911929389604, t[14], C)

	C, t[14] = madd2(m, 7379345274961995842, t[15], C)

	C, t[15] = madd2(m, 16190214589477806019, t[16], C)

	C, t[16] = madd2(m, 8384885419167223405, t[17], C)

	C, t[17] = madd2(m, 14185603726792627592, t[18], C)

	C, t[18] = madd2(m, 7175340793347195998, t[19], C)

	C, t[19] = madd2(m, 99753532903889795, t[20], C)

	C, t[20] = madd2(m, 1287387037382438644, t[21], C)

	C, t[21] = madd3(m, 7902628261521547647, t[22], C, t[23])

	t[22], t[23] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[21], z[0], t[0])
	C, t[1] = madd2(x[21], z[1], t[1], C)
	C, t[2] = madd2(x[21], z[2], t[2], C)
	C, t[3] = madd2(x[21], z[3], t[3], C)
	C, t[4] = madd2(x[21], z[4], t[4], C)
	C, t[5] = madd2(x[21], z[5], t[5], C)
	C, t[6] = madd2(x[21], z[6], t[6], C)
	C, t[7] = madd2(x[21], z[7], t[7], C)
	C, t[8] = madd2(x[21], z[8], t[8], C)
	C, t[9] = madd2(x[21], z[9], t[9], C)
	C, t[10] = madd2(x[21], z[10], t[10], C)
	C, t[11] = madd2(x[21], z[11], t[11], C)
	C, t[12] = madd2(x[21], z[12], t[12], C)
	C, t[13] = madd2(x[21], z[13], t[13], C)
	C, t[14] = madd2(x[21], z[14], t[14], C)
	C, t[15] = madd2(x[21], z[15], t[15], C)
	C, t[16] = madd2(x[21], z[16], t[16], C)
	C, t[17] = madd2(x[21], z[17], t[17], C)
	C, t[18] = madd2(x[21], z[18], t[18], C)
	C, t[19] = madd2(x[21], z[19], t[19], C)
	C, t[20] = madd2(x[21], z[20], t[20], C)
	C, t[21] = madd2(x[21], z[21], t[21], C)
	C, t[22] = madd2(x[21], z[22], t[22], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17264235192267336435

	// -----------------------------------
	// Second loop
	C = madd0(m, 2977841944516248005, t[0])

	C, t[0] = madd2(m, 5366638698886618632, t[1], C)

	C, t[1] = madd2(m, 16494529459254852566, t[2], C)

	C, t[2] = madd2(m, 10139780597354342739, t[3], C)

	C, t[3] = madd2(m, 10730920707457771221, t[4], C)

	C, t[4] = madd2(m, 4023492846293697750, t[5], C)

	C, t[5] = madd2(m, 14719751318883536030, t[6], C)

	C, t[6] = madd2(m, 14394306952299074261, t[7], C)

	C, t[7] = madd2(m, 420177830206246340, t[8], C)

	C, t[8] = madd2(m, 18292065964812492220, t[9], C)

	C, t[9] = madd2(m, 16529202080823250444, t[10], C)

	C, t[10] = madd2(m, 325117689922568275, t[11], C)

	C, t[11] = madd2(m, 17392915062696095649, t[12], C)

	C, t[12] = madd2(m, 15669173465823707729, t[13], C)

	C, t[13] = madd2(m, 14471887911929389604, t[14], C)

	C, t[14] = madd2(m, 7379345274961995842, t[15], C)

	C, t[15] = madd2(m, 16190214589477806019, t[16], C)

	C, t[16] = madd2(m, 8384885419167223405, t[17], C)

	C, t[17] = madd2(m, 14185603726792627592, t[18], C)

	C, t[18] = madd2(m, 7175340793347195998, t[19], C)

	C, t[19] = madd2(m, 99753532903889795, t[20], C)

	C, t[20] = madd2(m, 1287387037382438644, t[21], C)

	C, t[21] = madd3(m, 7902628261521547647, t[22], C, t[23])

	t[22], t[23] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[22], z[0], t[0])
	C, t[1] = madd2(x[22], z[1], t[1], C)
	C, t[2] = madd2(x[22], z[2], t[2], C)
	C, t[3] = madd2(x[22], z[3], t[3], C)
	C, t[4] = madd2(x[22], z[4], t[4], C)
	C, t[5] = madd2(x[22], z[5], t[5], C)
	C, t[6] = madd2(x[22], z[6], t[6], C)
	C, t[7] = madd2(x[22], z[7], t[7], C)
	C, t[8] = madd2(x[22], z[8], t[8], C)
	C, t[9] = madd2(x[22], z[9], t[9], C)
	C, t[10] = madd2(x[22], z[10], t[10], C)
	C, t[11] = madd2(x[22], z[11], t[11], C)
	C, t[12] = madd2(x[22], z[12], t[12], C)
	C, t[13] = madd2(x[22], z[13], t[13], C)
	C, t[14] = madd2(x[22], z[14], t[14], C)
	C, t[15] = madd2(x[22], z[15], t[15], C)
	C, t[16] = madd2(x[22], z[16], t[16], C)
	C, t[17] = madd2(x[22], z[17], t[17], C)
	C, t[18] = madd2(x[22], z[18], t[18], C)
	C, t[19] = madd2(x[22], z[19], t[19], C)
	C, t[20] = madd2(x[22], z[20], t[20], C)
	C, t[21] = madd2(x[22], z[21], t[21], C)
	C, t[22] = madd2(x[22], z[22], t[22], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17264235192267336435

	// -----------------------------------
	// Second loop
	C = madd0(m, 2977841944516248005, t[0])

	C, t[0] = madd2(m, 5366638698886618632, t[1], C)

	C, t[1] = madd2(m, 16494529459254852566, t[2], C)

	C, t[2] = madd2(m, 10139780597354342739, t[3], C)

	C, t[3] = madd2(m, 10730920707457771221, t[4], C)

	C, t[4] = madd2(m, 4023492846293697750, t[5], C)

	C, t[5] = madd2(m, 14719751318883536030, t[6], C)

	C, t[6] = madd2(m, 14394306952299074261, t[7], C)

	C, t[7] = madd2(m, 420177830206246340, t[8], C)

	C, t[8] = madd2(m, 18292065964812492220, t[9], C)

	C, t[9] = madd2(m, 16529202080823250444, t[10], C)

	C, t[10] = madd2(m, 325117689922568275, t[11], C)

	C, t[11] = madd2(m, 17392915062696095649, t[12], C)

	C, t[12] = madd2(m, 15669173465823707729, t[13], C)

	C, t[13] = madd2(m, 14471887911929389604, t[14], C)

	C, t[14] = madd2(m, 7379345274961995842, t[15], C)

	C, t[15] = madd2(m, 16190214589477806019, t[16], C)

	C, t[16] = madd2(m, 8384885419167223405, t[17], C)

	C, t[17] = madd2(m, 14185603726792627592, t[18], C)

	C, t[18] = madd2(m, 7175340793347195998, t[19], C)

	C, t[19] = madd2(m, 99753532903889795, t[20], C)

	C, t[20] = madd2(m, 1287387037382438644, t[21], C)

	C, t[21] = madd3(m, 7902628261521547647, t[22], C, t[23])

	t[22], t[23] = bits.Add64(D, C, 0)

	if t[23] != 0 {
		// we need to reduce, we have a result on 24 words
		var b uint64
		z[0], b = bits.Sub64(t[0], 2977841944516248005, 0)
		z[1], b = bits.Sub64(t[1], 5366638698886618632, b)
		z[2], b = bits.Sub64(t[2], 16494529459254852566, b)
		z[3], b = bits.Sub64(t[3], 10139780597354342739, b)
		z[4], b = bits.Sub64(t[4], 10730920707457771221, b)
		z[5], b = bits.Sub64(t[5], 4023492846293697750, b)
		z[6], b = bits.Sub64(t[6], 14719751318883536030, b)
		z[7], b = bits.Sub64(t[7], 14394306952299074261, b)
		z[8], b = bits.Sub64(t[8], 420177830206246340, b)
		z[9], b = bits.Sub64(t[9], 18292065964812492220, b)
		z[10], b = bits.Sub64(t[10], 16529202080823250444, b)
		z[11], b = bits.Sub64(t[11], 325117689922568275, b)
		z[12], b = bits.Sub64(t[12], 17392915062696095649, b)
		z[13], b = bits.Sub64(t[13], 15669173465823707729, b)
		z[14], b = bits.Sub64(t[14], 14471887911929389604, b)
		z[15], b = bits.Sub64(t[15], 7379345274961995842, b)
		z[16], b = bits.Sub64(t[16], 16190214589477806019, b)
		z[17], b = bits.Sub64(t[17], 8384885419167223405, b)
		z[18], b = bits.Sub64(t[18], 14185603726792627592, b)
		z[19], b = bits.Sub64(t[19], 7175340793347195998, b)
		z[20], b = bits.Sub64(t[20], 99753532903889795, b)
		z[21], b = bits.Sub64(t[21], 1287387037382438644, b)
		z[22], _ = bits.Sub64(t[22], 7902628261521547647, b)
		return z
	}

	// copy t into z
	z[0] = t[0]
	z[1] = t[1]
	z[2] = t[2]
	z[3] = t[3]
	z[4] = t[4]
	z[5] = t[5]
	z[6] = t[6]
	z[7] = t[7]
	z[8] = t[8]
	z[9] = t[9]
	z[10] = t[10]
	z[11] = t[11]
	z[12] = t[12]
	z[13] = t[13]
	z[14] = t[14]
	z[15] = t[15]
	z[16] = t[16]
	z[17] = t[17]
	z[18] = t[18]
	z[19] = t[19]
	z[20] = t[20]
	z[21] = t[21]
	z[22] = t[22]

	// if z > q --> z -= q
	if !(z[22] < 7902628261521547647 || (z[22] == 7902628261521547647 && (z[21] < 1287387037382438644 || (z[21] == 1287387037382438644 && (z[20] < 99753532903889795 || (z[20] == 99753532903889795 && (z[19] < 7175340793347195998 || (z[19] == 7175340793347195998 && (z[18] < 14185603726792627592 || (z[18] == 14185603726792627592 && (z[17] < 8384885419167223405 || (z[17] == 8384885419167223405 && (z[16] < 16190214589477806019 || (z[16] == 16190214589477806019 && (z[15] < 7379345274961995842 || (z[15] == 7379345274961995842 && (z[14] < 14471887911929389604 || (z[14] == 14471887911929389604 && (z[13] < 15669173465823707729 || (z[13] == 15669173465823707729 && (z[12] < 17392915062696095649 || (z[12] == 17392915062696095649 && (z[11] < 325117689922568275 || (z[11] == 325117689922568275 && (z[10] < 16529202080823250444 || (z[10] == 16529202080823250444 && (z[9] < 18292065964812492220 || (z[9] == 18292065964812492220 && (z[8] < 420177830206246340 || (z[8] == 420177830206246340 && (z[7] < 14394306952299074261 || (z[7] == 14394306952299074261 && (z[6] < 14719751318883536030 || (z[6] == 14719751318883536030 && (z[5] < 4023492846293697750 || (z[5] == 4023492846293697750 && (z[4] < 10730920707457771221 || (z[4] == 10730920707457771221 && (z[3] < 10139780597354342739 || (z[3] == 10139780597354342739 && (z[2] < 16494529459254852566 || (z[2] == 16494529459254852566 && (z[1] < 5366638698886618632 || (z[1] == 5366638698886618632 && (z[0] < 2977841944516248005))))))))))))))))))))))))))))))))))))))))))))) {
		var b uint64
		z[0], b = bits.Sub64(z[0], 2977841944516248005, 0)
		z[1], b = bits.Sub64(z[1], 5366638698886618632, b)
		z[2], b = bits.Sub64(z[2], 16494529459254852566, b)
		z[3], b = bits.Sub64(z[3], 10139780597354342739, b)
		z[4], b = bits.Sub64(z[4], 10730920707457771221, b)
		z[5], b = bits.Sub64(z[5], 4023492846293697750, b)
		z[6], b = bits.Sub64(z[6], 14719751318883536030, b)
		z[7], b = bits.Sub64(z[7], 14394306952299074261, b)
		z[8], b = bits.Sub64(z[8], 420177830206246340, b)
		z[9], b = bits.Sub64(z[9], 18292065964812492220, b)
		z[10], b = bits.Sub64(z[10], 16529202080823250444, b)
		z[11], b = bits.Sub64(z[11], 325117689922568275, b)
		z[12], b = bits.Sub64(z[12], 17392915062696095649, b)
		z[13], b = bits.Sub64(z[13], 15669173465823707729, b)
		z[14], b = bits.Sub64(z[14], 14471887911929389604, b)
		z[15], b = bits.Sub64(z[15], 7379345274961995842, b)
		z[16], b = bits.Sub64(z[16], 16190214589477806019, b)
		z[17], b = bits.Sub64(z[17], 8384885419167223405, b)
		z[18], b = bits.Sub64(z[18], 14185603726792627592, b)
		z[19], b = bits.Sub64(z[19], 7175340793347195998, b)
		z[20], b = bits.Sub64(z[20], 99753532903889795, b)
		z[21], b = bits.Sub64(z[21], 1287387037382438644, b)
		z[22], _ = bits.Sub64(z[22], 7902628261521547647, b)
	}
	return z
}

// Square z = x * x mod q
func (z *Element23) Square(x *Element23) *Element23 {
	return z.Mul(x, x)
}

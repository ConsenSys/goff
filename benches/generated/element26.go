// Copyright 2020 ConsenSys AG
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// field modulus q =
//
// 369477726470881828346593914804635485169139980478504142002951407241937129306105269310839495355924629896106888231736392170166781677387180979064577167223088930638451067656913499343922357001125994006717722735830990195538891000618458282650972474469148521958658837156301595041330031881365131195374636049904696091142270575805218457050295304250412418356342145119973647497156888828063454739166127351444970671270001480048177359011531595279985574951370755300419186033505813893267162079003110591657025271933932771
// Code generated by goff DO NOT EDIT
// Element26 are assumed to be in Montgomery form in all methods

// /!\ WARNING /!\
// this code has not been audited and is provided as-is. In particular,
// there is no security guarantees such as constant time implementation
// or side-channel attack resistance
// /!\ WARNING /!\

// Package generated (generated by goff) contains field arithmetics operations
package generated

import (
	"crypto/rand"
	"encoding/binary"
	"io"
	"math/big"
	"math/bits"
	"sync"
	"unsafe"
)

// Element26 represents a field element stored on 26 words (uint64)
// Element26 are assumed to be in Montgomery form in all methods
type Element26 [26]uint64

// Element26Limbs number of 64 bits words needed to represent Element26
const Element26Limbs = 26

// Element26Bits number bits needed to represent Element26
const Element26Bits = 1663

// SetUint64 z = v, sets z LSB to v (non-Montgomery form) and convert z to Montgomery form
func (z *Element26) SetUint64(v uint64) *Element26 {
	z[0] = v
	z[1] = 0
	z[2] = 0
	z[3] = 0
	z[4] = 0
	z[5] = 0
	z[6] = 0
	z[7] = 0
	z[8] = 0
	z[9] = 0
	z[10] = 0
	z[11] = 0
	z[12] = 0
	z[13] = 0
	z[14] = 0
	z[15] = 0
	z[16] = 0
	z[17] = 0
	z[18] = 0
	z[19] = 0
	z[20] = 0
	z[21] = 0
	z[22] = 0
	z[23] = 0
	z[24] = 0
	z[25] = 0
	return z.ToMont()
}

// Set z = x
func (z *Element26) Set(x *Element26) *Element26 {
	z[0] = x[0]
	z[1] = x[1]
	z[2] = x[2]
	z[3] = x[3]
	z[4] = x[4]
	z[5] = x[5]
	z[6] = x[6]
	z[7] = x[7]
	z[8] = x[8]
	z[9] = x[9]
	z[10] = x[10]
	z[11] = x[11]
	z[12] = x[12]
	z[13] = x[13]
	z[14] = x[14]
	z[15] = x[15]
	z[16] = x[16]
	z[17] = x[17]
	z[18] = x[18]
	z[19] = x[19]
	z[20] = x[20]
	z[21] = x[21]
	z[22] = x[22]
	z[23] = x[23]
	z[24] = x[24]
	z[25] = x[25]
	return z
}

// SetZero z = 0
func (z *Element26) SetZero() *Element26 {
	z[0] = 0
	z[1] = 0
	z[2] = 0
	z[3] = 0
	z[4] = 0
	z[5] = 0
	z[6] = 0
	z[7] = 0
	z[8] = 0
	z[9] = 0
	z[10] = 0
	z[11] = 0
	z[12] = 0
	z[13] = 0
	z[14] = 0
	z[15] = 0
	z[16] = 0
	z[17] = 0
	z[18] = 0
	z[19] = 0
	z[20] = 0
	z[21] = 0
	z[22] = 0
	z[23] = 0
	z[24] = 0
	z[25] = 0
	return z
}

// SetOne z = 1 (in Montgomery form)
func (z *Element26) SetOne() *Element26 {
	z[0] = 10258013947145803322
	z[1] = 16395033627362999951
	z[2] = 2289745632211750463
	z[3] = 5261347279621553135
	z[4] = 10075412560713035215
	z[5] = 14852941968964439526
	z[6] = 10346445920883505345
	z[7] = 652697525525130755
	z[8] = 5174401850163208067
	z[9] = 10413527872233869999
	z[10] = 13854850561658501082
	z[11] = 5300401343610900932
	z[12] = 6242838638172222324
	z[13] = 2122724517750793954
	z[14] = 9244865172055515010
	z[15] = 2927401371990375736
	z[16] = 9185371048160932144
	z[17] = 17878385523817096861
	z[18] = 2340797244657597784
	z[19] = 7648851984703977814
	z[20] = 9899923254394258813
	z[21] = 9371626667666386361
	z[22] = 10589256837337954959
	z[23] = 687105260732986227
	z[24] = 3903385828095637219
	z[25] = 1826966934011003511
	return z
}

// Neg z = q - x
func (z *Element26) Neg(x *Element26) *Element26 {
	if x.IsZero() {
		return z.SetZero()
	}
	var borrow uint64
	z[0], borrow = bits.Sub64(4094365063281874147, x[0], 0)
	z[1], borrow = bits.Sub64(1025855223173275832, x[1], borrow)
	z[2], borrow = bits.Sub64(8078499220748900576, x[2], borrow)
	z[3], borrow = bits.Sub64(6592698397043999240, x[3], borrow)
	z[4], borrow = bits.Sub64(13409037793353034008, x[4], borrow)
	z[5], borrow = bits.Sub64(1796901052372556044, x[5], borrow)
	z[6], borrow = bits.Sub64(4050149076413023135, x[6], borrow)
	z[7], borrow = bits.Sub64(8897023274092210430, x[7], borrow)
	z[8], borrow = bits.Sub64(6636171111773171774, x[8], borrow)
	z[9], borrow = bits.Sub64(13239980137592616616, x[9], borrow)
	z[10], borrow = bits.Sub64(11519318792880301074, x[10], borrow)
	z[11], borrow = bits.Sub64(15796543401904101149, x[11], borrow)
	z[12], borrow = bits.Sub64(15325324754623440453, x[12], borrow)
	z[13], borrow = bits.Sub64(17385381814834154638, x[13], borrow)
	z[14], borrow = bits.Sub64(13824311487681794110, x[14], borrow)
	z[15], borrow = bits.Sub64(16983043387714363747, x[15], borrow)
	z[16], borrow = bits.Sub64(4630686512774309735, x[16], borrow)
	z[17], borrow = bits.Sub64(9507551311801003185, x[17], borrow)
	z[18], borrow = bits.Sub64(17276345451380752723, x[18], borrow)
	z[19], borrow = bits.Sub64(5398946044502786900, x[19], borrow)
	z[20], borrow = bits.Sub64(4273410409657646401, x[20], borrow)
	z[21], borrow = bits.Sub64(4537558703021582627, x[21], borrow)
	z[22], borrow = bits.Sub64(3928743618185798328, x[22], borrow)
	z[23], borrow = bits.Sub64(8879819406488282694, x[23], borrow)
	z[24], borrow = bits.Sub64(7271679122806957198, x[24], borrow)
	z[25], _ = bits.Sub64(8309888569849274052, x[25], borrow)
	return z
}

// Div z = x*y^-1 mod q
func (z *Element26) Div(x, y *Element26) *Element26 {
	var yInv Element26
	yInv.Inverse(y)
	z.Mul(x, &yInv)
	return z
}

// Equal returns z == x
func (z *Element26) Equal(x *Element26) bool {
	return (z[25] == x[25]) && (z[24] == x[24]) && (z[23] == x[23]) && (z[22] == x[22]) && (z[21] == x[21]) && (z[20] == x[20]) && (z[19] == x[19]) && (z[18] == x[18]) && (z[17] == x[17]) && (z[16] == x[16]) && (z[15] == x[15]) && (z[14] == x[14]) && (z[13] == x[13]) && (z[12] == x[12]) && (z[11] == x[11]) && (z[10] == x[10]) && (z[9] == x[9]) && (z[8] == x[8]) && (z[7] == x[7]) && (z[6] == x[6]) && (z[5] == x[5]) && (z[4] == x[4]) && (z[3] == x[3]) && (z[2] == x[2]) && (z[1] == x[1]) && (z[0] == x[0])
}

// IsZero returns z == 0
func (z *Element26) IsZero() bool {
	return (z[25] | z[24] | z[23] | z[22] | z[21] | z[20] | z[19] | z[18] | z[17] | z[16] | z[15] | z[14] | z[13] | z[12] | z[11] | z[10] | z[9] | z[8] | z[7] | z[6] | z[5] | z[4] | z[3] | z[2] | z[1] | z[0]) == 0
}

// field modulus stored as big.Int
var _element26ModulusBigInt big.Int
var onceelement26Modulus sync.Once

func element26ModulusBigInt() *big.Int {
	onceelement26Modulus.Do(func() {
		_element26ModulusBigInt.SetString("369477726470881828346593914804635485169139980478504142002951407241937129306105269310839495355924629896106888231736392170166781677387180979064577167223088930638451067656913499343922357001125994006717722735830990195538891000618458282650972474469148521958658837156301595041330031881365131195374636049904696091142270575805218457050295304250412418356342145119973647497156888828063454739166127351444970671270001480048177359011531595279985574951370755300419186033505813893267162079003110591657025271933932771", 10)
	})
	return &_element26ModulusBigInt
}

// Inverse z = x^-1 mod q
// note: allocates a big.Int (math/big)
func (z *Element26) Inverse(x *Element26) *Element26 {
	var _xNonMont big.Int
	x.ToBigIntRegular(&_xNonMont)
	_xNonMont.ModInverse(&_xNonMont, element26ModulusBigInt())
	z.SetBigInt(&_xNonMont)
	return z
}

// SetRandom sets z to a random element < q
func (z *Element26) SetRandom() *Element26 {
	bytes := make([]byte, 208)
	io.ReadFull(rand.Reader, bytes)
	z[0] = binary.BigEndian.Uint64(bytes[0:8])
	z[1] = binary.BigEndian.Uint64(bytes[8:16])
	z[2] = binary.BigEndian.Uint64(bytes[16:24])
	z[3] = binary.BigEndian.Uint64(bytes[24:32])
	z[4] = binary.BigEndian.Uint64(bytes[32:40])
	z[5] = binary.BigEndian.Uint64(bytes[40:48])
	z[6] = binary.BigEndian.Uint64(bytes[48:56])
	z[7] = binary.BigEndian.Uint64(bytes[56:64])
	z[8] = binary.BigEndian.Uint64(bytes[64:72])
	z[9] = binary.BigEndian.Uint64(bytes[72:80])
	z[10] = binary.BigEndian.Uint64(bytes[80:88])
	z[11] = binary.BigEndian.Uint64(bytes[88:96])
	z[12] = binary.BigEndian.Uint64(bytes[96:104])
	z[13] = binary.BigEndian.Uint64(bytes[104:112])
	z[14] = binary.BigEndian.Uint64(bytes[112:120])
	z[15] = binary.BigEndian.Uint64(bytes[120:128])
	z[16] = binary.BigEndian.Uint64(bytes[128:136])
	z[17] = binary.BigEndian.Uint64(bytes[136:144])
	z[18] = binary.BigEndian.Uint64(bytes[144:152])
	z[19] = binary.BigEndian.Uint64(bytes[152:160])
	z[20] = binary.BigEndian.Uint64(bytes[160:168])
	z[21] = binary.BigEndian.Uint64(bytes[168:176])
	z[22] = binary.BigEndian.Uint64(bytes[176:184])
	z[23] = binary.BigEndian.Uint64(bytes[184:192])
	z[24] = binary.BigEndian.Uint64(bytes[192:200])
	z[25] = binary.BigEndian.Uint64(bytes[200:208])
	z[25] %= 8309888569849274052

	// if z > q --> z -= q
	// note: this is NOT constant time
	if !(z[25] < 8309888569849274052 || (z[25] == 8309888569849274052 && (z[24] < 7271679122806957198 || (z[24] == 7271679122806957198 && (z[23] < 8879819406488282694 || (z[23] == 8879819406488282694 && (z[22] < 3928743618185798328 || (z[22] == 3928743618185798328 && (z[21] < 4537558703021582627 || (z[21] == 4537558703021582627 && (z[20] < 4273410409657646401 || (z[20] == 4273410409657646401 && (z[19] < 5398946044502786900 || (z[19] == 5398946044502786900 && (z[18] < 17276345451380752723 || (z[18] == 17276345451380752723 && (z[17] < 9507551311801003185 || (z[17] == 9507551311801003185 && (z[16] < 4630686512774309735 || (z[16] == 4630686512774309735 && (z[15] < 16983043387714363747 || (z[15] == 16983043387714363747 && (z[14] < 13824311487681794110 || (z[14] == 13824311487681794110 && (z[13] < 17385381814834154638 || (z[13] == 17385381814834154638 && (z[12] < 15325324754623440453 || (z[12] == 15325324754623440453 && (z[11] < 15796543401904101149 || (z[11] == 15796543401904101149 && (z[10] < 11519318792880301074 || (z[10] == 11519318792880301074 && (z[9] < 13239980137592616616 || (z[9] == 13239980137592616616 && (z[8] < 6636171111773171774 || (z[8] == 6636171111773171774 && (z[7] < 8897023274092210430 || (z[7] == 8897023274092210430 && (z[6] < 4050149076413023135 || (z[6] == 4050149076413023135 && (z[5] < 1796901052372556044 || (z[5] == 1796901052372556044 && (z[4] < 13409037793353034008 || (z[4] == 13409037793353034008 && (z[3] < 6592698397043999240 || (z[3] == 6592698397043999240 && (z[2] < 8078499220748900576 || (z[2] == 8078499220748900576 && (z[1] < 1025855223173275832 || (z[1] == 1025855223173275832 && (z[0] < 4094365063281874147))))))))))))))))))))))))))))))))))))))))))))))))))) {
		var b uint64
		z[0], b = bits.Sub64(z[0], 4094365063281874147, 0)
		z[1], b = bits.Sub64(z[1], 1025855223173275832, b)
		z[2], b = bits.Sub64(z[2], 8078499220748900576, b)
		z[3], b = bits.Sub64(z[3], 6592698397043999240, b)
		z[4], b = bits.Sub64(z[4], 13409037793353034008, b)
		z[5], b = bits.Sub64(z[5], 1796901052372556044, b)
		z[6], b = bits.Sub64(z[6], 4050149076413023135, b)
		z[7], b = bits.Sub64(z[7], 8897023274092210430, b)
		z[8], b = bits.Sub64(z[8], 6636171111773171774, b)
		z[9], b = bits.Sub64(z[9], 13239980137592616616, b)
		z[10], b = bits.Sub64(z[10], 11519318792880301074, b)
		z[11], b = bits.Sub64(z[11], 15796543401904101149, b)
		z[12], b = bits.Sub64(z[12], 15325324754623440453, b)
		z[13], b = bits.Sub64(z[13], 17385381814834154638, b)
		z[14], b = bits.Sub64(z[14], 13824311487681794110, b)
		z[15], b = bits.Sub64(z[15], 16983043387714363747, b)
		z[16], b = bits.Sub64(z[16], 4630686512774309735, b)
		z[17], b = bits.Sub64(z[17], 9507551311801003185, b)
		z[18], b = bits.Sub64(z[18], 17276345451380752723, b)
		z[19], b = bits.Sub64(z[19], 5398946044502786900, b)
		z[20], b = bits.Sub64(z[20], 4273410409657646401, b)
		z[21], b = bits.Sub64(z[21], 4537558703021582627, b)
		z[22], b = bits.Sub64(z[22], 3928743618185798328, b)
		z[23], b = bits.Sub64(z[23], 8879819406488282694, b)
		z[24], b = bits.Sub64(z[24], 7271679122806957198, b)
		z[25], _ = bits.Sub64(z[25], 8309888569849274052, b)
	}

	return z
}

// Add z = x + y mod q
func (z *Element26) Add(x, y *Element26) *Element26 {
	var carry uint64

	z[0], carry = bits.Add64(x[0], y[0], 0)
	z[1], carry = bits.Add64(x[1], y[1], carry)
	z[2], carry = bits.Add64(x[2], y[2], carry)
	z[3], carry = bits.Add64(x[3], y[3], carry)
	z[4], carry = bits.Add64(x[4], y[4], carry)
	z[5], carry = bits.Add64(x[5], y[5], carry)
	z[6], carry = bits.Add64(x[6], y[6], carry)
	z[7], carry = bits.Add64(x[7], y[7], carry)
	z[8], carry = bits.Add64(x[8], y[8], carry)
	z[9], carry = bits.Add64(x[9], y[9], carry)
	z[10], carry = bits.Add64(x[10], y[10], carry)
	z[11], carry = bits.Add64(x[11], y[11], carry)
	z[12], carry = bits.Add64(x[12], y[12], carry)
	z[13], carry = bits.Add64(x[13], y[13], carry)
	z[14], carry = bits.Add64(x[14], y[14], carry)
	z[15], carry = bits.Add64(x[15], y[15], carry)
	z[16], carry = bits.Add64(x[16], y[16], carry)
	z[17], carry = bits.Add64(x[17], y[17], carry)
	z[18], carry = bits.Add64(x[18], y[18], carry)
	z[19], carry = bits.Add64(x[19], y[19], carry)
	z[20], carry = bits.Add64(x[20], y[20], carry)
	z[21], carry = bits.Add64(x[21], y[21], carry)
	z[22], carry = bits.Add64(x[22], y[22], carry)
	z[23], carry = bits.Add64(x[23], y[23], carry)
	z[24], carry = bits.Add64(x[24], y[24], carry)
	z[25], carry = bits.Add64(x[25], y[25], carry)
	// if we overflowed the last addition, z >= q
	// if z >= q, z = z - q
	if carry != 0 {
		// we overflowed, so z >= q
		z[0], carry = bits.Sub64(z[0], 4094365063281874147, 0)
		z[1], carry = bits.Sub64(z[1], 1025855223173275832, carry)
		z[2], carry = bits.Sub64(z[2], 8078499220748900576, carry)
		z[3], carry = bits.Sub64(z[3], 6592698397043999240, carry)
		z[4], carry = bits.Sub64(z[4], 13409037793353034008, carry)
		z[5], carry = bits.Sub64(z[5], 1796901052372556044, carry)
		z[6], carry = bits.Sub64(z[6], 4050149076413023135, carry)
		z[7], carry = bits.Sub64(z[7], 8897023274092210430, carry)
		z[8], carry = bits.Sub64(z[8], 6636171111773171774, carry)
		z[9], carry = bits.Sub64(z[9], 13239980137592616616, carry)
		z[10], carry = bits.Sub64(z[10], 11519318792880301074, carry)
		z[11], carry = bits.Sub64(z[11], 15796543401904101149, carry)
		z[12], carry = bits.Sub64(z[12], 15325324754623440453, carry)
		z[13], carry = bits.Sub64(z[13], 17385381814834154638, carry)
		z[14], carry = bits.Sub64(z[14], 13824311487681794110, carry)
		z[15], carry = bits.Sub64(z[15], 16983043387714363747, carry)
		z[16], carry = bits.Sub64(z[16], 4630686512774309735, carry)
		z[17], carry = bits.Sub64(z[17], 9507551311801003185, carry)
		z[18], carry = bits.Sub64(z[18], 17276345451380752723, carry)
		z[19], carry = bits.Sub64(z[19], 5398946044502786900, carry)
		z[20], carry = bits.Sub64(z[20], 4273410409657646401, carry)
		z[21], carry = bits.Sub64(z[21], 4537558703021582627, carry)
		z[22], carry = bits.Sub64(z[22], 3928743618185798328, carry)
		z[23], carry = bits.Sub64(z[23], 8879819406488282694, carry)
		z[24], carry = bits.Sub64(z[24], 7271679122806957198, carry)
		z[25], carry = bits.Sub64(z[25], 8309888569849274052, carry)
		return z
	}

	// if z > q --> z -= q
	// note: this is NOT constant time
	if !(z[25] < 8309888569849274052 || (z[25] == 8309888569849274052 && (z[24] < 7271679122806957198 || (z[24] == 7271679122806957198 && (z[23] < 8879819406488282694 || (z[23] == 8879819406488282694 && (z[22] < 3928743618185798328 || (z[22] == 3928743618185798328 && (z[21] < 4537558703021582627 || (z[21] == 4537558703021582627 && (z[20] < 4273410409657646401 || (z[20] == 4273410409657646401 && (z[19] < 5398946044502786900 || (z[19] == 5398946044502786900 && (z[18] < 17276345451380752723 || (z[18] == 17276345451380752723 && (z[17] < 9507551311801003185 || (z[17] == 9507551311801003185 && (z[16] < 4630686512774309735 || (z[16] == 4630686512774309735 && (z[15] < 16983043387714363747 || (z[15] == 16983043387714363747 && (z[14] < 13824311487681794110 || (z[14] == 13824311487681794110 && (z[13] < 17385381814834154638 || (z[13] == 17385381814834154638 && (z[12] < 15325324754623440453 || (z[12] == 15325324754623440453 && (z[11] < 15796543401904101149 || (z[11] == 15796543401904101149 && (z[10] < 11519318792880301074 || (z[10] == 11519318792880301074 && (z[9] < 13239980137592616616 || (z[9] == 13239980137592616616 && (z[8] < 6636171111773171774 || (z[8] == 6636171111773171774 && (z[7] < 8897023274092210430 || (z[7] == 8897023274092210430 && (z[6] < 4050149076413023135 || (z[6] == 4050149076413023135 && (z[5] < 1796901052372556044 || (z[5] == 1796901052372556044 && (z[4] < 13409037793353034008 || (z[4] == 13409037793353034008 && (z[3] < 6592698397043999240 || (z[3] == 6592698397043999240 && (z[2] < 8078499220748900576 || (z[2] == 8078499220748900576 && (z[1] < 1025855223173275832 || (z[1] == 1025855223173275832 && (z[0] < 4094365063281874147))))))))))))))))))))))))))))))))))))))))))))))))))) {
		var b uint64
		z[0], b = bits.Sub64(z[0], 4094365063281874147, 0)
		z[1], b = bits.Sub64(z[1], 1025855223173275832, b)
		z[2], b = bits.Sub64(z[2], 8078499220748900576, b)
		z[3], b = bits.Sub64(z[3], 6592698397043999240, b)
		z[4], b = bits.Sub64(z[4], 13409037793353034008, b)
		z[5], b = bits.Sub64(z[5], 1796901052372556044, b)
		z[6], b = bits.Sub64(z[6], 4050149076413023135, b)
		z[7], b = bits.Sub64(z[7], 8897023274092210430, b)
		z[8], b = bits.Sub64(z[8], 6636171111773171774, b)
		z[9], b = bits.Sub64(z[9], 13239980137592616616, b)
		z[10], b = bits.Sub64(z[10], 11519318792880301074, b)
		z[11], b = bits.Sub64(z[11], 15796543401904101149, b)
		z[12], b = bits.Sub64(z[12], 15325324754623440453, b)
		z[13], b = bits.Sub64(z[13], 17385381814834154638, b)
		z[14], b = bits.Sub64(z[14], 13824311487681794110, b)
		z[15], b = bits.Sub64(z[15], 16983043387714363747, b)
		z[16], b = bits.Sub64(z[16], 4630686512774309735, b)
		z[17], b = bits.Sub64(z[17], 9507551311801003185, b)
		z[18], b = bits.Sub64(z[18], 17276345451380752723, b)
		z[19], b = bits.Sub64(z[19], 5398946044502786900, b)
		z[20], b = bits.Sub64(z[20], 4273410409657646401, b)
		z[21], b = bits.Sub64(z[21], 4537558703021582627, b)
		z[22], b = bits.Sub64(z[22], 3928743618185798328, b)
		z[23], b = bits.Sub64(z[23], 8879819406488282694, b)
		z[24], b = bits.Sub64(z[24], 7271679122806957198, b)
		z[25], _ = bits.Sub64(z[25], 8309888569849274052, b)
	}
	return z
}

// AddAssign z = z + x mod q
func (z *Element26) AddAssign(x *Element26) *Element26 {
	var carry uint64

	z[0], carry = bits.Add64(z[0], x[0], 0)
	z[1], carry = bits.Add64(z[1], x[1], carry)
	z[2], carry = bits.Add64(z[2], x[2], carry)
	z[3], carry = bits.Add64(z[3], x[3], carry)
	z[4], carry = bits.Add64(z[4], x[4], carry)
	z[5], carry = bits.Add64(z[5], x[5], carry)
	z[6], carry = bits.Add64(z[6], x[6], carry)
	z[7], carry = bits.Add64(z[7], x[7], carry)
	z[8], carry = bits.Add64(z[8], x[8], carry)
	z[9], carry = bits.Add64(z[9], x[9], carry)
	z[10], carry = bits.Add64(z[10], x[10], carry)
	z[11], carry = bits.Add64(z[11], x[11], carry)
	z[12], carry = bits.Add64(z[12], x[12], carry)
	z[13], carry = bits.Add64(z[13], x[13], carry)
	z[14], carry = bits.Add64(z[14], x[14], carry)
	z[15], carry = bits.Add64(z[15], x[15], carry)
	z[16], carry = bits.Add64(z[16], x[16], carry)
	z[17], carry = bits.Add64(z[17], x[17], carry)
	z[18], carry = bits.Add64(z[18], x[18], carry)
	z[19], carry = bits.Add64(z[19], x[19], carry)
	z[20], carry = bits.Add64(z[20], x[20], carry)
	z[21], carry = bits.Add64(z[21], x[21], carry)
	z[22], carry = bits.Add64(z[22], x[22], carry)
	z[23], carry = bits.Add64(z[23], x[23], carry)
	z[24], carry = bits.Add64(z[24], x[24], carry)
	z[25], carry = bits.Add64(z[25], x[25], carry)
	// if we overflowed the last addition, z >= q
	// if z >= q, z = z - q
	if carry != 0 {
		// we overflowed, so z >= q
		z[0], carry = bits.Sub64(z[0], 4094365063281874147, 0)
		z[1], carry = bits.Sub64(z[1], 1025855223173275832, carry)
		z[2], carry = bits.Sub64(z[2], 8078499220748900576, carry)
		z[3], carry = bits.Sub64(z[3], 6592698397043999240, carry)
		z[4], carry = bits.Sub64(z[4], 13409037793353034008, carry)
		z[5], carry = bits.Sub64(z[5], 1796901052372556044, carry)
		z[6], carry = bits.Sub64(z[6], 4050149076413023135, carry)
		z[7], carry = bits.Sub64(z[7], 8897023274092210430, carry)
		z[8], carry = bits.Sub64(z[8], 6636171111773171774, carry)
		z[9], carry = bits.Sub64(z[9], 13239980137592616616, carry)
		z[10], carry = bits.Sub64(z[10], 11519318792880301074, carry)
		z[11], carry = bits.Sub64(z[11], 15796543401904101149, carry)
		z[12], carry = bits.Sub64(z[12], 15325324754623440453, carry)
		z[13], carry = bits.Sub64(z[13], 17385381814834154638, carry)
		z[14], carry = bits.Sub64(z[14], 13824311487681794110, carry)
		z[15], carry = bits.Sub64(z[15], 16983043387714363747, carry)
		z[16], carry = bits.Sub64(z[16], 4630686512774309735, carry)
		z[17], carry = bits.Sub64(z[17], 9507551311801003185, carry)
		z[18], carry = bits.Sub64(z[18], 17276345451380752723, carry)
		z[19], carry = bits.Sub64(z[19], 5398946044502786900, carry)
		z[20], carry = bits.Sub64(z[20], 4273410409657646401, carry)
		z[21], carry = bits.Sub64(z[21], 4537558703021582627, carry)
		z[22], carry = bits.Sub64(z[22], 3928743618185798328, carry)
		z[23], carry = bits.Sub64(z[23], 8879819406488282694, carry)
		z[24], carry = bits.Sub64(z[24], 7271679122806957198, carry)
		z[25], carry = bits.Sub64(z[25], 8309888569849274052, carry)
		return z
	}

	// if z > q --> z -= q
	// note: this is NOT constant time
	if !(z[25] < 8309888569849274052 || (z[25] == 8309888569849274052 && (z[24] < 7271679122806957198 || (z[24] == 7271679122806957198 && (z[23] < 8879819406488282694 || (z[23] == 8879819406488282694 && (z[22] < 3928743618185798328 || (z[22] == 3928743618185798328 && (z[21] < 4537558703021582627 || (z[21] == 4537558703021582627 && (z[20] < 4273410409657646401 || (z[20] == 4273410409657646401 && (z[19] < 5398946044502786900 || (z[19] == 5398946044502786900 && (z[18] < 17276345451380752723 || (z[18] == 17276345451380752723 && (z[17] < 9507551311801003185 || (z[17] == 9507551311801003185 && (z[16] < 4630686512774309735 || (z[16] == 4630686512774309735 && (z[15] < 16983043387714363747 || (z[15] == 16983043387714363747 && (z[14] < 13824311487681794110 || (z[14] == 13824311487681794110 && (z[13] < 17385381814834154638 || (z[13] == 17385381814834154638 && (z[12] < 15325324754623440453 || (z[12] == 15325324754623440453 && (z[11] < 15796543401904101149 || (z[11] == 15796543401904101149 && (z[10] < 11519318792880301074 || (z[10] == 11519318792880301074 && (z[9] < 13239980137592616616 || (z[9] == 13239980137592616616 && (z[8] < 6636171111773171774 || (z[8] == 6636171111773171774 && (z[7] < 8897023274092210430 || (z[7] == 8897023274092210430 && (z[6] < 4050149076413023135 || (z[6] == 4050149076413023135 && (z[5] < 1796901052372556044 || (z[5] == 1796901052372556044 && (z[4] < 13409037793353034008 || (z[4] == 13409037793353034008 && (z[3] < 6592698397043999240 || (z[3] == 6592698397043999240 && (z[2] < 8078499220748900576 || (z[2] == 8078499220748900576 && (z[1] < 1025855223173275832 || (z[1] == 1025855223173275832 && (z[0] < 4094365063281874147))))))))))))))))))))))))))))))))))))))))))))))))))) {
		var b uint64
		z[0], b = bits.Sub64(z[0], 4094365063281874147, 0)
		z[1], b = bits.Sub64(z[1], 1025855223173275832, b)
		z[2], b = bits.Sub64(z[2], 8078499220748900576, b)
		z[3], b = bits.Sub64(z[3], 6592698397043999240, b)
		z[4], b = bits.Sub64(z[4], 13409037793353034008, b)
		z[5], b = bits.Sub64(z[5], 1796901052372556044, b)
		z[6], b = bits.Sub64(z[6], 4050149076413023135, b)
		z[7], b = bits.Sub64(z[7], 8897023274092210430, b)
		z[8], b = bits.Sub64(z[8], 6636171111773171774, b)
		z[9], b = bits.Sub64(z[9], 13239980137592616616, b)
		z[10], b = bits.Sub64(z[10], 11519318792880301074, b)
		z[11], b = bits.Sub64(z[11], 15796543401904101149, b)
		z[12], b = bits.Sub64(z[12], 15325324754623440453, b)
		z[13], b = bits.Sub64(z[13], 17385381814834154638, b)
		z[14], b = bits.Sub64(z[14], 13824311487681794110, b)
		z[15], b = bits.Sub64(z[15], 16983043387714363747, b)
		z[16], b = bits.Sub64(z[16], 4630686512774309735, b)
		z[17], b = bits.Sub64(z[17], 9507551311801003185, b)
		z[18], b = bits.Sub64(z[18], 17276345451380752723, b)
		z[19], b = bits.Sub64(z[19], 5398946044502786900, b)
		z[20], b = bits.Sub64(z[20], 4273410409657646401, b)
		z[21], b = bits.Sub64(z[21], 4537558703021582627, b)
		z[22], b = bits.Sub64(z[22], 3928743618185798328, b)
		z[23], b = bits.Sub64(z[23], 8879819406488282694, b)
		z[24], b = bits.Sub64(z[24], 7271679122806957198, b)
		z[25], _ = bits.Sub64(z[25], 8309888569849274052, b)
	}
	return z
}

// Double z = x + x mod q, aka Lsh 1
func (z *Element26) Double(x *Element26) *Element26 {
	var carry uint64

	z[0], carry = bits.Add64(x[0], x[0], 0)
	z[1], carry = bits.Add64(x[1], x[1], carry)
	z[2], carry = bits.Add64(x[2], x[2], carry)
	z[3], carry = bits.Add64(x[3], x[3], carry)
	z[4], carry = bits.Add64(x[4], x[4], carry)
	z[5], carry = bits.Add64(x[5], x[5], carry)
	z[6], carry = bits.Add64(x[6], x[6], carry)
	z[7], carry = bits.Add64(x[7], x[7], carry)
	z[8], carry = bits.Add64(x[8], x[8], carry)
	z[9], carry = bits.Add64(x[9], x[9], carry)
	z[10], carry = bits.Add64(x[10], x[10], carry)
	z[11], carry = bits.Add64(x[11], x[11], carry)
	z[12], carry = bits.Add64(x[12], x[12], carry)
	z[13], carry = bits.Add64(x[13], x[13], carry)
	z[14], carry = bits.Add64(x[14], x[14], carry)
	z[15], carry = bits.Add64(x[15], x[15], carry)
	z[16], carry = bits.Add64(x[16], x[16], carry)
	z[17], carry = bits.Add64(x[17], x[17], carry)
	z[18], carry = bits.Add64(x[18], x[18], carry)
	z[19], carry = bits.Add64(x[19], x[19], carry)
	z[20], carry = bits.Add64(x[20], x[20], carry)
	z[21], carry = bits.Add64(x[21], x[21], carry)
	z[22], carry = bits.Add64(x[22], x[22], carry)
	z[23], carry = bits.Add64(x[23], x[23], carry)
	z[24], carry = bits.Add64(x[24], x[24], carry)
	z[25], carry = bits.Add64(x[25], x[25], carry)
	// if we overflowed the last addition, z >= q
	// if z >= q, z = z - q
	if carry != 0 {
		// we overflowed, so z >= q
		z[0], carry = bits.Sub64(z[0], 4094365063281874147, 0)
		z[1], carry = bits.Sub64(z[1], 1025855223173275832, carry)
		z[2], carry = bits.Sub64(z[2], 8078499220748900576, carry)
		z[3], carry = bits.Sub64(z[3], 6592698397043999240, carry)
		z[4], carry = bits.Sub64(z[4], 13409037793353034008, carry)
		z[5], carry = bits.Sub64(z[5], 1796901052372556044, carry)
		z[6], carry = bits.Sub64(z[6], 4050149076413023135, carry)
		z[7], carry = bits.Sub64(z[7], 8897023274092210430, carry)
		z[8], carry = bits.Sub64(z[8], 6636171111773171774, carry)
		z[9], carry = bits.Sub64(z[9], 13239980137592616616, carry)
		z[10], carry = bits.Sub64(z[10], 11519318792880301074, carry)
		z[11], carry = bits.Sub64(z[11], 15796543401904101149, carry)
		z[12], carry = bits.Sub64(z[12], 15325324754623440453, carry)
		z[13], carry = bits.Sub64(z[13], 17385381814834154638, carry)
		z[14], carry = bits.Sub64(z[14], 13824311487681794110, carry)
		z[15], carry = bits.Sub64(z[15], 16983043387714363747, carry)
		z[16], carry = bits.Sub64(z[16], 4630686512774309735, carry)
		z[17], carry = bits.Sub64(z[17], 9507551311801003185, carry)
		z[18], carry = bits.Sub64(z[18], 17276345451380752723, carry)
		z[19], carry = bits.Sub64(z[19], 5398946044502786900, carry)
		z[20], carry = bits.Sub64(z[20], 4273410409657646401, carry)
		z[21], carry = bits.Sub64(z[21], 4537558703021582627, carry)
		z[22], carry = bits.Sub64(z[22], 3928743618185798328, carry)
		z[23], carry = bits.Sub64(z[23], 8879819406488282694, carry)
		z[24], carry = bits.Sub64(z[24], 7271679122806957198, carry)
		z[25], carry = bits.Sub64(z[25], 8309888569849274052, carry)
		return z
	}

	// if z > q --> z -= q
	// note: this is NOT constant time
	if !(z[25] < 8309888569849274052 || (z[25] == 8309888569849274052 && (z[24] < 7271679122806957198 || (z[24] == 7271679122806957198 && (z[23] < 8879819406488282694 || (z[23] == 8879819406488282694 && (z[22] < 3928743618185798328 || (z[22] == 3928743618185798328 && (z[21] < 4537558703021582627 || (z[21] == 4537558703021582627 && (z[20] < 4273410409657646401 || (z[20] == 4273410409657646401 && (z[19] < 5398946044502786900 || (z[19] == 5398946044502786900 && (z[18] < 17276345451380752723 || (z[18] == 17276345451380752723 && (z[17] < 9507551311801003185 || (z[17] == 9507551311801003185 && (z[16] < 4630686512774309735 || (z[16] == 4630686512774309735 && (z[15] < 16983043387714363747 || (z[15] == 16983043387714363747 && (z[14] < 13824311487681794110 || (z[14] == 13824311487681794110 && (z[13] < 17385381814834154638 || (z[13] == 17385381814834154638 && (z[12] < 15325324754623440453 || (z[12] == 15325324754623440453 && (z[11] < 15796543401904101149 || (z[11] == 15796543401904101149 && (z[10] < 11519318792880301074 || (z[10] == 11519318792880301074 && (z[9] < 13239980137592616616 || (z[9] == 13239980137592616616 && (z[8] < 6636171111773171774 || (z[8] == 6636171111773171774 && (z[7] < 8897023274092210430 || (z[7] == 8897023274092210430 && (z[6] < 4050149076413023135 || (z[6] == 4050149076413023135 && (z[5] < 1796901052372556044 || (z[5] == 1796901052372556044 && (z[4] < 13409037793353034008 || (z[4] == 13409037793353034008 && (z[3] < 6592698397043999240 || (z[3] == 6592698397043999240 && (z[2] < 8078499220748900576 || (z[2] == 8078499220748900576 && (z[1] < 1025855223173275832 || (z[1] == 1025855223173275832 && (z[0] < 4094365063281874147))))))))))))))))))))))))))))))))))))))))))))))))))) {
		var b uint64
		z[0], b = bits.Sub64(z[0], 4094365063281874147, 0)
		z[1], b = bits.Sub64(z[1], 1025855223173275832, b)
		z[2], b = bits.Sub64(z[2], 8078499220748900576, b)
		z[3], b = bits.Sub64(z[3], 6592698397043999240, b)
		z[4], b = bits.Sub64(z[4], 13409037793353034008, b)
		z[5], b = bits.Sub64(z[5], 1796901052372556044, b)
		z[6], b = bits.Sub64(z[6], 4050149076413023135, b)
		z[7], b = bits.Sub64(z[7], 8897023274092210430, b)
		z[8], b = bits.Sub64(z[8], 6636171111773171774, b)
		z[9], b = bits.Sub64(z[9], 13239980137592616616, b)
		z[10], b = bits.Sub64(z[10], 11519318792880301074, b)
		z[11], b = bits.Sub64(z[11], 15796543401904101149, b)
		z[12], b = bits.Sub64(z[12], 15325324754623440453, b)
		z[13], b = bits.Sub64(z[13], 17385381814834154638, b)
		z[14], b = bits.Sub64(z[14], 13824311487681794110, b)
		z[15], b = bits.Sub64(z[15], 16983043387714363747, b)
		z[16], b = bits.Sub64(z[16], 4630686512774309735, b)
		z[17], b = bits.Sub64(z[17], 9507551311801003185, b)
		z[18], b = bits.Sub64(z[18], 17276345451380752723, b)
		z[19], b = bits.Sub64(z[19], 5398946044502786900, b)
		z[20], b = bits.Sub64(z[20], 4273410409657646401, b)
		z[21], b = bits.Sub64(z[21], 4537558703021582627, b)
		z[22], b = bits.Sub64(z[22], 3928743618185798328, b)
		z[23], b = bits.Sub64(z[23], 8879819406488282694, b)
		z[24], b = bits.Sub64(z[24], 7271679122806957198, b)
		z[25], _ = bits.Sub64(z[25], 8309888569849274052, b)
	}
	return z
}

// Sub  z = x - y mod q
func (z *Element26) Sub(x, y *Element26) *Element26 {
	var b uint64
	z[0], b = bits.Sub64(x[0], y[0], 0)
	z[1], b = bits.Sub64(x[1], y[1], b)
	z[2], b = bits.Sub64(x[2], y[2], b)
	z[3], b = bits.Sub64(x[3], y[3], b)
	z[4], b = bits.Sub64(x[4], y[4], b)
	z[5], b = bits.Sub64(x[5], y[5], b)
	z[6], b = bits.Sub64(x[6], y[6], b)
	z[7], b = bits.Sub64(x[7], y[7], b)
	z[8], b = bits.Sub64(x[8], y[8], b)
	z[9], b = bits.Sub64(x[9], y[9], b)
	z[10], b = bits.Sub64(x[10], y[10], b)
	z[11], b = bits.Sub64(x[11], y[11], b)
	z[12], b = bits.Sub64(x[12], y[12], b)
	z[13], b = bits.Sub64(x[13], y[13], b)
	z[14], b = bits.Sub64(x[14], y[14], b)
	z[15], b = bits.Sub64(x[15], y[15], b)
	z[16], b = bits.Sub64(x[16], y[16], b)
	z[17], b = bits.Sub64(x[17], y[17], b)
	z[18], b = bits.Sub64(x[18], y[18], b)
	z[19], b = bits.Sub64(x[19], y[19], b)
	z[20], b = bits.Sub64(x[20], y[20], b)
	z[21], b = bits.Sub64(x[21], y[21], b)
	z[22], b = bits.Sub64(x[22], y[22], b)
	z[23], b = bits.Sub64(x[23], y[23], b)
	z[24], b = bits.Sub64(x[24], y[24], b)
	z[25], b = bits.Sub64(x[25], y[25], b)
	if b != 0 {
		var c uint64
		z[0], c = bits.Add64(z[0], 4094365063281874147, 0)
		z[1], c = bits.Add64(z[1], 1025855223173275832, c)
		z[2], c = bits.Add64(z[2], 8078499220748900576, c)
		z[3], c = bits.Add64(z[3], 6592698397043999240, c)
		z[4], c = bits.Add64(z[4], 13409037793353034008, c)
		z[5], c = bits.Add64(z[5], 1796901052372556044, c)
		z[6], c = bits.Add64(z[6], 4050149076413023135, c)
		z[7], c = bits.Add64(z[7], 8897023274092210430, c)
		z[8], c = bits.Add64(z[8], 6636171111773171774, c)
		z[9], c = bits.Add64(z[9], 13239980137592616616, c)
		z[10], c = bits.Add64(z[10], 11519318792880301074, c)
		z[11], c = bits.Add64(z[11], 15796543401904101149, c)
		z[12], c = bits.Add64(z[12], 15325324754623440453, c)
		z[13], c = bits.Add64(z[13], 17385381814834154638, c)
		z[14], c = bits.Add64(z[14], 13824311487681794110, c)
		z[15], c = bits.Add64(z[15], 16983043387714363747, c)
		z[16], c = bits.Add64(z[16], 4630686512774309735, c)
		z[17], c = bits.Add64(z[17], 9507551311801003185, c)
		z[18], c = bits.Add64(z[18], 17276345451380752723, c)
		z[19], c = bits.Add64(z[19], 5398946044502786900, c)
		z[20], c = bits.Add64(z[20], 4273410409657646401, c)
		z[21], c = bits.Add64(z[21], 4537558703021582627, c)
		z[22], c = bits.Add64(z[22], 3928743618185798328, c)
		z[23], c = bits.Add64(z[23], 8879819406488282694, c)
		z[24], c = bits.Add64(z[24], 7271679122806957198, c)
		z[25], _ = bits.Add64(z[25], 8309888569849274052, c)
	}
	return z
}

// SubAssign  z = z - x mod q
func (z *Element26) SubAssign(x *Element26) *Element26 {
	var b uint64
	z[0], b = bits.Sub64(z[0], x[0], 0)
	z[1], b = bits.Sub64(z[1], x[1], b)
	z[2], b = bits.Sub64(z[2], x[2], b)
	z[3], b = bits.Sub64(z[3], x[3], b)
	z[4], b = bits.Sub64(z[4], x[4], b)
	z[5], b = bits.Sub64(z[5], x[5], b)
	z[6], b = bits.Sub64(z[6], x[6], b)
	z[7], b = bits.Sub64(z[7], x[7], b)
	z[8], b = bits.Sub64(z[8], x[8], b)
	z[9], b = bits.Sub64(z[9], x[9], b)
	z[10], b = bits.Sub64(z[10], x[10], b)
	z[11], b = bits.Sub64(z[11], x[11], b)
	z[12], b = bits.Sub64(z[12], x[12], b)
	z[13], b = bits.Sub64(z[13], x[13], b)
	z[14], b = bits.Sub64(z[14], x[14], b)
	z[15], b = bits.Sub64(z[15], x[15], b)
	z[16], b = bits.Sub64(z[16], x[16], b)
	z[17], b = bits.Sub64(z[17], x[17], b)
	z[18], b = bits.Sub64(z[18], x[18], b)
	z[19], b = bits.Sub64(z[19], x[19], b)
	z[20], b = bits.Sub64(z[20], x[20], b)
	z[21], b = bits.Sub64(z[21], x[21], b)
	z[22], b = bits.Sub64(z[22], x[22], b)
	z[23], b = bits.Sub64(z[23], x[23], b)
	z[24], b = bits.Sub64(z[24], x[24], b)
	z[25], b = bits.Sub64(z[25], x[25], b)
	if b != 0 {
		var c uint64
		z[0], c = bits.Add64(z[0], 4094365063281874147, 0)
		z[1], c = bits.Add64(z[1], 1025855223173275832, c)
		z[2], c = bits.Add64(z[2], 8078499220748900576, c)
		z[3], c = bits.Add64(z[3], 6592698397043999240, c)
		z[4], c = bits.Add64(z[4], 13409037793353034008, c)
		z[5], c = bits.Add64(z[5], 1796901052372556044, c)
		z[6], c = bits.Add64(z[6], 4050149076413023135, c)
		z[7], c = bits.Add64(z[7], 8897023274092210430, c)
		z[8], c = bits.Add64(z[8], 6636171111773171774, c)
		z[9], c = bits.Add64(z[9], 13239980137592616616, c)
		z[10], c = bits.Add64(z[10], 11519318792880301074, c)
		z[11], c = bits.Add64(z[11], 15796543401904101149, c)
		z[12], c = bits.Add64(z[12], 15325324754623440453, c)
		z[13], c = bits.Add64(z[13], 17385381814834154638, c)
		z[14], c = bits.Add64(z[14], 13824311487681794110, c)
		z[15], c = bits.Add64(z[15], 16983043387714363747, c)
		z[16], c = bits.Add64(z[16], 4630686512774309735, c)
		z[17], c = bits.Add64(z[17], 9507551311801003185, c)
		z[18], c = bits.Add64(z[18], 17276345451380752723, c)
		z[19], c = bits.Add64(z[19], 5398946044502786900, c)
		z[20], c = bits.Add64(z[20], 4273410409657646401, c)
		z[21], c = bits.Add64(z[21], 4537558703021582627, c)
		z[22], c = bits.Add64(z[22], 3928743618185798328, c)
		z[23], c = bits.Add64(z[23], 8879819406488282694, c)
		z[24], c = bits.Add64(z[24], 7271679122806957198, c)
		z[25], _ = bits.Add64(z[25], 8309888569849274052, c)
	}
	return z
}

// Exp z = x^exponent mod q
// (not optimized)
// exponent (non-montgomery form) is ordered from least significant word to most significant word
func (z *Element26) Exp(x Element26, exponent ...uint64) *Element26 {
	r := 0
	msb := 0
	for i := len(exponent) - 1; i >= 0; i-- {
		if exponent[i] == 0 {
			r++
		} else {
			msb = (i * 64) + bits.Len64(exponent[i])
			break
		}
	}
	exponent = exponent[:len(exponent)-r]
	if len(exponent) == 0 {
		return z.SetOne()
	}

	z.Set(&x)

	l := msb - 2
	for i := l; i >= 0; i-- {
		z.Square(z)
		if exponent[i/64]&(1<<uint(i%64)) != 0 {
			z.MulAssign(&x)
		}
	}
	return z
}

// FromMont converts z in place (i.e. mutates) from Montgomery to regular representation
// sets and returns z = z * 1
func (z *Element26) FromMont() *Element26 {

	// the following lines implement z = z * 1
	// with a modified CIOS montgomery multiplication
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 8290328699649503029
		C := madd0(m, 4094365063281874147, z[0])
		C, z[0] = madd2(m, 1025855223173275832, z[1], C)
		C, z[1] = madd2(m, 8078499220748900576, z[2], C)
		C, z[2] = madd2(m, 6592698397043999240, z[3], C)
		C, z[3] = madd2(m, 13409037793353034008, z[4], C)
		C, z[4] = madd2(m, 1796901052372556044, z[5], C)
		C, z[5] = madd2(m, 4050149076413023135, z[6], C)
		C, z[6] = madd2(m, 8897023274092210430, z[7], C)
		C, z[7] = madd2(m, 6636171111773171774, z[8], C)
		C, z[8] = madd2(m, 13239980137592616616, z[9], C)
		C, z[9] = madd2(m, 11519318792880301074, z[10], C)
		C, z[10] = madd2(m, 15796543401904101149, z[11], C)
		C, z[11] = madd2(m, 15325324754623440453, z[12], C)
		C, z[12] = madd2(m, 17385381814834154638, z[13], C)
		C, z[13] = madd2(m, 13824311487681794110, z[14], C)
		C, z[14] = madd2(m, 16983043387714363747, z[15], C)
		C, z[15] = madd2(m, 4630686512774309735, z[16], C)
		C, z[16] = madd2(m, 9507551311801003185, z[17], C)
		C, z[17] = madd2(m, 17276345451380752723, z[18], C)
		C, z[18] = madd2(m, 5398946044502786900, z[19], C)
		C, z[19] = madd2(m, 4273410409657646401, z[20], C)
		C, z[20] = madd2(m, 4537558703021582627, z[21], C)
		C, z[21] = madd2(m, 3928743618185798328, z[22], C)
		C, z[22] = madd2(m, 8879819406488282694, z[23], C)
		C, z[23] = madd2(m, 7271679122806957198, z[24], C)
		C, z[24] = madd2(m, 8309888569849274052, z[25], C)
		z[25] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 8290328699649503029
		C := madd0(m, 4094365063281874147, z[0])
		C, z[0] = madd2(m, 1025855223173275832, z[1], C)
		C, z[1] = madd2(m, 8078499220748900576, z[2], C)
		C, z[2] = madd2(m, 6592698397043999240, z[3], C)
		C, z[3] = madd2(m, 13409037793353034008, z[4], C)
		C, z[4] = madd2(m, 1796901052372556044, z[5], C)
		C, z[5] = madd2(m, 4050149076413023135, z[6], C)
		C, z[6] = madd2(m, 8897023274092210430, z[7], C)
		C, z[7] = madd2(m, 6636171111773171774, z[8], C)
		C, z[8] = madd2(m, 13239980137592616616, z[9], C)
		C, z[9] = madd2(m, 11519318792880301074, z[10], C)
		C, z[10] = madd2(m, 15796543401904101149, z[11], C)
		C, z[11] = madd2(m, 15325324754623440453, z[12], C)
		C, z[12] = madd2(m, 17385381814834154638, z[13], C)
		C, z[13] = madd2(m, 13824311487681794110, z[14], C)
		C, z[14] = madd2(m, 16983043387714363747, z[15], C)
		C, z[15] = madd2(m, 4630686512774309735, z[16], C)
		C, z[16] = madd2(m, 9507551311801003185, z[17], C)
		C, z[17] = madd2(m, 17276345451380752723, z[18], C)
		C, z[18] = madd2(m, 5398946044502786900, z[19], C)
		C, z[19] = madd2(m, 4273410409657646401, z[20], C)
		C, z[20] = madd2(m, 4537558703021582627, z[21], C)
		C, z[21] = madd2(m, 3928743618185798328, z[22], C)
		C, z[22] = madd2(m, 8879819406488282694, z[23], C)
		C, z[23] = madd2(m, 7271679122806957198, z[24], C)
		C, z[24] = madd2(m, 8309888569849274052, z[25], C)
		z[25] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 8290328699649503029
		C := madd0(m, 4094365063281874147, z[0])
		C, z[0] = madd2(m, 1025855223173275832, z[1], C)
		C, z[1] = madd2(m, 8078499220748900576, z[2], C)
		C, z[2] = madd2(m, 6592698397043999240, z[3], C)
		C, z[3] = madd2(m, 13409037793353034008, z[4], C)
		C, z[4] = madd2(m, 1796901052372556044, z[5], C)
		C, z[5] = madd2(m, 4050149076413023135, z[6], C)
		C, z[6] = madd2(m, 8897023274092210430, z[7], C)
		C, z[7] = madd2(m, 6636171111773171774, z[8], C)
		C, z[8] = madd2(m, 13239980137592616616, z[9], C)
		C, z[9] = madd2(m, 11519318792880301074, z[10], C)
		C, z[10] = madd2(m, 15796543401904101149, z[11], C)
		C, z[11] = madd2(m, 15325324754623440453, z[12], C)
		C, z[12] = madd2(m, 17385381814834154638, z[13], C)
		C, z[13] = madd2(m, 13824311487681794110, z[14], C)
		C, z[14] = madd2(m, 16983043387714363747, z[15], C)
		C, z[15] = madd2(m, 4630686512774309735, z[16], C)
		C, z[16] = madd2(m, 9507551311801003185, z[17], C)
		C, z[17] = madd2(m, 17276345451380752723, z[18], C)
		C, z[18] = madd2(m, 5398946044502786900, z[19], C)
		C, z[19] = madd2(m, 4273410409657646401, z[20], C)
		C, z[20] = madd2(m, 4537558703021582627, z[21], C)
		C, z[21] = madd2(m, 3928743618185798328, z[22], C)
		C, z[22] = madd2(m, 8879819406488282694, z[23], C)
		C, z[23] = madd2(m, 7271679122806957198, z[24], C)
		C, z[24] = madd2(m, 8309888569849274052, z[25], C)
		z[25] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 8290328699649503029
		C := madd0(m, 4094365063281874147, z[0])
		C, z[0] = madd2(m, 1025855223173275832, z[1], C)
		C, z[1] = madd2(m, 8078499220748900576, z[2], C)
		C, z[2] = madd2(m, 6592698397043999240, z[3], C)
		C, z[3] = madd2(m, 13409037793353034008, z[4], C)
		C, z[4] = madd2(m, 1796901052372556044, z[5], C)
		C, z[5] = madd2(m, 4050149076413023135, z[6], C)
		C, z[6] = madd2(m, 8897023274092210430, z[7], C)
		C, z[7] = madd2(m, 6636171111773171774, z[8], C)
		C, z[8] = madd2(m, 13239980137592616616, z[9], C)
		C, z[9] = madd2(m, 11519318792880301074, z[10], C)
		C, z[10] = madd2(m, 15796543401904101149, z[11], C)
		C, z[11] = madd2(m, 15325324754623440453, z[12], C)
		C, z[12] = madd2(m, 17385381814834154638, z[13], C)
		C, z[13] = madd2(m, 13824311487681794110, z[14], C)
		C, z[14] = madd2(m, 16983043387714363747, z[15], C)
		C, z[15] = madd2(m, 4630686512774309735, z[16], C)
		C, z[16] = madd2(m, 9507551311801003185, z[17], C)
		C, z[17] = madd2(m, 17276345451380752723, z[18], C)
		C, z[18] = madd2(m, 5398946044502786900, z[19], C)
		C, z[19] = madd2(m, 4273410409657646401, z[20], C)
		C, z[20] = madd2(m, 4537558703021582627, z[21], C)
		C, z[21] = madd2(m, 3928743618185798328, z[22], C)
		C, z[22] = madd2(m, 8879819406488282694, z[23], C)
		C, z[23] = madd2(m, 7271679122806957198, z[24], C)
		C, z[24] = madd2(m, 8309888569849274052, z[25], C)
		z[25] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 8290328699649503029
		C := madd0(m, 4094365063281874147, z[0])
		C, z[0] = madd2(m, 1025855223173275832, z[1], C)
		C, z[1] = madd2(m, 8078499220748900576, z[2], C)
		C, z[2] = madd2(m, 6592698397043999240, z[3], C)
		C, z[3] = madd2(m, 13409037793353034008, z[4], C)
		C, z[4] = madd2(m, 1796901052372556044, z[5], C)
		C, z[5] = madd2(m, 4050149076413023135, z[6], C)
		C, z[6] = madd2(m, 8897023274092210430, z[7], C)
		C, z[7] = madd2(m, 6636171111773171774, z[8], C)
		C, z[8] = madd2(m, 13239980137592616616, z[9], C)
		C, z[9] = madd2(m, 11519318792880301074, z[10], C)
		C, z[10] = madd2(m, 15796543401904101149, z[11], C)
		C, z[11] = madd2(m, 15325324754623440453, z[12], C)
		C, z[12] = madd2(m, 17385381814834154638, z[13], C)
		C, z[13] = madd2(m, 13824311487681794110, z[14], C)
		C, z[14] = madd2(m, 16983043387714363747, z[15], C)
		C, z[15] = madd2(m, 4630686512774309735, z[16], C)
		C, z[16] = madd2(m, 9507551311801003185, z[17], C)
		C, z[17] = madd2(m, 17276345451380752723, z[18], C)
		C, z[18] = madd2(m, 5398946044502786900, z[19], C)
		C, z[19] = madd2(m, 4273410409657646401, z[20], C)
		C, z[20] = madd2(m, 4537558703021582627, z[21], C)
		C, z[21] = madd2(m, 3928743618185798328, z[22], C)
		C, z[22] = madd2(m, 8879819406488282694, z[23], C)
		C, z[23] = madd2(m, 7271679122806957198, z[24], C)
		C, z[24] = madd2(m, 8309888569849274052, z[25], C)
		z[25] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 8290328699649503029
		C := madd0(m, 4094365063281874147, z[0])
		C, z[0] = madd2(m, 1025855223173275832, z[1], C)
		C, z[1] = madd2(m, 8078499220748900576, z[2], C)
		C, z[2] = madd2(m, 6592698397043999240, z[3], C)
		C, z[3] = madd2(m, 13409037793353034008, z[4], C)
		C, z[4] = madd2(m, 1796901052372556044, z[5], C)
		C, z[5] = madd2(m, 4050149076413023135, z[6], C)
		C, z[6] = madd2(m, 8897023274092210430, z[7], C)
		C, z[7] = madd2(m, 6636171111773171774, z[8], C)
		C, z[8] = madd2(m, 13239980137592616616, z[9], C)
		C, z[9] = madd2(m, 11519318792880301074, z[10], C)
		C, z[10] = madd2(m, 15796543401904101149, z[11], C)
		C, z[11] = madd2(m, 15325324754623440453, z[12], C)
		C, z[12] = madd2(m, 17385381814834154638, z[13], C)
		C, z[13] = madd2(m, 13824311487681794110, z[14], C)
		C, z[14] = madd2(m, 16983043387714363747, z[15], C)
		C, z[15] = madd2(m, 4630686512774309735, z[16], C)
		C, z[16] = madd2(m, 9507551311801003185, z[17], C)
		C, z[17] = madd2(m, 17276345451380752723, z[18], C)
		C, z[18] = madd2(m, 5398946044502786900, z[19], C)
		C, z[19] = madd2(m, 4273410409657646401, z[20], C)
		C, z[20] = madd2(m, 4537558703021582627, z[21], C)
		C, z[21] = madd2(m, 3928743618185798328, z[22], C)
		C, z[22] = madd2(m, 8879819406488282694, z[23], C)
		C, z[23] = madd2(m, 7271679122806957198, z[24], C)
		C, z[24] = madd2(m, 8309888569849274052, z[25], C)
		z[25] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 8290328699649503029
		C := madd0(m, 4094365063281874147, z[0])
		C, z[0] = madd2(m, 1025855223173275832, z[1], C)
		C, z[1] = madd2(m, 8078499220748900576, z[2], C)
		C, z[2] = madd2(m, 6592698397043999240, z[3], C)
		C, z[3] = madd2(m, 13409037793353034008, z[4], C)
		C, z[4] = madd2(m, 1796901052372556044, z[5], C)
		C, z[5] = madd2(m, 4050149076413023135, z[6], C)
		C, z[6] = madd2(m, 8897023274092210430, z[7], C)
		C, z[7] = madd2(m, 6636171111773171774, z[8], C)
		C, z[8] = madd2(m, 13239980137592616616, z[9], C)
		C, z[9] = madd2(m, 11519318792880301074, z[10], C)
		C, z[10] = madd2(m, 15796543401904101149, z[11], C)
		C, z[11] = madd2(m, 15325324754623440453, z[12], C)
		C, z[12] = madd2(m, 17385381814834154638, z[13], C)
		C, z[13] = madd2(m, 13824311487681794110, z[14], C)
		C, z[14] = madd2(m, 16983043387714363747, z[15], C)
		C, z[15] = madd2(m, 4630686512774309735, z[16], C)
		C, z[16] = madd2(m, 9507551311801003185, z[17], C)
		C, z[17] = madd2(m, 17276345451380752723, z[18], C)
		C, z[18] = madd2(m, 5398946044502786900, z[19], C)
		C, z[19] = madd2(m, 4273410409657646401, z[20], C)
		C, z[20] = madd2(m, 4537558703021582627, z[21], C)
		C, z[21] = madd2(m, 3928743618185798328, z[22], C)
		C, z[22] = madd2(m, 8879819406488282694, z[23], C)
		C, z[23] = madd2(m, 7271679122806957198, z[24], C)
		C, z[24] = madd2(m, 8309888569849274052, z[25], C)
		z[25] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 8290328699649503029
		C := madd0(m, 4094365063281874147, z[0])
		C, z[0] = madd2(m, 1025855223173275832, z[1], C)
		C, z[1] = madd2(m, 8078499220748900576, z[2], C)
		C, z[2] = madd2(m, 6592698397043999240, z[3], C)
		C, z[3] = madd2(m, 13409037793353034008, z[4], C)
		C, z[4] = madd2(m, 1796901052372556044, z[5], C)
		C, z[5] = madd2(m, 4050149076413023135, z[6], C)
		C, z[6] = madd2(m, 8897023274092210430, z[7], C)
		C, z[7] = madd2(m, 6636171111773171774, z[8], C)
		C, z[8] = madd2(m, 13239980137592616616, z[9], C)
		C, z[9] = madd2(m, 11519318792880301074, z[10], C)
		C, z[10] = madd2(m, 15796543401904101149, z[11], C)
		C, z[11] = madd2(m, 15325324754623440453, z[12], C)
		C, z[12] = madd2(m, 17385381814834154638, z[13], C)
		C, z[13] = madd2(m, 13824311487681794110, z[14], C)
		C, z[14] = madd2(m, 16983043387714363747, z[15], C)
		C, z[15] = madd2(m, 4630686512774309735, z[16], C)
		C, z[16] = madd2(m, 9507551311801003185, z[17], C)
		C, z[17] = madd2(m, 17276345451380752723, z[18], C)
		C, z[18] = madd2(m, 5398946044502786900, z[19], C)
		C, z[19] = madd2(m, 4273410409657646401, z[20], C)
		C, z[20] = madd2(m, 4537558703021582627, z[21], C)
		C, z[21] = madd2(m, 3928743618185798328, z[22], C)
		C, z[22] = madd2(m, 8879819406488282694, z[23], C)
		C, z[23] = madd2(m, 7271679122806957198, z[24], C)
		C, z[24] = madd2(m, 8309888569849274052, z[25], C)
		z[25] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 8290328699649503029
		C := madd0(m, 4094365063281874147, z[0])
		C, z[0] = madd2(m, 1025855223173275832, z[1], C)
		C, z[1] = madd2(m, 8078499220748900576, z[2], C)
		C, z[2] = madd2(m, 6592698397043999240, z[3], C)
		C, z[3] = madd2(m, 13409037793353034008, z[4], C)
		C, z[4] = madd2(m, 1796901052372556044, z[5], C)
		C, z[5] = madd2(m, 4050149076413023135, z[6], C)
		C, z[6] = madd2(m, 8897023274092210430, z[7], C)
		C, z[7] = madd2(m, 6636171111773171774, z[8], C)
		C, z[8] = madd2(m, 13239980137592616616, z[9], C)
		C, z[9] = madd2(m, 11519318792880301074, z[10], C)
		C, z[10] = madd2(m, 15796543401904101149, z[11], C)
		C, z[11] = madd2(m, 15325324754623440453, z[12], C)
		C, z[12] = madd2(m, 17385381814834154638, z[13], C)
		C, z[13] = madd2(m, 13824311487681794110, z[14], C)
		C, z[14] = madd2(m, 16983043387714363747, z[15], C)
		C, z[15] = madd2(m, 4630686512774309735, z[16], C)
		C, z[16] = madd2(m, 9507551311801003185, z[17], C)
		C, z[17] = madd2(m, 17276345451380752723, z[18], C)
		C, z[18] = madd2(m, 5398946044502786900, z[19], C)
		C, z[19] = madd2(m, 4273410409657646401, z[20], C)
		C, z[20] = madd2(m, 4537558703021582627, z[21], C)
		C, z[21] = madd2(m, 3928743618185798328, z[22], C)
		C, z[22] = madd2(m, 8879819406488282694, z[23], C)
		C, z[23] = madd2(m, 7271679122806957198, z[24], C)
		C, z[24] = madd2(m, 8309888569849274052, z[25], C)
		z[25] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 8290328699649503029
		C := madd0(m, 4094365063281874147, z[0])
		C, z[0] = madd2(m, 1025855223173275832, z[1], C)
		C, z[1] = madd2(m, 8078499220748900576, z[2], C)
		C, z[2] = madd2(m, 6592698397043999240, z[3], C)
		C, z[3] = madd2(m, 13409037793353034008, z[4], C)
		C, z[4] = madd2(m, 1796901052372556044, z[5], C)
		C, z[5] = madd2(m, 4050149076413023135, z[6], C)
		C, z[6] = madd2(m, 8897023274092210430, z[7], C)
		C, z[7] = madd2(m, 6636171111773171774, z[8], C)
		C, z[8] = madd2(m, 13239980137592616616, z[9], C)
		C, z[9] = madd2(m, 11519318792880301074, z[10], C)
		C, z[10] = madd2(m, 15796543401904101149, z[11], C)
		C, z[11] = madd2(m, 15325324754623440453, z[12], C)
		C, z[12] = madd2(m, 17385381814834154638, z[13], C)
		C, z[13] = madd2(m, 13824311487681794110, z[14], C)
		C, z[14] = madd2(m, 16983043387714363747, z[15], C)
		C, z[15] = madd2(m, 4630686512774309735, z[16], C)
		C, z[16] = madd2(m, 9507551311801003185, z[17], C)
		C, z[17] = madd2(m, 17276345451380752723, z[18], C)
		C, z[18] = madd2(m, 5398946044502786900, z[19], C)
		C, z[19] = madd2(m, 4273410409657646401, z[20], C)
		C, z[20] = madd2(m, 4537558703021582627, z[21], C)
		C, z[21] = madd2(m, 3928743618185798328, z[22], C)
		C, z[22] = madd2(m, 8879819406488282694, z[23], C)
		C, z[23] = madd2(m, 7271679122806957198, z[24], C)
		C, z[24] = madd2(m, 8309888569849274052, z[25], C)
		z[25] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 8290328699649503029
		C := madd0(m, 4094365063281874147, z[0])
		C, z[0] = madd2(m, 1025855223173275832, z[1], C)
		C, z[1] = madd2(m, 8078499220748900576, z[2], C)
		C, z[2] = madd2(m, 6592698397043999240, z[3], C)
		C, z[3] = madd2(m, 13409037793353034008, z[4], C)
		C, z[4] = madd2(m, 1796901052372556044, z[5], C)
		C, z[5] = madd2(m, 4050149076413023135, z[6], C)
		C, z[6] = madd2(m, 8897023274092210430, z[7], C)
		C, z[7] = madd2(m, 6636171111773171774, z[8], C)
		C, z[8] = madd2(m, 13239980137592616616, z[9], C)
		C, z[9] = madd2(m, 11519318792880301074, z[10], C)
		C, z[10] = madd2(m, 15796543401904101149, z[11], C)
		C, z[11] = madd2(m, 15325324754623440453, z[12], C)
		C, z[12] = madd2(m, 17385381814834154638, z[13], C)
		C, z[13] = madd2(m, 13824311487681794110, z[14], C)
		C, z[14] = madd2(m, 16983043387714363747, z[15], C)
		C, z[15] = madd2(m, 4630686512774309735, z[16], C)
		C, z[16] = madd2(m, 9507551311801003185, z[17], C)
		C, z[17] = madd2(m, 17276345451380752723, z[18], C)
		C, z[18] = madd2(m, 5398946044502786900, z[19], C)
		C, z[19] = madd2(m, 4273410409657646401, z[20], C)
		C, z[20] = madd2(m, 4537558703021582627, z[21], C)
		C, z[21] = madd2(m, 3928743618185798328, z[22], C)
		C, z[22] = madd2(m, 8879819406488282694, z[23], C)
		C, z[23] = madd2(m, 7271679122806957198, z[24], C)
		C, z[24] = madd2(m, 8309888569849274052, z[25], C)
		z[25] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 8290328699649503029
		C := madd0(m, 4094365063281874147, z[0])
		C, z[0] = madd2(m, 1025855223173275832, z[1], C)
		C, z[1] = madd2(m, 8078499220748900576, z[2], C)
		C, z[2] = madd2(m, 6592698397043999240, z[3], C)
		C, z[3] = madd2(m, 13409037793353034008, z[4], C)
		C, z[4] = madd2(m, 1796901052372556044, z[5], C)
		C, z[5] = madd2(m, 4050149076413023135, z[6], C)
		C, z[6] = madd2(m, 8897023274092210430, z[7], C)
		C, z[7] = madd2(m, 6636171111773171774, z[8], C)
		C, z[8] = madd2(m, 13239980137592616616, z[9], C)
		C, z[9] = madd2(m, 11519318792880301074, z[10], C)
		C, z[10] = madd2(m, 15796543401904101149, z[11], C)
		C, z[11] = madd2(m, 15325324754623440453, z[12], C)
		C, z[12] = madd2(m, 17385381814834154638, z[13], C)
		C, z[13] = madd2(m, 13824311487681794110, z[14], C)
		C, z[14] = madd2(m, 16983043387714363747, z[15], C)
		C, z[15] = madd2(m, 4630686512774309735, z[16], C)
		C, z[16] = madd2(m, 9507551311801003185, z[17], C)
		C, z[17] = madd2(m, 17276345451380752723, z[18], C)
		C, z[18] = madd2(m, 5398946044502786900, z[19], C)
		C, z[19] = madd2(m, 4273410409657646401, z[20], C)
		C, z[20] = madd2(m, 4537558703021582627, z[21], C)
		C, z[21] = madd2(m, 3928743618185798328, z[22], C)
		C, z[22] = madd2(m, 8879819406488282694, z[23], C)
		C, z[23] = madd2(m, 7271679122806957198, z[24], C)
		C, z[24] = madd2(m, 8309888569849274052, z[25], C)
		z[25] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 8290328699649503029
		C := madd0(m, 4094365063281874147, z[0])
		C, z[0] = madd2(m, 1025855223173275832, z[1], C)
		C, z[1] = madd2(m, 8078499220748900576, z[2], C)
		C, z[2] = madd2(m, 6592698397043999240, z[3], C)
		C, z[3] = madd2(m, 13409037793353034008, z[4], C)
		C, z[4] = madd2(m, 1796901052372556044, z[5], C)
		C, z[5] = madd2(m, 4050149076413023135, z[6], C)
		C, z[6] = madd2(m, 8897023274092210430, z[7], C)
		C, z[7] = madd2(m, 6636171111773171774, z[8], C)
		C, z[8] = madd2(m, 13239980137592616616, z[9], C)
		C, z[9] = madd2(m, 11519318792880301074, z[10], C)
		C, z[10] = madd2(m, 15796543401904101149, z[11], C)
		C, z[11] = madd2(m, 15325324754623440453, z[12], C)
		C, z[12] = madd2(m, 17385381814834154638, z[13], C)
		C, z[13] = madd2(m, 13824311487681794110, z[14], C)
		C, z[14] = madd2(m, 16983043387714363747, z[15], C)
		C, z[15] = madd2(m, 4630686512774309735, z[16], C)
		C, z[16] = madd2(m, 9507551311801003185, z[17], C)
		C, z[17] = madd2(m, 17276345451380752723, z[18], C)
		C, z[18] = madd2(m, 5398946044502786900, z[19], C)
		C, z[19] = madd2(m, 4273410409657646401, z[20], C)
		C, z[20] = madd2(m, 4537558703021582627, z[21], C)
		C, z[21] = madd2(m, 3928743618185798328, z[22], C)
		C, z[22] = madd2(m, 8879819406488282694, z[23], C)
		C, z[23] = madd2(m, 7271679122806957198, z[24], C)
		C, z[24] = madd2(m, 8309888569849274052, z[25], C)
		z[25] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 8290328699649503029
		C := madd0(m, 4094365063281874147, z[0])
		C, z[0] = madd2(m, 1025855223173275832, z[1], C)
		C, z[1] = madd2(m, 8078499220748900576, z[2], C)
		C, z[2] = madd2(m, 6592698397043999240, z[3], C)
		C, z[3] = madd2(m, 13409037793353034008, z[4], C)
		C, z[4] = madd2(m, 1796901052372556044, z[5], C)
		C, z[5] = madd2(m, 4050149076413023135, z[6], C)
		C, z[6] = madd2(m, 8897023274092210430, z[7], C)
		C, z[7] = madd2(m, 6636171111773171774, z[8], C)
		C, z[8] = madd2(m, 13239980137592616616, z[9], C)
		C, z[9] = madd2(m, 11519318792880301074, z[10], C)
		C, z[10] = madd2(m, 15796543401904101149, z[11], C)
		C, z[11] = madd2(m, 15325324754623440453, z[12], C)
		C, z[12] = madd2(m, 17385381814834154638, z[13], C)
		C, z[13] = madd2(m, 13824311487681794110, z[14], C)
		C, z[14] = madd2(m, 16983043387714363747, z[15], C)
		C, z[15] = madd2(m, 4630686512774309735, z[16], C)
		C, z[16] = madd2(m, 9507551311801003185, z[17], C)
		C, z[17] = madd2(m, 17276345451380752723, z[18], C)
		C, z[18] = madd2(m, 5398946044502786900, z[19], C)
		C, z[19] = madd2(m, 4273410409657646401, z[20], C)
		C, z[20] = madd2(m, 4537558703021582627, z[21], C)
		C, z[21] = madd2(m, 3928743618185798328, z[22], C)
		C, z[22] = madd2(m, 8879819406488282694, z[23], C)
		C, z[23] = madd2(m, 7271679122806957198, z[24], C)
		C, z[24] = madd2(m, 8309888569849274052, z[25], C)
		z[25] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 8290328699649503029
		C := madd0(m, 4094365063281874147, z[0])
		C, z[0] = madd2(m, 1025855223173275832, z[1], C)
		C, z[1] = madd2(m, 8078499220748900576, z[2], C)
		C, z[2] = madd2(m, 6592698397043999240, z[3], C)
		C, z[3] = madd2(m, 13409037793353034008, z[4], C)
		C, z[4] = madd2(m, 1796901052372556044, z[5], C)
		C, z[5] = madd2(m, 4050149076413023135, z[6], C)
		C, z[6] = madd2(m, 8897023274092210430, z[7], C)
		C, z[7] = madd2(m, 6636171111773171774, z[8], C)
		C, z[8] = madd2(m, 13239980137592616616, z[9], C)
		C, z[9] = madd2(m, 11519318792880301074, z[10], C)
		C, z[10] = madd2(m, 15796543401904101149, z[11], C)
		C, z[11] = madd2(m, 15325324754623440453, z[12], C)
		C, z[12] = madd2(m, 17385381814834154638, z[13], C)
		C, z[13] = madd2(m, 13824311487681794110, z[14], C)
		C, z[14] = madd2(m, 16983043387714363747, z[15], C)
		C, z[15] = madd2(m, 4630686512774309735, z[16], C)
		C, z[16] = madd2(m, 9507551311801003185, z[17], C)
		C, z[17] = madd2(m, 17276345451380752723, z[18], C)
		C, z[18] = madd2(m, 5398946044502786900, z[19], C)
		C, z[19] = madd2(m, 4273410409657646401, z[20], C)
		C, z[20] = madd2(m, 4537558703021582627, z[21], C)
		C, z[21] = madd2(m, 3928743618185798328, z[22], C)
		C, z[22] = madd2(m, 8879819406488282694, z[23], C)
		C, z[23] = madd2(m, 7271679122806957198, z[24], C)
		C, z[24] = madd2(m, 8309888569849274052, z[25], C)
		z[25] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 8290328699649503029
		C := madd0(m, 4094365063281874147, z[0])
		C, z[0] = madd2(m, 1025855223173275832, z[1], C)
		C, z[1] = madd2(m, 8078499220748900576, z[2], C)
		C, z[2] = madd2(m, 6592698397043999240, z[3], C)
		C, z[3] = madd2(m, 13409037793353034008, z[4], C)
		C, z[4] = madd2(m, 1796901052372556044, z[5], C)
		C, z[5] = madd2(m, 4050149076413023135, z[6], C)
		C, z[6] = madd2(m, 8897023274092210430, z[7], C)
		C, z[7] = madd2(m, 6636171111773171774, z[8], C)
		C, z[8] = madd2(m, 13239980137592616616, z[9], C)
		C, z[9] = madd2(m, 11519318792880301074, z[10], C)
		C, z[10] = madd2(m, 15796543401904101149, z[11], C)
		C, z[11] = madd2(m, 15325324754623440453, z[12], C)
		C, z[12] = madd2(m, 17385381814834154638, z[13], C)
		C, z[13] = madd2(m, 13824311487681794110, z[14], C)
		C, z[14] = madd2(m, 16983043387714363747, z[15], C)
		C, z[15] = madd2(m, 4630686512774309735, z[16], C)
		C, z[16] = madd2(m, 9507551311801003185, z[17], C)
		C, z[17] = madd2(m, 17276345451380752723, z[18], C)
		C, z[18] = madd2(m, 5398946044502786900, z[19], C)
		C, z[19] = madd2(m, 4273410409657646401, z[20], C)
		C, z[20] = madd2(m, 4537558703021582627, z[21], C)
		C, z[21] = madd2(m, 3928743618185798328, z[22], C)
		C, z[22] = madd2(m, 8879819406488282694, z[23], C)
		C, z[23] = madd2(m, 7271679122806957198, z[24], C)
		C, z[24] = madd2(m, 8309888569849274052, z[25], C)
		z[25] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 8290328699649503029
		C := madd0(m, 4094365063281874147, z[0])
		C, z[0] = madd2(m, 1025855223173275832, z[1], C)
		C, z[1] = madd2(m, 8078499220748900576, z[2], C)
		C, z[2] = madd2(m, 6592698397043999240, z[3], C)
		C, z[3] = madd2(m, 13409037793353034008, z[4], C)
		C, z[4] = madd2(m, 1796901052372556044, z[5], C)
		C, z[5] = madd2(m, 4050149076413023135, z[6], C)
		C, z[6] = madd2(m, 8897023274092210430, z[7], C)
		C, z[7] = madd2(m, 6636171111773171774, z[8], C)
		C, z[8] = madd2(m, 13239980137592616616, z[9], C)
		C, z[9] = madd2(m, 11519318792880301074, z[10], C)
		C, z[10] = madd2(m, 15796543401904101149, z[11], C)
		C, z[11] = madd2(m, 15325324754623440453, z[12], C)
		C, z[12] = madd2(m, 17385381814834154638, z[13], C)
		C, z[13] = madd2(m, 13824311487681794110, z[14], C)
		C, z[14] = madd2(m, 16983043387714363747, z[15], C)
		C, z[15] = madd2(m, 4630686512774309735, z[16], C)
		C, z[16] = madd2(m, 9507551311801003185, z[17], C)
		C, z[17] = madd2(m, 17276345451380752723, z[18], C)
		C, z[18] = madd2(m, 5398946044502786900, z[19], C)
		C, z[19] = madd2(m, 4273410409657646401, z[20], C)
		C, z[20] = madd2(m, 4537558703021582627, z[21], C)
		C, z[21] = madd2(m, 3928743618185798328, z[22], C)
		C, z[22] = madd2(m, 8879819406488282694, z[23], C)
		C, z[23] = madd2(m, 7271679122806957198, z[24], C)
		C, z[24] = madd2(m, 8309888569849274052, z[25], C)
		z[25] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 8290328699649503029
		C := madd0(m, 4094365063281874147, z[0])
		C, z[0] = madd2(m, 1025855223173275832, z[1], C)
		C, z[1] = madd2(m, 8078499220748900576, z[2], C)
		C, z[2] = madd2(m, 6592698397043999240, z[3], C)
		C, z[3] = madd2(m, 13409037793353034008, z[4], C)
		C, z[4] = madd2(m, 1796901052372556044, z[5], C)
		C, z[5] = madd2(m, 4050149076413023135, z[6], C)
		C, z[6] = madd2(m, 8897023274092210430, z[7], C)
		C, z[7] = madd2(m, 6636171111773171774, z[8], C)
		C, z[8] = madd2(m, 13239980137592616616, z[9], C)
		C, z[9] = madd2(m, 11519318792880301074, z[10], C)
		C, z[10] = madd2(m, 15796543401904101149, z[11], C)
		C, z[11] = madd2(m, 15325324754623440453, z[12], C)
		C, z[12] = madd2(m, 17385381814834154638, z[13], C)
		C, z[13] = madd2(m, 13824311487681794110, z[14], C)
		C, z[14] = madd2(m, 16983043387714363747, z[15], C)
		C, z[15] = madd2(m, 4630686512774309735, z[16], C)
		C, z[16] = madd2(m, 9507551311801003185, z[17], C)
		C, z[17] = madd2(m, 17276345451380752723, z[18], C)
		C, z[18] = madd2(m, 5398946044502786900, z[19], C)
		C, z[19] = madd2(m, 4273410409657646401, z[20], C)
		C, z[20] = madd2(m, 4537558703021582627, z[21], C)
		C, z[21] = madd2(m, 3928743618185798328, z[22], C)
		C, z[22] = madd2(m, 8879819406488282694, z[23], C)
		C, z[23] = madd2(m, 7271679122806957198, z[24], C)
		C, z[24] = madd2(m, 8309888569849274052, z[25], C)
		z[25] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 8290328699649503029
		C := madd0(m, 4094365063281874147, z[0])
		C, z[0] = madd2(m, 1025855223173275832, z[1], C)
		C, z[1] = madd2(m, 8078499220748900576, z[2], C)
		C, z[2] = madd2(m, 6592698397043999240, z[3], C)
		C, z[3] = madd2(m, 13409037793353034008, z[4], C)
		C, z[4] = madd2(m, 1796901052372556044, z[5], C)
		C, z[5] = madd2(m, 4050149076413023135, z[6], C)
		C, z[6] = madd2(m, 8897023274092210430, z[7], C)
		C, z[7] = madd2(m, 6636171111773171774, z[8], C)
		C, z[8] = madd2(m, 13239980137592616616, z[9], C)
		C, z[9] = madd2(m, 11519318792880301074, z[10], C)
		C, z[10] = madd2(m, 15796543401904101149, z[11], C)
		C, z[11] = madd2(m, 15325324754623440453, z[12], C)
		C, z[12] = madd2(m, 17385381814834154638, z[13], C)
		C, z[13] = madd2(m, 13824311487681794110, z[14], C)
		C, z[14] = madd2(m, 16983043387714363747, z[15], C)
		C, z[15] = madd2(m, 4630686512774309735, z[16], C)
		C, z[16] = madd2(m, 9507551311801003185, z[17], C)
		C, z[17] = madd2(m, 17276345451380752723, z[18], C)
		C, z[18] = madd2(m, 5398946044502786900, z[19], C)
		C, z[19] = madd2(m, 4273410409657646401, z[20], C)
		C, z[20] = madd2(m, 4537558703021582627, z[21], C)
		C, z[21] = madd2(m, 3928743618185798328, z[22], C)
		C, z[22] = madd2(m, 8879819406488282694, z[23], C)
		C, z[23] = madd2(m, 7271679122806957198, z[24], C)
		C, z[24] = madd2(m, 8309888569849274052, z[25], C)
		z[25] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 8290328699649503029
		C := madd0(m, 4094365063281874147, z[0])
		C, z[0] = madd2(m, 1025855223173275832, z[1], C)
		C, z[1] = madd2(m, 8078499220748900576, z[2], C)
		C, z[2] = madd2(m, 6592698397043999240, z[3], C)
		C, z[3] = madd2(m, 13409037793353034008, z[4], C)
		C, z[4] = madd2(m, 1796901052372556044, z[5], C)
		C, z[5] = madd2(m, 4050149076413023135, z[6], C)
		C, z[6] = madd2(m, 8897023274092210430, z[7], C)
		C, z[7] = madd2(m, 6636171111773171774, z[8], C)
		C, z[8] = madd2(m, 13239980137592616616, z[9], C)
		C, z[9] = madd2(m, 11519318792880301074, z[10], C)
		C, z[10] = madd2(m, 15796543401904101149, z[11], C)
		C, z[11] = madd2(m, 15325324754623440453, z[12], C)
		C, z[12] = madd2(m, 17385381814834154638, z[13], C)
		C, z[13] = madd2(m, 13824311487681794110, z[14], C)
		C, z[14] = madd2(m, 16983043387714363747, z[15], C)
		C, z[15] = madd2(m, 4630686512774309735, z[16], C)
		C, z[16] = madd2(m, 9507551311801003185, z[17], C)
		C, z[17] = madd2(m, 17276345451380752723, z[18], C)
		C, z[18] = madd2(m, 5398946044502786900, z[19], C)
		C, z[19] = madd2(m, 4273410409657646401, z[20], C)
		C, z[20] = madd2(m, 4537558703021582627, z[21], C)
		C, z[21] = madd2(m, 3928743618185798328, z[22], C)
		C, z[22] = madd2(m, 8879819406488282694, z[23], C)
		C, z[23] = madd2(m, 7271679122806957198, z[24], C)
		C, z[24] = madd2(m, 8309888569849274052, z[25], C)
		z[25] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 8290328699649503029
		C := madd0(m, 4094365063281874147, z[0])
		C, z[0] = madd2(m, 1025855223173275832, z[1], C)
		C, z[1] = madd2(m, 8078499220748900576, z[2], C)
		C, z[2] = madd2(m, 6592698397043999240, z[3], C)
		C, z[3] = madd2(m, 13409037793353034008, z[4], C)
		C, z[4] = madd2(m, 1796901052372556044, z[5], C)
		C, z[5] = madd2(m, 4050149076413023135, z[6], C)
		C, z[6] = madd2(m, 8897023274092210430, z[7], C)
		C, z[7] = madd2(m, 6636171111773171774, z[8], C)
		C, z[8] = madd2(m, 13239980137592616616, z[9], C)
		C, z[9] = madd2(m, 11519318792880301074, z[10], C)
		C, z[10] = madd2(m, 15796543401904101149, z[11], C)
		C, z[11] = madd2(m, 15325324754623440453, z[12], C)
		C, z[12] = madd2(m, 17385381814834154638, z[13], C)
		C, z[13] = madd2(m, 13824311487681794110, z[14], C)
		C, z[14] = madd2(m, 16983043387714363747, z[15], C)
		C, z[15] = madd2(m, 4630686512774309735, z[16], C)
		C, z[16] = madd2(m, 9507551311801003185, z[17], C)
		C, z[17] = madd2(m, 17276345451380752723, z[18], C)
		C, z[18] = madd2(m, 5398946044502786900, z[19], C)
		C, z[19] = madd2(m, 4273410409657646401, z[20], C)
		C, z[20] = madd2(m, 4537558703021582627, z[21], C)
		C, z[21] = madd2(m, 3928743618185798328, z[22], C)
		C, z[22] = madd2(m, 8879819406488282694, z[23], C)
		C, z[23] = madd2(m, 7271679122806957198, z[24], C)
		C, z[24] = madd2(m, 8309888569849274052, z[25], C)
		z[25] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 8290328699649503029
		C := madd0(m, 4094365063281874147, z[0])
		C, z[0] = madd2(m, 1025855223173275832, z[1], C)
		C, z[1] = madd2(m, 8078499220748900576, z[2], C)
		C, z[2] = madd2(m, 6592698397043999240, z[3], C)
		C, z[3] = madd2(m, 13409037793353034008, z[4], C)
		C, z[4] = madd2(m, 1796901052372556044, z[5], C)
		C, z[5] = madd2(m, 4050149076413023135, z[6], C)
		C, z[6] = madd2(m, 8897023274092210430, z[7], C)
		C, z[7] = madd2(m, 6636171111773171774, z[8], C)
		C, z[8] = madd2(m, 13239980137592616616, z[9], C)
		C, z[9] = madd2(m, 11519318792880301074, z[10], C)
		C, z[10] = madd2(m, 15796543401904101149, z[11], C)
		C, z[11] = madd2(m, 15325324754623440453, z[12], C)
		C, z[12] = madd2(m, 17385381814834154638, z[13], C)
		C, z[13] = madd2(m, 13824311487681794110, z[14], C)
		C, z[14] = madd2(m, 16983043387714363747, z[15], C)
		C, z[15] = madd2(m, 4630686512774309735, z[16], C)
		C, z[16] = madd2(m, 9507551311801003185, z[17], C)
		C, z[17] = madd2(m, 17276345451380752723, z[18], C)
		C, z[18] = madd2(m, 5398946044502786900, z[19], C)
		C, z[19] = madd2(m, 4273410409657646401, z[20], C)
		C, z[20] = madd2(m, 4537558703021582627, z[21], C)
		C, z[21] = madd2(m, 3928743618185798328, z[22], C)
		C, z[22] = madd2(m, 8879819406488282694, z[23], C)
		C, z[23] = madd2(m, 7271679122806957198, z[24], C)
		C, z[24] = madd2(m, 8309888569849274052, z[25], C)
		z[25] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 8290328699649503029
		C := madd0(m, 4094365063281874147, z[0])
		C, z[0] = madd2(m, 1025855223173275832, z[1], C)
		C, z[1] = madd2(m, 8078499220748900576, z[2], C)
		C, z[2] = madd2(m, 6592698397043999240, z[3], C)
		C, z[3] = madd2(m, 13409037793353034008, z[4], C)
		C, z[4] = madd2(m, 1796901052372556044, z[5], C)
		C, z[5] = madd2(m, 4050149076413023135, z[6], C)
		C, z[6] = madd2(m, 8897023274092210430, z[7], C)
		C, z[7] = madd2(m, 6636171111773171774, z[8], C)
		C, z[8] = madd2(m, 13239980137592616616, z[9], C)
		C, z[9] = madd2(m, 11519318792880301074, z[10], C)
		C, z[10] = madd2(m, 15796543401904101149, z[11], C)
		C, z[11] = madd2(m, 15325324754623440453, z[12], C)
		C, z[12] = madd2(m, 17385381814834154638, z[13], C)
		C, z[13] = madd2(m, 13824311487681794110, z[14], C)
		C, z[14] = madd2(m, 16983043387714363747, z[15], C)
		C, z[15] = madd2(m, 4630686512774309735, z[16], C)
		C, z[16] = madd2(m, 9507551311801003185, z[17], C)
		C, z[17] = madd2(m, 17276345451380752723, z[18], C)
		C, z[18] = madd2(m, 5398946044502786900, z[19], C)
		C, z[19] = madd2(m, 4273410409657646401, z[20], C)
		C, z[20] = madd2(m, 4537558703021582627, z[21], C)
		C, z[21] = madd2(m, 3928743618185798328, z[22], C)
		C, z[22] = madd2(m, 8879819406488282694, z[23], C)
		C, z[23] = madd2(m, 7271679122806957198, z[24], C)
		C, z[24] = madd2(m, 8309888569849274052, z[25], C)
		z[25] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 8290328699649503029
		C := madd0(m, 4094365063281874147, z[0])
		C, z[0] = madd2(m, 1025855223173275832, z[1], C)
		C, z[1] = madd2(m, 8078499220748900576, z[2], C)
		C, z[2] = madd2(m, 6592698397043999240, z[3], C)
		C, z[3] = madd2(m, 13409037793353034008, z[4], C)
		C, z[4] = madd2(m, 1796901052372556044, z[5], C)
		C, z[5] = madd2(m, 4050149076413023135, z[6], C)
		C, z[6] = madd2(m, 8897023274092210430, z[7], C)
		C, z[7] = madd2(m, 6636171111773171774, z[8], C)
		C, z[8] = madd2(m, 13239980137592616616, z[9], C)
		C, z[9] = madd2(m, 11519318792880301074, z[10], C)
		C, z[10] = madd2(m, 15796543401904101149, z[11], C)
		C, z[11] = madd2(m, 15325324754623440453, z[12], C)
		C, z[12] = madd2(m, 17385381814834154638, z[13], C)
		C, z[13] = madd2(m, 13824311487681794110, z[14], C)
		C, z[14] = madd2(m, 16983043387714363747, z[15], C)
		C, z[15] = madd2(m, 4630686512774309735, z[16], C)
		C, z[16] = madd2(m, 9507551311801003185, z[17], C)
		C, z[17] = madd2(m, 17276345451380752723, z[18], C)
		C, z[18] = madd2(m, 5398946044502786900, z[19], C)
		C, z[19] = madd2(m, 4273410409657646401, z[20], C)
		C, z[20] = madd2(m, 4537558703021582627, z[21], C)
		C, z[21] = madd2(m, 3928743618185798328, z[22], C)
		C, z[22] = madd2(m, 8879819406488282694, z[23], C)
		C, z[23] = madd2(m, 7271679122806957198, z[24], C)
		C, z[24] = madd2(m, 8309888569849274052, z[25], C)
		z[25] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 8290328699649503029
		C := madd0(m, 4094365063281874147, z[0])
		C, z[0] = madd2(m, 1025855223173275832, z[1], C)
		C, z[1] = madd2(m, 8078499220748900576, z[2], C)
		C, z[2] = madd2(m, 6592698397043999240, z[3], C)
		C, z[3] = madd2(m, 13409037793353034008, z[4], C)
		C, z[4] = madd2(m, 1796901052372556044, z[5], C)
		C, z[5] = madd2(m, 4050149076413023135, z[6], C)
		C, z[6] = madd2(m, 8897023274092210430, z[7], C)
		C, z[7] = madd2(m, 6636171111773171774, z[8], C)
		C, z[8] = madd2(m, 13239980137592616616, z[9], C)
		C, z[9] = madd2(m, 11519318792880301074, z[10], C)
		C, z[10] = madd2(m, 15796543401904101149, z[11], C)
		C, z[11] = madd2(m, 15325324754623440453, z[12], C)
		C, z[12] = madd2(m, 17385381814834154638, z[13], C)
		C, z[13] = madd2(m, 13824311487681794110, z[14], C)
		C, z[14] = madd2(m, 16983043387714363747, z[15], C)
		C, z[15] = madd2(m, 4630686512774309735, z[16], C)
		C, z[16] = madd2(m, 9507551311801003185, z[17], C)
		C, z[17] = madd2(m, 17276345451380752723, z[18], C)
		C, z[18] = madd2(m, 5398946044502786900, z[19], C)
		C, z[19] = madd2(m, 4273410409657646401, z[20], C)
		C, z[20] = madd2(m, 4537558703021582627, z[21], C)
		C, z[21] = madd2(m, 3928743618185798328, z[22], C)
		C, z[22] = madd2(m, 8879819406488282694, z[23], C)
		C, z[23] = madd2(m, 7271679122806957198, z[24], C)
		C, z[24] = madd2(m, 8309888569849274052, z[25], C)
		z[25] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 8290328699649503029
		C := madd0(m, 4094365063281874147, z[0])
		C, z[0] = madd2(m, 1025855223173275832, z[1], C)
		C, z[1] = madd2(m, 8078499220748900576, z[2], C)
		C, z[2] = madd2(m, 6592698397043999240, z[3], C)
		C, z[3] = madd2(m, 13409037793353034008, z[4], C)
		C, z[4] = madd2(m, 1796901052372556044, z[5], C)
		C, z[5] = madd2(m, 4050149076413023135, z[6], C)
		C, z[6] = madd2(m, 8897023274092210430, z[7], C)
		C, z[7] = madd2(m, 6636171111773171774, z[8], C)
		C, z[8] = madd2(m, 13239980137592616616, z[9], C)
		C, z[9] = madd2(m, 11519318792880301074, z[10], C)
		C, z[10] = madd2(m, 15796543401904101149, z[11], C)
		C, z[11] = madd2(m, 15325324754623440453, z[12], C)
		C, z[12] = madd2(m, 17385381814834154638, z[13], C)
		C, z[13] = madd2(m, 13824311487681794110, z[14], C)
		C, z[14] = madd2(m, 16983043387714363747, z[15], C)
		C, z[15] = madd2(m, 4630686512774309735, z[16], C)
		C, z[16] = madd2(m, 9507551311801003185, z[17], C)
		C, z[17] = madd2(m, 17276345451380752723, z[18], C)
		C, z[18] = madd2(m, 5398946044502786900, z[19], C)
		C, z[19] = madd2(m, 4273410409657646401, z[20], C)
		C, z[20] = madd2(m, 4537558703021582627, z[21], C)
		C, z[21] = madd2(m, 3928743618185798328, z[22], C)
		C, z[22] = madd2(m, 8879819406488282694, z[23], C)
		C, z[23] = madd2(m, 7271679122806957198, z[24], C)
		C, z[24] = madd2(m, 8309888569849274052, z[25], C)
		z[25] = C
	}

	// if z > q --> z -= q
	// note: this is NOT constant time
	if !(z[25] < 8309888569849274052 || (z[25] == 8309888569849274052 && (z[24] < 7271679122806957198 || (z[24] == 7271679122806957198 && (z[23] < 8879819406488282694 || (z[23] == 8879819406488282694 && (z[22] < 3928743618185798328 || (z[22] == 3928743618185798328 && (z[21] < 4537558703021582627 || (z[21] == 4537558703021582627 && (z[20] < 4273410409657646401 || (z[20] == 4273410409657646401 && (z[19] < 5398946044502786900 || (z[19] == 5398946044502786900 && (z[18] < 17276345451380752723 || (z[18] == 17276345451380752723 && (z[17] < 9507551311801003185 || (z[17] == 9507551311801003185 && (z[16] < 4630686512774309735 || (z[16] == 4630686512774309735 && (z[15] < 16983043387714363747 || (z[15] == 16983043387714363747 && (z[14] < 13824311487681794110 || (z[14] == 13824311487681794110 && (z[13] < 17385381814834154638 || (z[13] == 17385381814834154638 && (z[12] < 15325324754623440453 || (z[12] == 15325324754623440453 && (z[11] < 15796543401904101149 || (z[11] == 15796543401904101149 && (z[10] < 11519318792880301074 || (z[10] == 11519318792880301074 && (z[9] < 13239980137592616616 || (z[9] == 13239980137592616616 && (z[8] < 6636171111773171774 || (z[8] == 6636171111773171774 && (z[7] < 8897023274092210430 || (z[7] == 8897023274092210430 && (z[6] < 4050149076413023135 || (z[6] == 4050149076413023135 && (z[5] < 1796901052372556044 || (z[5] == 1796901052372556044 && (z[4] < 13409037793353034008 || (z[4] == 13409037793353034008 && (z[3] < 6592698397043999240 || (z[3] == 6592698397043999240 && (z[2] < 8078499220748900576 || (z[2] == 8078499220748900576 && (z[1] < 1025855223173275832 || (z[1] == 1025855223173275832 && (z[0] < 4094365063281874147))))))))))))))))))))))))))))))))))))))))))))))))))) {
		var b uint64
		z[0], b = bits.Sub64(z[0], 4094365063281874147, 0)
		z[1], b = bits.Sub64(z[1], 1025855223173275832, b)
		z[2], b = bits.Sub64(z[2], 8078499220748900576, b)
		z[3], b = bits.Sub64(z[3], 6592698397043999240, b)
		z[4], b = bits.Sub64(z[4], 13409037793353034008, b)
		z[5], b = bits.Sub64(z[5], 1796901052372556044, b)
		z[6], b = bits.Sub64(z[6], 4050149076413023135, b)
		z[7], b = bits.Sub64(z[7], 8897023274092210430, b)
		z[8], b = bits.Sub64(z[8], 6636171111773171774, b)
		z[9], b = bits.Sub64(z[9], 13239980137592616616, b)
		z[10], b = bits.Sub64(z[10], 11519318792880301074, b)
		z[11], b = bits.Sub64(z[11], 15796543401904101149, b)
		z[12], b = bits.Sub64(z[12], 15325324754623440453, b)
		z[13], b = bits.Sub64(z[13], 17385381814834154638, b)
		z[14], b = bits.Sub64(z[14], 13824311487681794110, b)
		z[15], b = bits.Sub64(z[15], 16983043387714363747, b)
		z[16], b = bits.Sub64(z[16], 4630686512774309735, b)
		z[17], b = bits.Sub64(z[17], 9507551311801003185, b)
		z[18], b = bits.Sub64(z[18], 17276345451380752723, b)
		z[19], b = bits.Sub64(z[19], 5398946044502786900, b)
		z[20], b = bits.Sub64(z[20], 4273410409657646401, b)
		z[21], b = bits.Sub64(z[21], 4537558703021582627, b)
		z[22], b = bits.Sub64(z[22], 3928743618185798328, b)
		z[23], b = bits.Sub64(z[23], 8879819406488282694, b)
		z[24], b = bits.Sub64(z[24], 7271679122806957198, b)
		z[25], _ = bits.Sub64(z[25], 8309888569849274052, b)
	}
	return z
}

// ToMont converts z to Montgomery form
// sets and returns z = z * r^2
func (z *Element26) ToMont() *Element26 {
	var rSquare = Element26{
		18009003903303027803,
		16018844328443575587,
		7264303874175686872,
		718416774865061504,
		14402315525998400188,
		12703133504323038909,
		15108125759638523547,
		13729686457569461855,
		8497664050808237685,
		2336236003214596035,
		12829630205571169028,
		9222897888903008045,
		15514229235714251266,
		3398072578235151019,
		10909710146513510497,
		10615683607574183122,
		10480633883052890318,
		2314669901523171475,
		8999685815227485983,
		8017965598850803358,
		4641140816488843323,
		16258094545952014393,
		5655979517424726638,
		11066773148028618784,
		5416303168732811130,
		3273678565555820854,
	}
	return z.MulAssign(&rSquare)
}

// ToRegular returns z in regular form (doesn't mutate z)
func (z Element26) ToRegular() Element26 {
	return *z.FromMont()
}

// String returns the string form of an Element26 in Montgomery form
func (z *Element26) String() string {
	var _z big.Int
	return z.ToBigIntRegular(&_z).String()
}

// ToBigInt returns z as a big.Int in Montgomery form
func (z *Element26) ToBigInt(res *big.Int) *big.Int {
	bits := (*[26]big.Word)(unsafe.Pointer(z))
	return res.SetBits(bits[:])
}

// ToBigIntRegular returns z as a big.Int in regular form
func (z Element26) ToBigIntRegular(res *big.Int) *big.Int {
	z.FromMont()
	bits := (*[26]big.Word)(unsafe.Pointer(&z))
	return res.SetBits(bits[:])
}

// SetBigInt sets z to v (regular form) and returns z in Montgomery form
func (z *Element26) SetBigInt(v *big.Int) *Element26 {
	z.SetZero()

	zero := big.NewInt(0)
	q := element26ModulusBigInt()

	// copy input
	vv := new(big.Int).Set(v)

	// while v < 0, v+=q
	for vv.Cmp(zero) == -1 {
		vv.Add(vv, q)
	}
	// while v > q, v-=q
	for vv.Cmp(q) == 1 {
		vv.Sub(vv, q)
	}
	// if v == q, return 0
	if vv.Cmp(q) == 0 {
		return z
	}
	// v should
	vBits := vv.Bits()
	for i := 0; i < len(vBits); i++ {
		z[i] = uint64(vBits[i])
	}
	return z.ToMont()
}

// SetString creates a big.Int with s (in base 10) and calls SetBigInt on z
func (z *Element26) SetString(s string) *Element26 {
	x, ok := new(big.Int).SetString(s, 10)
	if !ok {
		panic("Element26.SetString failed -> can't parse number in base10 into a big.Int")
	}
	return z.SetBigInt(x)
}

// Mul z = x * y mod q
// see https://hackmd.io/@zkteam/modular_multiplication
func (z *Element26) Mul(x, y *Element26) *Element26 {

	var t [27]uint64
	var D uint64
	var m, C uint64
	// -----------------------------------
	// First loop

	C, t[0] = bits.Mul64(y[0], x[0])
	C, t[1] = madd1(y[0], x[1], C)
	C, t[2] = madd1(y[0], x[2], C)
	C, t[3] = madd1(y[0], x[3], C)
	C, t[4] = madd1(y[0], x[4], C)
	C, t[5] = madd1(y[0], x[5], C)
	C, t[6] = madd1(y[0], x[6], C)
	C, t[7] = madd1(y[0], x[7], C)
	C, t[8] = madd1(y[0], x[8], C)
	C, t[9] = madd1(y[0], x[9], C)
	C, t[10] = madd1(y[0], x[10], C)
	C, t[11] = madd1(y[0], x[11], C)
	C, t[12] = madd1(y[0], x[12], C)
	C, t[13] = madd1(y[0], x[13], C)
	C, t[14] = madd1(y[0], x[14], C)
	C, t[15] = madd1(y[0], x[15], C)
	C, t[16] = madd1(y[0], x[16], C)
	C, t[17] = madd1(y[0], x[17], C)
	C, t[18] = madd1(y[0], x[18], C)
	C, t[19] = madd1(y[0], x[19], C)
	C, t[20] = madd1(y[0], x[20], C)
	C, t[21] = madd1(y[0], x[21], C)
	C, t[22] = madd1(y[0], x[22], C)
	C, t[23] = madd1(y[0], x[23], C)
	C, t[24] = madd1(y[0], x[24], C)
	C, t[25] = madd1(y[0], x[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 8290328699649503029

	// -----------------------------------
	// Second loop
	C = madd0(m, 4094365063281874147, t[0])

	C, t[0] = madd2(m, 1025855223173275832, t[1], C)

	C, t[1] = madd2(m, 8078499220748900576, t[2], C)

	C, t[2] = madd2(m, 6592698397043999240, t[3], C)

	C, t[3] = madd2(m, 13409037793353034008, t[4], C)

	C, t[4] = madd2(m, 1796901052372556044, t[5], C)

	C, t[5] = madd2(m, 4050149076413023135, t[6], C)

	C, t[6] = madd2(m, 8897023274092210430, t[7], C)

	C, t[7] = madd2(m, 6636171111773171774, t[8], C)

	C, t[8] = madd2(m, 13239980137592616616, t[9], C)

	C, t[9] = madd2(m, 11519318792880301074, t[10], C)

	C, t[10] = madd2(m, 15796543401904101149, t[11], C)

	C, t[11] = madd2(m, 15325324754623440453, t[12], C)

	C, t[12] = madd2(m, 17385381814834154638, t[13], C)

	C, t[13] = madd2(m, 13824311487681794110, t[14], C)

	C, t[14] = madd2(m, 16983043387714363747, t[15], C)

	C, t[15] = madd2(m, 4630686512774309735, t[16], C)

	C, t[16] = madd2(m, 9507551311801003185, t[17], C)

	C, t[17] = madd2(m, 17276345451380752723, t[18], C)

	C, t[18] = madd2(m, 5398946044502786900, t[19], C)

	C, t[19] = madd2(m, 4273410409657646401, t[20], C)

	C, t[20] = madd2(m, 4537558703021582627, t[21], C)

	C, t[21] = madd2(m, 3928743618185798328, t[22], C)

	C, t[22] = madd2(m, 8879819406488282694, t[23], C)

	C, t[23] = madd2(m, 7271679122806957198, t[24], C)

	C, t[24] = madd3(m, 8309888569849274052, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[1], x[0], t[0])
	C, t[1] = madd2(y[1], x[1], t[1], C)
	C, t[2] = madd2(y[1], x[2], t[2], C)
	C, t[3] = madd2(y[1], x[3], t[3], C)
	C, t[4] = madd2(y[1], x[4], t[4], C)
	C, t[5] = madd2(y[1], x[5], t[5], C)
	C, t[6] = madd2(y[1], x[6], t[6], C)
	C, t[7] = madd2(y[1], x[7], t[7], C)
	C, t[8] = madd2(y[1], x[8], t[8], C)
	C, t[9] = madd2(y[1], x[9], t[9], C)
	C, t[10] = madd2(y[1], x[10], t[10], C)
	C, t[11] = madd2(y[1], x[11], t[11], C)
	C, t[12] = madd2(y[1], x[12], t[12], C)
	C, t[13] = madd2(y[1], x[13], t[13], C)
	C, t[14] = madd2(y[1], x[14], t[14], C)
	C, t[15] = madd2(y[1], x[15], t[15], C)
	C, t[16] = madd2(y[1], x[16], t[16], C)
	C, t[17] = madd2(y[1], x[17], t[17], C)
	C, t[18] = madd2(y[1], x[18], t[18], C)
	C, t[19] = madd2(y[1], x[19], t[19], C)
	C, t[20] = madd2(y[1], x[20], t[20], C)
	C, t[21] = madd2(y[1], x[21], t[21], C)
	C, t[22] = madd2(y[1], x[22], t[22], C)
	C, t[23] = madd2(y[1], x[23], t[23], C)
	C, t[24] = madd2(y[1], x[24], t[24], C)
	C, t[25] = madd2(y[1], x[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 8290328699649503029

	// -----------------------------------
	// Second loop
	C = madd0(m, 4094365063281874147, t[0])

	C, t[0] = madd2(m, 1025855223173275832, t[1], C)

	C, t[1] = madd2(m, 8078499220748900576, t[2], C)

	C, t[2] = madd2(m, 6592698397043999240, t[3], C)

	C, t[3] = madd2(m, 13409037793353034008, t[4], C)

	C, t[4] = madd2(m, 1796901052372556044, t[5], C)

	C, t[5] = madd2(m, 4050149076413023135, t[6], C)

	C, t[6] = madd2(m, 8897023274092210430, t[7], C)

	C, t[7] = madd2(m, 6636171111773171774, t[8], C)

	C, t[8] = madd2(m, 13239980137592616616, t[9], C)

	C, t[9] = madd2(m, 11519318792880301074, t[10], C)

	C, t[10] = madd2(m, 15796543401904101149, t[11], C)

	C, t[11] = madd2(m, 15325324754623440453, t[12], C)

	C, t[12] = madd2(m, 17385381814834154638, t[13], C)

	C, t[13] = madd2(m, 13824311487681794110, t[14], C)

	C, t[14] = madd2(m, 16983043387714363747, t[15], C)

	C, t[15] = madd2(m, 4630686512774309735, t[16], C)

	C, t[16] = madd2(m, 9507551311801003185, t[17], C)

	C, t[17] = madd2(m, 17276345451380752723, t[18], C)

	C, t[18] = madd2(m, 5398946044502786900, t[19], C)

	C, t[19] = madd2(m, 4273410409657646401, t[20], C)

	C, t[20] = madd2(m, 4537558703021582627, t[21], C)

	C, t[21] = madd2(m, 3928743618185798328, t[22], C)

	C, t[22] = madd2(m, 8879819406488282694, t[23], C)

	C, t[23] = madd2(m, 7271679122806957198, t[24], C)

	C, t[24] = madd3(m, 8309888569849274052, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[2], x[0], t[0])
	C, t[1] = madd2(y[2], x[1], t[1], C)
	C, t[2] = madd2(y[2], x[2], t[2], C)
	C, t[3] = madd2(y[2], x[3], t[3], C)
	C, t[4] = madd2(y[2], x[4], t[4], C)
	C, t[5] = madd2(y[2], x[5], t[5], C)
	C, t[6] = madd2(y[2], x[6], t[6], C)
	C, t[7] = madd2(y[2], x[7], t[7], C)
	C, t[8] = madd2(y[2], x[8], t[8], C)
	C, t[9] = madd2(y[2], x[9], t[9], C)
	C, t[10] = madd2(y[2], x[10], t[10], C)
	C, t[11] = madd2(y[2], x[11], t[11], C)
	C, t[12] = madd2(y[2], x[12], t[12], C)
	C, t[13] = madd2(y[2], x[13], t[13], C)
	C, t[14] = madd2(y[2], x[14], t[14], C)
	C, t[15] = madd2(y[2], x[15], t[15], C)
	C, t[16] = madd2(y[2], x[16], t[16], C)
	C, t[17] = madd2(y[2], x[17], t[17], C)
	C, t[18] = madd2(y[2], x[18], t[18], C)
	C, t[19] = madd2(y[2], x[19], t[19], C)
	C, t[20] = madd2(y[2], x[20], t[20], C)
	C, t[21] = madd2(y[2], x[21], t[21], C)
	C, t[22] = madd2(y[2], x[22], t[22], C)
	C, t[23] = madd2(y[2], x[23], t[23], C)
	C, t[24] = madd2(y[2], x[24], t[24], C)
	C, t[25] = madd2(y[2], x[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 8290328699649503029

	// -----------------------------------
	// Second loop
	C = madd0(m, 4094365063281874147, t[0])

	C, t[0] = madd2(m, 1025855223173275832, t[1], C)

	C, t[1] = madd2(m, 8078499220748900576, t[2], C)

	C, t[2] = madd2(m, 6592698397043999240, t[3], C)

	C, t[3] = madd2(m, 13409037793353034008, t[4], C)

	C, t[4] = madd2(m, 1796901052372556044, t[5], C)

	C, t[5] = madd2(m, 4050149076413023135, t[6], C)

	C, t[6] = madd2(m, 8897023274092210430, t[7], C)

	C, t[7] = madd2(m, 6636171111773171774, t[8], C)

	C, t[8] = madd2(m, 13239980137592616616, t[9], C)

	C, t[9] = madd2(m, 11519318792880301074, t[10], C)

	C, t[10] = madd2(m, 15796543401904101149, t[11], C)

	C, t[11] = madd2(m, 15325324754623440453, t[12], C)

	C, t[12] = madd2(m, 17385381814834154638, t[13], C)

	C, t[13] = madd2(m, 13824311487681794110, t[14], C)

	C, t[14] = madd2(m, 16983043387714363747, t[15], C)

	C, t[15] = madd2(m, 4630686512774309735, t[16], C)

	C, t[16] = madd2(m, 9507551311801003185, t[17], C)

	C, t[17] = madd2(m, 17276345451380752723, t[18], C)

	C, t[18] = madd2(m, 5398946044502786900, t[19], C)

	C, t[19] = madd2(m, 4273410409657646401, t[20], C)

	C, t[20] = madd2(m, 4537558703021582627, t[21], C)

	C, t[21] = madd2(m, 3928743618185798328, t[22], C)

	C, t[22] = madd2(m, 8879819406488282694, t[23], C)

	C, t[23] = madd2(m, 7271679122806957198, t[24], C)

	C, t[24] = madd3(m, 8309888569849274052, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[3], x[0], t[0])
	C, t[1] = madd2(y[3], x[1], t[1], C)
	C, t[2] = madd2(y[3], x[2], t[2], C)
	C, t[3] = madd2(y[3], x[3], t[3], C)
	C, t[4] = madd2(y[3], x[4], t[4], C)
	C, t[5] = madd2(y[3], x[5], t[5], C)
	C, t[6] = madd2(y[3], x[6], t[6], C)
	C, t[7] = madd2(y[3], x[7], t[7], C)
	C, t[8] = madd2(y[3], x[8], t[8], C)
	C, t[9] = madd2(y[3], x[9], t[9], C)
	C, t[10] = madd2(y[3], x[10], t[10], C)
	C, t[11] = madd2(y[3], x[11], t[11], C)
	C, t[12] = madd2(y[3], x[12], t[12], C)
	C, t[13] = madd2(y[3], x[13], t[13], C)
	C, t[14] = madd2(y[3], x[14], t[14], C)
	C, t[15] = madd2(y[3], x[15], t[15], C)
	C, t[16] = madd2(y[3], x[16], t[16], C)
	C, t[17] = madd2(y[3], x[17], t[17], C)
	C, t[18] = madd2(y[3], x[18], t[18], C)
	C, t[19] = madd2(y[3], x[19], t[19], C)
	C, t[20] = madd2(y[3], x[20], t[20], C)
	C, t[21] = madd2(y[3], x[21], t[21], C)
	C, t[22] = madd2(y[3], x[22], t[22], C)
	C, t[23] = madd2(y[3], x[23], t[23], C)
	C, t[24] = madd2(y[3], x[24], t[24], C)
	C, t[25] = madd2(y[3], x[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 8290328699649503029

	// -----------------------------------
	// Second loop
	C = madd0(m, 4094365063281874147, t[0])

	C, t[0] = madd2(m, 1025855223173275832, t[1], C)

	C, t[1] = madd2(m, 8078499220748900576, t[2], C)

	C, t[2] = madd2(m, 6592698397043999240, t[3], C)

	C, t[3] = madd2(m, 13409037793353034008, t[4], C)

	C, t[4] = madd2(m, 1796901052372556044, t[5], C)

	C, t[5] = madd2(m, 4050149076413023135, t[6], C)

	C, t[6] = madd2(m, 8897023274092210430, t[7], C)

	C, t[7] = madd2(m, 6636171111773171774, t[8], C)

	C, t[8] = madd2(m, 13239980137592616616, t[9], C)

	C, t[9] = madd2(m, 11519318792880301074, t[10], C)

	C, t[10] = madd2(m, 15796543401904101149, t[11], C)

	C, t[11] = madd2(m, 15325324754623440453, t[12], C)

	C, t[12] = madd2(m, 17385381814834154638, t[13], C)

	C, t[13] = madd2(m, 13824311487681794110, t[14], C)

	C, t[14] = madd2(m, 16983043387714363747, t[15], C)

	C, t[15] = madd2(m, 4630686512774309735, t[16], C)

	C, t[16] = madd2(m, 9507551311801003185, t[17], C)

	C, t[17] = madd2(m, 17276345451380752723, t[18], C)

	C, t[18] = madd2(m, 5398946044502786900, t[19], C)

	C, t[19] = madd2(m, 4273410409657646401, t[20], C)

	C, t[20] = madd2(m, 4537558703021582627, t[21], C)

	C, t[21] = madd2(m, 3928743618185798328, t[22], C)

	C, t[22] = madd2(m, 8879819406488282694, t[23], C)

	C, t[23] = madd2(m, 7271679122806957198, t[24], C)

	C, t[24] = madd3(m, 8309888569849274052, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[4], x[0], t[0])
	C, t[1] = madd2(y[4], x[1], t[1], C)
	C, t[2] = madd2(y[4], x[2], t[2], C)
	C, t[3] = madd2(y[4], x[3], t[3], C)
	C, t[4] = madd2(y[4], x[4], t[4], C)
	C, t[5] = madd2(y[4], x[5], t[5], C)
	C, t[6] = madd2(y[4], x[6], t[6], C)
	C, t[7] = madd2(y[4], x[7], t[7], C)
	C, t[8] = madd2(y[4], x[8], t[8], C)
	C, t[9] = madd2(y[4], x[9], t[9], C)
	C, t[10] = madd2(y[4], x[10], t[10], C)
	C, t[11] = madd2(y[4], x[11], t[11], C)
	C, t[12] = madd2(y[4], x[12], t[12], C)
	C, t[13] = madd2(y[4], x[13], t[13], C)
	C, t[14] = madd2(y[4], x[14], t[14], C)
	C, t[15] = madd2(y[4], x[15], t[15], C)
	C, t[16] = madd2(y[4], x[16], t[16], C)
	C, t[17] = madd2(y[4], x[17], t[17], C)
	C, t[18] = madd2(y[4], x[18], t[18], C)
	C, t[19] = madd2(y[4], x[19], t[19], C)
	C, t[20] = madd2(y[4], x[20], t[20], C)
	C, t[21] = madd2(y[4], x[21], t[21], C)
	C, t[22] = madd2(y[4], x[22], t[22], C)
	C, t[23] = madd2(y[4], x[23], t[23], C)
	C, t[24] = madd2(y[4], x[24], t[24], C)
	C, t[25] = madd2(y[4], x[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 8290328699649503029

	// -----------------------------------
	// Second loop
	C = madd0(m, 4094365063281874147, t[0])

	C, t[0] = madd2(m, 1025855223173275832, t[1], C)

	C, t[1] = madd2(m, 8078499220748900576, t[2], C)

	C, t[2] = madd2(m, 6592698397043999240, t[3], C)

	C, t[3] = madd2(m, 13409037793353034008, t[4], C)

	C, t[4] = madd2(m, 1796901052372556044, t[5], C)

	C, t[5] = madd2(m, 4050149076413023135, t[6], C)

	C, t[6] = madd2(m, 8897023274092210430, t[7], C)

	C, t[7] = madd2(m, 6636171111773171774, t[8], C)

	C, t[8] = madd2(m, 13239980137592616616, t[9], C)

	C, t[9] = madd2(m, 11519318792880301074, t[10], C)

	C, t[10] = madd2(m, 15796543401904101149, t[11], C)

	C, t[11] = madd2(m, 15325324754623440453, t[12], C)

	C, t[12] = madd2(m, 17385381814834154638, t[13], C)

	C, t[13] = madd2(m, 13824311487681794110, t[14], C)

	C, t[14] = madd2(m, 16983043387714363747, t[15], C)

	C, t[15] = madd2(m, 4630686512774309735, t[16], C)

	C, t[16] = madd2(m, 9507551311801003185, t[17], C)

	C, t[17] = madd2(m, 17276345451380752723, t[18], C)

	C, t[18] = madd2(m, 5398946044502786900, t[19], C)

	C, t[19] = madd2(m, 4273410409657646401, t[20], C)

	C, t[20] = madd2(m, 4537558703021582627, t[21], C)

	C, t[21] = madd2(m, 3928743618185798328, t[22], C)

	C, t[22] = madd2(m, 8879819406488282694, t[23], C)

	C, t[23] = madd2(m, 7271679122806957198, t[24], C)

	C, t[24] = madd3(m, 8309888569849274052, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[5], x[0], t[0])
	C, t[1] = madd2(y[5], x[1], t[1], C)
	C, t[2] = madd2(y[5], x[2], t[2], C)
	C, t[3] = madd2(y[5], x[3], t[3], C)
	C, t[4] = madd2(y[5], x[4], t[4], C)
	C, t[5] = madd2(y[5], x[5], t[5], C)
	C, t[6] = madd2(y[5], x[6], t[6], C)
	C, t[7] = madd2(y[5], x[7], t[7], C)
	C, t[8] = madd2(y[5], x[8], t[8], C)
	C, t[9] = madd2(y[5], x[9], t[9], C)
	C, t[10] = madd2(y[5], x[10], t[10], C)
	C, t[11] = madd2(y[5], x[11], t[11], C)
	C, t[12] = madd2(y[5], x[12], t[12], C)
	C, t[13] = madd2(y[5], x[13], t[13], C)
	C, t[14] = madd2(y[5], x[14], t[14], C)
	C, t[15] = madd2(y[5], x[15], t[15], C)
	C, t[16] = madd2(y[5], x[16], t[16], C)
	C, t[17] = madd2(y[5], x[17], t[17], C)
	C, t[18] = madd2(y[5], x[18], t[18], C)
	C, t[19] = madd2(y[5], x[19], t[19], C)
	C, t[20] = madd2(y[5], x[20], t[20], C)
	C, t[21] = madd2(y[5], x[21], t[21], C)
	C, t[22] = madd2(y[5], x[22], t[22], C)
	C, t[23] = madd2(y[5], x[23], t[23], C)
	C, t[24] = madd2(y[5], x[24], t[24], C)
	C, t[25] = madd2(y[5], x[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 8290328699649503029

	// -----------------------------------
	// Second loop
	C = madd0(m, 4094365063281874147, t[0])

	C, t[0] = madd2(m, 1025855223173275832, t[1], C)

	C, t[1] = madd2(m, 8078499220748900576, t[2], C)

	C, t[2] = madd2(m, 6592698397043999240, t[3], C)

	C, t[3] = madd2(m, 13409037793353034008, t[4], C)

	C, t[4] = madd2(m, 1796901052372556044, t[5], C)

	C, t[5] = madd2(m, 4050149076413023135, t[6], C)

	C, t[6] = madd2(m, 8897023274092210430, t[7], C)

	C, t[7] = madd2(m, 6636171111773171774, t[8], C)

	C, t[8] = madd2(m, 13239980137592616616, t[9], C)

	C, t[9] = madd2(m, 11519318792880301074, t[10], C)

	C, t[10] = madd2(m, 15796543401904101149, t[11], C)

	C, t[11] = madd2(m, 15325324754623440453, t[12], C)

	C, t[12] = madd2(m, 17385381814834154638, t[13], C)

	C, t[13] = madd2(m, 13824311487681794110, t[14], C)

	C, t[14] = madd2(m, 16983043387714363747, t[15], C)

	C, t[15] = madd2(m, 4630686512774309735, t[16], C)

	C, t[16] = madd2(m, 9507551311801003185, t[17], C)

	C, t[17] = madd2(m, 17276345451380752723, t[18], C)

	C, t[18] = madd2(m, 5398946044502786900, t[19], C)

	C, t[19] = madd2(m, 4273410409657646401, t[20], C)

	C, t[20] = madd2(m, 4537558703021582627, t[21], C)

	C, t[21] = madd2(m, 3928743618185798328, t[22], C)

	C, t[22] = madd2(m, 8879819406488282694, t[23], C)

	C, t[23] = madd2(m, 7271679122806957198, t[24], C)

	C, t[24] = madd3(m, 8309888569849274052, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[6], x[0], t[0])
	C, t[1] = madd2(y[6], x[1], t[1], C)
	C, t[2] = madd2(y[6], x[2], t[2], C)
	C, t[3] = madd2(y[6], x[3], t[3], C)
	C, t[4] = madd2(y[6], x[4], t[4], C)
	C, t[5] = madd2(y[6], x[5], t[5], C)
	C, t[6] = madd2(y[6], x[6], t[6], C)
	C, t[7] = madd2(y[6], x[7], t[7], C)
	C, t[8] = madd2(y[6], x[8], t[8], C)
	C, t[9] = madd2(y[6], x[9], t[9], C)
	C, t[10] = madd2(y[6], x[10], t[10], C)
	C, t[11] = madd2(y[6], x[11], t[11], C)
	C, t[12] = madd2(y[6], x[12], t[12], C)
	C, t[13] = madd2(y[6], x[13], t[13], C)
	C, t[14] = madd2(y[6], x[14], t[14], C)
	C, t[15] = madd2(y[6], x[15], t[15], C)
	C, t[16] = madd2(y[6], x[16], t[16], C)
	C, t[17] = madd2(y[6], x[17], t[17], C)
	C, t[18] = madd2(y[6], x[18], t[18], C)
	C, t[19] = madd2(y[6], x[19], t[19], C)
	C, t[20] = madd2(y[6], x[20], t[20], C)
	C, t[21] = madd2(y[6], x[21], t[21], C)
	C, t[22] = madd2(y[6], x[22], t[22], C)
	C, t[23] = madd2(y[6], x[23], t[23], C)
	C, t[24] = madd2(y[6], x[24], t[24], C)
	C, t[25] = madd2(y[6], x[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 8290328699649503029

	// -----------------------------------
	// Second loop
	C = madd0(m, 4094365063281874147, t[0])

	C, t[0] = madd2(m, 1025855223173275832, t[1], C)

	C, t[1] = madd2(m, 8078499220748900576, t[2], C)

	C, t[2] = madd2(m, 6592698397043999240, t[3], C)

	C, t[3] = madd2(m, 13409037793353034008, t[4], C)

	C, t[4] = madd2(m, 1796901052372556044, t[5], C)

	C, t[5] = madd2(m, 4050149076413023135, t[6], C)

	C, t[6] = madd2(m, 8897023274092210430, t[7], C)

	C, t[7] = madd2(m, 6636171111773171774, t[8], C)

	C, t[8] = madd2(m, 13239980137592616616, t[9], C)

	C, t[9] = madd2(m, 11519318792880301074, t[10], C)

	C, t[10] = madd2(m, 15796543401904101149, t[11], C)

	C, t[11] = madd2(m, 15325324754623440453, t[12], C)

	C, t[12] = madd2(m, 17385381814834154638, t[13], C)

	C, t[13] = madd2(m, 13824311487681794110, t[14], C)

	C, t[14] = madd2(m, 16983043387714363747, t[15], C)

	C, t[15] = madd2(m, 4630686512774309735, t[16], C)

	C, t[16] = madd2(m, 9507551311801003185, t[17], C)

	C, t[17] = madd2(m, 17276345451380752723, t[18], C)

	C, t[18] = madd2(m, 5398946044502786900, t[19], C)

	C, t[19] = madd2(m, 4273410409657646401, t[20], C)

	C, t[20] = madd2(m, 4537558703021582627, t[21], C)

	C, t[21] = madd2(m, 3928743618185798328, t[22], C)

	C, t[22] = madd2(m, 8879819406488282694, t[23], C)

	C, t[23] = madd2(m, 7271679122806957198, t[24], C)

	C, t[24] = madd3(m, 8309888569849274052, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[7], x[0], t[0])
	C, t[1] = madd2(y[7], x[1], t[1], C)
	C, t[2] = madd2(y[7], x[2], t[2], C)
	C, t[3] = madd2(y[7], x[3], t[3], C)
	C, t[4] = madd2(y[7], x[4], t[4], C)
	C, t[5] = madd2(y[7], x[5], t[5], C)
	C, t[6] = madd2(y[7], x[6], t[6], C)
	C, t[7] = madd2(y[7], x[7], t[7], C)
	C, t[8] = madd2(y[7], x[8], t[8], C)
	C, t[9] = madd2(y[7], x[9], t[9], C)
	C, t[10] = madd2(y[7], x[10], t[10], C)
	C, t[11] = madd2(y[7], x[11], t[11], C)
	C, t[12] = madd2(y[7], x[12], t[12], C)
	C, t[13] = madd2(y[7], x[13], t[13], C)
	C, t[14] = madd2(y[7], x[14], t[14], C)
	C, t[15] = madd2(y[7], x[15], t[15], C)
	C, t[16] = madd2(y[7], x[16], t[16], C)
	C, t[17] = madd2(y[7], x[17], t[17], C)
	C, t[18] = madd2(y[7], x[18], t[18], C)
	C, t[19] = madd2(y[7], x[19], t[19], C)
	C, t[20] = madd2(y[7], x[20], t[20], C)
	C, t[21] = madd2(y[7], x[21], t[21], C)
	C, t[22] = madd2(y[7], x[22], t[22], C)
	C, t[23] = madd2(y[7], x[23], t[23], C)
	C, t[24] = madd2(y[7], x[24], t[24], C)
	C, t[25] = madd2(y[7], x[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 8290328699649503029

	// -----------------------------------
	// Second loop
	C = madd0(m, 4094365063281874147, t[0])

	C, t[0] = madd2(m, 1025855223173275832, t[1], C)

	C, t[1] = madd2(m, 8078499220748900576, t[2], C)

	C, t[2] = madd2(m, 6592698397043999240, t[3], C)

	C, t[3] = madd2(m, 13409037793353034008, t[4], C)

	C, t[4] = madd2(m, 1796901052372556044, t[5], C)

	C, t[5] = madd2(m, 4050149076413023135, t[6], C)

	C, t[6] = madd2(m, 8897023274092210430, t[7], C)

	C, t[7] = madd2(m, 6636171111773171774, t[8], C)

	C, t[8] = madd2(m, 13239980137592616616, t[9], C)

	C, t[9] = madd2(m, 11519318792880301074, t[10], C)

	C, t[10] = madd2(m, 15796543401904101149, t[11], C)

	C, t[11] = madd2(m, 15325324754623440453, t[12], C)

	C, t[12] = madd2(m, 17385381814834154638, t[13], C)

	C, t[13] = madd2(m, 13824311487681794110, t[14], C)

	C, t[14] = madd2(m, 16983043387714363747, t[15], C)

	C, t[15] = madd2(m, 4630686512774309735, t[16], C)

	C, t[16] = madd2(m, 9507551311801003185, t[17], C)

	C, t[17] = madd2(m, 17276345451380752723, t[18], C)

	C, t[18] = madd2(m, 5398946044502786900, t[19], C)

	C, t[19] = madd2(m, 4273410409657646401, t[20], C)

	C, t[20] = madd2(m, 4537558703021582627, t[21], C)

	C, t[21] = madd2(m, 3928743618185798328, t[22], C)

	C, t[22] = madd2(m, 8879819406488282694, t[23], C)

	C, t[23] = madd2(m, 7271679122806957198, t[24], C)

	C, t[24] = madd3(m, 8309888569849274052, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[8], x[0], t[0])
	C, t[1] = madd2(y[8], x[1], t[1], C)
	C, t[2] = madd2(y[8], x[2], t[2], C)
	C, t[3] = madd2(y[8], x[3], t[3], C)
	C, t[4] = madd2(y[8], x[4], t[4], C)
	C, t[5] = madd2(y[8], x[5], t[5], C)
	C, t[6] = madd2(y[8], x[6], t[6], C)
	C, t[7] = madd2(y[8], x[7], t[7], C)
	C, t[8] = madd2(y[8], x[8], t[8], C)
	C, t[9] = madd2(y[8], x[9], t[9], C)
	C, t[10] = madd2(y[8], x[10], t[10], C)
	C, t[11] = madd2(y[8], x[11], t[11], C)
	C, t[12] = madd2(y[8], x[12], t[12], C)
	C, t[13] = madd2(y[8], x[13], t[13], C)
	C, t[14] = madd2(y[8], x[14], t[14], C)
	C, t[15] = madd2(y[8], x[15], t[15], C)
	C, t[16] = madd2(y[8], x[16], t[16], C)
	C, t[17] = madd2(y[8], x[17], t[17], C)
	C, t[18] = madd2(y[8], x[18], t[18], C)
	C, t[19] = madd2(y[8], x[19], t[19], C)
	C, t[20] = madd2(y[8], x[20], t[20], C)
	C, t[21] = madd2(y[8], x[21], t[21], C)
	C, t[22] = madd2(y[8], x[22], t[22], C)
	C, t[23] = madd2(y[8], x[23], t[23], C)
	C, t[24] = madd2(y[8], x[24], t[24], C)
	C, t[25] = madd2(y[8], x[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 8290328699649503029

	// -----------------------------------
	// Second loop
	C = madd0(m, 4094365063281874147, t[0])

	C, t[0] = madd2(m, 1025855223173275832, t[1], C)

	C, t[1] = madd2(m, 8078499220748900576, t[2], C)

	C, t[2] = madd2(m, 6592698397043999240, t[3], C)

	C, t[3] = madd2(m, 13409037793353034008, t[4], C)

	C, t[4] = madd2(m, 1796901052372556044, t[5], C)

	C, t[5] = madd2(m, 4050149076413023135, t[6], C)

	C, t[6] = madd2(m, 8897023274092210430, t[7], C)

	C, t[7] = madd2(m, 6636171111773171774, t[8], C)

	C, t[8] = madd2(m, 13239980137592616616, t[9], C)

	C, t[9] = madd2(m, 11519318792880301074, t[10], C)

	C, t[10] = madd2(m, 15796543401904101149, t[11], C)

	C, t[11] = madd2(m, 15325324754623440453, t[12], C)

	C, t[12] = madd2(m, 17385381814834154638, t[13], C)

	C, t[13] = madd2(m, 13824311487681794110, t[14], C)

	C, t[14] = madd2(m, 16983043387714363747, t[15], C)

	C, t[15] = madd2(m, 4630686512774309735, t[16], C)

	C, t[16] = madd2(m, 9507551311801003185, t[17], C)

	C, t[17] = madd2(m, 17276345451380752723, t[18], C)

	C, t[18] = madd2(m, 5398946044502786900, t[19], C)

	C, t[19] = madd2(m, 4273410409657646401, t[20], C)

	C, t[20] = madd2(m, 4537558703021582627, t[21], C)

	C, t[21] = madd2(m, 3928743618185798328, t[22], C)

	C, t[22] = madd2(m, 8879819406488282694, t[23], C)

	C, t[23] = madd2(m, 7271679122806957198, t[24], C)

	C, t[24] = madd3(m, 8309888569849274052, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[9], x[0], t[0])
	C, t[1] = madd2(y[9], x[1], t[1], C)
	C, t[2] = madd2(y[9], x[2], t[2], C)
	C, t[3] = madd2(y[9], x[3], t[3], C)
	C, t[4] = madd2(y[9], x[4], t[4], C)
	C, t[5] = madd2(y[9], x[5], t[5], C)
	C, t[6] = madd2(y[9], x[6], t[6], C)
	C, t[7] = madd2(y[9], x[7], t[7], C)
	C, t[8] = madd2(y[9], x[8], t[8], C)
	C, t[9] = madd2(y[9], x[9], t[9], C)
	C, t[10] = madd2(y[9], x[10], t[10], C)
	C, t[11] = madd2(y[9], x[11], t[11], C)
	C, t[12] = madd2(y[9], x[12], t[12], C)
	C, t[13] = madd2(y[9], x[13], t[13], C)
	C, t[14] = madd2(y[9], x[14], t[14], C)
	C, t[15] = madd2(y[9], x[15], t[15], C)
	C, t[16] = madd2(y[9], x[16], t[16], C)
	C, t[17] = madd2(y[9], x[17], t[17], C)
	C, t[18] = madd2(y[9], x[18], t[18], C)
	C, t[19] = madd2(y[9], x[19], t[19], C)
	C, t[20] = madd2(y[9], x[20], t[20], C)
	C, t[21] = madd2(y[9], x[21], t[21], C)
	C, t[22] = madd2(y[9], x[22], t[22], C)
	C, t[23] = madd2(y[9], x[23], t[23], C)
	C, t[24] = madd2(y[9], x[24], t[24], C)
	C, t[25] = madd2(y[9], x[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 8290328699649503029

	// -----------------------------------
	// Second loop
	C = madd0(m, 4094365063281874147, t[0])

	C, t[0] = madd2(m, 1025855223173275832, t[1], C)

	C, t[1] = madd2(m, 8078499220748900576, t[2], C)

	C, t[2] = madd2(m, 6592698397043999240, t[3], C)

	C, t[3] = madd2(m, 13409037793353034008, t[4], C)

	C, t[4] = madd2(m, 1796901052372556044, t[5], C)

	C, t[5] = madd2(m, 4050149076413023135, t[6], C)

	C, t[6] = madd2(m, 8897023274092210430, t[7], C)

	C, t[7] = madd2(m, 6636171111773171774, t[8], C)

	C, t[8] = madd2(m, 13239980137592616616, t[9], C)

	C, t[9] = madd2(m, 11519318792880301074, t[10], C)

	C, t[10] = madd2(m, 15796543401904101149, t[11], C)

	C, t[11] = madd2(m, 15325324754623440453, t[12], C)

	C, t[12] = madd2(m, 17385381814834154638, t[13], C)

	C, t[13] = madd2(m, 13824311487681794110, t[14], C)

	C, t[14] = madd2(m, 16983043387714363747, t[15], C)

	C, t[15] = madd2(m, 4630686512774309735, t[16], C)

	C, t[16] = madd2(m, 9507551311801003185, t[17], C)

	C, t[17] = madd2(m, 17276345451380752723, t[18], C)

	C, t[18] = madd2(m, 5398946044502786900, t[19], C)

	C, t[19] = madd2(m, 4273410409657646401, t[20], C)

	C, t[20] = madd2(m, 4537558703021582627, t[21], C)

	C, t[21] = madd2(m, 3928743618185798328, t[22], C)

	C, t[22] = madd2(m, 8879819406488282694, t[23], C)

	C, t[23] = madd2(m, 7271679122806957198, t[24], C)

	C, t[24] = madd3(m, 8309888569849274052, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[10], x[0], t[0])
	C, t[1] = madd2(y[10], x[1], t[1], C)
	C, t[2] = madd2(y[10], x[2], t[2], C)
	C, t[3] = madd2(y[10], x[3], t[3], C)
	C, t[4] = madd2(y[10], x[4], t[4], C)
	C, t[5] = madd2(y[10], x[5], t[5], C)
	C, t[6] = madd2(y[10], x[6], t[6], C)
	C, t[7] = madd2(y[10], x[7], t[7], C)
	C, t[8] = madd2(y[10], x[8], t[8], C)
	C, t[9] = madd2(y[10], x[9], t[9], C)
	C, t[10] = madd2(y[10], x[10], t[10], C)
	C, t[11] = madd2(y[10], x[11], t[11], C)
	C, t[12] = madd2(y[10], x[12], t[12], C)
	C, t[13] = madd2(y[10], x[13], t[13], C)
	C, t[14] = madd2(y[10], x[14], t[14], C)
	C, t[15] = madd2(y[10], x[15], t[15], C)
	C, t[16] = madd2(y[10], x[16], t[16], C)
	C, t[17] = madd2(y[10], x[17], t[17], C)
	C, t[18] = madd2(y[10], x[18], t[18], C)
	C, t[19] = madd2(y[10], x[19], t[19], C)
	C, t[20] = madd2(y[10], x[20], t[20], C)
	C, t[21] = madd2(y[10], x[21], t[21], C)
	C, t[22] = madd2(y[10], x[22], t[22], C)
	C, t[23] = madd2(y[10], x[23], t[23], C)
	C, t[24] = madd2(y[10], x[24], t[24], C)
	C, t[25] = madd2(y[10], x[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 8290328699649503029

	// -----------------------------------
	// Second loop
	C = madd0(m, 4094365063281874147, t[0])

	C, t[0] = madd2(m, 1025855223173275832, t[1], C)

	C, t[1] = madd2(m, 8078499220748900576, t[2], C)

	C, t[2] = madd2(m, 6592698397043999240, t[3], C)

	C, t[3] = madd2(m, 13409037793353034008, t[4], C)

	C, t[4] = madd2(m, 1796901052372556044, t[5], C)

	C, t[5] = madd2(m, 4050149076413023135, t[6], C)

	C, t[6] = madd2(m, 8897023274092210430, t[7], C)

	C, t[7] = madd2(m, 6636171111773171774, t[8], C)

	C, t[8] = madd2(m, 13239980137592616616, t[9], C)

	C, t[9] = madd2(m, 11519318792880301074, t[10], C)

	C, t[10] = madd2(m, 15796543401904101149, t[11], C)

	C, t[11] = madd2(m, 15325324754623440453, t[12], C)

	C, t[12] = madd2(m, 17385381814834154638, t[13], C)

	C, t[13] = madd2(m, 13824311487681794110, t[14], C)

	C, t[14] = madd2(m, 16983043387714363747, t[15], C)

	C, t[15] = madd2(m, 4630686512774309735, t[16], C)

	C, t[16] = madd2(m, 9507551311801003185, t[17], C)

	C, t[17] = madd2(m, 17276345451380752723, t[18], C)

	C, t[18] = madd2(m, 5398946044502786900, t[19], C)

	C, t[19] = madd2(m, 4273410409657646401, t[20], C)

	C, t[20] = madd2(m, 4537558703021582627, t[21], C)

	C, t[21] = madd2(m, 3928743618185798328, t[22], C)

	C, t[22] = madd2(m, 8879819406488282694, t[23], C)

	C, t[23] = madd2(m, 7271679122806957198, t[24], C)

	C, t[24] = madd3(m, 8309888569849274052, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[11], x[0], t[0])
	C, t[1] = madd2(y[11], x[1], t[1], C)
	C, t[2] = madd2(y[11], x[2], t[2], C)
	C, t[3] = madd2(y[11], x[3], t[3], C)
	C, t[4] = madd2(y[11], x[4], t[4], C)
	C, t[5] = madd2(y[11], x[5], t[5], C)
	C, t[6] = madd2(y[11], x[6], t[6], C)
	C, t[7] = madd2(y[11], x[7], t[7], C)
	C, t[8] = madd2(y[11], x[8], t[8], C)
	C, t[9] = madd2(y[11], x[9], t[9], C)
	C, t[10] = madd2(y[11], x[10], t[10], C)
	C, t[11] = madd2(y[11], x[11], t[11], C)
	C, t[12] = madd2(y[11], x[12], t[12], C)
	C, t[13] = madd2(y[11], x[13], t[13], C)
	C, t[14] = madd2(y[11], x[14], t[14], C)
	C, t[15] = madd2(y[11], x[15], t[15], C)
	C, t[16] = madd2(y[11], x[16], t[16], C)
	C, t[17] = madd2(y[11], x[17], t[17], C)
	C, t[18] = madd2(y[11], x[18], t[18], C)
	C, t[19] = madd2(y[11], x[19], t[19], C)
	C, t[20] = madd2(y[11], x[20], t[20], C)
	C, t[21] = madd2(y[11], x[21], t[21], C)
	C, t[22] = madd2(y[11], x[22], t[22], C)
	C, t[23] = madd2(y[11], x[23], t[23], C)
	C, t[24] = madd2(y[11], x[24], t[24], C)
	C, t[25] = madd2(y[11], x[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 8290328699649503029

	// -----------------------------------
	// Second loop
	C = madd0(m, 4094365063281874147, t[0])

	C, t[0] = madd2(m, 1025855223173275832, t[1], C)

	C, t[1] = madd2(m, 8078499220748900576, t[2], C)

	C, t[2] = madd2(m, 6592698397043999240, t[3], C)

	C, t[3] = madd2(m, 13409037793353034008, t[4], C)

	C, t[4] = madd2(m, 1796901052372556044, t[5], C)

	C, t[5] = madd2(m, 4050149076413023135, t[6], C)

	C, t[6] = madd2(m, 8897023274092210430, t[7], C)

	C, t[7] = madd2(m, 6636171111773171774, t[8], C)

	C, t[8] = madd2(m, 13239980137592616616, t[9], C)

	C, t[9] = madd2(m, 11519318792880301074, t[10], C)

	C, t[10] = madd2(m, 15796543401904101149, t[11], C)

	C, t[11] = madd2(m, 15325324754623440453, t[12], C)

	C, t[12] = madd2(m, 17385381814834154638, t[13], C)

	C, t[13] = madd2(m, 13824311487681794110, t[14], C)

	C, t[14] = madd2(m, 16983043387714363747, t[15], C)

	C, t[15] = madd2(m, 4630686512774309735, t[16], C)

	C, t[16] = madd2(m, 9507551311801003185, t[17], C)

	C, t[17] = madd2(m, 17276345451380752723, t[18], C)

	C, t[18] = madd2(m, 5398946044502786900, t[19], C)

	C, t[19] = madd2(m, 4273410409657646401, t[20], C)

	C, t[20] = madd2(m, 4537558703021582627, t[21], C)

	C, t[21] = madd2(m, 3928743618185798328, t[22], C)

	C, t[22] = madd2(m, 8879819406488282694, t[23], C)

	C, t[23] = madd2(m, 7271679122806957198, t[24], C)

	C, t[24] = madd3(m, 8309888569849274052, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[12], x[0], t[0])
	C, t[1] = madd2(y[12], x[1], t[1], C)
	C, t[2] = madd2(y[12], x[2], t[2], C)
	C, t[3] = madd2(y[12], x[3], t[3], C)
	C, t[4] = madd2(y[12], x[4], t[4], C)
	C, t[5] = madd2(y[12], x[5], t[5], C)
	C, t[6] = madd2(y[12], x[6], t[6], C)
	C, t[7] = madd2(y[12], x[7], t[7], C)
	C, t[8] = madd2(y[12], x[8], t[8], C)
	C, t[9] = madd2(y[12], x[9], t[9], C)
	C, t[10] = madd2(y[12], x[10], t[10], C)
	C, t[11] = madd2(y[12], x[11], t[11], C)
	C, t[12] = madd2(y[12], x[12], t[12], C)
	C, t[13] = madd2(y[12], x[13], t[13], C)
	C, t[14] = madd2(y[12], x[14], t[14], C)
	C, t[15] = madd2(y[12], x[15], t[15], C)
	C, t[16] = madd2(y[12], x[16], t[16], C)
	C, t[17] = madd2(y[12], x[17], t[17], C)
	C, t[18] = madd2(y[12], x[18], t[18], C)
	C, t[19] = madd2(y[12], x[19], t[19], C)
	C, t[20] = madd2(y[12], x[20], t[20], C)
	C, t[21] = madd2(y[12], x[21], t[21], C)
	C, t[22] = madd2(y[12], x[22], t[22], C)
	C, t[23] = madd2(y[12], x[23], t[23], C)
	C, t[24] = madd2(y[12], x[24], t[24], C)
	C, t[25] = madd2(y[12], x[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 8290328699649503029

	// -----------------------------------
	// Second loop
	C = madd0(m, 4094365063281874147, t[0])

	C, t[0] = madd2(m, 1025855223173275832, t[1], C)

	C, t[1] = madd2(m, 8078499220748900576, t[2], C)

	C, t[2] = madd2(m, 6592698397043999240, t[3], C)

	C, t[3] = madd2(m, 13409037793353034008, t[4], C)

	C, t[4] = madd2(m, 1796901052372556044, t[5], C)

	C, t[5] = madd2(m, 4050149076413023135, t[6], C)

	C, t[6] = madd2(m, 8897023274092210430, t[7], C)

	C, t[7] = madd2(m, 6636171111773171774, t[8], C)

	C, t[8] = madd2(m, 13239980137592616616, t[9], C)

	C, t[9] = madd2(m, 11519318792880301074, t[10], C)

	C, t[10] = madd2(m, 15796543401904101149, t[11], C)

	C, t[11] = madd2(m, 15325324754623440453, t[12], C)

	C, t[12] = madd2(m, 17385381814834154638, t[13], C)

	C, t[13] = madd2(m, 13824311487681794110, t[14], C)

	C, t[14] = madd2(m, 16983043387714363747, t[15], C)

	C, t[15] = madd2(m, 4630686512774309735, t[16], C)

	C, t[16] = madd2(m, 9507551311801003185, t[17], C)

	C, t[17] = madd2(m, 17276345451380752723, t[18], C)

	C, t[18] = madd2(m, 5398946044502786900, t[19], C)

	C, t[19] = madd2(m, 4273410409657646401, t[20], C)

	C, t[20] = madd2(m, 4537558703021582627, t[21], C)

	C, t[21] = madd2(m, 3928743618185798328, t[22], C)

	C, t[22] = madd2(m, 8879819406488282694, t[23], C)

	C, t[23] = madd2(m, 7271679122806957198, t[24], C)

	C, t[24] = madd3(m, 8309888569849274052, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[13], x[0], t[0])
	C, t[1] = madd2(y[13], x[1], t[1], C)
	C, t[2] = madd2(y[13], x[2], t[2], C)
	C, t[3] = madd2(y[13], x[3], t[3], C)
	C, t[4] = madd2(y[13], x[4], t[4], C)
	C, t[5] = madd2(y[13], x[5], t[5], C)
	C, t[6] = madd2(y[13], x[6], t[6], C)
	C, t[7] = madd2(y[13], x[7], t[7], C)
	C, t[8] = madd2(y[13], x[8], t[8], C)
	C, t[9] = madd2(y[13], x[9], t[9], C)
	C, t[10] = madd2(y[13], x[10], t[10], C)
	C, t[11] = madd2(y[13], x[11], t[11], C)
	C, t[12] = madd2(y[13], x[12], t[12], C)
	C, t[13] = madd2(y[13], x[13], t[13], C)
	C, t[14] = madd2(y[13], x[14], t[14], C)
	C, t[15] = madd2(y[13], x[15], t[15], C)
	C, t[16] = madd2(y[13], x[16], t[16], C)
	C, t[17] = madd2(y[13], x[17], t[17], C)
	C, t[18] = madd2(y[13], x[18], t[18], C)
	C, t[19] = madd2(y[13], x[19], t[19], C)
	C, t[20] = madd2(y[13], x[20], t[20], C)
	C, t[21] = madd2(y[13], x[21], t[21], C)
	C, t[22] = madd2(y[13], x[22], t[22], C)
	C, t[23] = madd2(y[13], x[23], t[23], C)
	C, t[24] = madd2(y[13], x[24], t[24], C)
	C, t[25] = madd2(y[13], x[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 8290328699649503029

	// -----------------------------------
	// Second loop
	C = madd0(m, 4094365063281874147, t[0])

	C, t[0] = madd2(m, 1025855223173275832, t[1], C)

	C, t[1] = madd2(m, 8078499220748900576, t[2], C)

	C, t[2] = madd2(m, 6592698397043999240, t[3], C)

	C, t[3] = madd2(m, 13409037793353034008, t[4], C)

	C, t[4] = madd2(m, 1796901052372556044, t[5], C)

	C, t[5] = madd2(m, 4050149076413023135, t[6], C)

	C, t[6] = madd2(m, 8897023274092210430, t[7], C)

	C, t[7] = madd2(m, 6636171111773171774, t[8], C)

	C, t[8] = madd2(m, 13239980137592616616, t[9], C)

	C, t[9] = madd2(m, 11519318792880301074, t[10], C)

	C, t[10] = madd2(m, 15796543401904101149, t[11], C)

	C, t[11] = madd2(m, 15325324754623440453, t[12], C)

	C, t[12] = madd2(m, 17385381814834154638, t[13], C)

	C, t[13] = madd2(m, 13824311487681794110, t[14], C)

	C, t[14] = madd2(m, 16983043387714363747, t[15], C)

	C, t[15] = madd2(m, 4630686512774309735, t[16], C)

	C, t[16] = madd2(m, 9507551311801003185, t[17], C)

	C, t[17] = madd2(m, 17276345451380752723, t[18], C)

	C, t[18] = madd2(m, 5398946044502786900, t[19], C)

	C, t[19] = madd2(m, 4273410409657646401, t[20], C)

	C, t[20] = madd2(m, 4537558703021582627, t[21], C)

	C, t[21] = madd2(m, 3928743618185798328, t[22], C)

	C, t[22] = madd2(m, 8879819406488282694, t[23], C)

	C, t[23] = madd2(m, 7271679122806957198, t[24], C)

	C, t[24] = madd3(m, 8309888569849274052, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[14], x[0], t[0])
	C, t[1] = madd2(y[14], x[1], t[1], C)
	C, t[2] = madd2(y[14], x[2], t[2], C)
	C, t[3] = madd2(y[14], x[3], t[3], C)
	C, t[4] = madd2(y[14], x[4], t[4], C)
	C, t[5] = madd2(y[14], x[5], t[5], C)
	C, t[6] = madd2(y[14], x[6], t[6], C)
	C, t[7] = madd2(y[14], x[7], t[7], C)
	C, t[8] = madd2(y[14], x[8], t[8], C)
	C, t[9] = madd2(y[14], x[9], t[9], C)
	C, t[10] = madd2(y[14], x[10], t[10], C)
	C, t[11] = madd2(y[14], x[11], t[11], C)
	C, t[12] = madd2(y[14], x[12], t[12], C)
	C, t[13] = madd2(y[14], x[13], t[13], C)
	C, t[14] = madd2(y[14], x[14], t[14], C)
	C, t[15] = madd2(y[14], x[15], t[15], C)
	C, t[16] = madd2(y[14], x[16], t[16], C)
	C, t[17] = madd2(y[14], x[17], t[17], C)
	C, t[18] = madd2(y[14], x[18], t[18], C)
	C, t[19] = madd2(y[14], x[19], t[19], C)
	C, t[20] = madd2(y[14], x[20], t[20], C)
	C, t[21] = madd2(y[14], x[21], t[21], C)
	C, t[22] = madd2(y[14], x[22], t[22], C)
	C, t[23] = madd2(y[14], x[23], t[23], C)
	C, t[24] = madd2(y[14], x[24], t[24], C)
	C, t[25] = madd2(y[14], x[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 8290328699649503029

	// -----------------------------------
	// Second loop
	C = madd0(m, 4094365063281874147, t[0])

	C, t[0] = madd2(m, 1025855223173275832, t[1], C)

	C, t[1] = madd2(m, 8078499220748900576, t[2], C)

	C, t[2] = madd2(m, 6592698397043999240, t[3], C)

	C, t[3] = madd2(m, 13409037793353034008, t[4], C)

	C, t[4] = madd2(m, 1796901052372556044, t[5], C)

	C, t[5] = madd2(m, 4050149076413023135, t[6], C)

	C, t[6] = madd2(m, 8897023274092210430, t[7], C)

	C, t[7] = madd2(m, 6636171111773171774, t[8], C)

	C, t[8] = madd2(m, 13239980137592616616, t[9], C)

	C, t[9] = madd2(m, 11519318792880301074, t[10], C)

	C, t[10] = madd2(m, 15796543401904101149, t[11], C)

	C, t[11] = madd2(m, 15325324754623440453, t[12], C)

	C, t[12] = madd2(m, 17385381814834154638, t[13], C)

	C, t[13] = madd2(m, 13824311487681794110, t[14], C)

	C, t[14] = madd2(m, 16983043387714363747, t[15], C)

	C, t[15] = madd2(m, 4630686512774309735, t[16], C)

	C, t[16] = madd2(m, 9507551311801003185, t[17], C)

	C, t[17] = madd2(m, 17276345451380752723, t[18], C)

	C, t[18] = madd2(m, 5398946044502786900, t[19], C)

	C, t[19] = madd2(m, 4273410409657646401, t[20], C)

	C, t[20] = madd2(m, 4537558703021582627, t[21], C)

	C, t[21] = madd2(m, 3928743618185798328, t[22], C)

	C, t[22] = madd2(m, 8879819406488282694, t[23], C)

	C, t[23] = madd2(m, 7271679122806957198, t[24], C)

	C, t[24] = madd3(m, 8309888569849274052, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[15], x[0], t[0])
	C, t[1] = madd2(y[15], x[1], t[1], C)
	C, t[2] = madd2(y[15], x[2], t[2], C)
	C, t[3] = madd2(y[15], x[3], t[3], C)
	C, t[4] = madd2(y[15], x[4], t[4], C)
	C, t[5] = madd2(y[15], x[5], t[5], C)
	C, t[6] = madd2(y[15], x[6], t[6], C)
	C, t[7] = madd2(y[15], x[7], t[7], C)
	C, t[8] = madd2(y[15], x[8], t[8], C)
	C, t[9] = madd2(y[15], x[9], t[9], C)
	C, t[10] = madd2(y[15], x[10], t[10], C)
	C, t[11] = madd2(y[15], x[11], t[11], C)
	C, t[12] = madd2(y[15], x[12], t[12], C)
	C, t[13] = madd2(y[15], x[13], t[13], C)
	C, t[14] = madd2(y[15], x[14], t[14], C)
	C, t[15] = madd2(y[15], x[15], t[15], C)
	C, t[16] = madd2(y[15], x[16], t[16], C)
	C, t[17] = madd2(y[15], x[17], t[17], C)
	C, t[18] = madd2(y[15], x[18], t[18], C)
	C, t[19] = madd2(y[15], x[19], t[19], C)
	C, t[20] = madd2(y[15], x[20], t[20], C)
	C, t[21] = madd2(y[15], x[21], t[21], C)
	C, t[22] = madd2(y[15], x[22], t[22], C)
	C, t[23] = madd2(y[15], x[23], t[23], C)
	C, t[24] = madd2(y[15], x[24], t[24], C)
	C, t[25] = madd2(y[15], x[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 8290328699649503029

	// -----------------------------------
	// Second loop
	C = madd0(m, 4094365063281874147, t[0])

	C, t[0] = madd2(m, 1025855223173275832, t[1], C)

	C, t[1] = madd2(m, 8078499220748900576, t[2], C)

	C, t[2] = madd2(m, 6592698397043999240, t[3], C)

	C, t[3] = madd2(m, 13409037793353034008, t[4], C)

	C, t[4] = madd2(m, 1796901052372556044, t[5], C)

	C, t[5] = madd2(m, 4050149076413023135, t[6], C)

	C, t[6] = madd2(m, 8897023274092210430, t[7], C)

	C, t[7] = madd2(m, 6636171111773171774, t[8], C)

	C, t[8] = madd2(m, 13239980137592616616, t[9], C)

	C, t[9] = madd2(m, 11519318792880301074, t[10], C)

	C, t[10] = madd2(m, 15796543401904101149, t[11], C)

	C, t[11] = madd2(m, 15325324754623440453, t[12], C)

	C, t[12] = madd2(m, 17385381814834154638, t[13], C)

	C, t[13] = madd2(m, 13824311487681794110, t[14], C)

	C, t[14] = madd2(m, 16983043387714363747, t[15], C)

	C, t[15] = madd2(m, 4630686512774309735, t[16], C)

	C, t[16] = madd2(m, 9507551311801003185, t[17], C)

	C, t[17] = madd2(m, 17276345451380752723, t[18], C)

	C, t[18] = madd2(m, 5398946044502786900, t[19], C)

	C, t[19] = madd2(m, 4273410409657646401, t[20], C)

	C, t[20] = madd2(m, 4537558703021582627, t[21], C)

	C, t[21] = madd2(m, 3928743618185798328, t[22], C)

	C, t[22] = madd2(m, 8879819406488282694, t[23], C)

	C, t[23] = madd2(m, 7271679122806957198, t[24], C)

	C, t[24] = madd3(m, 8309888569849274052, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[16], x[0], t[0])
	C, t[1] = madd2(y[16], x[1], t[1], C)
	C, t[2] = madd2(y[16], x[2], t[2], C)
	C, t[3] = madd2(y[16], x[3], t[3], C)
	C, t[4] = madd2(y[16], x[4], t[4], C)
	C, t[5] = madd2(y[16], x[5], t[5], C)
	C, t[6] = madd2(y[16], x[6], t[6], C)
	C, t[7] = madd2(y[16], x[7], t[7], C)
	C, t[8] = madd2(y[16], x[8], t[8], C)
	C, t[9] = madd2(y[16], x[9], t[9], C)
	C, t[10] = madd2(y[16], x[10], t[10], C)
	C, t[11] = madd2(y[16], x[11], t[11], C)
	C, t[12] = madd2(y[16], x[12], t[12], C)
	C, t[13] = madd2(y[16], x[13], t[13], C)
	C, t[14] = madd2(y[16], x[14], t[14], C)
	C, t[15] = madd2(y[16], x[15], t[15], C)
	C, t[16] = madd2(y[16], x[16], t[16], C)
	C, t[17] = madd2(y[16], x[17], t[17], C)
	C, t[18] = madd2(y[16], x[18], t[18], C)
	C, t[19] = madd2(y[16], x[19], t[19], C)
	C, t[20] = madd2(y[16], x[20], t[20], C)
	C, t[21] = madd2(y[16], x[21], t[21], C)
	C, t[22] = madd2(y[16], x[22], t[22], C)
	C, t[23] = madd2(y[16], x[23], t[23], C)
	C, t[24] = madd2(y[16], x[24], t[24], C)
	C, t[25] = madd2(y[16], x[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 8290328699649503029

	// -----------------------------------
	// Second loop
	C = madd0(m, 4094365063281874147, t[0])

	C, t[0] = madd2(m, 1025855223173275832, t[1], C)

	C, t[1] = madd2(m, 8078499220748900576, t[2], C)

	C, t[2] = madd2(m, 6592698397043999240, t[3], C)

	C, t[3] = madd2(m, 13409037793353034008, t[4], C)

	C, t[4] = madd2(m, 1796901052372556044, t[5], C)

	C, t[5] = madd2(m, 4050149076413023135, t[6], C)

	C, t[6] = madd2(m, 8897023274092210430, t[7], C)

	C, t[7] = madd2(m, 6636171111773171774, t[8], C)

	C, t[8] = madd2(m, 13239980137592616616, t[9], C)

	C, t[9] = madd2(m, 11519318792880301074, t[10], C)

	C, t[10] = madd2(m, 15796543401904101149, t[11], C)

	C, t[11] = madd2(m, 15325324754623440453, t[12], C)

	C, t[12] = madd2(m, 17385381814834154638, t[13], C)

	C, t[13] = madd2(m, 13824311487681794110, t[14], C)

	C, t[14] = madd2(m, 16983043387714363747, t[15], C)

	C, t[15] = madd2(m, 4630686512774309735, t[16], C)

	C, t[16] = madd2(m, 9507551311801003185, t[17], C)

	C, t[17] = madd2(m, 17276345451380752723, t[18], C)

	C, t[18] = madd2(m, 5398946044502786900, t[19], C)

	C, t[19] = madd2(m, 4273410409657646401, t[20], C)

	C, t[20] = madd2(m, 4537558703021582627, t[21], C)

	C, t[21] = madd2(m, 3928743618185798328, t[22], C)

	C, t[22] = madd2(m, 8879819406488282694, t[23], C)

	C, t[23] = madd2(m, 7271679122806957198, t[24], C)

	C, t[24] = madd3(m, 8309888569849274052, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[17], x[0], t[0])
	C, t[1] = madd2(y[17], x[1], t[1], C)
	C, t[2] = madd2(y[17], x[2], t[2], C)
	C, t[3] = madd2(y[17], x[3], t[3], C)
	C, t[4] = madd2(y[17], x[4], t[4], C)
	C, t[5] = madd2(y[17], x[5], t[5], C)
	C, t[6] = madd2(y[17], x[6], t[6], C)
	C, t[7] = madd2(y[17], x[7], t[7], C)
	C, t[8] = madd2(y[17], x[8], t[8], C)
	C, t[9] = madd2(y[17], x[9], t[9], C)
	C, t[10] = madd2(y[17], x[10], t[10], C)
	C, t[11] = madd2(y[17], x[11], t[11], C)
	C, t[12] = madd2(y[17], x[12], t[12], C)
	C, t[13] = madd2(y[17], x[13], t[13], C)
	C, t[14] = madd2(y[17], x[14], t[14], C)
	C, t[15] = madd2(y[17], x[15], t[15], C)
	C, t[16] = madd2(y[17], x[16], t[16], C)
	C, t[17] = madd2(y[17], x[17], t[17], C)
	C, t[18] = madd2(y[17], x[18], t[18], C)
	C, t[19] = madd2(y[17], x[19], t[19], C)
	C, t[20] = madd2(y[17], x[20], t[20], C)
	C, t[21] = madd2(y[17], x[21], t[21], C)
	C, t[22] = madd2(y[17], x[22], t[22], C)
	C, t[23] = madd2(y[17], x[23], t[23], C)
	C, t[24] = madd2(y[17], x[24], t[24], C)
	C, t[25] = madd2(y[17], x[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 8290328699649503029

	// -----------------------------------
	// Second loop
	C = madd0(m, 4094365063281874147, t[0])

	C, t[0] = madd2(m, 1025855223173275832, t[1], C)

	C, t[1] = madd2(m, 8078499220748900576, t[2], C)

	C, t[2] = madd2(m, 6592698397043999240, t[3], C)

	C, t[3] = madd2(m, 13409037793353034008, t[4], C)

	C, t[4] = madd2(m, 1796901052372556044, t[5], C)

	C, t[5] = madd2(m, 4050149076413023135, t[6], C)

	C, t[6] = madd2(m, 8897023274092210430, t[7], C)

	C, t[7] = madd2(m, 6636171111773171774, t[8], C)

	C, t[8] = madd2(m, 13239980137592616616, t[9], C)

	C, t[9] = madd2(m, 11519318792880301074, t[10], C)

	C, t[10] = madd2(m, 15796543401904101149, t[11], C)

	C, t[11] = madd2(m, 15325324754623440453, t[12], C)

	C, t[12] = madd2(m, 17385381814834154638, t[13], C)

	C, t[13] = madd2(m, 13824311487681794110, t[14], C)

	C, t[14] = madd2(m, 16983043387714363747, t[15], C)

	C, t[15] = madd2(m, 4630686512774309735, t[16], C)

	C, t[16] = madd2(m, 9507551311801003185, t[17], C)

	C, t[17] = madd2(m, 17276345451380752723, t[18], C)

	C, t[18] = madd2(m, 5398946044502786900, t[19], C)

	C, t[19] = madd2(m, 4273410409657646401, t[20], C)

	C, t[20] = madd2(m, 4537558703021582627, t[21], C)

	C, t[21] = madd2(m, 3928743618185798328, t[22], C)

	C, t[22] = madd2(m, 8879819406488282694, t[23], C)

	C, t[23] = madd2(m, 7271679122806957198, t[24], C)

	C, t[24] = madd3(m, 8309888569849274052, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[18], x[0], t[0])
	C, t[1] = madd2(y[18], x[1], t[1], C)
	C, t[2] = madd2(y[18], x[2], t[2], C)
	C, t[3] = madd2(y[18], x[3], t[3], C)
	C, t[4] = madd2(y[18], x[4], t[4], C)
	C, t[5] = madd2(y[18], x[5], t[5], C)
	C, t[6] = madd2(y[18], x[6], t[6], C)
	C, t[7] = madd2(y[18], x[7], t[7], C)
	C, t[8] = madd2(y[18], x[8], t[8], C)
	C, t[9] = madd2(y[18], x[9], t[9], C)
	C, t[10] = madd2(y[18], x[10], t[10], C)
	C, t[11] = madd2(y[18], x[11], t[11], C)
	C, t[12] = madd2(y[18], x[12], t[12], C)
	C, t[13] = madd2(y[18], x[13], t[13], C)
	C, t[14] = madd2(y[18], x[14], t[14], C)
	C, t[15] = madd2(y[18], x[15], t[15], C)
	C, t[16] = madd2(y[18], x[16], t[16], C)
	C, t[17] = madd2(y[18], x[17], t[17], C)
	C, t[18] = madd2(y[18], x[18], t[18], C)
	C, t[19] = madd2(y[18], x[19], t[19], C)
	C, t[20] = madd2(y[18], x[20], t[20], C)
	C, t[21] = madd2(y[18], x[21], t[21], C)
	C, t[22] = madd2(y[18], x[22], t[22], C)
	C, t[23] = madd2(y[18], x[23], t[23], C)
	C, t[24] = madd2(y[18], x[24], t[24], C)
	C, t[25] = madd2(y[18], x[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 8290328699649503029

	// -----------------------------------
	// Second loop
	C = madd0(m, 4094365063281874147, t[0])

	C, t[0] = madd2(m, 1025855223173275832, t[1], C)

	C, t[1] = madd2(m, 8078499220748900576, t[2], C)

	C, t[2] = madd2(m, 6592698397043999240, t[3], C)

	C, t[3] = madd2(m, 13409037793353034008, t[4], C)

	C, t[4] = madd2(m, 1796901052372556044, t[5], C)

	C, t[5] = madd2(m, 4050149076413023135, t[6], C)

	C, t[6] = madd2(m, 8897023274092210430, t[7], C)

	C, t[7] = madd2(m, 6636171111773171774, t[8], C)

	C, t[8] = madd2(m, 13239980137592616616, t[9], C)

	C, t[9] = madd2(m, 11519318792880301074, t[10], C)

	C, t[10] = madd2(m, 15796543401904101149, t[11], C)

	C, t[11] = madd2(m, 15325324754623440453, t[12], C)

	C, t[12] = madd2(m, 17385381814834154638, t[13], C)

	C, t[13] = madd2(m, 13824311487681794110, t[14], C)

	C, t[14] = madd2(m, 16983043387714363747, t[15], C)

	C, t[15] = madd2(m, 4630686512774309735, t[16], C)

	C, t[16] = madd2(m, 9507551311801003185, t[17], C)

	C, t[17] = madd2(m, 17276345451380752723, t[18], C)

	C, t[18] = madd2(m, 5398946044502786900, t[19], C)

	C, t[19] = madd2(m, 4273410409657646401, t[20], C)

	C, t[20] = madd2(m, 4537558703021582627, t[21], C)

	C, t[21] = madd2(m, 3928743618185798328, t[22], C)

	C, t[22] = madd2(m, 8879819406488282694, t[23], C)

	C, t[23] = madd2(m, 7271679122806957198, t[24], C)

	C, t[24] = madd3(m, 8309888569849274052, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[19], x[0], t[0])
	C, t[1] = madd2(y[19], x[1], t[1], C)
	C, t[2] = madd2(y[19], x[2], t[2], C)
	C, t[3] = madd2(y[19], x[3], t[3], C)
	C, t[4] = madd2(y[19], x[4], t[4], C)
	C, t[5] = madd2(y[19], x[5], t[5], C)
	C, t[6] = madd2(y[19], x[6], t[6], C)
	C, t[7] = madd2(y[19], x[7], t[7], C)
	C, t[8] = madd2(y[19], x[8], t[8], C)
	C, t[9] = madd2(y[19], x[9], t[9], C)
	C, t[10] = madd2(y[19], x[10], t[10], C)
	C, t[11] = madd2(y[19], x[11], t[11], C)
	C, t[12] = madd2(y[19], x[12], t[12], C)
	C, t[13] = madd2(y[19], x[13], t[13], C)
	C, t[14] = madd2(y[19], x[14], t[14], C)
	C, t[15] = madd2(y[19], x[15], t[15], C)
	C, t[16] = madd2(y[19], x[16], t[16], C)
	C, t[17] = madd2(y[19], x[17], t[17], C)
	C, t[18] = madd2(y[19], x[18], t[18], C)
	C, t[19] = madd2(y[19], x[19], t[19], C)
	C, t[20] = madd2(y[19], x[20], t[20], C)
	C, t[21] = madd2(y[19], x[21], t[21], C)
	C, t[22] = madd2(y[19], x[22], t[22], C)
	C, t[23] = madd2(y[19], x[23], t[23], C)
	C, t[24] = madd2(y[19], x[24], t[24], C)
	C, t[25] = madd2(y[19], x[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 8290328699649503029

	// -----------------------------------
	// Second loop
	C = madd0(m, 4094365063281874147, t[0])

	C, t[0] = madd2(m, 1025855223173275832, t[1], C)

	C, t[1] = madd2(m, 8078499220748900576, t[2], C)

	C, t[2] = madd2(m, 6592698397043999240, t[3], C)

	C, t[3] = madd2(m, 13409037793353034008, t[4], C)

	C, t[4] = madd2(m, 1796901052372556044, t[5], C)

	C, t[5] = madd2(m, 4050149076413023135, t[6], C)

	C, t[6] = madd2(m, 8897023274092210430, t[7], C)

	C, t[7] = madd2(m, 6636171111773171774, t[8], C)

	C, t[8] = madd2(m, 13239980137592616616, t[9], C)

	C, t[9] = madd2(m, 11519318792880301074, t[10], C)

	C, t[10] = madd2(m, 15796543401904101149, t[11], C)

	C, t[11] = madd2(m, 15325324754623440453, t[12], C)

	C, t[12] = madd2(m, 17385381814834154638, t[13], C)

	C, t[13] = madd2(m, 13824311487681794110, t[14], C)

	C, t[14] = madd2(m, 16983043387714363747, t[15], C)

	C, t[15] = madd2(m, 4630686512774309735, t[16], C)

	C, t[16] = madd2(m, 9507551311801003185, t[17], C)

	C, t[17] = madd2(m, 17276345451380752723, t[18], C)

	C, t[18] = madd2(m, 5398946044502786900, t[19], C)

	C, t[19] = madd2(m, 4273410409657646401, t[20], C)

	C, t[20] = madd2(m, 4537558703021582627, t[21], C)

	C, t[21] = madd2(m, 3928743618185798328, t[22], C)

	C, t[22] = madd2(m, 8879819406488282694, t[23], C)

	C, t[23] = madd2(m, 7271679122806957198, t[24], C)

	C, t[24] = madd3(m, 8309888569849274052, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[20], x[0], t[0])
	C, t[1] = madd2(y[20], x[1], t[1], C)
	C, t[2] = madd2(y[20], x[2], t[2], C)
	C, t[3] = madd2(y[20], x[3], t[3], C)
	C, t[4] = madd2(y[20], x[4], t[4], C)
	C, t[5] = madd2(y[20], x[5], t[5], C)
	C, t[6] = madd2(y[20], x[6], t[6], C)
	C, t[7] = madd2(y[20], x[7], t[7], C)
	C, t[8] = madd2(y[20], x[8], t[8], C)
	C, t[9] = madd2(y[20], x[9], t[9], C)
	C, t[10] = madd2(y[20], x[10], t[10], C)
	C, t[11] = madd2(y[20], x[11], t[11], C)
	C, t[12] = madd2(y[20], x[12], t[12], C)
	C, t[13] = madd2(y[20], x[13], t[13], C)
	C, t[14] = madd2(y[20], x[14], t[14], C)
	C, t[15] = madd2(y[20], x[15], t[15], C)
	C, t[16] = madd2(y[20], x[16], t[16], C)
	C, t[17] = madd2(y[20], x[17], t[17], C)
	C, t[18] = madd2(y[20], x[18], t[18], C)
	C, t[19] = madd2(y[20], x[19], t[19], C)
	C, t[20] = madd2(y[20], x[20], t[20], C)
	C, t[21] = madd2(y[20], x[21], t[21], C)
	C, t[22] = madd2(y[20], x[22], t[22], C)
	C, t[23] = madd2(y[20], x[23], t[23], C)
	C, t[24] = madd2(y[20], x[24], t[24], C)
	C, t[25] = madd2(y[20], x[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 8290328699649503029

	// -----------------------------------
	// Second loop
	C = madd0(m, 4094365063281874147, t[0])

	C, t[0] = madd2(m, 1025855223173275832, t[1], C)

	C, t[1] = madd2(m, 8078499220748900576, t[2], C)

	C, t[2] = madd2(m, 6592698397043999240, t[3], C)

	C, t[3] = madd2(m, 13409037793353034008, t[4], C)

	C, t[4] = madd2(m, 1796901052372556044, t[5], C)

	C, t[5] = madd2(m, 4050149076413023135, t[6], C)

	C, t[6] = madd2(m, 8897023274092210430, t[7], C)

	C, t[7] = madd2(m, 6636171111773171774, t[8], C)

	C, t[8] = madd2(m, 13239980137592616616, t[9], C)

	C, t[9] = madd2(m, 11519318792880301074, t[10], C)

	C, t[10] = madd2(m, 15796543401904101149, t[11], C)

	C, t[11] = madd2(m, 15325324754623440453, t[12], C)

	C, t[12] = madd2(m, 17385381814834154638, t[13], C)

	C, t[13] = madd2(m, 13824311487681794110, t[14], C)

	C, t[14] = madd2(m, 16983043387714363747, t[15], C)

	C, t[15] = madd2(m, 4630686512774309735, t[16], C)

	C, t[16] = madd2(m, 9507551311801003185, t[17], C)

	C, t[17] = madd2(m, 17276345451380752723, t[18], C)

	C, t[18] = madd2(m, 5398946044502786900, t[19], C)

	C, t[19] = madd2(m, 4273410409657646401, t[20], C)

	C, t[20] = madd2(m, 4537558703021582627, t[21], C)

	C, t[21] = madd2(m, 3928743618185798328, t[22], C)

	C, t[22] = madd2(m, 8879819406488282694, t[23], C)

	C, t[23] = madd2(m, 7271679122806957198, t[24], C)

	C, t[24] = madd3(m, 8309888569849274052, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[21], x[0], t[0])
	C, t[1] = madd2(y[21], x[1], t[1], C)
	C, t[2] = madd2(y[21], x[2], t[2], C)
	C, t[3] = madd2(y[21], x[3], t[3], C)
	C, t[4] = madd2(y[21], x[4], t[4], C)
	C, t[5] = madd2(y[21], x[5], t[5], C)
	C, t[6] = madd2(y[21], x[6], t[6], C)
	C, t[7] = madd2(y[21], x[7], t[7], C)
	C, t[8] = madd2(y[21], x[8], t[8], C)
	C, t[9] = madd2(y[21], x[9], t[9], C)
	C, t[10] = madd2(y[21], x[10], t[10], C)
	C, t[11] = madd2(y[21], x[11], t[11], C)
	C, t[12] = madd2(y[21], x[12], t[12], C)
	C, t[13] = madd2(y[21], x[13], t[13], C)
	C, t[14] = madd2(y[21], x[14], t[14], C)
	C, t[15] = madd2(y[21], x[15], t[15], C)
	C, t[16] = madd2(y[21], x[16], t[16], C)
	C, t[17] = madd2(y[21], x[17], t[17], C)
	C, t[18] = madd2(y[21], x[18], t[18], C)
	C, t[19] = madd2(y[21], x[19], t[19], C)
	C, t[20] = madd2(y[21], x[20], t[20], C)
	C, t[21] = madd2(y[21], x[21], t[21], C)
	C, t[22] = madd2(y[21], x[22], t[22], C)
	C, t[23] = madd2(y[21], x[23], t[23], C)
	C, t[24] = madd2(y[21], x[24], t[24], C)
	C, t[25] = madd2(y[21], x[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 8290328699649503029

	// -----------------------------------
	// Second loop
	C = madd0(m, 4094365063281874147, t[0])

	C, t[0] = madd2(m, 1025855223173275832, t[1], C)

	C, t[1] = madd2(m, 8078499220748900576, t[2], C)

	C, t[2] = madd2(m, 6592698397043999240, t[3], C)

	C, t[3] = madd2(m, 13409037793353034008, t[4], C)

	C, t[4] = madd2(m, 1796901052372556044, t[5], C)

	C, t[5] = madd2(m, 4050149076413023135, t[6], C)

	C, t[6] = madd2(m, 8897023274092210430, t[7], C)

	C, t[7] = madd2(m, 6636171111773171774, t[8], C)

	C, t[8] = madd2(m, 13239980137592616616, t[9], C)

	C, t[9] = madd2(m, 11519318792880301074, t[10], C)

	C, t[10] = madd2(m, 15796543401904101149, t[11], C)

	C, t[11] = madd2(m, 15325324754623440453, t[12], C)

	C, t[12] = madd2(m, 17385381814834154638, t[13], C)

	C, t[13] = madd2(m, 13824311487681794110, t[14], C)

	C, t[14] = madd2(m, 16983043387714363747, t[15], C)

	C, t[15] = madd2(m, 4630686512774309735, t[16], C)

	C, t[16] = madd2(m, 9507551311801003185, t[17], C)

	C, t[17] = madd2(m, 17276345451380752723, t[18], C)

	C, t[18] = madd2(m, 5398946044502786900, t[19], C)

	C, t[19] = madd2(m, 4273410409657646401, t[20], C)

	C, t[20] = madd2(m, 4537558703021582627, t[21], C)

	C, t[21] = madd2(m, 3928743618185798328, t[22], C)

	C, t[22] = madd2(m, 8879819406488282694, t[23], C)

	C, t[23] = madd2(m, 7271679122806957198, t[24], C)

	C, t[24] = madd3(m, 8309888569849274052, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[22], x[0], t[0])
	C, t[1] = madd2(y[22], x[1], t[1], C)
	C, t[2] = madd2(y[22], x[2], t[2], C)
	C, t[3] = madd2(y[22], x[3], t[3], C)
	C, t[4] = madd2(y[22], x[4], t[4], C)
	C, t[5] = madd2(y[22], x[5], t[5], C)
	C, t[6] = madd2(y[22], x[6], t[6], C)
	C, t[7] = madd2(y[22], x[7], t[7], C)
	C, t[8] = madd2(y[22], x[8], t[8], C)
	C, t[9] = madd2(y[22], x[9], t[9], C)
	C, t[10] = madd2(y[22], x[10], t[10], C)
	C, t[11] = madd2(y[22], x[11], t[11], C)
	C, t[12] = madd2(y[22], x[12], t[12], C)
	C, t[13] = madd2(y[22], x[13], t[13], C)
	C, t[14] = madd2(y[22], x[14], t[14], C)
	C, t[15] = madd2(y[22], x[15], t[15], C)
	C, t[16] = madd2(y[22], x[16], t[16], C)
	C, t[17] = madd2(y[22], x[17], t[17], C)
	C, t[18] = madd2(y[22], x[18], t[18], C)
	C, t[19] = madd2(y[22], x[19], t[19], C)
	C, t[20] = madd2(y[22], x[20], t[20], C)
	C, t[21] = madd2(y[22], x[21], t[21], C)
	C, t[22] = madd2(y[22], x[22], t[22], C)
	C, t[23] = madd2(y[22], x[23], t[23], C)
	C, t[24] = madd2(y[22], x[24], t[24], C)
	C, t[25] = madd2(y[22], x[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 8290328699649503029

	// -----------------------------------
	// Second loop
	C = madd0(m, 4094365063281874147, t[0])

	C, t[0] = madd2(m, 1025855223173275832, t[1], C)

	C, t[1] = madd2(m, 8078499220748900576, t[2], C)

	C, t[2] = madd2(m, 6592698397043999240, t[3], C)

	C, t[3] = madd2(m, 13409037793353034008, t[4], C)

	C, t[4] = madd2(m, 1796901052372556044, t[5], C)

	C, t[5] = madd2(m, 4050149076413023135, t[6], C)

	C, t[6] = madd2(m, 8897023274092210430, t[7], C)

	C, t[7] = madd2(m, 6636171111773171774, t[8], C)

	C, t[8] = madd2(m, 13239980137592616616, t[9], C)

	C, t[9] = madd2(m, 11519318792880301074, t[10], C)

	C, t[10] = madd2(m, 15796543401904101149, t[11], C)

	C, t[11] = madd2(m, 15325324754623440453, t[12], C)

	C, t[12] = madd2(m, 17385381814834154638, t[13], C)

	C, t[13] = madd2(m, 13824311487681794110, t[14], C)

	C, t[14] = madd2(m, 16983043387714363747, t[15], C)

	C, t[15] = madd2(m, 4630686512774309735, t[16], C)

	C, t[16] = madd2(m, 9507551311801003185, t[17], C)

	C, t[17] = madd2(m, 17276345451380752723, t[18], C)

	C, t[18] = madd2(m, 5398946044502786900, t[19], C)

	C, t[19] = madd2(m, 4273410409657646401, t[20], C)

	C, t[20] = madd2(m, 4537558703021582627, t[21], C)

	C, t[21] = madd2(m, 3928743618185798328, t[22], C)

	C, t[22] = madd2(m, 8879819406488282694, t[23], C)

	C, t[23] = madd2(m, 7271679122806957198, t[24], C)

	C, t[24] = madd3(m, 8309888569849274052, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[23], x[0], t[0])
	C, t[1] = madd2(y[23], x[1], t[1], C)
	C, t[2] = madd2(y[23], x[2], t[2], C)
	C, t[3] = madd2(y[23], x[3], t[3], C)
	C, t[4] = madd2(y[23], x[4], t[4], C)
	C, t[5] = madd2(y[23], x[5], t[5], C)
	C, t[6] = madd2(y[23], x[6], t[6], C)
	C, t[7] = madd2(y[23], x[7], t[7], C)
	C, t[8] = madd2(y[23], x[8], t[8], C)
	C, t[9] = madd2(y[23], x[9], t[9], C)
	C, t[10] = madd2(y[23], x[10], t[10], C)
	C, t[11] = madd2(y[23], x[11], t[11], C)
	C, t[12] = madd2(y[23], x[12], t[12], C)
	C, t[13] = madd2(y[23], x[13], t[13], C)
	C, t[14] = madd2(y[23], x[14], t[14], C)
	C, t[15] = madd2(y[23], x[15], t[15], C)
	C, t[16] = madd2(y[23], x[16], t[16], C)
	C, t[17] = madd2(y[23], x[17], t[17], C)
	C, t[18] = madd2(y[23], x[18], t[18], C)
	C, t[19] = madd2(y[23], x[19], t[19], C)
	C, t[20] = madd2(y[23], x[20], t[20], C)
	C, t[21] = madd2(y[23], x[21], t[21], C)
	C, t[22] = madd2(y[23], x[22], t[22], C)
	C, t[23] = madd2(y[23], x[23], t[23], C)
	C, t[24] = madd2(y[23], x[24], t[24], C)
	C, t[25] = madd2(y[23], x[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 8290328699649503029

	// -----------------------------------
	// Second loop
	C = madd0(m, 4094365063281874147, t[0])

	C, t[0] = madd2(m, 1025855223173275832, t[1], C)

	C, t[1] = madd2(m, 8078499220748900576, t[2], C)

	C, t[2] = madd2(m, 6592698397043999240, t[3], C)

	C, t[3] = madd2(m, 13409037793353034008, t[4], C)

	C, t[4] = madd2(m, 1796901052372556044, t[5], C)

	C, t[5] = madd2(m, 4050149076413023135, t[6], C)

	C, t[6] = madd2(m, 8897023274092210430, t[7], C)

	C, t[7] = madd2(m, 6636171111773171774, t[8], C)

	C, t[8] = madd2(m, 13239980137592616616, t[9], C)

	C, t[9] = madd2(m, 11519318792880301074, t[10], C)

	C, t[10] = madd2(m, 15796543401904101149, t[11], C)

	C, t[11] = madd2(m, 15325324754623440453, t[12], C)

	C, t[12] = madd2(m, 17385381814834154638, t[13], C)

	C, t[13] = madd2(m, 13824311487681794110, t[14], C)

	C, t[14] = madd2(m, 16983043387714363747, t[15], C)

	C, t[15] = madd2(m, 4630686512774309735, t[16], C)

	C, t[16] = madd2(m, 9507551311801003185, t[17], C)

	C, t[17] = madd2(m, 17276345451380752723, t[18], C)

	C, t[18] = madd2(m, 5398946044502786900, t[19], C)

	C, t[19] = madd2(m, 4273410409657646401, t[20], C)

	C, t[20] = madd2(m, 4537558703021582627, t[21], C)

	C, t[21] = madd2(m, 3928743618185798328, t[22], C)

	C, t[22] = madd2(m, 8879819406488282694, t[23], C)

	C, t[23] = madd2(m, 7271679122806957198, t[24], C)

	C, t[24] = madd3(m, 8309888569849274052, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[24], x[0], t[0])
	C, t[1] = madd2(y[24], x[1], t[1], C)
	C, t[2] = madd2(y[24], x[2], t[2], C)
	C, t[3] = madd2(y[24], x[3], t[3], C)
	C, t[4] = madd2(y[24], x[4], t[4], C)
	C, t[5] = madd2(y[24], x[5], t[5], C)
	C, t[6] = madd2(y[24], x[6], t[6], C)
	C, t[7] = madd2(y[24], x[7], t[7], C)
	C, t[8] = madd2(y[24], x[8], t[8], C)
	C, t[9] = madd2(y[24], x[9], t[9], C)
	C, t[10] = madd2(y[24], x[10], t[10], C)
	C, t[11] = madd2(y[24], x[11], t[11], C)
	C, t[12] = madd2(y[24], x[12], t[12], C)
	C, t[13] = madd2(y[24], x[13], t[13], C)
	C, t[14] = madd2(y[24], x[14], t[14], C)
	C, t[15] = madd2(y[24], x[15], t[15], C)
	C, t[16] = madd2(y[24], x[16], t[16], C)
	C, t[17] = madd2(y[24], x[17], t[17], C)
	C, t[18] = madd2(y[24], x[18], t[18], C)
	C, t[19] = madd2(y[24], x[19], t[19], C)
	C, t[20] = madd2(y[24], x[20], t[20], C)
	C, t[21] = madd2(y[24], x[21], t[21], C)
	C, t[22] = madd2(y[24], x[22], t[22], C)
	C, t[23] = madd2(y[24], x[23], t[23], C)
	C, t[24] = madd2(y[24], x[24], t[24], C)
	C, t[25] = madd2(y[24], x[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 8290328699649503029

	// -----------------------------------
	// Second loop
	C = madd0(m, 4094365063281874147, t[0])

	C, t[0] = madd2(m, 1025855223173275832, t[1], C)

	C, t[1] = madd2(m, 8078499220748900576, t[2], C)

	C, t[2] = madd2(m, 6592698397043999240, t[3], C)

	C, t[3] = madd2(m, 13409037793353034008, t[4], C)

	C, t[4] = madd2(m, 1796901052372556044, t[5], C)

	C, t[5] = madd2(m, 4050149076413023135, t[6], C)

	C, t[6] = madd2(m, 8897023274092210430, t[7], C)

	C, t[7] = madd2(m, 6636171111773171774, t[8], C)

	C, t[8] = madd2(m, 13239980137592616616, t[9], C)

	C, t[9] = madd2(m, 11519318792880301074, t[10], C)

	C, t[10] = madd2(m, 15796543401904101149, t[11], C)

	C, t[11] = madd2(m, 15325324754623440453, t[12], C)

	C, t[12] = madd2(m, 17385381814834154638, t[13], C)

	C, t[13] = madd2(m, 13824311487681794110, t[14], C)

	C, t[14] = madd2(m, 16983043387714363747, t[15], C)

	C, t[15] = madd2(m, 4630686512774309735, t[16], C)

	C, t[16] = madd2(m, 9507551311801003185, t[17], C)

	C, t[17] = madd2(m, 17276345451380752723, t[18], C)

	C, t[18] = madd2(m, 5398946044502786900, t[19], C)

	C, t[19] = madd2(m, 4273410409657646401, t[20], C)

	C, t[20] = madd2(m, 4537558703021582627, t[21], C)

	C, t[21] = madd2(m, 3928743618185798328, t[22], C)

	C, t[22] = madd2(m, 8879819406488282694, t[23], C)

	C, t[23] = madd2(m, 7271679122806957198, t[24], C)

	C, t[24] = madd3(m, 8309888569849274052, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[25], x[0], t[0])
	C, t[1] = madd2(y[25], x[1], t[1], C)
	C, t[2] = madd2(y[25], x[2], t[2], C)
	C, t[3] = madd2(y[25], x[3], t[3], C)
	C, t[4] = madd2(y[25], x[4], t[4], C)
	C, t[5] = madd2(y[25], x[5], t[5], C)
	C, t[6] = madd2(y[25], x[6], t[6], C)
	C, t[7] = madd2(y[25], x[7], t[7], C)
	C, t[8] = madd2(y[25], x[8], t[8], C)
	C, t[9] = madd2(y[25], x[9], t[9], C)
	C, t[10] = madd2(y[25], x[10], t[10], C)
	C, t[11] = madd2(y[25], x[11], t[11], C)
	C, t[12] = madd2(y[25], x[12], t[12], C)
	C, t[13] = madd2(y[25], x[13], t[13], C)
	C, t[14] = madd2(y[25], x[14], t[14], C)
	C, t[15] = madd2(y[25], x[15], t[15], C)
	C, t[16] = madd2(y[25], x[16], t[16], C)
	C, t[17] = madd2(y[25], x[17], t[17], C)
	C, t[18] = madd2(y[25], x[18], t[18], C)
	C, t[19] = madd2(y[25], x[19], t[19], C)
	C, t[20] = madd2(y[25], x[20], t[20], C)
	C, t[21] = madd2(y[25], x[21], t[21], C)
	C, t[22] = madd2(y[25], x[22], t[22], C)
	C, t[23] = madd2(y[25], x[23], t[23], C)
	C, t[24] = madd2(y[25], x[24], t[24], C)
	C, t[25] = madd2(y[25], x[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 8290328699649503029

	// -----------------------------------
	// Second loop
	C = madd0(m, 4094365063281874147, t[0])

	C, t[0] = madd2(m, 1025855223173275832, t[1], C)

	C, t[1] = madd2(m, 8078499220748900576, t[2], C)

	C, t[2] = madd2(m, 6592698397043999240, t[3], C)

	C, t[3] = madd2(m, 13409037793353034008, t[4], C)

	C, t[4] = madd2(m, 1796901052372556044, t[5], C)

	C, t[5] = madd2(m, 4050149076413023135, t[6], C)

	C, t[6] = madd2(m, 8897023274092210430, t[7], C)

	C, t[7] = madd2(m, 6636171111773171774, t[8], C)

	C, t[8] = madd2(m, 13239980137592616616, t[9], C)

	C, t[9] = madd2(m, 11519318792880301074, t[10], C)

	C, t[10] = madd2(m, 15796543401904101149, t[11], C)

	C, t[11] = madd2(m, 15325324754623440453, t[12], C)

	C, t[12] = madd2(m, 17385381814834154638, t[13], C)

	C, t[13] = madd2(m, 13824311487681794110, t[14], C)

	C, t[14] = madd2(m, 16983043387714363747, t[15], C)

	C, t[15] = madd2(m, 4630686512774309735, t[16], C)

	C, t[16] = madd2(m, 9507551311801003185, t[17], C)

	C, t[17] = madd2(m, 17276345451380752723, t[18], C)

	C, t[18] = madd2(m, 5398946044502786900, t[19], C)

	C, t[19] = madd2(m, 4273410409657646401, t[20], C)

	C, t[20] = madd2(m, 4537558703021582627, t[21], C)

	C, t[21] = madd2(m, 3928743618185798328, t[22], C)

	C, t[22] = madd2(m, 8879819406488282694, t[23], C)

	C, t[23] = madd2(m, 7271679122806957198, t[24], C)

	C, t[24] = madd3(m, 8309888569849274052, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)

	if t[26] != 0 {
		// we need to reduce, we have a result on 27 words
		var b uint64
		z[0], b = bits.Sub64(t[0], 4094365063281874147, 0)
		z[1], b = bits.Sub64(t[1], 1025855223173275832, b)
		z[2], b = bits.Sub64(t[2], 8078499220748900576, b)
		z[3], b = bits.Sub64(t[3], 6592698397043999240, b)
		z[4], b = bits.Sub64(t[4], 13409037793353034008, b)
		z[5], b = bits.Sub64(t[5], 1796901052372556044, b)
		z[6], b = bits.Sub64(t[6], 4050149076413023135, b)
		z[7], b = bits.Sub64(t[7], 8897023274092210430, b)
		z[8], b = bits.Sub64(t[8], 6636171111773171774, b)
		z[9], b = bits.Sub64(t[9], 13239980137592616616, b)
		z[10], b = bits.Sub64(t[10], 11519318792880301074, b)
		z[11], b = bits.Sub64(t[11], 15796543401904101149, b)
		z[12], b = bits.Sub64(t[12], 15325324754623440453, b)
		z[13], b = bits.Sub64(t[13], 17385381814834154638, b)
		z[14], b = bits.Sub64(t[14], 13824311487681794110, b)
		z[15], b = bits.Sub64(t[15], 16983043387714363747, b)
		z[16], b = bits.Sub64(t[16], 4630686512774309735, b)
		z[17], b = bits.Sub64(t[17], 9507551311801003185, b)
		z[18], b = bits.Sub64(t[18], 17276345451380752723, b)
		z[19], b = bits.Sub64(t[19], 5398946044502786900, b)
		z[20], b = bits.Sub64(t[20], 4273410409657646401, b)
		z[21], b = bits.Sub64(t[21], 4537558703021582627, b)
		z[22], b = bits.Sub64(t[22], 3928743618185798328, b)
		z[23], b = bits.Sub64(t[23], 8879819406488282694, b)
		z[24], b = bits.Sub64(t[24], 7271679122806957198, b)
		z[25], _ = bits.Sub64(t[25], 8309888569849274052, b)
		return z
	}

	// copy t into z
	z[0] = t[0]
	z[1] = t[1]
	z[2] = t[2]
	z[3] = t[3]
	z[4] = t[4]
	z[5] = t[5]
	z[6] = t[6]
	z[7] = t[7]
	z[8] = t[8]
	z[9] = t[9]
	z[10] = t[10]
	z[11] = t[11]
	z[12] = t[12]
	z[13] = t[13]
	z[14] = t[14]
	z[15] = t[15]
	z[16] = t[16]
	z[17] = t[17]
	z[18] = t[18]
	z[19] = t[19]
	z[20] = t[20]
	z[21] = t[21]
	z[22] = t[22]
	z[23] = t[23]
	z[24] = t[24]
	z[25] = t[25]

	// if z > q --> z -= q
	// note: this is NOT constant time
	if !(z[25] < 8309888569849274052 || (z[25] == 8309888569849274052 && (z[24] < 7271679122806957198 || (z[24] == 7271679122806957198 && (z[23] < 8879819406488282694 || (z[23] == 8879819406488282694 && (z[22] < 3928743618185798328 || (z[22] == 3928743618185798328 && (z[21] < 4537558703021582627 || (z[21] == 4537558703021582627 && (z[20] < 4273410409657646401 || (z[20] == 4273410409657646401 && (z[19] < 5398946044502786900 || (z[19] == 5398946044502786900 && (z[18] < 17276345451380752723 || (z[18] == 17276345451380752723 && (z[17] < 9507551311801003185 || (z[17] == 9507551311801003185 && (z[16] < 4630686512774309735 || (z[16] == 4630686512774309735 && (z[15] < 16983043387714363747 || (z[15] == 16983043387714363747 && (z[14] < 13824311487681794110 || (z[14] == 13824311487681794110 && (z[13] < 17385381814834154638 || (z[13] == 17385381814834154638 && (z[12] < 15325324754623440453 || (z[12] == 15325324754623440453 && (z[11] < 15796543401904101149 || (z[11] == 15796543401904101149 && (z[10] < 11519318792880301074 || (z[10] == 11519318792880301074 && (z[9] < 13239980137592616616 || (z[9] == 13239980137592616616 && (z[8] < 6636171111773171774 || (z[8] == 6636171111773171774 && (z[7] < 8897023274092210430 || (z[7] == 8897023274092210430 && (z[6] < 4050149076413023135 || (z[6] == 4050149076413023135 && (z[5] < 1796901052372556044 || (z[5] == 1796901052372556044 && (z[4] < 13409037793353034008 || (z[4] == 13409037793353034008 && (z[3] < 6592698397043999240 || (z[3] == 6592698397043999240 && (z[2] < 8078499220748900576 || (z[2] == 8078499220748900576 && (z[1] < 1025855223173275832 || (z[1] == 1025855223173275832 && (z[0] < 4094365063281874147))))))))))))))))))))))))))))))))))))))))))))))))))) {
		var b uint64
		z[0], b = bits.Sub64(z[0], 4094365063281874147, 0)
		z[1], b = bits.Sub64(z[1], 1025855223173275832, b)
		z[2], b = bits.Sub64(z[2], 8078499220748900576, b)
		z[3], b = bits.Sub64(z[3], 6592698397043999240, b)
		z[4], b = bits.Sub64(z[4], 13409037793353034008, b)
		z[5], b = bits.Sub64(z[5], 1796901052372556044, b)
		z[6], b = bits.Sub64(z[6], 4050149076413023135, b)
		z[7], b = bits.Sub64(z[7], 8897023274092210430, b)
		z[8], b = bits.Sub64(z[8], 6636171111773171774, b)
		z[9], b = bits.Sub64(z[9], 13239980137592616616, b)
		z[10], b = bits.Sub64(z[10], 11519318792880301074, b)
		z[11], b = bits.Sub64(z[11], 15796543401904101149, b)
		z[12], b = bits.Sub64(z[12], 15325324754623440453, b)
		z[13], b = bits.Sub64(z[13], 17385381814834154638, b)
		z[14], b = bits.Sub64(z[14], 13824311487681794110, b)
		z[15], b = bits.Sub64(z[15], 16983043387714363747, b)
		z[16], b = bits.Sub64(z[16], 4630686512774309735, b)
		z[17], b = bits.Sub64(z[17], 9507551311801003185, b)
		z[18], b = bits.Sub64(z[18], 17276345451380752723, b)
		z[19], b = bits.Sub64(z[19], 5398946044502786900, b)
		z[20], b = bits.Sub64(z[20], 4273410409657646401, b)
		z[21], b = bits.Sub64(z[21], 4537558703021582627, b)
		z[22], b = bits.Sub64(z[22], 3928743618185798328, b)
		z[23], b = bits.Sub64(z[23], 8879819406488282694, b)
		z[24], b = bits.Sub64(z[24], 7271679122806957198, b)
		z[25], _ = bits.Sub64(z[25], 8309888569849274052, b)
	}
	return z
}

// MulAssign z = z * x mod q
// see https://hackmd.io/@zkteam/modular_multiplication
func (z *Element26) MulAssign(x *Element26) *Element26 {

	var t [27]uint64
	var D uint64
	var m, C uint64
	// -----------------------------------
	// First loop

	C, t[0] = bits.Mul64(x[0], z[0])
	C, t[1] = madd1(x[0], z[1], C)
	C, t[2] = madd1(x[0], z[2], C)
	C, t[3] = madd1(x[0], z[3], C)
	C, t[4] = madd1(x[0], z[4], C)
	C, t[5] = madd1(x[0], z[5], C)
	C, t[6] = madd1(x[0], z[6], C)
	C, t[7] = madd1(x[0], z[7], C)
	C, t[8] = madd1(x[0], z[8], C)
	C, t[9] = madd1(x[0], z[9], C)
	C, t[10] = madd1(x[0], z[10], C)
	C, t[11] = madd1(x[0], z[11], C)
	C, t[12] = madd1(x[0], z[12], C)
	C, t[13] = madd1(x[0], z[13], C)
	C, t[14] = madd1(x[0], z[14], C)
	C, t[15] = madd1(x[0], z[15], C)
	C, t[16] = madd1(x[0], z[16], C)
	C, t[17] = madd1(x[0], z[17], C)
	C, t[18] = madd1(x[0], z[18], C)
	C, t[19] = madd1(x[0], z[19], C)
	C, t[20] = madd1(x[0], z[20], C)
	C, t[21] = madd1(x[0], z[21], C)
	C, t[22] = madd1(x[0], z[22], C)
	C, t[23] = madd1(x[0], z[23], C)
	C, t[24] = madd1(x[0], z[24], C)
	C, t[25] = madd1(x[0], z[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 8290328699649503029

	// -----------------------------------
	// Second loop
	C = madd0(m, 4094365063281874147, t[0])

	C, t[0] = madd2(m, 1025855223173275832, t[1], C)

	C, t[1] = madd2(m, 8078499220748900576, t[2], C)

	C, t[2] = madd2(m, 6592698397043999240, t[3], C)

	C, t[3] = madd2(m, 13409037793353034008, t[4], C)

	C, t[4] = madd2(m, 1796901052372556044, t[5], C)

	C, t[5] = madd2(m, 4050149076413023135, t[6], C)

	C, t[6] = madd2(m, 8897023274092210430, t[7], C)

	C, t[7] = madd2(m, 6636171111773171774, t[8], C)

	C, t[8] = madd2(m, 13239980137592616616, t[9], C)

	C, t[9] = madd2(m, 11519318792880301074, t[10], C)

	C, t[10] = madd2(m, 15796543401904101149, t[11], C)

	C, t[11] = madd2(m, 15325324754623440453, t[12], C)

	C, t[12] = madd2(m, 17385381814834154638, t[13], C)

	C, t[13] = madd2(m, 13824311487681794110, t[14], C)

	C, t[14] = madd2(m, 16983043387714363747, t[15], C)

	C, t[15] = madd2(m, 4630686512774309735, t[16], C)

	C, t[16] = madd2(m, 9507551311801003185, t[17], C)

	C, t[17] = madd2(m, 17276345451380752723, t[18], C)

	C, t[18] = madd2(m, 5398946044502786900, t[19], C)

	C, t[19] = madd2(m, 4273410409657646401, t[20], C)

	C, t[20] = madd2(m, 4537558703021582627, t[21], C)

	C, t[21] = madd2(m, 3928743618185798328, t[22], C)

	C, t[22] = madd2(m, 8879819406488282694, t[23], C)

	C, t[23] = madd2(m, 7271679122806957198, t[24], C)

	C, t[24] = madd3(m, 8309888569849274052, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[1], z[0], t[0])
	C, t[1] = madd2(x[1], z[1], t[1], C)
	C, t[2] = madd2(x[1], z[2], t[2], C)
	C, t[3] = madd2(x[1], z[3], t[3], C)
	C, t[4] = madd2(x[1], z[4], t[4], C)
	C, t[5] = madd2(x[1], z[5], t[5], C)
	C, t[6] = madd2(x[1], z[6], t[6], C)
	C, t[7] = madd2(x[1], z[7], t[7], C)
	C, t[8] = madd2(x[1], z[8], t[8], C)
	C, t[9] = madd2(x[1], z[9], t[9], C)
	C, t[10] = madd2(x[1], z[10], t[10], C)
	C, t[11] = madd2(x[1], z[11], t[11], C)
	C, t[12] = madd2(x[1], z[12], t[12], C)
	C, t[13] = madd2(x[1], z[13], t[13], C)
	C, t[14] = madd2(x[1], z[14], t[14], C)
	C, t[15] = madd2(x[1], z[15], t[15], C)
	C, t[16] = madd2(x[1], z[16], t[16], C)
	C, t[17] = madd2(x[1], z[17], t[17], C)
	C, t[18] = madd2(x[1], z[18], t[18], C)
	C, t[19] = madd2(x[1], z[19], t[19], C)
	C, t[20] = madd2(x[1], z[20], t[20], C)
	C, t[21] = madd2(x[1], z[21], t[21], C)
	C, t[22] = madd2(x[1], z[22], t[22], C)
	C, t[23] = madd2(x[1], z[23], t[23], C)
	C, t[24] = madd2(x[1], z[24], t[24], C)
	C, t[25] = madd2(x[1], z[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 8290328699649503029

	// -----------------------------------
	// Second loop
	C = madd0(m, 4094365063281874147, t[0])

	C, t[0] = madd2(m, 1025855223173275832, t[1], C)

	C, t[1] = madd2(m, 8078499220748900576, t[2], C)

	C, t[2] = madd2(m, 6592698397043999240, t[3], C)

	C, t[3] = madd2(m, 13409037793353034008, t[4], C)

	C, t[4] = madd2(m, 1796901052372556044, t[5], C)

	C, t[5] = madd2(m, 4050149076413023135, t[6], C)

	C, t[6] = madd2(m, 8897023274092210430, t[7], C)

	C, t[7] = madd2(m, 6636171111773171774, t[8], C)

	C, t[8] = madd2(m, 13239980137592616616, t[9], C)

	C, t[9] = madd2(m, 11519318792880301074, t[10], C)

	C, t[10] = madd2(m, 15796543401904101149, t[11], C)

	C, t[11] = madd2(m, 15325324754623440453, t[12], C)

	C, t[12] = madd2(m, 17385381814834154638, t[13], C)

	C, t[13] = madd2(m, 13824311487681794110, t[14], C)

	C, t[14] = madd2(m, 16983043387714363747, t[15], C)

	C, t[15] = madd2(m, 4630686512774309735, t[16], C)

	C, t[16] = madd2(m, 9507551311801003185, t[17], C)

	C, t[17] = madd2(m, 17276345451380752723, t[18], C)

	C, t[18] = madd2(m, 5398946044502786900, t[19], C)

	C, t[19] = madd2(m, 4273410409657646401, t[20], C)

	C, t[20] = madd2(m, 4537558703021582627, t[21], C)

	C, t[21] = madd2(m, 3928743618185798328, t[22], C)

	C, t[22] = madd2(m, 8879819406488282694, t[23], C)

	C, t[23] = madd2(m, 7271679122806957198, t[24], C)

	C, t[24] = madd3(m, 8309888569849274052, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[2], z[0], t[0])
	C, t[1] = madd2(x[2], z[1], t[1], C)
	C, t[2] = madd2(x[2], z[2], t[2], C)
	C, t[3] = madd2(x[2], z[3], t[3], C)
	C, t[4] = madd2(x[2], z[4], t[4], C)
	C, t[5] = madd2(x[2], z[5], t[5], C)
	C, t[6] = madd2(x[2], z[6], t[6], C)
	C, t[7] = madd2(x[2], z[7], t[7], C)
	C, t[8] = madd2(x[2], z[8], t[8], C)
	C, t[9] = madd2(x[2], z[9], t[9], C)
	C, t[10] = madd2(x[2], z[10], t[10], C)
	C, t[11] = madd2(x[2], z[11], t[11], C)
	C, t[12] = madd2(x[2], z[12], t[12], C)
	C, t[13] = madd2(x[2], z[13], t[13], C)
	C, t[14] = madd2(x[2], z[14], t[14], C)
	C, t[15] = madd2(x[2], z[15], t[15], C)
	C, t[16] = madd2(x[2], z[16], t[16], C)
	C, t[17] = madd2(x[2], z[17], t[17], C)
	C, t[18] = madd2(x[2], z[18], t[18], C)
	C, t[19] = madd2(x[2], z[19], t[19], C)
	C, t[20] = madd2(x[2], z[20], t[20], C)
	C, t[21] = madd2(x[2], z[21], t[21], C)
	C, t[22] = madd2(x[2], z[22], t[22], C)
	C, t[23] = madd2(x[2], z[23], t[23], C)
	C, t[24] = madd2(x[2], z[24], t[24], C)
	C, t[25] = madd2(x[2], z[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 8290328699649503029

	// -----------------------------------
	// Second loop
	C = madd0(m, 4094365063281874147, t[0])

	C, t[0] = madd2(m, 1025855223173275832, t[1], C)

	C, t[1] = madd2(m, 8078499220748900576, t[2], C)

	C, t[2] = madd2(m, 6592698397043999240, t[3], C)

	C, t[3] = madd2(m, 13409037793353034008, t[4], C)

	C, t[4] = madd2(m, 1796901052372556044, t[5], C)

	C, t[5] = madd2(m, 4050149076413023135, t[6], C)

	C, t[6] = madd2(m, 8897023274092210430, t[7], C)

	C, t[7] = madd2(m, 6636171111773171774, t[8], C)

	C, t[8] = madd2(m, 13239980137592616616, t[9], C)

	C, t[9] = madd2(m, 11519318792880301074, t[10], C)

	C, t[10] = madd2(m, 15796543401904101149, t[11], C)

	C, t[11] = madd2(m, 15325324754623440453, t[12], C)

	C, t[12] = madd2(m, 17385381814834154638, t[13], C)

	C, t[13] = madd2(m, 13824311487681794110, t[14], C)

	C, t[14] = madd2(m, 16983043387714363747, t[15], C)

	C, t[15] = madd2(m, 4630686512774309735, t[16], C)

	C, t[16] = madd2(m, 9507551311801003185, t[17], C)

	C, t[17] = madd2(m, 17276345451380752723, t[18], C)

	C, t[18] = madd2(m, 5398946044502786900, t[19], C)

	C, t[19] = madd2(m, 4273410409657646401, t[20], C)

	C, t[20] = madd2(m, 4537558703021582627, t[21], C)

	C, t[21] = madd2(m, 3928743618185798328, t[22], C)

	C, t[22] = madd2(m, 8879819406488282694, t[23], C)

	C, t[23] = madd2(m, 7271679122806957198, t[24], C)

	C, t[24] = madd3(m, 8309888569849274052, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[3], z[0], t[0])
	C, t[1] = madd2(x[3], z[1], t[1], C)
	C, t[2] = madd2(x[3], z[2], t[2], C)
	C, t[3] = madd2(x[3], z[3], t[3], C)
	C, t[4] = madd2(x[3], z[4], t[4], C)
	C, t[5] = madd2(x[3], z[5], t[5], C)
	C, t[6] = madd2(x[3], z[6], t[6], C)
	C, t[7] = madd2(x[3], z[7], t[7], C)
	C, t[8] = madd2(x[3], z[8], t[8], C)
	C, t[9] = madd2(x[3], z[9], t[9], C)
	C, t[10] = madd2(x[3], z[10], t[10], C)
	C, t[11] = madd2(x[3], z[11], t[11], C)
	C, t[12] = madd2(x[3], z[12], t[12], C)
	C, t[13] = madd2(x[3], z[13], t[13], C)
	C, t[14] = madd2(x[3], z[14], t[14], C)
	C, t[15] = madd2(x[3], z[15], t[15], C)
	C, t[16] = madd2(x[3], z[16], t[16], C)
	C, t[17] = madd2(x[3], z[17], t[17], C)
	C, t[18] = madd2(x[3], z[18], t[18], C)
	C, t[19] = madd2(x[3], z[19], t[19], C)
	C, t[20] = madd2(x[3], z[20], t[20], C)
	C, t[21] = madd2(x[3], z[21], t[21], C)
	C, t[22] = madd2(x[3], z[22], t[22], C)
	C, t[23] = madd2(x[3], z[23], t[23], C)
	C, t[24] = madd2(x[3], z[24], t[24], C)
	C, t[25] = madd2(x[3], z[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 8290328699649503029

	// -----------------------------------
	// Second loop
	C = madd0(m, 4094365063281874147, t[0])

	C, t[0] = madd2(m, 1025855223173275832, t[1], C)

	C, t[1] = madd2(m, 8078499220748900576, t[2], C)

	C, t[2] = madd2(m, 6592698397043999240, t[3], C)

	C, t[3] = madd2(m, 13409037793353034008, t[4], C)

	C, t[4] = madd2(m, 1796901052372556044, t[5], C)

	C, t[5] = madd2(m, 4050149076413023135, t[6], C)

	C, t[6] = madd2(m, 8897023274092210430, t[7], C)

	C, t[7] = madd2(m, 6636171111773171774, t[8], C)

	C, t[8] = madd2(m, 13239980137592616616, t[9], C)

	C, t[9] = madd2(m, 11519318792880301074, t[10], C)

	C, t[10] = madd2(m, 15796543401904101149, t[11], C)

	C, t[11] = madd2(m, 15325324754623440453, t[12], C)

	C, t[12] = madd2(m, 17385381814834154638, t[13], C)

	C, t[13] = madd2(m, 13824311487681794110, t[14], C)

	C, t[14] = madd2(m, 16983043387714363747, t[15], C)

	C, t[15] = madd2(m, 4630686512774309735, t[16], C)

	C, t[16] = madd2(m, 9507551311801003185, t[17], C)

	C, t[17] = madd2(m, 17276345451380752723, t[18], C)

	C, t[18] = madd2(m, 5398946044502786900, t[19], C)

	C, t[19] = madd2(m, 4273410409657646401, t[20], C)

	C, t[20] = madd2(m, 4537558703021582627, t[21], C)

	C, t[21] = madd2(m, 3928743618185798328, t[22], C)

	C, t[22] = madd2(m, 8879819406488282694, t[23], C)

	C, t[23] = madd2(m, 7271679122806957198, t[24], C)

	C, t[24] = madd3(m, 8309888569849274052, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[4], z[0], t[0])
	C, t[1] = madd2(x[4], z[1], t[1], C)
	C, t[2] = madd2(x[4], z[2], t[2], C)
	C, t[3] = madd2(x[4], z[3], t[3], C)
	C, t[4] = madd2(x[4], z[4], t[4], C)
	C, t[5] = madd2(x[4], z[5], t[5], C)
	C, t[6] = madd2(x[4], z[6], t[6], C)
	C, t[7] = madd2(x[4], z[7], t[7], C)
	C, t[8] = madd2(x[4], z[8], t[8], C)
	C, t[9] = madd2(x[4], z[9], t[9], C)
	C, t[10] = madd2(x[4], z[10], t[10], C)
	C, t[11] = madd2(x[4], z[11], t[11], C)
	C, t[12] = madd2(x[4], z[12], t[12], C)
	C, t[13] = madd2(x[4], z[13], t[13], C)
	C, t[14] = madd2(x[4], z[14], t[14], C)
	C, t[15] = madd2(x[4], z[15], t[15], C)
	C, t[16] = madd2(x[4], z[16], t[16], C)
	C, t[17] = madd2(x[4], z[17], t[17], C)
	C, t[18] = madd2(x[4], z[18], t[18], C)
	C, t[19] = madd2(x[4], z[19], t[19], C)
	C, t[20] = madd2(x[4], z[20], t[20], C)
	C, t[21] = madd2(x[4], z[21], t[21], C)
	C, t[22] = madd2(x[4], z[22], t[22], C)
	C, t[23] = madd2(x[4], z[23], t[23], C)
	C, t[24] = madd2(x[4], z[24], t[24], C)
	C, t[25] = madd2(x[4], z[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 8290328699649503029

	// -----------------------------------
	// Second loop
	C = madd0(m, 4094365063281874147, t[0])

	C, t[0] = madd2(m, 1025855223173275832, t[1], C)

	C, t[1] = madd2(m, 8078499220748900576, t[2], C)

	C, t[2] = madd2(m, 6592698397043999240, t[3], C)

	C, t[3] = madd2(m, 13409037793353034008, t[4], C)

	C, t[4] = madd2(m, 1796901052372556044, t[5], C)

	C, t[5] = madd2(m, 4050149076413023135, t[6], C)

	C, t[6] = madd2(m, 8897023274092210430, t[7], C)

	C, t[7] = madd2(m, 6636171111773171774, t[8], C)

	C, t[8] = madd2(m, 13239980137592616616, t[9], C)

	C, t[9] = madd2(m, 11519318792880301074, t[10], C)

	C, t[10] = madd2(m, 15796543401904101149, t[11], C)

	C, t[11] = madd2(m, 15325324754623440453, t[12], C)

	C, t[12] = madd2(m, 17385381814834154638, t[13], C)

	C, t[13] = madd2(m, 13824311487681794110, t[14], C)

	C, t[14] = madd2(m, 16983043387714363747, t[15], C)

	C, t[15] = madd2(m, 4630686512774309735, t[16], C)

	C, t[16] = madd2(m, 9507551311801003185, t[17], C)

	C, t[17] = madd2(m, 17276345451380752723, t[18], C)

	C, t[18] = madd2(m, 5398946044502786900, t[19], C)

	C, t[19] = madd2(m, 4273410409657646401, t[20], C)

	C, t[20] = madd2(m, 4537558703021582627, t[21], C)

	C, t[21] = madd2(m, 3928743618185798328, t[22], C)

	C, t[22] = madd2(m, 8879819406488282694, t[23], C)

	C, t[23] = madd2(m, 7271679122806957198, t[24], C)

	C, t[24] = madd3(m, 8309888569849274052, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[5], z[0], t[0])
	C, t[1] = madd2(x[5], z[1], t[1], C)
	C, t[2] = madd2(x[5], z[2], t[2], C)
	C, t[3] = madd2(x[5], z[3], t[3], C)
	C, t[4] = madd2(x[5], z[4], t[4], C)
	C, t[5] = madd2(x[5], z[5], t[5], C)
	C, t[6] = madd2(x[5], z[6], t[6], C)
	C, t[7] = madd2(x[5], z[7], t[7], C)
	C, t[8] = madd2(x[5], z[8], t[8], C)
	C, t[9] = madd2(x[5], z[9], t[9], C)
	C, t[10] = madd2(x[5], z[10], t[10], C)
	C, t[11] = madd2(x[5], z[11], t[11], C)
	C, t[12] = madd2(x[5], z[12], t[12], C)
	C, t[13] = madd2(x[5], z[13], t[13], C)
	C, t[14] = madd2(x[5], z[14], t[14], C)
	C, t[15] = madd2(x[5], z[15], t[15], C)
	C, t[16] = madd2(x[5], z[16], t[16], C)
	C, t[17] = madd2(x[5], z[17], t[17], C)
	C, t[18] = madd2(x[5], z[18], t[18], C)
	C, t[19] = madd2(x[5], z[19], t[19], C)
	C, t[20] = madd2(x[5], z[20], t[20], C)
	C, t[21] = madd2(x[5], z[21], t[21], C)
	C, t[22] = madd2(x[5], z[22], t[22], C)
	C, t[23] = madd2(x[5], z[23], t[23], C)
	C, t[24] = madd2(x[5], z[24], t[24], C)
	C, t[25] = madd2(x[5], z[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 8290328699649503029

	// -----------------------------------
	// Second loop
	C = madd0(m, 4094365063281874147, t[0])

	C, t[0] = madd2(m, 1025855223173275832, t[1], C)

	C, t[1] = madd2(m, 8078499220748900576, t[2], C)

	C, t[2] = madd2(m, 6592698397043999240, t[3], C)

	C, t[3] = madd2(m, 13409037793353034008, t[4], C)

	C, t[4] = madd2(m, 1796901052372556044, t[5], C)

	C, t[5] = madd2(m, 4050149076413023135, t[6], C)

	C, t[6] = madd2(m, 8897023274092210430, t[7], C)

	C, t[7] = madd2(m, 6636171111773171774, t[8], C)

	C, t[8] = madd2(m, 13239980137592616616, t[9], C)

	C, t[9] = madd2(m, 11519318792880301074, t[10], C)

	C, t[10] = madd2(m, 15796543401904101149, t[11], C)

	C, t[11] = madd2(m, 15325324754623440453, t[12], C)

	C, t[12] = madd2(m, 17385381814834154638, t[13], C)

	C, t[13] = madd2(m, 13824311487681794110, t[14], C)

	C, t[14] = madd2(m, 16983043387714363747, t[15], C)

	C, t[15] = madd2(m, 4630686512774309735, t[16], C)

	C, t[16] = madd2(m, 9507551311801003185, t[17], C)

	C, t[17] = madd2(m, 17276345451380752723, t[18], C)

	C, t[18] = madd2(m, 5398946044502786900, t[19], C)

	C, t[19] = madd2(m, 4273410409657646401, t[20], C)

	C, t[20] = madd2(m, 4537558703021582627, t[21], C)

	C, t[21] = madd2(m, 3928743618185798328, t[22], C)

	C, t[22] = madd2(m, 8879819406488282694, t[23], C)

	C, t[23] = madd2(m, 7271679122806957198, t[24], C)

	C, t[24] = madd3(m, 8309888569849274052, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[6], z[0], t[0])
	C, t[1] = madd2(x[6], z[1], t[1], C)
	C, t[2] = madd2(x[6], z[2], t[2], C)
	C, t[3] = madd2(x[6], z[3], t[3], C)
	C, t[4] = madd2(x[6], z[4], t[4], C)
	C, t[5] = madd2(x[6], z[5], t[5], C)
	C, t[6] = madd2(x[6], z[6], t[6], C)
	C, t[7] = madd2(x[6], z[7], t[7], C)
	C, t[8] = madd2(x[6], z[8], t[8], C)
	C, t[9] = madd2(x[6], z[9], t[9], C)
	C, t[10] = madd2(x[6], z[10], t[10], C)
	C, t[11] = madd2(x[6], z[11], t[11], C)
	C, t[12] = madd2(x[6], z[12], t[12], C)
	C, t[13] = madd2(x[6], z[13], t[13], C)
	C, t[14] = madd2(x[6], z[14], t[14], C)
	C, t[15] = madd2(x[6], z[15], t[15], C)
	C, t[16] = madd2(x[6], z[16], t[16], C)
	C, t[17] = madd2(x[6], z[17], t[17], C)
	C, t[18] = madd2(x[6], z[18], t[18], C)
	C, t[19] = madd2(x[6], z[19], t[19], C)
	C, t[20] = madd2(x[6], z[20], t[20], C)
	C, t[21] = madd2(x[6], z[21], t[21], C)
	C, t[22] = madd2(x[6], z[22], t[22], C)
	C, t[23] = madd2(x[6], z[23], t[23], C)
	C, t[24] = madd2(x[6], z[24], t[24], C)
	C, t[25] = madd2(x[6], z[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 8290328699649503029

	// -----------------------------------
	// Second loop
	C = madd0(m, 4094365063281874147, t[0])

	C, t[0] = madd2(m, 1025855223173275832, t[1], C)

	C, t[1] = madd2(m, 8078499220748900576, t[2], C)

	C, t[2] = madd2(m, 6592698397043999240, t[3], C)

	C, t[3] = madd2(m, 13409037793353034008, t[4], C)

	C, t[4] = madd2(m, 1796901052372556044, t[5], C)

	C, t[5] = madd2(m, 4050149076413023135, t[6], C)

	C, t[6] = madd2(m, 8897023274092210430, t[7], C)

	C, t[7] = madd2(m, 6636171111773171774, t[8], C)

	C, t[8] = madd2(m, 13239980137592616616, t[9], C)

	C, t[9] = madd2(m, 11519318792880301074, t[10], C)

	C, t[10] = madd2(m, 15796543401904101149, t[11], C)

	C, t[11] = madd2(m, 15325324754623440453, t[12], C)

	C, t[12] = madd2(m, 17385381814834154638, t[13], C)

	C, t[13] = madd2(m, 13824311487681794110, t[14], C)

	C, t[14] = madd2(m, 16983043387714363747, t[15], C)

	C, t[15] = madd2(m, 4630686512774309735, t[16], C)

	C, t[16] = madd2(m, 9507551311801003185, t[17], C)

	C, t[17] = madd2(m, 17276345451380752723, t[18], C)

	C, t[18] = madd2(m, 5398946044502786900, t[19], C)

	C, t[19] = madd2(m, 4273410409657646401, t[20], C)

	C, t[20] = madd2(m, 4537558703021582627, t[21], C)

	C, t[21] = madd2(m, 3928743618185798328, t[22], C)

	C, t[22] = madd2(m, 8879819406488282694, t[23], C)

	C, t[23] = madd2(m, 7271679122806957198, t[24], C)

	C, t[24] = madd3(m, 8309888569849274052, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[7], z[0], t[0])
	C, t[1] = madd2(x[7], z[1], t[1], C)
	C, t[2] = madd2(x[7], z[2], t[2], C)
	C, t[3] = madd2(x[7], z[3], t[3], C)
	C, t[4] = madd2(x[7], z[4], t[4], C)
	C, t[5] = madd2(x[7], z[5], t[5], C)
	C, t[6] = madd2(x[7], z[6], t[6], C)
	C, t[7] = madd2(x[7], z[7], t[7], C)
	C, t[8] = madd2(x[7], z[8], t[8], C)
	C, t[9] = madd2(x[7], z[9], t[9], C)
	C, t[10] = madd2(x[7], z[10], t[10], C)
	C, t[11] = madd2(x[7], z[11], t[11], C)
	C, t[12] = madd2(x[7], z[12], t[12], C)
	C, t[13] = madd2(x[7], z[13], t[13], C)
	C, t[14] = madd2(x[7], z[14], t[14], C)
	C, t[15] = madd2(x[7], z[15], t[15], C)
	C, t[16] = madd2(x[7], z[16], t[16], C)
	C, t[17] = madd2(x[7], z[17], t[17], C)
	C, t[18] = madd2(x[7], z[18], t[18], C)
	C, t[19] = madd2(x[7], z[19], t[19], C)
	C, t[20] = madd2(x[7], z[20], t[20], C)
	C, t[21] = madd2(x[7], z[21], t[21], C)
	C, t[22] = madd2(x[7], z[22], t[22], C)
	C, t[23] = madd2(x[7], z[23], t[23], C)
	C, t[24] = madd2(x[7], z[24], t[24], C)
	C, t[25] = madd2(x[7], z[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 8290328699649503029

	// -----------------------------------
	// Second loop
	C = madd0(m, 4094365063281874147, t[0])

	C, t[0] = madd2(m, 1025855223173275832, t[1], C)

	C, t[1] = madd2(m, 8078499220748900576, t[2], C)

	C, t[2] = madd2(m, 6592698397043999240, t[3], C)

	C, t[3] = madd2(m, 13409037793353034008, t[4], C)

	C, t[4] = madd2(m, 1796901052372556044, t[5], C)

	C, t[5] = madd2(m, 4050149076413023135, t[6], C)

	C, t[6] = madd2(m, 8897023274092210430, t[7], C)

	C, t[7] = madd2(m, 6636171111773171774, t[8], C)

	C, t[8] = madd2(m, 13239980137592616616, t[9], C)

	C, t[9] = madd2(m, 11519318792880301074, t[10], C)

	C, t[10] = madd2(m, 15796543401904101149, t[11], C)

	C, t[11] = madd2(m, 15325324754623440453, t[12], C)

	C, t[12] = madd2(m, 17385381814834154638, t[13], C)

	C, t[13] = madd2(m, 13824311487681794110, t[14], C)

	C, t[14] = madd2(m, 16983043387714363747, t[15], C)

	C, t[15] = madd2(m, 4630686512774309735, t[16], C)

	C, t[16] = madd2(m, 9507551311801003185, t[17], C)

	C, t[17] = madd2(m, 17276345451380752723, t[18], C)

	C, t[18] = madd2(m, 5398946044502786900, t[19], C)

	C, t[19] = madd2(m, 4273410409657646401, t[20], C)

	C, t[20] = madd2(m, 4537558703021582627, t[21], C)

	C, t[21] = madd2(m, 3928743618185798328, t[22], C)

	C, t[22] = madd2(m, 8879819406488282694, t[23], C)

	C, t[23] = madd2(m, 7271679122806957198, t[24], C)

	C, t[24] = madd3(m, 8309888569849274052, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[8], z[0], t[0])
	C, t[1] = madd2(x[8], z[1], t[1], C)
	C, t[2] = madd2(x[8], z[2], t[2], C)
	C, t[3] = madd2(x[8], z[3], t[3], C)
	C, t[4] = madd2(x[8], z[4], t[4], C)
	C, t[5] = madd2(x[8], z[5], t[5], C)
	C, t[6] = madd2(x[8], z[6], t[6], C)
	C, t[7] = madd2(x[8], z[7], t[7], C)
	C, t[8] = madd2(x[8], z[8], t[8], C)
	C, t[9] = madd2(x[8], z[9], t[9], C)
	C, t[10] = madd2(x[8], z[10], t[10], C)
	C, t[11] = madd2(x[8], z[11], t[11], C)
	C, t[12] = madd2(x[8], z[12], t[12], C)
	C, t[13] = madd2(x[8], z[13], t[13], C)
	C, t[14] = madd2(x[8], z[14], t[14], C)
	C, t[15] = madd2(x[8], z[15], t[15], C)
	C, t[16] = madd2(x[8], z[16], t[16], C)
	C, t[17] = madd2(x[8], z[17], t[17], C)
	C, t[18] = madd2(x[8], z[18], t[18], C)
	C, t[19] = madd2(x[8], z[19], t[19], C)
	C, t[20] = madd2(x[8], z[20], t[20], C)
	C, t[21] = madd2(x[8], z[21], t[21], C)
	C, t[22] = madd2(x[8], z[22], t[22], C)
	C, t[23] = madd2(x[8], z[23], t[23], C)
	C, t[24] = madd2(x[8], z[24], t[24], C)
	C, t[25] = madd2(x[8], z[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 8290328699649503029

	// -----------------------------------
	// Second loop
	C = madd0(m, 4094365063281874147, t[0])

	C, t[0] = madd2(m, 1025855223173275832, t[1], C)

	C, t[1] = madd2(m, 8078499220748900576, t[2], C)

	C, t[2] = madd2(m, 6592698397043999240, t[3], C)

	C, t[3] = madd2(m, 13409037793353034008, t[4], C)

	C, t[4] = madd2(m, 1796901052372556044, t[5], C)

	C, t[5] = madd2(m, 4050149076413023135, t[6], C)

	C, t[6] = madd2(m, 8897023274092210430, t[7], C)

	C, t[7] = madd2(m, 6636171111773171774, t[8], C)

	C, t[8] = madd2(m, 13239980137592616616, t[9], C)

	C, t[9] = madd2(m, 11519318792880301074, t[10], C)

	C, t[10] = madd2(m, 15796543401904101149, t[11], C)

	C, t[11] = madd2(m, 15325324754623440453, t[12], C)

	C, t[12] = madd2(m, 17385381814834154638, t[13], C)

	C, t[13] = madd2(m, 13824311487681794110, t[14], C)

	C, t[14] = madd2(m, 16983043387714363747, t[15], C)

	C, t[15] = madd2(m, 4630686512774309735, t[16], C)

	C, t[16] = madd2(m, 9507551311801003185, t[17], C)

	C, t[17] = madd2(m, 17276345451380752723, t[18], C)

	C, t[18] = madd2(m, 5398946044502786900, t[19], C)

	C, t[19] = madd2(m, 4273410409657646401, t[20], C)

	C, t[20] = madd2(m, 4537558703021582627, t[21], C)

	C, t[21] = madd2(m, 3928743618185798328, t[22], C)

	C, t[22] = madd2(m, 8879819406488282694, t[23], C)

	C, t[23] = madd2(m, 7271679122806957198, t[24], C)

	C, t[24] = madd3(m, 8309888569849274052, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[9], z[0], t[0])
	C, t[1] = madd2(x[9], z[1], t[1], C)
	C, t[2] = madd2(x[9], z[2], t[2], C)
	C, t[3] = madd2(x[9], z[3], t[3], C)
	C, t[4] = madd2(x[9], z[4], t[4], C)
	C, t[5] = madd2(x[9], z[5], t[5], C)
	C, t[6] = madd2(x[9], z[6], t[6], C)
	C, t[7] = madd2(x[9], z[7], t[7], C)
	C, t[8] = madd2(x[9], z[8], t[8], C)
	C, t[9] = madd2(x[9], z[9], t[9], C)
	C, t[10] = madd2(x[9], z[10], t[10], C)
	C, t[11] = madd2(x[9], z[11], t[11], C)
	C, t[12] = madd2(x[9], z[12], t[12], C)
	C, t[13] = madd2(x[9], z[13], t[13], C)
	C, t[14] = madd2(x[9], z[14], t[14], C)
	C, t[15] = madd2(x[9], z[15], t[15], C)
	C, t[16] = madd2(x[9], z[16], t[16], C)
	C, t[17] = madd2(x[9], z[17], t[17], C)
	C, t[18] = madd2(x[9], z[18], t[18], C)
	C, t[19] = madd2(x[9], z[19], t[19], C)
	C, t[20] = madd2(x[9], z[20], t[20], C)
	C, t[21] = madd2(x[9], z[21], t[21], C)
	C, t[22] = madd2(x[9], z[22], t[22], C)
	C, t[23] = madd2(x[9], z[23], t[23], C)
	C, t[24] = madd2(x[9], z[24], t[24], C)
	C, t[25] = madd2(x[9], z[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 8290328699649503029

	// -----------------------------------
	// Second loop
	C = madd0(m, 4094365063281874147, t[0])

	C, t[0] = madd2(m, 1025855223173275832, t[1], C)

	C, t[1] = madd2(m, 8078499220748900576, t[2], C)

	C, t[2] = madd2(m, 6592698397043999240, t[3], C)

	C, t[3] = madd2(m, 13409037793353034008, t[4], C)

	C, t[4] = madd2(m, 1796901052372556044, t[5], C)

	C, t[5] = madd2(m, 4050149076413023135, t[6], C)

	C, t[6] = madd2(m, 8897023274092210430, t[7], C)

	C, t[7] = madd2(m, 6636171111773171774, t[8], C)

	C, t[8] = madd2(m, 13239980137592616616, t[9], C)

	C, t[9] = madd2(m, 11519318792880301074, t[10], C)

	C, t[10] = madd2(m, 15796543401904101149, t[11], C)

	C, t[11] = madd2(m, 15325324754623440453, t[12], C)

	C, t[12] = madd2(m, 17385381814834154638, t[13], C)

	C, t[13] = madd2(m, 13824311487681794110, t[14], C)

	C, t[14] = madd2(m, 16983043387714363747, t[15], C)

	C, t[15] = madd2(m, 4630686512774309735, t[16], C)

	C, t[16] = madd2(m, 9507551311801003185, t[17], C)

	C, t[17] = madd2(m, 17276345451380752723, t[18], C)

	C, t[18] = madd2(m, 5398946044502786900, t[19], C)

	C, t[19] = madd2(m, 4273410409657646401, t[20], C)

	C, t[20] = madd2(m, 4537558703021582627, t[21], C)

	C, t[21] = madd2(m, 3928743618185798328, t[22], C)

	C, t[22] = madd2(m, 8879819406488282694, t[23], C)

	C, t[23] = madd2(m, 7271679122806957198, t[24], C)

	C, t[24] = madd3(m, 8309888569849274052, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[10], z[0], t[0])
	C, t[1] = madd2(x[10], z[1], t[1], C)
	C, t[2] = madd2(x[10], z[2], t[2], C)
	C, t[3] = madd2(x[10], z[3], t[3], C)
	C, t[4] = madd2(x[10], z[4], t[4], C)
	C, t[5] = madd2(x[10], z[5], t[5], C)
	C, t[6] = madd2(x[10], z[6], t[6], C)
	C, t[7] = madd2(x[10], z[7], t[7], C)
	C, t[8] = madd2(x[10], z[8], t[8], C)
	C, t[9] = madd2(x[10], z[9], t[9], C)
	C, t[10] = madd2(x[10], z[10], t[10], C)
	C, t[11] = madd2(x[10], z[11], t[11], C)
	C, t[12] = madd2(x[10], z[12], t[12], C)
	C, t[13] = madd2(x[10], z[13], t[13], C)
	C, t[14] = madd2(x[10], z[14], t[14], C)
	C, t[15] = madd2(x[10], z[15], t[15], C)
	C, t[16] = madd2(x[10], z[16], t[16], C)
	C, t[17] = madd2(x[10], z[17], t[17], C)
	C, t[18] = madd2(x[10], z[18], t[18], C)
	C, t[19] = madd2(x[10], z[19], t[19], C)
	C, t[20] = madd2(x[10], z[20], t[20], C)
	C, t[21] = madd2(x[10], z[21], t[21], C)
	C, t[22] = madd2(x[10], z[22], t[22], C)
	C, t[23] = madd2(x[10], z[23], t[23], C)
	C, t[24] = madd2(x[10], z[24], t[24], C)
	C, t[25] = madd2(x[10], z[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 8290328699649503029

	// -----------------------------------
	// Second loop
	C = madd0(m, 4094365063281874147, t[0])

	C, t[0] = madd2(m, 1025855223173275832, t[1], C)

	C, t[1] = madd2(m, 8078499220748900576, t[2], C)

	C, t[2] = madd2(m, 6592698397043999240, t[3], C)

	C, t[3] = madd2(m, 13409037793353034008, t[4], C)

	C, t[4] = madd2(m, 1796901052372556044, t[5], C)

	C, t[5] = madd2(m, 4050149076413023135, t[6], C)

	C, t[6] = madd2(m, 8897023274092210430, t[7], C)

	C, t[7] = madd2(m, 6636171111773171774, t[8], C)

	C, t[8] = madd2(m, 13239980137592616616, t[9], C)

	C, t[9] = madd2(m, 11519318792880301074, t[10], C)

	C, t[10] = madd2(m, 15796543401904101149, t[11], C)

	C, t[11] = madd2(m, 15325324754623440453, t[12], C)

	C, t[12] = madd2(m, 17385381814834154638, t[13], C)

	C, t[13] = madd2(m, 13824311487681794110, t[14], C)

	C, t[14] = madd2(m, 16983043387714363747, t[15], C)

	C, t[15] = madd2(m, 4630686512774309735, t[16], C)

	C, t[16] = madd2(m, 9507551311801003185, t[17], C)

	C, t[17] = madd2(m, 17276345451380752723, t[18], C)

	C, t[18] = madd2(m, 5398946044502786900, t[19], C)

	C, t[19] = madd2(m, 4273410409657646401, t[20], C)

	C, t[20] = madd2(m, 4537558703021582627, t[21], C)

	C, t[21] = madd2(m, 3928743618185798328, t[22], C)

	C, t[22] = madd2(m, 8879819406488282694, t[23], C)

	C, t[23] = madd2(m, 7271679122806957198, t[24], C)

	C, t[24] = madd3(m, 8309888569849274052, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[11], z[0], t[0])
	C, t[1] = madd2(x[11], z[1], t[1], C)
	C, t[2] = madd2(x[11], z[2], t[2], C)
	C, t[3] = madd2(x[11], z[3], t[3], C)
	C, t[4] = madd2(x[11], z[4], t[4], C)
	C, t[5] = madd2(x[11], z[5], t[5], C)
	C, t[6] = madd2(x[11], z[6], t[6], C)
	C, t[7] = madd2(x[11], z[7], t[7], C)
	C, t[8] = madd2(x[11], z[8], t[8], C)
	C, t[9] = madd2(x[11], z[9], t[9], C)
	C, t[10] = madd2(x[11], z[10], t[10], C)
	C, t[11] = madd2(x[11], z[11], t[11], C)
	C, t[12] = madd2(x[11], z[12], t[12], C)
	C, t[13] = madd2(x[11], z[13], t[13], C)
	C, t[14] = madd2(x[11], z[14], t[14], C)
	C, t[15] = madd2(x[11], z[15], t[15], C)
	C, t[16] = madd2(x[11], z[16], t[16], C)
	C, t[17] = madd2(x[11], z[17], t[17], C)
	C, t[18] = madd2(x[11], z[18], t[18], C)
	C, t[19] = madd2(x[11], z[19], t[19], C)
	C, t[20] = madd2(x[11], z[20], t[20], C)
	C, t[21] = madd2(x[11], z[21], t[21], C)
	C, t[22] = madd2(x[11], z[22], t[22], C)
	C, t[23] = madd2(x[11], z[23], t[23], C)
	C, t[24] = madd2(x[11], z[24], t[24], C)
	C, t[25] = madd2(x[11], z[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 8290328699649503029

	// -----------------------------------
	// Second loop
	C = madd0(m, 4094365063281874147, t[0])

	C, t[0] = madd2(m, 1025855223173275832, t[1], C)

	C, t[1] = madd2(m, 8078499220748900576, t[2], C)

	C, t[2] = madd2(m, 6592698397043999240, t[3], C)

	C, t[3] = madd2(m, 13409037793353034008, t[4], C)

	C, t[4] = madd2(m, 1796901052372556044, t[5], C)

	C, t[5] = madd2(m, 4050149076413023135, t[6], C)

	C, t[6] = madd2(m, 8897023274092210430, t[7], C)

	C, t[7] = madd2(m, 6636171111773171774, t[8], C)

	C, t[8] = madd2(m, 13239980137592616616, t[9], C)

	C, t[9] = madd2(m, 11519318792880301074, t[10], C)

	C, t[10] = madd2(m, 15796543401904101149, t[11], C)

	C, t[11] = madd2(m, 15325324754623440453, t[12], C)

	C, t[12] = madd2(m, 17385381814834154638, t[13], C)

	C, t[13] = madd2(m, 13824311487681794110, t[14], C)

	C, t[14] = madd2(m, 16983043387714363747, t[15], C)

	C, t[15] = madd2(m, 4630686512774309735, t[16], C)

	C, t[16] = madd2(m, 9507551311801003185, t[17], C)

	C, t[17] = madd2(m, 17276345451380752723, t[18], C)

	C, t[18] = madd2(m, 5398946044502786900, t[19], C)

	C, t[19] = madd2(m, 4273410409657646401, t[20], C)

	C, t[20] = madd2(m, 4537558703021582627, t[21], C)

	C, t[21] = madd2(m, 3928743618185798328, t[22], C)

	C, t[22] = madd2(m, 8879819406488282694, t[23], C)

	C, t[23] = madd2(m, 7271679122806957198, t[24], C)

	C, t[24] = madd3(m, 8309888569849274052, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[12], z[0], t[0])
	C, t[1] = madd2(x[12], z[1], t[1], C)
	C, t[2] = madd2(x[12], z[2], t[2], C)
	C, t[3] = madd2(x[12], z[3], t[3], C)
	C, t[4] = madd2(x[12], z[4], t[4], C)
	C, t[5] = madd2(x[12], z[5], t[5], C)
	C, t[6] = madd2(x[12], z[6], t[6], C)
	C, t[7] = madd2(x[12], z[7], t[7], C)
	C, t[8] = madd2(x[12], z[8], t[8], C)
	C, t[9] = madd2(x[12], z[9], t[9], C)
	C, t[10] = madd2(x[12], z[10], t[10], C)
	C, t[11] = madd2(x[12], z[11], t[11], C)
	C, t[12] = madd2(x[12], z[12], t[12], C)
	C, t[13] = madd2(x[12], z[13], t[13], C)
	C, t[14] = madd2(x[12], z[14], t[14], C)
	C, t[15] = madd2(x[12], z[15], t[15], C)
	C, t[16] = madd2(x[12], z[16], t[16], C)
	C, t[17] = madd2(x[12], z[17], t[17], C)
	C, t[18] = madd2(x[12], z[18], t[18], C)
	C, t[19] = madd2(x[12], z[19], t[19], C)
	C, t[20] = madd2(x[12], z[20], t[20], C)
	C, t[21] = madd2(x[12], z[21], t[21], C)
	C, t[22] = madd2(x[12], z[22], t[22], C)
	C, t[23] = madd2(x[12], z[23], t[23], C)
	C, t[24] = madd2(x[12], z[24], t[24], C)
	C, t[25] = madd2(x[12], z[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 8290328699649503029

	// -----------------------------------
	// Second loop
	C = madd0(m, 4094365063281874147, t[0])

	C, t[0] = madd2(m, 1025855223173275832, t[1], C)

	C, t[1] = madd2(m, 8078499220748900576, t[2], C)

	C, t[2] = madd2(m, 6592698397043999240, t[3], C)

	C, t[3] = madd2(m, 13409037793353034008, t[4], C)

	C, t[4] = madd2(m, 1796901052372556044, t[5], C)

	C, t[5] = madd2(m, 4050149076413023135, t[6], C)

	C, t[6] = madd2(m, 8897023274092210430, t[7], C)

	C, t[7] = madd2(m, 6636171111773171774, t[8], C)

	C, t[8] = madd2(m, 13239980137592616616, t[9], C)

	C, t[9] = madd2(m, 11519318792880301074, t[10], C)

	C, t[10] = madd2(m, 15796543401904101149, t[11], C)

	C, t[11] = madd2(m, 15325324754623440453, t[12], C)

	C, t[12] = madd2(m, 17385381814834154638, t[13], C)

	C, t[13] = madd2(m, 13824311487681794110, t[14], C)

	C, t[14] = madd2(m, 16983043387714363747, t[15], C)

	C, t[15] = madd2(m, 4630686512774309735, t[16], C)

	C, t[16] = madd2(m, 9507551311801003185, t[17], C)

	C, t[17] = madd2(m, 17276345451380752723, t[18], C)

	C, t[18] = madd2(m, 5398946044502786900, t[19], C)

	C, t[19] = madd2(m, 4273410409657646401, t[20], C)

	C, t[20] = madd2(m, 4537558703021582627, t[21], C)

	C, t[21] = madd2(m, 3928743618185798328, t[22], C)

	C, t[22] = madd2(m, 8879819406488282694, t[23], C)

	C, t[23] = madd2(m, 7271679122806957198, t[24], C)

	C, t[24] = madd3(m, 8309888569849274052, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[13], z[0], t[0])
	C, t[1] = madd2(x[13], z[1], t[1], C)
	C, t[2] = madd2(x[13], z[2], t[2], C)
	C, t[3] = madd2(x[13], z[3], t[3], C)
	C, t[4] = madd2(x[13], z[4], t[4], C)
	C, t[5] = madd2(x[13], z[5], t[5], C)
	C, t[6] = madd2(x[13], z[6], t[6], C)
	C, t[7] = madd2(x[13], z[7], t[7], C)
	C, t[8] = madd2(x[13], z[8], t[8], C)
	C, t[9] = madd2(x[13], z[9], t[9], C)
	C, t[10] = madd2(x[13], z[10], t[10], C)
	C, t[11] = madd2(x[13], z[11], t[11], C)
	C, t[12] = madd2(x[13], z[12], t[12], C)
	C, t[13] = madd2(x[13], z[13], t[13], C)
	C, t[14] = madd2(x[13], z[14], t[14], C)
	C, t[15] = madd2(x[13], z[15], t[15], C)
	C, t[16] = madd2(x[13], z[16], t[16], C)
	C, t[17] = madd2(x[13], z[17], t[17], C)
	C, t[18] = madd2(x[13], z[18], t[18], C)
	C, t[19] = madd2(x[13], z[19], t[19], C)
	C, t[20] = madd2(x[13], z[20], t[20], C)
	C, t[21] = madd2(x[13], z[21], t[21], C)
	C, t[22] = madd2(x[13], z[22], t[22], C)
	C, t[23] = madd2(x[13], z[23], t[23], C)
	C, t[24] = madd2(x[13], z[24], t[24], C)
	C, t[25] = madd2(x[13], z[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 8290328699649503029

	// -----------------------------------
	// Second loop
	C = madd0(m, 4094365063281874147, t[0])

	C, t[0] = madd2(m, 1025855223173275832, t[1], C)

	C, t[1] = madd2(m, 8078499220748900576, t[2], C)

	C, t[2] = madd2(m, 6592698397043999240, t[3], C)

	C, t[3] = madd2(m, 13409037793353034008, t[4], C)

	C, t[4] = madd2(m, 1796901052372556044, t[5], C)

	C, t[5] = madd2(m, 4050149076413023135, t[6], C)

	C, t[6] = madd2(m, 8897023274092210430, t[7], C)

	C, t[7] = madd2(m, 6636171111773171774, t[8], C)

	C, t[8] = madd2(m, 13239980137592616616, t[9], C)

	C, t[9] = madd2(m, 11519318792880301074, t[10], C)

	C, t[10] = madd2(m, 15796543401904101149, t[11], C)

	C, t[11] = madd2(m, 15325324754623440453, t[12], C)

	C, t[12] = madd2(m, 17385381814834154638, t[13], C)

	C, t[13] = madd2(m, 13824311487681794110, t[14], C)

	C, t[14] = madd2(m, 16983043387714363747, t[15], C)

	C, t[15] = madd2(m, 4630686512774309735, t[16], C)

	C, t[16] = madd2(m, 9507551311801003185, t[17], C)

	C, t[17] = madd2(m, 17276345451380752723, t[18], C)

	C, t[18] = madd2(m, 5398946044502786900, t[19], C)

	C, t[19] = madd2(m, 4273410409657646401, t[20], C)

	C, t[20] = madd2(m, 4537558703021582627, t[21], C)

	C, t[21] = madd2(m, 3928743618185798328, t[22], C)

	C, t[22] = madd2(m, 8879819406488282694, t[23], C)

	C, t[23] = madd2(m, 7271679122806957198, t[24], C)

	C, t[24] = madd3(m, 8309888569849274052, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[14], z[0], t[0])
	C, t[1] = madd2(x[14], z[1], t[1], C)
	C, t[2] = madd2(x[14], z[2], t[2], C)
	C, t[3] = madd2(x[14], z[3], t[3], C)
	C, t[4] = madd2(x[14], z[4], t[4], C)
	C, t[5] = madd2(x[14], z[5], t[5], C)
	C, t[6] = madd2(x[14], z[6], t[6], C)
	C, t[7] = madd2(x[14], z[7], t[7], C)
	C, t[8] = madd2(x[14], z[8], t[8], C)
	C, t[9] = madd2(x[14], z[9], t[9], C)
	C, t[10] = madd2(x[14], z[10], t[10], C)
	C, t[11] = madd2(x[14], z[11], t[11], C)
	C, t[12] = madd2(x[14], z[12], t[12], C)
	C, t[13] = madd2(x[14], z[13], t[13], C)
	C, t[14] = madd2(x[14], z[14], t[14], C)
	C, t[15] = madd2(x[14], z[15], t[15], C)
	C, t[16] = madd2(x[14], z[16], t[16], C)
	C, t[17] = madd2(x[14], z[17], t[17], C)
	C, t[18] = madd2(x[14], z[18], t[18], C)
	C, t[19] = madd2(x[14], z[19], t[19], C)
	C, t[20] = madd2(x[14], z[20], t[20], C)
	C, t[21] = madd2(x[14], z[21], t[21], C)
	C, t[22] = madd2(x[14], z[22], t[22], C)
	C, t[23] = madd2(x[14], z[23], t[23], C)
	C, t[24] = madd2(x[14], z[24], t[24], C)
	C, t[25] = madd2(x[14], z[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 8290328699649503029

	// -----------------------------------
	// Second loop
	C = madd0(m, 4094365063281874147, t[0])

	C, t[0] = madd2(m, 1025855223173275832, t[1], C)

	C, t[1] = madd2(m, 8078499220748900576, t[2], C)

	C, t[2] = madd2(m, 6592698397043999240, t[3], C)

	C, t[3] = madd2(m, 13409037793353034008, t[4], C)

	C, t[4] = madd2(m, 1796901052372556044, t[5], C)

	C, t[5] = madd2(m, 4050149076413023135, t[6], C)

	C, t[6] = madd2(m, 8897023274092210430, t[7], C)

	C, t[7] = madd2(m, 6636171111773171774, t[8], C)

	C, t[8] = madd2(m, 13239980137592616616, t[9], C)

	C, t[9] = madd2(m, 11519318792880301074, t[10], C)

	C, t[10] = madd2(m, 15796543401904101149, t[11], C)

	C, t[11] = madd2(m, 15325324754623440453, t[12], C)

	C, t[12] = madd2(m, 17385381814834154638, t[13], C)

	C, t[13] = madd2(m, 13824311487681794110, t[14], C)

	C, t[14] = madd2(m, 16983043387714363747, t[15], C)

	C, t[15] = madd2(m, 4630686512774309735, t[16], C)

	C, t[16] = madd2(m, 9507551311801003185, t[17], C)

	C, t[17] = madd2(m, 17276345451380752723, t[18], C)

	C, t[18] = madd2(m, 5398946044502786900, t[19], C)

	C, t[19] = madd2(m, 4273410409657646401, t[20], C)

	C, t[20] = madd2(m, 4537558703021582627, t[21], C)

	C, t[21] = madd2(m, 3928743618185798328, t[22], C)

	C, t[22] = madd2(m, 8879819406488282694, t[23], C)

	C, t[23] = madd2(m, 7271679122806957198, t[24], C)

	C, t[24] = madd3(m, 8309888569849274052, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[15], z[0], t[0])
	C, t[1] = madd2(x[15], z[1], t[1], C)
	C, t[2] = madd2(x[15], z[2], t[2], C)
	C, t[3] = madd2(x[15], z[3], t[3], C)
	C, t[4] = madd2(x[15], z[4], t[4], C)
	C, t[5] = madd2(x[15], z[5], t[5], C)
	C, t[6] = madd2(x[15], z[6], t[6], C)
	C, t[7] = madd2(x[15], z[7], t[7], C)
	C, t[8] = madd2(x[15], z[8], t[8], C)
	C, t[9] = madd2(x[15], z[9], t[9], C)
	C, t[10] = madd2(x[15], z[10], t[10], C)
	C, t[11] = madd2(x[15], z[11], t[11], C)
	C, t[12] = madd2(x[15], z[12], t[12], C)
	C, t[13] = madd2(x[15], z[13], t[13], C)
	C, t[14] = madd2(x[15], z[14], t[14], C)
	C, t[15] = madd2(x[15], z[15], t[15], C)
	C, t[16] = madd2(x[15], z[16], t[16], C)
	C, t[17] = madd2(x[15], z[17], t[17], C)
	C, t[18] = madd2(x[15], z[18], t[18], C)
	C, t[19] = madd2(x[15], z[19], t[19], C)
	C, t[20] = madd2(x[15], z[20], t[20], C)
	C, t[21] = madd2(x[15], z[21], t[21], C)
	C, t[22] = madd2(x[15], z[22], t[22], C)
	C, t[23] = madd2(x[15], z[23], t[23], C)
	C, t[24] = madd2(x[15], z[24], t[24], C)
	C, t[25] = madd2(x[15], z[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 8290328699649503029

	// -----------------------------------
	// Second loop
	C = madd0(m, 4094365063281874147, t[0])

	C, t[0] = madd2(m, 1025855223173275832, t[1], C)

	C, t[1] = madd2(m, 8078499220748900576, t[2], C)

	C, t[2] = madd2(m, 6592698397043999240, t[3], C)

	C, t[3] = madd2(m, 13409037793353034008, t[4], C)

	C, t[4] = madd2(m, 1796901052372556044, t[5], C)

	C, t[5] = madd2(m, 4050149076413023135, t[6], C)

	C, t[6] = madd2(m, 8897023274092210430, t[7], C)

	C, t[7] = madd2(m, 6636171111773171774, t[8], C)

	C, t[8] = madd2(m, 13239980137592616616, t[9], C)

	C, t[9] = madd2(m, 11519318792880301074, t[10], C)

	C, t[10] = madd2(m, 15796543401904101149, t[11], C)

	C, t[11] = madd2(m, 15325324754623440453, t[12], C)

	C, t[12] = madd2(m, 17385381814834154638, t[13], C)

	C, t[13] = madd2(m, 13824311487681794110, t[14], C)

	C, t[14] = madd2(m, 16983043387714363747, t[15], C)

	C, t[15] = madd2(m, 4630686512774309735, t[16], C)

	C, t[16] = madd2(m, 9507551311801003185, t[17], C)

	C, t[17] = madd2(m, 17276345451380752723, t[18], C)

	C, t[18] = madd2(m, 5398946044502786900, t[19], C)

	C, t[19] = madd2(m, 4273410409657646401, t[20], C)

	C, t[20] = madd2(m, 4537558703021582627, t[21], C)

	C, t[21] = madd2(m, 3928743618185798328, t[22], C)

	C, t[22] = madd2(m, 8879819406488282694, t[23], C)

	C, t[23] = madd2(m, 7271679122806957198, t[24], C)

	C, t[24] = madd3(m, 8309888569849274052, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[16], z[0], t[0])
	C, t[1] = madd2(x[16], z[1], t[1], C)
	C, t[2] = madd2(x[16], z[2], t[2], C)
	C, t[3] = madd2(x[16], z[3], t[3], C)
	C, t[4] = madd2(x[16], z[4], t[4], C)
	C, t[5] = madd2(x[16], z[5], t[5], C)
	C, t[6] = madd2(x[16], z[6], t[6], C)
	C, t[7] = madd2(x[16], z[7], t[7], C)
	C, t[8] = madd2(x[16], z[8], t[8], C)
	C, t[9] = madd2(x[16], z[9], t[9], C)
	C, t[10] = madd2(x[16], z[10], t[10], C)
	C, t[11] = madd2(x[16], z[11], t[11], C)
	C, t[12] = madd2(x[16], z[12], t[12], C)
	C, t[13] = madd2(x[16], z[13], t[13], C)
	C, t[14] = madd2(x[16], z[14], t[14], C)
	C, t[15] = madd2(x[16], z[15], t[15], C)
	C, t[16] = madd2(x[16], z[16], t[16], C)
	C, t[17] = madd2(x[16], z[17], t[17], C)
	C, t[18] = madd2(x[16], z[18], t[18], C)
	C, t[19] = madd2(x[16], z[19], t[19], C)
	C, t[20] = madd2(x[16], z[20], t[20], C)
	C, t[21] = madd2(x[16], z[21], t[21], C)
	C, t[22] = madd2(x[16], z[22], t[22], C)
	C, t[23] = madd2(x[16], z[23], t[23], C)
	C, t[24] = madd2(x[16], z[24], t[24], C)
	C, t[25] = madd2(x[16], z[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 8290328699649503029

	// -----------------------------------
	// Second loop
	C = madd0(m, 4094365063281874147, t[0])

	C, t[0] = madd2(m, 1025855223173275832, t[1], C)

	C, t[1] = madd2(m, 8078499220748900576, t[2], C)

	C, t[2] = madd2(m, 6592698397043999240, t[3], C)

	C, t[3] = madd2(m, 13409037793353034008, t[4], C)

	C, t[4] = madd2(m, 1796901052372556044, t[5], C)

	C, t[5] = madd2(m, 4050149076413023135, t[6], C)

	C, t[6] = madd2(m, 8897023274092210430, t[7], C)

	C, t[7] = madd2(m, 6636171111773171774, t[8], C)

	C, t[8] = madd2(m, 13239980137592616616, t[9], C)

	C, t[9] = madd2(m, 11519318792880301074, t[10], C)

	C, t[10] = madd2(m, 15796543401904101149, t[11], C)

	C, t[11] = madd2(m, 15325324754623440453, t[12], C)

	C, t[12] = madd2(m, 17385381814834154638, t[13], C)

	C, t[13] = madd2(m, 13824311487681794110, t[14], C)

	C, t[14] = madd2(m, 16983043387714363747, t[15], C)

	C, t[15] = madd2(m, 4630686512774309735, t[16], C)

	C, t[16] = madd2(m, 9507551311801003185, t[17], C)

	C, t[17] = madd2(m, 17276345451380752723, t[18], C)

	C, t[18] = madd2(m, 5398946044502786900, t[19], C)

	C, t[19] = madd2(m, 4273410409657646401, t[20], C)

	C, t[20] = madd2(m, 4537558703021582627, t[21], C)

	C, t[21] = madd2(m, 3928743618185798328, t[22], C)

	C, t[22] = madd2(m, 8879819406488282694, t[23], C)

	C, t[23] = madd2(m, 7271679122806957198, t[24], C)

	C, t[24] = madd3(m, 8309888569849274052, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[17], z[0], t[0])
	C, t[1] = madd2(x[17], z[1], t[1], C)
	C, t[2] = madd2(x[17], z[2], t[2], C)
	C, t[3] = madd2(x[17], z[3], t[3], C)
	C, t[4] = madd2(x[17], z[4], t[4], C)
	C, t[5] = madd2(x[17], z[5], t[5], C)
	C, t[6] = madd2(x[17], z[6], t[6], C)
	C, t[7] = madd2(x[17], z[7], t[7], C)
	C, t[8] = madd2(x[17], z[8], t[8], C)
	C, t[9] = madd2(x[17], z[9], t[9], C)
	C, t[10] = madd2(x[17], z[10], t[10], C)
	C, t[11] = madd2(x[17], z[11], t[11], C)
	C, t[12] = madd2(x[17], z[12], t[12], C)
	C, t[13] = madd2(x[17], z[13], t[13], C)
	C, t[14] = madd2(x[17], z[14], t[14], C)
	C, t[15] = madd2(x[17], z[15], t[15], C)
	C, t[16] = madd2(x[17], z[16], t[16], C)
	C, t[17] = madd2(x[17], z[17], t[17], C)
	C, t[18] = madd2(x[17], z[18], t[18], C)
	C, t[19] = madd2(x[17], z[19], t[19], C)
	C, t[20] = madd2(x[17], z[20], t[20], C)
	C, t[21] = madd2(x[17], z[21], t[21], C)
	C, t[22] = madd2(x[17], z[22], t[22], C)
	C, t[23] = madd2(x[17], z[23], t[23], C)
	C, t[24] = madd2(x[17], z[24], t[24], C)
	C, t[25] = madd2(x[17], z[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 8290328699649503029

	// -----------------------------------
	// Second loop
	C = madd0(m, 4094365063281874147, t[0])

	C, t[0] = madd2(m, 1025855223173275832, t[1], C)

	C, t[1] = madd2(m, 8078499220748900576, t[2], C)

	C, t[2] = madd2(m, 6592698397043999240, t[3], C)

	C, t[3] = madd2(m, 13409037793353034008, t[4], C)

	C, t[4] = madd2(m, 1796901052372556044, t[5], C)

	C, t[5] = madd2(m, 4050149076413023135, t[6], C)

	C, t[6] = madd2(m, 8897023274092210430, t[7], C)

	C, t[7] = madd2(m, 6636171111773171774, t[8], C)

	C, t[8] = madd2(m, 13239980137592616616, t[9], C)

	C, t[9] = madd2(m, 11519318792880301074, t[10], C)

	C, t[10] = madd2(m, 15796543401904101149, t[11], C)

	C, t[11] = madd2(m, 15325324754623440453, t[12], C)

	C, t[12] = madd2(m, 17385381814834154638, t[13], C)

	C, t[13] = madd2(m, 13824311487681794110, t[14], C)

	C, t[14] = madd2(m, 16983043387714363747, t[15], C)

	C, t[15] = madd2(m, 4630686512774309735, t[16], C)

	C, t[16] = madd2(m, 9507551311801003185, t[17], C)

	C, t[17] = madd2(m, 17276345451380752723, t[18], C)

	C, t[18] = madd2(m, 5398946044502786900, t[19], C)

	C, t[19] = madd2(m, 4273410409657646401, t[20], C)

	C, t[20] = madd2(m, 4537558703021582627, t[21], C)

	C, t[21] = madd2(m, 3928743618185798328, t[22], C)

	C, t[22] = madd2(m, 8879819406488282694, t[23], C)

	C, t[23] = madd2(m, 7271679122806957198, t[24], C)

	C, t[24] = madd3(m, 8309888569849274052, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[18], z[0], t[0])
	C, t[1] = madd2(x[18], z[1], t[1], C)
	C, t[2] = madd2(x[18], z[2], t[2], C)
	C, t[3] = madd2(x[18], z[3], t[3], C)
	C, t[4] = madd2(x[18], z[4], t[4], C)
	C, t[5] = madd2(x[18], z[5], t[5], C)
	C, t[6] = madd2(x[18], z[6], t[6], C)
	C, t[7] = madd2(x[18], z[7], t[7], C)
	C, t[8] = madd2(x[18], z[8], t[8], C)
	C, t[9] = madd2(x[18], z[9], t[9], C)
	C, t[10] = madd2(x[18], z[10], t[10], C)
	C, t[11] = madd2(x[18], z[11], t[11], C)
	C, t[12] = madd2(x[18], z[12], t[12], C)
	C, t[13] = madd2(x[18], z[13], t[13], C)
	C, t[14] = madd2(x[18], z[14], t[14], C)
	C, t[15] = madd2(x[18], z[15], t[15], C)
	C, t[16] = madd2(x[18], z[16], t[16], C)
	C, t[17] = madd2(x[18], z[17], t[17], C)
	C, t[18] = madd2(x[18], z[18], t[18], C)
	C, t[19] = madd2(x[18], z[19], t[19], C)
	C, t[20] = madd2(x[18], z[20], t[20], C)
	C, t[21] = madd2(x[18], z[21], t[21], C)
	C, t[22] = madd2(x[18], z[22], t[22], C)
	C, t[23] = madd2(x[18], z[23], t[23], C)
	C, t[24] = madd2(x[18], z[24], t[24], C)
	C, t[25] = madd2(x[18], z[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 8290328699649503029

	// -----------------------------------
	// Second loop
	C = madd0(m, 4094365063281874147, t[0])

	C, t[0] = madd2(m, 1025855223173275832, t[1], C)

	C, t[1] = madd2(m, 8078499220748900576, t[2], C)

	C, t[2] = madd2(m, 6592698397043999240, t[3], C)

	C, t[3] = madd2(m, 13409037793353034008, t[4], C)

	C, t[4] = madd2(m, 1796901052372556044, t[5], C)

	C, t[5] = madd2(m, 4050149076413023135, t[6], C)

	C, t[6] = madd2(m, 8897023274092210430, t[7], C)

	C, t[7] = madd2(m, 6636171111773171774, t[8], C)

	C, t[8] = madd2(m, 13239980137592616616, t[9], C)

	C, t[9] = madd2(m, 11519318792880301074, t[10], C)

	C, t[10] = madd2(m, 15796543401904101149, t[11], C)

	C, t[11] = madd2(m, 15325324754623440453, t[12], C)

	C, t[12] = madd2(m, 17385381814834154638, t[13], C)

	C, t[13] = madd2(m, 13824311487681794110, t[14], C)

	C, t[14] = madd2(m, 16983043387714363747, t[15], C)

	C, t[15] = madd2(m, 4630686512774309735, t[16], C)

	C, t[16] = madd2(m, 9507551311801003185, t[17], C)

	C, t[17] = madd2(m, 17276345451380752723, t[18], C)

	C, t[18] = madd2(m, 5398946044502786900, t[19], C)

	C, t[19] = madd2(m, 4273410409657646401, t[20], C)

	C, t[20] = madd2(m, 4537558703021582627, t[21], C)

	C, t[21] = madd2(m, 3928743618185798328, t[22], C)

	C, t[22] = madd2(m, 8879819406488282694, t[23], C)

	C, t[23] = madd2(m, 7271679122806957198, t[24], C)

	C, t[24] = madd3(m, 8309888569849274052, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[19], z[0], t[0])
	C, t[1] = madd2(x[19], z[1], t[1], C)
	C, t[2] = madd2(x[19], z[2], t[2], C)
	C, t[3] = madd2(x[19], z[3], t[3], C)
	C, t[4] = madd2(x[19], z[4], t[4], C)
	C, t[5] = madd2(x[19], z[5], t[5], C)
	C, t[6] = madd2(x[19], z[6], t[6], C)
	C, t[7] = madd2(x[19], z[7], t[7], C)
	C, t[8] = madd2(x[19], z[8], t[8], C)
	C, t[9] = madd2(x[19], z[9], t[9], C)
	C, t[10] = madd2(x[19], z[10], t[10], C)
	C, t[11] = madd2(x[19], z[11], t[11], C)
	C, t[12] = madd2(x[19], z[12], t[12], C)
	C, t[13] = madd2(x[19], z[13], t[13], C)
	C, t[14] = madd2(x[19], z[14], t[14], C)
	C, t[15] = madd2(x[19], z[15], t[15], C)
	C, t[16] = madd2(x[19], z[16], t[16], C)
	C, t[17] = madd2(x[19], z[17], t[17], C)
	C, t[18] = madd2(x[19], z[18], t[18], C)
	C, t[19] = madd2(x[19], z[19], t[19], C)
	C, t[20] = madd2(x[19], z[20], t[20], C)
	C, t[21] = madd2(x[19], z[21], t[21], C)
	C, t[22] = madd2(x[19], z[22], t[22], C)
	C, t[23] = madd2(x[19], z[23], t[23], C)
	C, t[24] = madd2(x[19], z[24], t[24], C)
	C, t[25] = madd2(x[19], z[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 8290328699649503029

	// -----------------------------------
	// Second loop
	C = madd0(m, 4094365063281874147, t[0])

	C, t[0] = madd2(m, 1025855223173275832, t[1], C)

	C, t[1] = madd2(m, 8078499220748900576, t[2], C)

	C, t[2] = madd2(m, 6592698397043999240, t[3], C)

	C, t[3] = madd2(m, 13409037793353034008, t[4], C)

	C, t[4] = madd2(m, 1796901052372556044, t[5], C)

	C, t[5] = madd2(m, 4050149076413023135, t[6], C)

	C, t[6] = madd2(m, 8897023274092210430, t[7], C)

	C, t[7] = madd2(m, 6636171111773171774, t[8], C)

	C, t[8] = madd2(m, 13239980137592616616, t[9], C)

	C, t[9] = madd2(m, 11519318792880301074, t[10], C)

	C, t[10] = madd2(m, 15796543401904101149, t[11], C)

	C, t[11] = madd2(m, 15325324754623440453, t[12], C)

	C, t[12] = madd2(m, 17385381814834154638, t[13], C)

	C, t[13] = madd2(m, 13824311487681794110, t[14], C)

	C, t[14] = madd2(m, 16983043387714363747, t[15], C)

	C, t[15] = madd2(m, 4630686512774309735, t[16], C)

	C, t[16] = madd2(m, 9507551311801003185, t[17], C)

	C, t[17] = madd2(m, 17276345451380752723, t[18], C)

	C, t[18] = madd2(m, 5398946044502786900, t[19], C)

	C, t[19] = madd2(m, 4273410409657646401, t[20], C)

	C, t[20] = madd2(m, 4537558703021582627, t[21], C)

	C, t[21] = madd2(m, 3928743618185798328, t[22], C)

	C, t[22] = madd2(m, 8879819406488282694, t[23], C)

	C, t[23] = madd2(m, 7271679122806957198, t[24], C)

	C, t[24] = madd3(m, 8309888569849274052, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[20], z[0], t[0])
	C, t[1] = madd2(x[20], z[1], t[1], C)
	C, t[2] = madd2(x[20], z[2], t[2], C)
	C, t[3] = madd2(x[20], z[3], t[3], C)
	C, t[4] = madd2(x[20], z[4], t[4], C)
	C, t[5] = madd2(x[20], z[5], t[5], C)
	C, t[6] = madd2(x[20], z[6], t[6], C)
	C, t[7] = madd2(x[20], z[7], t[7], C)
	C, t[8] = madd2(x[20], z[8], t[8], C)
	C, t[9] = madd2(x[20], z[9], t[9], C)
	C, t[10] = madd2(x[20], z[10], t[10], C)
	C, t[11] = madd2(x[20], z[11], t[11], C)
	C, t[12] = madd2(x[20], z[12], t[12], C)
	C, t[13] = madd2(x[20], z[13], t[13], C)
	C, t[14] = madd2(x[20], z[14], t[14], C)
	C, t[15] = madd2(x[20], z[15], t[15], C)
	C, t[16] = madd2(x[20], z[16], t[16], C)
	C, t[17] = madd2(x[20], z[17], t[17], C)
	C, t[18] = madd2(x[20], z[18], t[18], C)
	C, t[19] = madd2(x[20], z[19], t[19], C)
	C, t[20] = madd2(x[20], z[20], t[20], C)
	C, t[21] = madd2(x[20], z[21], t[21], C)
	C, t[22] = madd2(x[20], z[22], t[22], C)
	C, t[23] = madd2(x[20], z[23], t[23], C)
	C, t[24] = madd2(x[20], z[24], t[24], C)
	C, t[25] = madd2(x[20], z[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 8290328699649503029

	// -----------------------------------
	// Second loop
	C = madd0(m, 4094365063281874147, t[0])

	C, t[0] = madd2(m, 1025855223173275832, t[1], C)

	C, t[1] = madd2(m, 8078499220748900576, t[2], C)

	C, t[2] = madd2(m, 6592698397043999240, t[3], C)

	C, t[3] = madd2(m, 13409037793353034008, t[4], C)

	C, t[4] = madd2(m, 1796901052372556044, t[5], C)

	C, t[5] = madd2(m, 4050149076413023135, t[6], C)

	C, t[6] = madd2(m, 8897023274092210430, t[7], C)

	C, t[7] = madd2(m, 6636171111773171774, t[8], C)

	C, t[8] = madd2(m, 13239980137592616616, t[9], C)

	C, t[9] = madd2(m, 11519318792880301074, t[10], C)

	C, t[10] = madd2(m, 15796543401904101149, t[11], C)

	C, t[11] = madd2(m, 15325324754623440453, t[12], C)

	C, t[12] = madd2(m, 17385381814834154638, t[13], C)

	C, t[13] = madd2(m, 13824311487681794110, t[14], C)

	C, t[14] = madd2(m, 16983043387714363747, t[15], C)

	C, t[15] = madd2(m, 4630686512774309735, t[16], C)

	C, t[16] = madd2(m, 9507551311801003185, t[17], C)

	C, t[17] = madd2(m, 17276345451380752723, t[18], C)

	C, t[18] = madd2(m, 5398946044502786900, t[19], C)

	C, t[19] = madd2(m, 4273410409657646401, t[20], C)

	C, t[20] = madd2(m, 4537558703021582627, t[21], C)

	C, t[21] = madd2(m, 3928743618185798328, t[22], C)

	C, t[22] = madd2(m, 8879819406488282694, t[23], C)

	C, t[23] = madd2(m, 7271679122806957198, t[24], C)

	C, t[24] = madd3(m, 8309888569849274052, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[21], z[0], t[0])
	C, t[1] = madd2(x[21], z[1], t[1], C)
	C, t[2] = madd2(x[21], z[2], t[2], C)
	C, t[3] = madd2(x[21], z[3], t[3], C)
	C, t[4] = madd2(x[21], z[4], t[4], C)
	C, t[5] = madd2(x[21], z[5], t[5], C)
	C, t[6] = madd2(x[21], z[6], t[6], C)
	C, t[7] = madd2(x[21], z[7], t[7], C)
	C, t[8] = madd2(x[21], z[8], t[8], C)
	C, t[9] = madd2(x[21], z[9], t[9], C)
	C, t[10] = madd2(x[21], z[10], t[10], C)
	C, t[11] = madd2(x[21], z[11], t[11], C)
	C, t[12] = madd2(x[21], z[12], t[12], C)
	C, t[13] = madd2(x[21], z[13], t[13], C)
	C, t[14] = madd2(x[21], z[14], t[14], C)
	C, t[15] = madd2(x[21], z[15], t[15], C)
	C, t[16] = madd2(x[21], z[16], t[16], C)
	C, t[17] = madd2(x[21], z[17], t[17], C)
	C, t[18] = madd2(x[21], z[18], t[18], C)
	C, t[19] = madd2(x[21], z[19], t[19], C)
	C, t[20] = madd2(x[21], z[20], t[20], C)
	C, t[21] = madd2(x[21], z[21], t[21], C)
	C, t[22] = madd2(x[21], z[22], t[22], C)
	C, t[23] = madd2(x[21], z[23], t[23], C)
	C, t[24] = madd2(x[21], z[24], t[24], C)
	C, t[25] = madd2(x[21], z[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 8290328699649503029

	// -----------------------------------
	// Second loop
	C = madd0(m, 4094365063281874147, t[0])

	C, t[0] = madd2(m, 1025855223173275832, t[1], C)

	C, t[1] = madd2(m, 8078499220748900576, t[2], C)

	C, t[2] = madd2(m, 6592698397043999240, t[3], C)

	C, t[3] = madd2(m, 13409037793353034008, t[4], C)

	C, t[4] = madd2(m, 1796901052372556044, t[5], C)

	C, t[5] = madd2(m, 4050149076413023135, t[6], C)

	C, t[6] = madd2(m, 8897023274092210430, t[7], C)

	C, t[7] = madd2(m, 6636171111773171774, t[8], C)

	C, t[8] = madd2(m, 13239980137592616616, t[9], C)

	C, t[9] = madd2(m, 11519318792880301074, t[10], C)

	C, t[10] = madd2(m, 15796543401904101149, t[11], C)

	C, t[11] = madd2(m, 15325324754623440453, t[12], C)

	C, t[12] = madd2(m, 17385381814834154638, t[13], C)

	C, t[13] = madd2(m, 13824311487681794110, t[14], C)

	C, t[14] = madd2(m, 16983043387714363747, t[15], C)

	C, t[15] = madd2(m, 4630686512774309735, t[16], C)

	C, t[16] = madd2(m, 9507551311801003185, t[17], C)

	C, t[17] = madd2(m, 17276345451380752723, t[18], C)

	C, t[18] = madd2(m, 5398946044502786900, t[19], C)

	C, t[19] = madd2(m, 4273410409657646401, t[20], C)

	C, t[20] = madd2(m, 4537558703021582627, t[21], C)

	C, t[21] = madd2(m, 3928743618185798328, t[22], C)

	C, t[22] = madd2(m, 8879819406488282694, t[23], C)

	C, t[23] = madd2(m, 7271679122806957198, t[24], C)

	C, t[24] = madd3(m, 8309888569849274052, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[22], z[0], t[0])
	C, t[1] = madd2(x[22], z[1], t[1], C)
	C, t[2] = madd2(x[22], z[2], t[2], C)
	C, t[3] = madd2(x[22], z[3], t[3], C)
	C, t[4] = madd2(x[22], z[4], t[4], C)
	C, t[5] = madd2(x[22], z[5], t[5], C)
	C, t[6] = madd2(x[22], z[6], t[6], C)
	C, t[7] = madd2(x[22], z[7], t[7], C)
	C, t[8] = madd2(x[22], z[8], t[8], C)
	C, t[9] = madd2(x[22], z[9], t[9], C)
	C, t[10] = madd2(x[22], z[10], t[10], C)
	C, t[11] = madd2(x[22], z[11], t[11], C)
	C, t[12] = madd2(x[22], z[12], t[12], C)
	C, t[13] = madd2(x[22], z[13], t[13], C)
	C, t[14] = madd2(x[22], z[14], t[14], C)
	C, t[15] = madd2(x[22], z[15], t[15], C)
	C, t[16] = madd2(x[22], z[16], t[16], C)
	C, t[17] = madd2(x[22], z[17], t[17], C)
	C, t[18] = madd2(x[22], z[18], t[18], C)
	C, t[19] = madd2(x[22], z[19], t[19], C)
	C, t[20] = madd2(x[22], z[20], t[20], C)
	C, t[21] = madd2(x[22], z[21], t[21], C)
	C, t[22] = madd2(x[22], z[22], t[22], C)
	C, t[23] = madd2(x[22], z[23], t[23], C)
	C, t[24] = madd2(x[22], z[24], t[24], C)
	C, t[25] = madd2(x[22], z[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 8290328699649503029

	// -----------------------------------
	// Second loop
	C = madd0(m, 4094365063281874147, t[0])

	C, t[0] = madd2(m, 1025855223173275832, t[1], C)

	C, t[1] = madd2(m, 8078499220748900576, t[2], C)

	C, t[2] = madd2(m, 6592698397043999240, t[3], C)

	C, t[3] = madd2(m, 13409037793353034008, t[4], C)

	C, t[4] = madd2(m, 1796901052372556044, t[5], C)

	C, t[5] = madd2(m, 4050149076413023135, t[6], C)

	C, t[6] = madd2(m, 8897023274092210430, t[7], C)

	C, t[7] = madd2(m, 6636171111773171774, t[8], C)

	C, t[8] = madd2(m, 13239980137592616616, t[9], C)

	C, t[9] = madd2(m, 11519318792880301074, t[10], C)

	C, t[10] = madd2(m, 15796543401904101149, t[11], C)

	C, t[11] = madd2(m, 15325324754623440453, t[12], C)

	C, t[12] = madd2(m, 17385381814834154638, t[13], C)

	C, t[13] = madd2(m, 13824311487681794110, t[14], C)

	C, t[14] = madd2(m, 16983043387714363747, t[15], C)

	C, t[15] = madd2(m, 4630686512774309735, t[16], C)

	C, t[16] = madd2(m, 9507551311801003185, t[17], C)

	C, t[17] = madd2(m, 17276345451380752723, t[18], C)

	C, t[18] = madd2(m, 5398946044502786900, t[19], C)

	C, t[19] = madd2(m, 4273410409657646401, t[20], C)

	C, t[20] = madd2(m, 4537558703021582627, t[21], C)

	C, t[21] = madd2(m, 3928743618185798328, t[22], C)

	C, t[22] = madd2(m, 8879819406488282694, t[23], C)

	C, t[23] = madd2(m, 7271679122806957198, t[24], C)

	C, t[24] = madd3(m, 8309888569849274052, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[23], z[0], t[0])
	C, t[1] = madd2(x[23], z[1], t[1], C)
	C, t[2] = madd2(x[23], z[2], t[2], C)
	C, t[3] = madd2(x[23], z[3], t[3], C)
	C, t[4] = madd2(x[23], z[4], t[4], C)
	C, t[5] = madd2(x[23], z[5], t[5], C)
	C, t[6] = madd2(x[23], z[6], t[6], C)
	C, t[7] = madd2(x[23], z[7], t[7], C)
	C, t[8] = madd2(x[23], z[8], t[8], C)
	C, t[9] = madd2(x[23], z[9], t[9], C)
	C, t[10] = madd2(x[23], z[10], t[10], C)
	C, t[11] = madd2(x[23], z[11], t[11], C)
	C, t[12] = madd2(x[23], z[12], t[12], C)
	C, t[13] = madd2(x[23], z[13], t[13], C)
	C, t[14] = madd2(x[23], z[14], t[14], C)
	C, t[15] = madd2(x[23], z[15], t[15], C)
	C, t[16] = madd2(x[23], z[16], t[16], C)
	C, t[17] = madd2(x[23], z[17], t[17], C)
	C, t[18] = madd2(x[23], z[18], t[18], C)
	C, t[19] = madd2(x[23], z[19], t[19], C)
	C, t[20] = madd2(x[23], z[20], t[20], C)
	C, t[21] = madd2(x[23], z[21], t[21], C)
	C, t[22] = madd2(x[23], z[22], t[22], C)
	C, t[23] = madd2(x[23], z[23], t[23], C)
	C, t[24] = madd2(x[23], z[24], t[24], C)
	C, t[25] = madd2(x[23], z[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 8290328699649503029

	// -----------------------------------
	// Second loop
	C = madd0(m, 4094365063281874147, t[0])

	C, t[0] = madd2(m, 1025855223173275832, t[1], C)

	C, t[1] = madd2(m, 8078499220748900576, t[2], C)

	C, t[2] = madd2(m, 6592698397043999240, t[3], C)

	C, t[3] = madd2(m, 13409037793353034008, t[4], C)

	C, t[4] = madd2(m, 1796901052372556044, t[5], C)

	C, t[5] = madd2(m, 4050149076413023135, t[6], C)

	C, t[6] = madd2(m, 8897023274092210430, t[7], C)

	C, t[7] = madd2(m, 6636171111773171774, t[8], C)

	C, t[8] = madd2(m, 13239980137592616616, t[9], C)

	C, t[9] = madd2(m, 11519318792880301074, t[10], C)

	C, t[10] = madd2(m, 15796543401904101149, t[11], C)

	C, t[11] = madd2(m, 15325324754623440453, t[12], C)

	C, t[12] = madd2(m, 17385381814834154638, t[13], C)

	C, t[13] = madd2(m, 13824311487681794110, t[14], C)

	C, t[14] = madd2(m, 16983043387714363747, t[15], C)

	C, t[15] = madd2(m, 4630686512774309735, t[16], C)

	C, t[16] = madd2(m, 9507551311801003185, t[17], C)

	C, t[17] = madd2(m, 17276345451380752723, t[18], C)

	C, t[18] = madd2(m, 5398946044502786900, t[19], C)

	C, t[19] = madd2(m, 4273410409657646401, t[20], C)

	C, t[20] = madd2(m, 4537558703021582627, t[21], C)

	C, t[21] = madd2(m, 3928743618185798328, t[22], C)

	C, t[22] = madd2(m, 8879819406488282694, t[23], C)

	C, t[23] = madd2(m, 7271679122806957198, t[24], C)

	C, t[24] = madd3(m, 8309888569849274052, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[24], z[0], t[0])
	C, t[1] = madd2(x[24], z[1], t[1], C)
	C, t[2] = madd2(x[24], z[2], t[2], C)
	C, t[3] = madd2(x[24], z[3], t[3], C)
	C, t[4] = madd2(x[24], z[4], t[4], C)
	C, t[5] = madd2(x[24], z[5], t[5], C)
	C, t[6] = madd2(x[24], z[6], t[6], C)
	C, t[7] = madd2(x[24], z[7], t[7], C)
	C, t[8] = madd2(x[24], z[8], t[8], C)
	C, t[9] = madd2(x[24], z[9], t[9], C)
	C, t[10] = madd2(x[24], z[10], t[10], C)
	C, t[11] = madd2(x[24], z[11], t[11], C)
	C, t[12] = madd2(x[24], z[12], t[12], C)
	C, t[13] = madd2(x[24], z[13], t[13], C)
	C, t[14] = madd2(x[24], z[14], t[14], C)
	C, t[15] = madd2(x[24], z[15], t[15], C)
	C, t[16] = madd2(x[24], z[16], t[16], C)
	C, t[17] = madd2(x[24], z[17], t[17], C)
	C, t[18] = madd2(x[24], z[18], t[18], C)
	C, t[19] = madd2(x[24], z[19], t[19], C)
	C, t[20] = madd2(x[24], z[20], t[20], C)
	C, t[21] = madd2(x[24], z[21], t[21], C)
	C, t[22] = madd2(x[24], z[22], t[22], C)
	C, t[23] = madd2(x[24], z[23], t[23], C)
	C, t[24] = madd2(x[24], z[24], t[24], C)
	C, t[25] = madd2(x[24], z[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 8290328699649503029

	// -----------------------------------
	// Second loop
	C = madd0(m, 4094365063281874147, t[0])

	C, t[0] = madd2(m, 1025855223173275832, t[1], C)

	C, t[1] = madd2(m, 8078499220748900576, t[2], C)

	C, t[2] = madd2(m, 6592698397043999240, t[3], C)

	C, t[3] = madd2(m, 13409037793353034008, t[4], C)

	C, t[4] = madd2(m, 1796901052372556044, t[5], C)

	C, t[5] = madd2(m, 4050149076413023135, t[6], C)

	C, t[6] = madd2(m, 8897023274092210430, t[7], C)

	C, t[7] = madd2(m, 6636171111773171774, t[8], C)

	C, t[8] = madd2(m, 13239980137592616616, t[9], C)

	C, t[9] = madd2(m, 11519318792880301074, t[10], C)

	C, t[10] = madd2(m, 15796543401904101149, t[11], C)

	C, t[11] = madd2(m, 15325324754623440453, t[12], C)

	C, t[12] = madd2(m, 17385381814834154638, t[13], C)

	C, t[13] = madd2(m, 13824311487681794110, t[14], C)

	C, t[14] = madd2(m, 16983043387714363747, t[15], C)

	C, t[15] = madd2(m, 4630686512774309735, t[16], C)

	C, t[16] = madd2(m, 9507551311801003185, t[17], C)

	C, t[17] = madd2(m, 17276345451380752723, t[18], C)

	C, t[18] = madd2(m, 5398946044502786900, t[19], C)

	C, t[19] = madd2(m, 4273410409657646401, t[20], C)

	C, t[20] = madd2(m, 4537558703021582627, t[21], C)

	C, t[21] = madd2(m, 3928743618185798328, t[22], C)

	C, t[22] = madd2(m, 8879819406488282694, t[23], C)

	C, t[23] = madd2(m, 7271679122806957198, t[24], C)

	C, t[24] = madd3(m, 8309888569849274052, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[25], z[0], t[0])
	C, t[1] = madd2(x[25], z[1], t[1], C)
	C, t[2] = madd2(x[25], z[2], t[2], C)
	C, t[3] = madd2(x[25], z[3], t[3], C)
	C, t[4] = madd2(x[25], z[4], t[4], C)
	C, t[5] = madd2(x[25], z[5], t[5], C)
	C, t[6] = madd2(x[25], z[6], t[6], C)
	C, t[7] = madd2(x[25], z[7], t[7], C)
	C, t[8] = madd2(x[25], z[8], t[8], C)
	C, t[9] = madd2(x[25], z[9], t[9], C)
	C, t[10] = madd2(x[25], z[10], t[10], C)
	C, t[11] = madd2(x[25], z[11], t[11], C)
	C, t[12] = madd2(x[25], z[12], t[12], C)
	C, t[13] = madd2(x[25], z[13], t[13], C)
	C, t[14] = madd2(x[25], z[14], t[14], C)
	C, t[15] = madd2(x[25], z[15], t[15], C)
	C, t[16] = madd2(x[25], z[16], t[16], C)
	C, t[17] = madd2(x[25], z[17], t[17], C)
	C, t[18] = madd2(x[25], z[18], t[18], C)
	C, t[19] = madd2(x[25], z[19], t[19], C)
	C, t[20] = madd2(x[25], z[20], t[20], C)
	C, t[21] = madd2(x[25], z[21], t[21], C)
	C, t[22] = madd2(x[25], z[22], t[22], C)
	C, t[23] = madd2(x[25], z[23], t[23], C)
	C, t[24] = madd2(x[25], z[24], t[24], C)
	C, t[25] = madd2(x[25], z[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 8290328699649503029

	// -----------------------------------
	// Second loop
	C = madd0(m, 4094365063281874147, t[0])

	C, t[0] = madd2(m, 1025855223173275832, t[1], C)

	C, t[1] = madd2(m, 8078499220748900576, t[2], C)

	C, t[2] = madd2(m, 6592698397043999240, t[3], C)

	C, t[3] = madd2(m, 13409037793353034008, t[4], C)

	C, t[4] = madd2(m, 1796901052372556044, t[5], C)

	C, t[5] = madd2(m, 4050149076413023135, t[6], C)

	C, t[6] = madd2(m, 8897023274092210430, t[7], C)

	C, t[7] = madd2(m, 6636171111773171774, t[8], C)

	C, t[8] = madd2(m, 13239980137592616616, t[9], C)

	C, t[9] = madd2(m, 11519318792880301074, t[10], C)

	C, t[10] = madd2(m, 15796543401904101149, t[11], C)

	C, t[11] = madd2(m, 15325324754623440453, t[12], C)

	C, t[12] = madd2(m, 17385381814834154638, t[13], C)

	C, t[13] = madd2(m, 13824311487681794110, t[14], C)

	C, t[14] = madd2(m, 16983043387714363747, t[15], C)

	C, t[15] = madd2(m, 4630686512774309735, t[16], C)

	C, t[16] = madd2(m, 9507551311801003185, t[17], C)

	C, t[17] = madd2(m, 17276345451380752723, t[18], C)

	C, t[18] = madd2(m, 5398946044502786900, t[19], C)

	C, t[19] = madd2(m, 4273410409657646401, t[20], C)

	C, t[20] = madd2(m, 4537558703021582627, t[21], C)

	C, t[21] = madd2(m, 3928743618185798328, t[22], C)

	C, t[22] = madd2(m, 8879819406488282694, t[23], C)

	C, t[23] = madd2(m, 7271679122806957198, t[24], C)

	C, t[24] = madd3(m, 8309888569849274052, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)

	if t[26] != 0 {
		// we need to reduce, we have a result on 27 words
		var b uint64
		z[0], b = bits.Sub64(t[0], 4094365063281874147, 0)
		z[1], b = bits.Sub64(t[1], 1025855223173275832, b)
		z[2], b = bits.Sub64(t[2], 8078499220748900576, b)
		z[3], b = bits.Sub64(t[3], 6592698397043999240, b)
		z[4], b = bits.Sub64(t[4], 13409037793353034008, b)
		z[5], b = bits.Sub64(t[5], 1796901052372556044, b)
		z[6], b = bits.Sub64(t[6], 4050149076413023135, b)
		z[7], b = bits.Sub64(t[7], 8897023274092210430, b)
		z[8], b = bits.Sub64(t[8], 6636171111773171774, b)
		z[9], b = bits.Sub64(t[9], 13239980137592616616, b)
		z[10], b = bits.Sub64(t[10], 11519318792880301074, b)
		z[11], b = bits.Sub64(t[11], 15796543401904101149, b)
		z[12], b = bits.Sub64(t[12], 15325324754623440453, b)
		z[13], b = bits.Sub64(t[13], 17385381814834154638, b)
		z[14], b = bits.Sub64(t[14], 13824311487681794110, b)
		z[15], b = bits.Sub64(t[15], 16983043387714363747, b)
		z[16], b = bits.Sub64(t[16], 4630686512774309735, b)
		z[17], b = bits.Sub64(t[17], 9507551311801003185, b)
		z[18], b = bits.Sub64(t[18], 17276345451380752723, b)
		z[19], b = bits.Sub64(t[19], 5398946044502786900, b)
		z[20], b = bits.Sub64(t[20], 4273410409657646401, b)
		z[21], b = bits.Sub64(t[21], 4537558703021582627, b)
		z[22], b = bits.Sub64(t[22], 3928743618185798328, b)
		z[23], b = bits.Sub64(t[23], 8879819406488282694, b)
		z[24], b = bits.Sub64(t[24], 7271679122806957198, b)
		z[25], _ = bits.Sub64(t[25], 8309888569849274052, b)
		return z
	}

	// copy t into z
	z[0] = t[0]
	z[1] = t[1]
	z[2] = t[2]
	z[3] = t[3]
	z[4] = t[4]
	z[5] = t[5]
	z[6] = t[6]
	z[7] = t[7]
	z[8] = t[8]
	z[9] = t[9]
	z[10] = t[10]
	z[11] = t[11]
	z[12] = t[12]
	z[13] = t[13]
	z[14] = t[14]
	z[15] = t[15]
	z[16] = t[16]
	z[17] = t[17]
	z[18] = t[18]
	z[19] = t[19]
	z[20] = t[20]
	z[21] = t[21]
	z[22] = t[22]
	z[23] = t[23]
	z[24] = t[24]
	z[25] = t[25]

	// if z > q --> z -= q
	// note: this is NOT constant time
	if !(z[25] < 8309888569849274052 || (z[25] == 8309888569849274052 && (z[24] < 7271679122806957198 || (z[24] == 7271679122806957198 && (z[23] < 8879819406488282694 || (z[23] == 8879819406488282694 && (z[22] < 3928743618185798328 || (z[22] == 3928743618185798328 && (z[21] < 4537558703021582627 || (z[21] == 4537558703021582627 && (z[20] < 4273410409657646401 || (z[20] == 4273410409657646401 && (z[19] < 5398946044502786900 || (z[19] == 5398946044502786900 && (z[18] < 17276345451380752723 || (z[18] == 17276345451380752723 && (z[17] < 9507551311801003185 || (z[17] == 9507551311801003185 && (z[16] < 4630686512774309735 || (z[16] == 4630686512774309735 && (z[15] < 16983043387714363747 || (z[15] == 16983043387714363747 && (z[14] < 13824311487681794110 || (z[14] == 13824311487681794110 && (z[13] < 17385381814834154638 || (z[13] == 17385381814834154638 && (z[12] < 15325324754623440453 || (z[12] == 15325324754623440453 && (z[11] < 15796543401904101149 || (z[11] == 15796543401904101149 && (z[10] < 11519318792880301074 || (z[10] == 11519318792880301074 && (z[9] < 13239980137592616616 || (z[9] == 13239980137592616616 && (z[8] < 6636171111773171774 || (z[8] == 6636171111773171774 && (z[7] < 8897023274092210430 || (z[7] == 8897023274092210430 && (z[6] < 4050149076413023135 || (z[6] == 4050149076413023135 && (z[5] < 1796901052372556044 || (z[5] == 1796901052372556044 && (z[4] < 13409037793353034008 || (z[4] == 13409037793353034008 && (z[3] < 6592698397043999240 || (z[3] == 6592698397043999240 && (z[2] < 8078499220748900576 || (z[2] == 8078499220748900576 && (z[1] < 1025855223173275832 || (z[1] == 1025855223173275832 && (z[0] < 4094365063281874147))))))))))))))))))))))))))))))))))))))))))))))))))) {
		var b uint64
		z[0], b = bits.Sub64(z[0], 4094365063281874147, 0)
		z[1], b = bits.Sub64(z[1], 1025855223173275832, b)
		z[2], b = bits.Sub64(z[2], 8078499220748900576, b)
		z[3], b = bits.Sub64(z[3], 6592698397043999240, b)
		z[4], b = bits.Sub64(z[4], 13409037793353034008, b)
		z[5], b = bits.Sub64(z[5], 1796901052372556044, b)
		z[6], b = bits.Sub64(z[6], 4050149076413023135, b)
		z[7], b = bits.Sub64(z[7], 8897023274092210430, b)
		z[8], b = bits.Sub64(z[8], 6636171111773171774, b)
		z[9], b = bits.Sub64(z[9], 13239980137592616616, b)
		z[10], b = bits.Sub64(z[10], 11519318792880301074, b)
		z[11], b = bits.Sub64(z[11], 15796543401904101149, b)
		z[12], b = bits.Sub64(z[12], 15325324754623440453, b)
		z[13], b = bits.Sub64(z[13], 17385381814834154638, b)
		z[14], b = bits.Sub64(z[14], 13824311487681794110, b)
		z[15], b = bits.Sub64(z[15], 16983043387714363747, b)
		z[16], b = bits.Sub64(z[16], 4630686512774309735, b)
		z[17], b = bits.Sub64(z[17], 9507551311801003185, b)
		z[18], b = bits.Sub64(z[18], 17276345451380752723, b)
		z[19], b = bits.Sub64(z[19], 5398946044502786900, b)
		z[20], b = bits.Sub64(z[20], 4273410409657646401, b)
		z[21], b = bits.Sub64(z[21], 4537558703021582627, b)
		z[22], b = bits.Sub64(z[22], 3928743618185798328, b)
		z[23], b = bits.Sub64(z[23], 8879819406488282694, b)
		z[24], b = bits.Sub64(z[24], 7271679122806957198, b)
		z[25], _ = bits.Sub64(z[25], 8309888569849274052, b)
	}
	return z
}

// Legendre returns the Legendre symbol of z (either +1, -1, or 0.)
func (z *Element26) Legendre() int {
	var l Element26
	// z^((q-1)/2)
	l.Exp(*z,
		2047182531640937073,
		512927611586637916,
		4039249610374450288,
		3296349198521999620,
		6704518896676517004,
		10121822563041053830,
		2025074538206511567,
		4448511637046105215,
		3318085555886585887,
		6619990068796308308,
		14983031433294926345,
		17121643737806826382,
		7662662377311720226,
		8692690907417077319,
		16135527780695672863,
		17714893730711957681,
		11538715293241930675,
		13977147692755277400,
		8638172725690376361,
		11922845059106169258,
		11360077241683599008,
		2268779351510791313,
		1964371809092899164,
		4439909703244141347,
		3635839561403478599,
		4154944284924637026,
	)

	if l.IsZero() {
		return 0
	}

	// if l == 1
	if (l[25] == 1826966934011003511) && (l[24] == 3903385828095637219) && (l[23] == 687105260732986227) && (l[22] == 10589256837337954959) && (l[21] == 9371626667666386361) && (l[20] == 9899923254394258813) && (l[19] == 7648851984703977814) && (l[18] == 2340797244657597784) && (l[17] == 17878385523817096861) && (l[16] == 9185371048160932144) && (l[15] == 2927401371990375736) && (l[14] == 9244865172055515010) && (l[13] == 2122724517750793954) && (l[12] == 6242838638172222324) && (l[11] == 5300401343610900932) && (l[10] == 13854850561658501082) && (l[9] == 10413527872233869999) && (l[8] == 5174401850163208067) && (l[7] == 652697525525130755) && (l[6] == 10346445920883505345) && (l[5] == 14852941968964439526) && (l[4] == 10075412560713035215) && (l[3] == 5261347279621553135) && (l[2] == 2289745632211750463) && (l[1] == 16395033627362999951) && (l[0] == 10258013947145803322) {
		return 1
	}
	return -1
}

// Sqrt z = √x mod q
// if the square root doesn't exist (x is not a square mod q)
// Sqrt leaves z unchanged and returns nil
func (z *Element26) Sqrt(x *Element26) *Element26 {
	// q ≡ 3 (mod 4)
	// using  z ≡ ± x^((p+1)/4) (mod q)
	var y, square Element26
	y.Exp(*x,
		1023591265820468537,
		256463805793318958,
		2019624805187225144,
		1648174599260999810,
		3352259448338258502,
		14284283318375302723,
		10235909305958031591,
		11447627855377828415,
		1659042777943292943,
		12533367071252929962,
		7491515716647463172,
		8560821868903413191,
		13054703225510635921,
		13569717490563314467,
		17291135927202612239,
		18080818902210754648,
		5769357646620965337,
		16211945883232414508,
		4319086362845188180,
		5961422529553084629,
		14903410657696575312,
		1134389675755395656,
		10205557941401225390,
		11443326888476846481,
		1817919780701739299,
		2077472142462318513,
	)
	// as we didn't compute the legendre symbol, ensure we found y such that y * y = x
	square.Square(&y)
	if square.Equal(x) {
		return z.Set(&y)
	}
	return nil
}

// Square z = x * x mod q
func (z *Element26) Square(x *Element26) *Element26 {
	return z.Mul(x, x)
}

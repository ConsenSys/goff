// Copyright 2020 ConsenSys AG
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// field modulus q =
//
// 335278727888370680270977171802826180354475985605652943499269292625940357779809361891155724561482716645261879638000153324986393230237840295255366748697214363216381722264679575221621632215579839495761988988929644686436809437035515562194216319455298843382453354766530532940039038628611891260466553822313304508480290659338352886614011915404207601733765605961072736173622393192454691149191155983924508559555665840798531824331667866991430871861576582939334009712916671660537775635520101384331380528522141049
// Code generated by goff DO NOT EDIT
// Element26 are assumed to be in Montgomery form in all methods

// /!\ WARNING /!\
// this code has not been audited and is provided as-is. In particular,
// there is no security guarantees such as constant time implementation
// or side-channel attack resistance
// /!\ WARNING /!\

// Package generated (generated by goff) contains field arithmetics operations
package generated

import (
	"crypto/rand"
	"encoding/binary"
	"io"
	"math/big"
	"math/bits"
	"sync"
	"unsafe"
)

// Element26 represents a field element stored on 26 words (uint64)
// Element26 are assumed to be in Montgomery form in all methods
type Element26 [26]uint64

// Element26Limbs number of 64 bits words needed to represent Element26
const Element26Limbs = 26

// Element26Bits number bits needed to represent Element26
const Element26Bits = 1663

// SetUint64 z = v, sets z LSB to v (non-Montgomery form) and convert z to Montgomery form
func (z *Element26) SetUint64(v uint64) *Element26 {
	z[0] = v
	z[1] = 0
	z[2] = 0
	z[3] = 0
	z[4] = 0
	z[5] = 0
	z[6] = 0
	z[7] = 0
	z[8] = 0
	z[9] = 0
	z[10] = 0
	z[11] = 0
	z[12] = 0
	z[13] = 0
	z[14] = 0
	z[15] = 0
	z[16] = 0
	z[17] = 0
	z[18] = 0
	z[19] = 0
	z[20] = 0
	z[21] = 0
	z[22] = 0
	z[23] = 0
	z[24] = 0
	z[25] = 0
	return z.ToMont()
}

// Set z = x
func (z *Element26) Set(x *Element26) *Element26 {
	z[0] = x[0]
	z[1] = x[1]
	z[2] = x[2]
	z[3] = x[3]
	z[4] = x[4]
	z[5] = x[5]
	z[6] = x[6]
	z[7] = x[7]
	z[8] = x[8]
	z[9] = x[9]
	z[10] = x[10]
	z[11] = x[11]
	z[12] = x[12]
	z[13] = x[13]
	z[14] = x[14]
	z[15] = x[15]
	z[16] = x[16]
	z[17] = x[17]
	z[18] = x[18]
	z[19] = x[19]
	z[20] = x[20]
	z[21] = x[21]
	z[22] = x[22]
	z[23] = x[23]
	z[24] = x[24]
	z[25] = x[25]
	return z
}

// SetZero z = 0
func (z *Element26) SetZero() *Element26 {
	z[0] = 0
	z[1] = 0
	z[2] = 0
	z[3] = 0
	z[4] = 0
	z[5] = 0
	z[6] = 0
	z[7] = 0
	z[8] = 0
	z[9] = 0
	z[10] = 0
	z[11] = 0
	z[12] = 0
	z[13] = 0
	z[14] = 0
	z[15] = 0
	z[16] = 0
	z[17] = 0
	z[18] = 0
	z[19] = 0
	z[20] = 0
	z[21] = 0
	z[22] = 0
	z[23] = 0
	z[24] = 0
	z[25] = 0
	return z
}

// SetOne z = 1 (in Montgomery form)
func (z *Element26) SetOne() *Element26 {
	z[0] = 15809266316485444878
	z[1] = 3429129891117652779
	z[2] = 6182251761129521216
	z[3] = 9654055464672519850
	z[4] = 13652097636868178895
	z[5] = 8121783762248845074
	z[6] = 13056756330149265151
	z[7] = 271911980204733108
	z[8] = 15033107707786946524
	z[9] = 3016106769997990955
	z[10] = 10059053696844692981
	z[11] = 16230516478729771289
	z[12] = 3190539054359747313
	z[13] = 7122325209535927936
	z[14] = 9443879848148630238
	z[15] = 16882960080013131381
	z[16] = 12392069427963978109
	z[17] = 4903719632872230912
	z[18] = 14612538030988933548
	z[19] = 6245166304345095650
	z[20] = 18343144887426071466
	z[21] = 5615884418707696746
	z[22] = 16954001074864034263
	z[23] = 9905553874264500054
	z[24] = 14702713624940607448
	z[25] = 3365299813427471584
	return z
}

// Neg z = q - x
func (z *Element26) Neg(x *Element26) *Element26 {
	if x.IsZero() {
		return z.SetZero()
	}
	var borrow uint64
	z[0], borrow = bits.Sub64(1318738878612053369, x[0], 0)
	z[1], borrow = bits.Sub64(16732179128150725226, x[1], borrow)
	z[2], borrow = bits.Sub64(15355618193144791007, x[2], borrow)
	z[3], borrow = bits.Sub64(4396344304518515882, x[3], borrow)
	z[4], borrow = bits.Sub64(11620695255275462168, x[4], borrow)
	z[5], borrow = bits.Sub64(5162480155730353270, x[5], borrow)
	z[6], borrow = bits.Sub64(11918365908634919040, x[6], borrow)
	z[7], borrow = bits.Sub64(18310788083607185061, x[7], borrow)
	z[8], borrow = bits.Sub64(1706818182961302545, x[8], borrow)
	z[9], borrow = bits.Sub64(7715318651855780330, x[9], borrow)
	z[10], borrow = bits.Sub64(4193845188432429317, x[10], borrow)
	z[11], borrow = bits.Sub64(1108113797489890163, x[11], borrow)
	z[12], borrow = bits.Sub64(16851474546529677959, x[12], borrow)
	z[13], borrow = bits.Sub64(14885581468941587647, x[13], borrow)
	z[14], borrow = bits.Sub64(4501432112780460688, x[14], borrow)
	z[15], borrow = bits.Sub64(781891996848210117, x[15], borrow)
	z[16], borrow = bits.Sub64(12250709359727562561, x[16], borrow)
	z[17], borrow = bits.Sub64(15994884257273436159, x[17], borrow)
	z[18], borrow = bits.Sub64(11140475058215084841, x[18], borrow)
	z[19], borrow = bits.Sub64(15324160921537003790, x[19], borrow)
	z[20], borrow = bits.Sub64(9275171629996515882, x[20], borrow)
	z[21], borrow = bits.Sub64(6415429827500927434, x[21], borrow)
	z[22], borrow = bits.Sub64(9969743536277534484, x[22], borrow)
	z[23], borrow = bits.Sub64(13493967136577301588, x[23], borrow)
	z[24], borrow = bits.Sub64(11095387261239247891, x[24], borrow)
	z[25], _ = bits.Sub64(7540722130141040015, x[25], borrow)
	return z
}

// Div z = x*y^-1 mod q
func (z *Element26) Div(x, y *Element26) *Element26 {
	var yInv Element26
	yInv.Inverse(y)
	z.Mul(x, &yInv)
	return z
}

// Equal returns z == x
func (z *Element26) Equal(x *Element26) bool {
	return (z[25] == x[25]) && (z[24] == x[24]) && (z[23] == x[23]) && (z[22] == x[22]) && (z[21] == x[21]) && (z[20] == x[20]) && (z[19] == x[19]) && (z[18] == x[18]) && (z[17] == x[17]) && (z[16] == x[16]) && (z[15] == x[15]) && (z[14] == x[14]) && (z[13] == x[13]) && (z[12] == x[12]) && (z[11] == x[11]) && (z[10] == x[10]) && (z[9] == x[9]) && (z[8] == x[8]) && (z[7] == x[7]) && (z[6] == x[6]) && (z[5] == x[5]) && (z[4] == x[4]) && (z[3] == x[3]) && (z[2] == x[2]) && (z[1] == x[1]) && (z[0] == x[0])
}

// IsZero returns z == 0
func (z *Element26) IsZero() bool {
	return (z[25] | z[24] | z[23] | z[22] | z[21] | z[20] | z[19] | z[18] | z[17] | z[16] | z[15] | z[14] | z[13] | z[12] | z[11] | z[10] | z[9] | z[8] | z[7] | z[6] | z[5] | z[4] | z[3] | z[2] | z[1] | z[0]) == 0
}

// field modulus stored as big.Int
var _element26ModulusBigInt big.Int
var onceelement26Modulus sync.Once

func element26ModulusBigInt() *big.Int {
	onceelement26Modulus.Do(func() {
		_element26ModulusBigInt.SetString("335278727888370680270977171802826180354475985605652943499269292625940357779809361891155724561482716645261879638000153324986393230237840295255366748697214363216381722264679575221621632215579839495761988988929644686436809437035515562194216319455298843382453354766530532940039038628611891260466553822313304508480290659338352886614011915404207601733765605961072736173622393192454691149191155983924508559555665840798531824331667866991430871861576582939334009712916671660537775635520101384331380528522141049", 10)
	})
	return &_element26ModulusBigInt
}

// Inverse z = x^-1 mod q
// note: allocates a big.Int (math/big)
func (z *Element26) Inverse(x *Element26) *Element26 {
	var _xNonMont big.Int
	x.ToBigIntRegular(&_xNonMont)
	_xNonMont.ModInverse(&_xNonMont, element26ModulusBigInt())
	z.SetBigInt(&_xNonMont)
	return z
}

// SetRandom sets z to a random element < q
func (z *Element26) SetRandom() *Element26 {
	bytes := make([]byte, 208)
	io.ReadFull(rand.Reader, bytes)
	z[0] = binary.BigEndian.Uint64(bytes[0:8])
	z[1] = binary.BigEndian.Uint64(bytes[8:16])
	z[2] = binary.BigEndian.Uint64(bytes[16:24])
	z[3] = binary.BigEndian.Uint64(bytes[24:32])
	z[4] = binary.BigEndian.Uint64(bytes[32:40])
	z[5] = binary.BigEndian.Uint64(bytes[40:48])
	z[6] = binary.BigEndian.Uint64(bytes[48:56])
	z[7] = binary.BigEndian.Uint64(bytes[56:64])
	z[8] = binary.BigEndian.Uint64(bytes[64:72])
	z[9] = binary.BigEndian.Uint64(bytes[72:80])
	z[10] = binary.BigEndian.Uint64(bytes[80:88])
	z[11] = binary.BigEndian.Uint64(bytes[88:96])
	z[12] = binary.BigEndian.Uint64(bytes[96:104])
	z[13] = binary.BigEndian.Uint64(bytes[104:112])
	z[14] = binary.BigEndian.Uint64(bytes[112:120])
	z[15] = binary.BigEndian.Uint64(bytes[120:128])
	z[16] = binary.BigEndian.Uint64(bytes[128:136])
	z[17] = binary.BigEndian.Uint64(bytes[136:144])
	z[18] = binary.BigEndian.Uint64(bytes[144:152])
	z[19] = binary.BigEndian.Uint64(bytes[152:160])
	z[20] = binary.BigEndian.Uint64(bytes[160:168])
	z[21] = binary.BigEndian.Uint64(bytes[168:176])
	z[22] = binary.BigEndian.Uint64(bytes[176:184])
	z[23] = binary.BigEndian.Uint64(bytes[184:192])
	z[24] = binary.BigEndian.Uint64(bytes[192:200])
	z[25] = binary.BigEndian.Uint64(bytes[200:208])
	z[25] %= 7540722130141040015

	// if z > q --> z -= q
	// note: this is NOT constant time
	if !(z[25] < 7540722130141040015 || (z[25] == 7540722130141040015 && (z[24] < 11095387261239247891 || (z[24] == 11095387261239247891 && (z[23] < 13493967136577301588 || (z[23] == 13493967136577301588 && (z[22] < 9969743536277534484 || (z[22] == 9969743536277534484 && (z[21] < 6415429827500927434 || (z[21] == 6415429827500927434 && (z[20] < 9275171629996515882 || (z[20] == 9275171629996515882 && (z[19] < 15324160921537003790 || (z[19] == 15324160921537003790 && (z[18] < 11140475058215084841 || (z[18] == 11140475058215084841 && (z[17] < 15994884257273436159 || (z[17] == 15994884257273436159 && (z[16] < 12250709359727562561 || (z[16] == 12250709359727562561 && (z[15] < 781891996848210117 || (z[15] == 781891996848210117 && (z[14] < 4501432112780460688 || (z[14] == 4501432112780460688 && (z[13] < 14885581468941587647 || (z[13] == 14885581468941587647 && (z[12] < 16851474546529677959 || (z[12] == 16851474546529677959 && (z[11] < 1108113797489890163 || (z[11] == 1108113797489890163 && (z[10] < 4193845188432429317 || (z[10] == 4193845188432429317 && (z[9] < 7715318651855780330 || (z[9] == 7715318651855780330 && (z[8] < 1706818182961302545 || (z[8] == 1706818182961302545 && (z[7] < 18310788083607185061 || (z[7] == 18310788083607185061 && (z[6] < 11918365908634919040 || (z[6] == 11918365908634919040 && (z[5] < 5162480155730353270 || (z[5] == 5162480155730353270 && (z[4] < 11620695255275462168 || (z[4] == 11620695255275462168 && (z[3] < 4396344304518515882 || (z[3] == 4396344304518515882 && (z[2] < 15355618193144791007 || (z[2] == 15355618193144791007 && (z[1] < 16732179128150725226 || (z[1] == 16732179128150725226 && (z[0] < 1318738878612053369))))))))))))))))))))))))))))))))))))))))))))))))))) {
		var b uint64
		z[0], b = bits.Sub64(z[0], 1318738878612053369, 0)
		z[1], b = bits.Sub64(z[1], 16732179128150725226, b)
		z[2], b = bits.Sub64(z[2], 15355618193144791007, b)
		z[3], b = bits.Sub64(z[3], 4396344304518515882, b)
		z[4], b = bits.Sub64(z[4], 11620695255275462168, b)
		z[5], b = bits.Sub64(z[5], 5162480155730353270, b)
		z[6], b = bits.Sub64(z[6], 11918365908634919040, b)
		z[7], b = bits.Sub64(z[7], 18310788083607185061, b)
		z[8], b = bits.Sub64(z[8], 1706818182961302545, b)
		z[9], b = bits.Sub64(z[9], 7715318651855780330, b)
		z[10], b = bits.Sub64(z[10], 4193845188432429317, b)
		z[11], b = bits.Sub64(z[11], 1108113797489890163, b)
		z[12], b = bits.Sub64(z[12], 16851474546529677959, b)
		z[13], b = bits.Sub64(z[13], 14885581468941587647, b)
		z[14], b = bits.Sub64(z[14], 4501432112780460688, b)
		z[15], b = bits.Sub64(z[15], 781891996848210117, b)
		z[16], b = bits.Sub64(z[16], 12250709359727562561, b)
		z[17], b = bits.Sub64(z[17], 15994884257273436159, b)
		z[18], b = bits.Sub64(z[18], 11140475058215084841, b)
		z[19], b = bits.Sub64(z[19], 15324160921537003790, b)
		z[20], b = bits.Sub64(z[20], 9275171629996515882, b)
		z[21], b = bits.Sub64(z[21], 6415429827500927434, b)
		z[22], b = bits.Sub64(z[22], 9969743536277534484, b)
		z[23], b = bits.Sub64(z[23], 13493967136577301588, b)
		z[24], b = bits.Sub64(z[24], 11095387261239247891, b)
		z[25], _ = bits.Sub64(z[25], 7540722130141040015, b)
	}

	return z
}

// Add z = x + y mod q
func (z *Element26) Add(x, y *Element26) *Element26 {
	var carry uint64

	z[0], carry = bits.Add64(x[0], y[0], 0)
	z[1], carry = bits.Add64(x[1], y[1], carry)
	z[2], carry = bits.Add64(x[2], y[2], carry)
	z[3], carry = bits.Add64(x[3], y[3], carry)
	z[4], carry = bits.Add64(x[4], y[4], carry)
	z[5], carry = bits.Add64(x[5], y[5], carry)
	z[6], carry = bits.Add64(x[6], y[6], carry)
	z[7], carry = bits.Add64(x[7], y[7], carry)
	z[8], carry = bits.Add64(x[8], y[8], carry)
	z[9], carry = bits.Add64(x[9], y[9], carry)
	z[10], carry = bits.Add64(x[10], y[10], carry)
	z[11], carry = bits.Add64(x[11], y[11], carry)
	z[12], carry = bits.Add64(x[12], y[12], carry)
	z[13], carry = bits.Add64(x[13], y[13], carry)
	z[14], carry = bits.Add64(x[14], y[14], carry)
	z[15], carry = bits.Add64(x[15], y[15], carry)
	z[16], carry = bits.Add64(x[16], y[16], carry)
	z[17], carry = bits.Add64(x[17], y[17], carry)
	z[18], carry = bits.Add64(x[18], y[18], carry)
	z[19], carry = bits.Add64(x[19], y[19], carry)
	z[20], carry = bits.Add64(x[20], y[20], carry)
	z[21], carry = bits.Add64(x[21], y[21], carry)
	z[22], carry = bits.Add64(x[22], y[22], carry)
	z[23], carry = bits.Add64(x[23], y[23], carry)
	z[24], carry = bits.Add64(x[24], y[24], carry)
	z[25], carry = bits.Add64(x[25], y[25], carry)
	// if we overflowed the last addition, z >= q
	// if z >= q, z = z - q
	if carry != 0 {
		// we overflowed, so z >= q
		z[0], carry = bits.Sub64(z[0], 1318738878612053369, 0)
		z[1], carry = bits.Sub64(z[1], 16732179128150725226, carry)
		z[2], carry = bits.Sub64(z[2], 15355618193144791007, carry)
		z[3], carry = bits.Sub64(z[3], 4396344304518515882, carry)
		z[4], carry = bits.Sub64(z[4], 11620695255275462168, carry)
		z[5], carry = bits.Sub64(z[5], 5162480155730353270, carry)
		z[6], carry = bits.Sub64(z[6], 11918365908634919040, carry)
		z[7], carry = bits.Sub64(z[7], 18310788083607185061, carry)
		z[8], carry = bits.Sub64(z[8], 1706818182961302545, carry)
		z[9], carry = bits.Sub64(z[9], 7715318651855780330, carry)
		z[10], carry = bits.Sub64(z[10], 4193845188432429317, carry)
		z[11], carry = bits.Sub64(z[11], 1108113797489890163, carry)
		z[12], carry = bits.Sub64(z[12], 16851474546529677959, carry)
		z[13], carry = bits.Sub64(z[13], 14885581468941587647, carry)
		z[14], carry = bits.Sub64(z[14], 4501432112780460688, carry)
		z[15], carry = bits.Sub64(z[15], 781891996848210117, carry)
		z[16], carry = bits.Sub64(z[16], 12250709359727562561, carry)
		z[17], carry = bits.Sub64(z[17], 15994884257273436159, carry)
		z[18], carry = bits.Sub64(z[18], 11140475058215084841, carry)
		z[19], carry = bits.Sub64(z[19], 15324160921537003790, carry)
		z[20], carry = bits.Sub64(z[20], 9275171629996515882, carry)
		z[21], carry = bits.Sub64(z[21], 6415429827500927434, carry)
		z[22], carry = bits.Sub64(z[22], 9969743536277534484, carry)
		z[23], carry = bits.Sub64(z[23], 13493967136577301588, carry)
		z[24], carry = bits.Sub64(z[24], 11095387261239247891, carry)
		z[25], carry = bits.Sub64(z[25], 7540722130141040015, carry)
		return z
	}

	// if z > q --> z -= q
	// note: this is NOT constant time
	if !(z[25] < 7540722130141040015 || (z[25] == 7540722130141040015 && (z[24] < 11095387261239247891 || (z[24] == 11095387261239247891 && (z[23] < 13493967136577301588 || (z[23] == 13493967136577301588 && (z[22] < 9969743536277534484 || (z[22] == 9969743536277534484 && (z[21] < 6415429827500927434 || (z[21] == 6415429827500927434 && (z[20] < 9275171629996515882 || (z[20] == 9275171629996515882 && (z[19] < 15324160921537003790 || (z[19] == 15324160921537003790 && (z[18] < 11140475058215084841 || (z[18] == 11140475058215084841 && (z[17] < 15994884257273436159 || (z[17] == 15994884257273436159 && (z[16] < 12250709359727562561 || (z[16] == 12250709359727562561 && (z[15] < 781891996848210117 || (z[15] == 781891996848210117 && (z[14] < 4501432112780460688 || (z[14] == 4501432112780460688 && (z[13] < 14885581468941587647 || (z[13] == 14885581468941587647 && (z[12] < 16851474546529677959 || (z[12] == 16851474546529677959 && (z[11] < 1108113797489890163 || (z[11] == 1108113797489890163 && (z[10] < 4193845188432429317 || (z[10] == 4193845188432429317 && (z[9] < 7715318651855780330 || (z[9] == 7715318651855780330 && (z[8] < 1706818182961302545 || (z[8] == 1706818182961302545 && (z[7] < 18310788083607185061 || (z[7] == 18310788083607185061 && (z[6] < 11918365908634919040 || (z[6] == 11918365908634919040 && (z[5] < 5162480155730353270 || (z[5] == 5162480155730353270 && (z[4] < 11620695255275462168 || (z[4] == 11620695255275462168 && (z[3] < 4396344304518515882 || (z[3] == 4396344304518515882 && (z[2] < 15355618193144791007 || (z[2] == 15355618193144791007 && (z[1] < 16732179128150725226 || (z[1] == 16732179128150725226 && (z[0] < 1318738878612053369))))))))))))))))))))))))))))))))))))))))))))))))))) {
		var b uint64
		z[0], b = bits.Sub64(z[0], 1318738878612053369, 0)
		z[1], b = bits.Sub64(z[1], 16732179128150725226, b)
		z[2], b = bits.Sub64(z[2], 15355618193144791007, b)
		z[3], b = bits.Sub64(z[3], 4396344304518515882, b)
		z[4], b = bits.Sub64(z[4], 11620695255275462168, b)
		z[5], b = bits.Sub64(z[5], 5162480155730353270, b)
		z[6], b = bits.Sub64(z[6], 11918365908634919040, b)
		z[7], b = bits.Sub64(z[7], 18310788083607185061, b)
		z[8], b = bits.Sub64(z[8], 1706818182961302545, b)
		z[9], b = bits.Sub64(z[9], 7715318651855780330, b)
		z[10], b = bits.Sub64(z[10], 4193845188432429317, b)
		z[11], b = bits.Sub64(z[11], 1108113797489890163, b)
		z[12], b = bits.Sub64(z[12], 16851474546529677959, b)
		z[13], b = bits.Sub64(z[13], 14885581468941587647, b)
		z[14], b = bits.Sub64(z[14], 4501432112780460688, b)
		z[15], b = bits.Sub64(z[15], 781891996848210117, b)
		z[16], b = bits.Sub64(z[16], 12250709359727562561, b)
		z[17], b = bits.Sub64(z[17], 15994884257273436159, b)
		z[18], b = bits.Sub64(z[18], 11140475058215084841, b)
		z[19], b = bits.Sub64(z[19], 15324160921537003790, b)
		z[20], b = bits.Sub64(z[20], 9275171629996515882, b)
		z[21], b = bits.Sub64(z[21], 6415429827500927434, b)
		z[22], b = bits.Sub64(z[22], 9969743536277534484, b)
		z[23], b = bits.Sub64(z[23], 13493967136577301588, b)
		z[24], b = bits.Sub64(z[24], 11095387261239247891, b)
		z[25], _ = bits.Sub64(z[25], 7540722130141040015, b)
	}
	return z
}

// AddAssign z = z + x mod q
func (z *Element26) AddAssign(x *Element26) *Element26 {
	var carry uint64

	z[0], carry = bits.Add64(z[0], x[0], 0)
	z[1], carry = bits.Add64(z[1], x[1], carry)
	z[2], carry = bits.Add64(z[2], x[2], carry)
	z[3], carry = bits.Add64(z[3], x[3], carry)
	z[4], carry = bits.Add64(z[4], x[4], carry)
	z[5], carry = bits.Add64(z[5], x[5], carry)
	z[6], carry = bits.Add64(z[6], x[6], carry)
	z[7], carry = bits.Add64(z[7], x[7], carry)
	z[8], carry = bits.Add64(z[8], x[8], carry)
	z[9], carry = bits.Add64(z[9], x[9], carry)
	z[10], carry = bits.Add64(z[10], x[10], carry)
	z[11], carry = bits.Add64(z[11], x[11], carry)
	z[12], carry = bits.Add64(z[12], x[12], carry)
	z[13], carry = bits.Add64(z[13], x[13], carry)
	z[14], carry = bits.Add64(z[14], x[14], carry)
	z[15], carry = bits.Add64(z[15], x[15], carry)
	z[16], carry = bits.Add64(z[16], x[16], carry)
	z[17], carry = bits.Add64(z[17], x[17], carry)
	z[18], carry = bits.Add64(z[18], x[18], carry)
	z[19], carry = bits.Add64(z[19], x[19], carry)
	z[20], carry = bits.Add64(z[20], x[20], carry)
	z[21], carry = bits.Add64(z[21], x[21], carry)
	z[22], carry = bits.Add64(z[22], x[22], carry)
	z[23], carry = bits.Add64(z[23], x[23], carry)
	z[24], carry = bits.Add64(z[24], x[24], carry)
	z[25], carry = bits.Add64(z[25], x[25], carry)
	// if we overflowed the last addition, z >= q
	// if z >= q, z = z - q
	if carry != 0 {
		// we overflowed, so z >= q
		z[0], carry = bits.Sub64(z[0], 1318738878612053369, 0)
		z[1], carry = bits.Sub64(z[1], 16732179128150725226, carry)
		z[2], carry = bits.Sub64(z[2], 15355618193144791007, carry)
		z[3], carry = bits.Sub64(z[3], 4396344304518515882, carry)
		z[4], carry = bits.Sub64(z[4], 11620695255275462168, carry)
		z[5], carry = bits.Sub64(z[5], 5162480155730353270, carry)
		z[6], carry = bits.Sub64(z[6], 11918365908634919040, carry)
		z[7], carry = bits.Sub64(z[7], 18310788083607185061, carry)
		z[8], carry = bits.Sub64(z[8], 1706818182961302545, carry)
		z[9], carry = bits.Sub64(z[9], 7715318651855780330, carry)
		z[10], carry = bits.Sub64(z[10], 4193845188432429317, carry)
		z[11], carry = bits.Sub64(z[11], 1108113797489890163, carry)
		z[12], carry = bits.Sub64(z[12], 16851474546529677959, carry)
		z[13], carry = bits.Sub64(z[13], 14885581468941587647, carry)
		z[14], carry = bits.Sub64(z[14], 4501432112780460688, carry)
		z[15], carry = bits.Sub64(z[15], 781891996848210117, carry)
		z[16], carry = bits.Sub64(z[16], 12250709359727562561, carry)
		z[17], carry = bits.Sub64(z[17], 15994884257273436159, carry)
		z[18], carry = bits.Sub64(z[18], 11140475058215084841, carry)
		z[19], carry = bits.Sub64(z[19], 15324160921537003790, carry)
		z[20], carry = bits.Sub64(z[20], 9275171629996515882, carry)
		z[21], carry = bits.Sub64(z[21], 6415429827500927434, carry)
		z[22], carry = bits.Sub64(z[22], 9969743536277534484, carry)
		z[23], carry = bits.Sub64(z[23], 13493967136577301588, carry)
		z[24], carry = bits.Sub64(z[24], 11095387261239247891, carry)
		z[25], carry = bits.Sub64(z[25], 7540722130141040015, carry)
		return z
	}

	// if z > q --> z -= q
	// note: this is NOT constant time
	if !(z[25] < 7540722130141040015 || (z[25] == 7540722130141040015 && (z[24] < 11095387261239247891 || (z[24] == 11095387261239247891 && (z[23] < 13493967136577301588 || (z[23] == 13493967136577301588 && (z[22] < 9969743536277534484 || (z[22] == 9969743536277534484 && (z[21] < 6415429827500927434 || (z[21] == 6415429827500927434 && (z[20] < 9275171629996515882 || (z[20] == 9275171629996515882 && (z[19] < 15324160921537003790 || (z[19] == 15324160921537003790 && (z[18] < 11140475058215084841 || (z[18] == 11140475058215084841 && (z[17] < 15994884257273436159 || (z[17] == 15994884257273436159 && (z[16] < 12250709359727562561 || (z[16] == 12250709359727562561 && (z[15] < 781891996848210117 || (z[15] == 781891996848210117 && (z[14] < 4501432112780460688 || (z[14] == 4501432112780460688 && (z[13] < 14885581468941587647 || (z[13] == 14885581468941587647 && (z[12] < 16851474546529677959 || (z[12] == 16851474546529677959 && (z[11] < 1108113797489890163 || (z[11] == 1108113797489890163 && (z[10] < 4193845188432429317 || (z[10] == 4193845188432429317 && (z[9] < 7715318651855780330 || (z[9] == 7715318651855780330 && (z[8] < 1706818182961302545 || (z[8] == 1706818182961302545 && (z[7] < 18310788083607185061 || (z[7] == 18310788083607185061 && (z[6] < 11918365908634919040 || (z[6] == 11918365908634919040 && (z[5] < 5162480155730353270 || (z[5] == 5162480155730353270 && (z[4] < 11620695255275462168 || (z[4] == 11620695255275462168 && (z[3] < 4396344304518515882 || (z[3] == 4396344304518515882 && (z[2] < 15355618193144791007 || (z[2] == 15355618193144791007 && (z[1] < 16732179128150725226 || (z[1] == 16732179128150725226 && (z[0] < 1318738878612053369))))))))))))))))))))))))))))))))))))))))))))))))))) {
		var b uint64
		z[0], b = bits.Sub64(z[0], 1318738878612053369, 0)
		z[1], b = bits.Sub64(z[1], 16732179128150725226, b)
		z[2], b = bits.Sub64(z[2], 15355618193144791007, b)
		z[3], b = bits.Sub64(z[3], 4396344304518515882, b)
		z[4], b = bits.Sub64(z[4], 11620695255275462168, b)
		z[5], b = bits.Sub64(z[5], 5162480155730353270, b)
		z[6], b = bits.Sub64(z[6], 11918365908634919040, b)
		z[7], b = bits.Sub64(z[7], 18310788083607185061, b)
		z[8], b = bits.Sub64(z[8], 1706818182961302545, b)
		z[9], b = bits.Sub64(z[9], 7715318651855780330, b)
		z[10], b = bits.Sub64(z[10], 4193845188432429317, b)
		z[11], b = bits.Sub64(z[11], 1108113797489890163, b)
		z[12], b = bits.Sub64(z[12], 16851474546529677959, b)
		z[13], b = bits.Sub64(z[13], 14885581468941587647, b)
		z[14], b = bits.Sub64(z[14], 4501432112780460688, b)
		z[15], b = bits.Sub64(z[15], 781891996848210117, b)
		z[16], b = bits.Sub64(z[16], 12250709359727562561, b)
		z[17], b = bits.Sub64(z[17], 15994884257273436159, b)
		z[18], b = bits.Sub64(z[18], 11140475058215084841, b)
		z[19], b = bits.Sub64(z[19], 15324160921537003790, b)
		z[20], b = bits.Sub64(z[20], 9275171629996515882, b)
		z[21], b = bits.Sub64(z[21], 6415429827500927434, b)
		z[22], b = bits.Sub64(z[22], 9969743536277534484, b)
		z[23], b = bits.Sub64(z[23], 13493967136577301588, b)
		z[24], b = bits.Sub64(z[24], 11095387261239247891, b)
		z[25], _ = bits.Sub64(z[25], 7540722130141040015, b)
	}
	return z
}

// Double z = x + x mod q, aka Lsh 1
func (z *Element26) Double(x *Element26) *Element26 {
	var carry uint64

	z[0], carry = bits.Add64(x[0], x[0], 0)
	z[1], carry = bits.Add64(x[1], x[1], carry)
	z[2], carry = bits.Add64(x[2], x[2], carry)
	z[3], carry = bits.Add64(x[3], x[3], carry)
	z[4], carry = bits.Add64(x[4], x[4], carry)
	z[5], carry = bits.Add64(x[5], x[5], carry)
	z[6], carry = bits.Add64(x[6], x[6], carry)
	z[7], carry = bits.Add64(x[7], x[7], carry)
	z[8], carry = bits.Add64(x[8], x[8], carry)
	z[9], carry = bits.Add64(x[9], x[9], carry)
	z[10], carry = bits.Add64(x[10], x[10], carry)
	z[11], carry = bits.Add64(x[11], x[11], carry)
	z[12], carry = bits.Add64(x[12], x[12], carry)
	z[13], carry = bits.Add64(x[13], x[13], carry)
	z[14], carry = bits.Add64(x[14], x[14], carry)
	z[15], carry = bits.Add64(x[15], x[15], carry)
	z[16], carry = bits.Add64(x[16], x[16], carry)
	z[17], carry = bits.Add64(x[17], x[17], carry)
	z[18], carry = bits.Add64(x[18], x[18], carry)
	z[19], carry = bits.Add64(x[19], x[19], carry)
	z[20], carry = bits.Add64(x[20], x[20], carry)
	z[21], carry = bits.Add64(x[21], x[21], carry)
	z[22], carry = bits.Add64(x[22], x[22], carry)
	z[23], carry = bits.Add64(x[23], x[23], carry)
	z[24], carry = bits.Add64(x[24], x[24], carry)
	z[25], carry = bits.Add64(x[25], x[25], carry)
	// if we overflowed the last addition, z >= q
	// if z >= q, z = z - q
	if carry != 0 {
		// we overflowed, so z >= q
		z[0], carry = bits.Sub64(z[0], 1318738878612053369, 0)
		z[1], carry = bits.Sub64(z[1], 16732179128150725226, carry)
		z[2], carry = bits.Sub64(z[2], 15355618193144791007, carry)
		z[3], carry = bits.Sub64(z[3], 4396344304518515882, carry)
		z[4], carry = bits.Sub64(z[4], 11620695255275462168, carry)
		z[5], carry = bits.Sub64(z[5], 5162480155730353270, carry)
		z[6], carry = bits.Sub64(z[6], 11918365908634919040, carry)
		z[7], carry = bits.Sub64(z[7], 18310788083607185061, carry)
		z[8], carry = bits.Sub64(z[8], 1706818182961302545, carry)
		z[9], carry = bits.Sub64(z[9], 7715318651855780330, carry)
		z[10], carry = bits.Sub64(z[10], 4193845188432429317, carry)
		z[11], carry = bits.Sub64(z[11], 1108113797489890163, carry)
		z[12], carry = bits.Sub64(z[12], 16851474546529677959, carry)
		z[13], carry = bits.Sub64(z[13], 14885581468941587647, carry)
		z[14], carry = bits.Sub64(z[14], 4501432112780460688, carry)
		z[15], carry = bits.Sub64(z[15], 781891996848210117, carry)
		z[16], carry = bits.Sub64(z[16], 12250709359727562561, carry)
		z[17], carry = bits.Sub64(z[17], 15994884257273436159, carry)
		z[18], carry = bits.Sub64(z[18], 11140475058215084841, carry)
		z[19], carry = bits.Sub64(z[19], 15324160921537003790, carry)
		z[20], carry = bits.Sub64(z[20], 9275171629996515882, carry)
		z[21], carry = bits.Sub64(z[21], 6415429827500927434, carry)
		z[22], carry = bits.Sub64(z[22], 9969743536277534484, carry)
		z[23], carry = bits.Sub64(z[23], 13493967136577301588, carry)
		z[24], carry = bits.Sub64(z[24], 11095387261239247891, carry)
		z[25], carry = bits.Sub64(z[25], 7540722130141040015, carry)
		return z
	}

	// if z > q --> z -= q
	// note: this is NOT constant time
	if !(z[25] < 7540722130141040015 || (z[25] == 7540722130141040015 && (z[24] < 11095387261239247891 || (z[24] == 11095387261239247891 && (z[23] < 13493967136577301588 || (z[23] == 13493967136577301588 && (z[22] < 9969743536277534484 || (z[22] == 9969743536277534484 && (z[21] < 6415429827500927434 || (z[21] == 6415429827500927434 && (z[20] < 9275171629996515882 || (z[20] == 9275171629996515882 && (z[19] < 15324160921537003790 || (z[19] == 15324160921537003790 && (z[18] < 11140475058215084841 || (z[18] == 11140475058215084841 && (z[17] < 15994884257273436159 || (z[17] == 15994884257273436159 && (z[16] < 12250709359727562561 || (z[16] == 12250709359727562561 && (z[15] < 781891996848210117 || (z[15] == 781891996848210117 && (z[14] < 4501432112780460688 || (z[14] == 4501432112780460688 && (z[13] < 14885581468941587647 || (z[13] == 14885581468941587647 && (z[12] < 16851474546529677959 || (z[12] == 16851474546529677959 && (z[11] < 1108113797489890163 || (z[11] == 1108113797489890163 && (z[10] < 4193845188432429317 || (z[10] == 4193845188432429317 && (z[9] < 7715318651855780330 || (z[9] == 7715318651855780330 && (z[8] < 1706818182961302545 || (z[8] == 1706818182961302545 && (z[7] < 18310788083607185061 || (z[7] == 18310788083607185061 && (z[6] < 11918365908634919040 || (z[6] == 11918365908634919040 && (z[5] < 5162480155730353270 || (z[5] == 5162480155730353270 && (z[4] < 11620695255275462168 || (z[4] == 11620695255275462168 && (z[3] < 4396344304518515882 || (z[3] == 4396344304518515882 && (z[2] < 15355618193144791007 || (z[2] == 15355618193144791007 && (z[1] < 16732179128150725226 || (z[1] == 16732179128150725226 && (z[0] < 1318738878612053369))))))))))))))))))))))))))))))))))))))))))))))))))) {
		var b uint64
		z[0], b = bits.Sub64(z[0], 1318738878612053369, 0)
		z[1], b = bits.Sub64(z[1], 16732179128150725226, b)
		z[2], b = bits.Sub64(z[2], 15355618193144791007, b)
		z[3], b = bits.Sub64(z[3], 4396344304518515882, b)
		z[4], b = bits.Sub64(z[4], 11620695255275462168, b)
		z[5], b = bits.Sub64(z[5], 5162480155730353270, b)
		z[6], b = bits.Sub64(z[6], 11918365908634919040, b)
		z[7], b = bits.Sub64(z[7], 18310788083607185061, b)
		z[8], b = bits.Sub64(z[8], 1706818182961302545, b)
		z[9], b = bits.Sub64(z[9], 7715318651855780330, b)
		z[10], b = bits.Sub64(z[10], 4193845188432429317, b)
		z[11], b = bits.Sub64(z[11], 1108113797489890163, b)
		z[12], b = bits.Sub64(z[12], 16851474546529677959, b)
		z[13], b = bits.Sub64(z[13], 14885581468941587647, b)
		z[14], b = bits.Sub64(z[14], 4501432112780460688, b)
		z[15], b = bits.Sub64(z[15], 781891996848210117, b)
		z[16], b = bits.Sub64(z[16], 12250709359727562561, b)
		z[17], b = bits.Sub64(z[17], 15994884257273436159, b)
		z[18], b = bits.Sub64(z[18], 11140475058215084841, b)
		z[19], b = bits.Sub64(z[19], 15324160921537003790, b)
		z[20], b = bits.Sub64(z[20], 9275171629996515882, b)
		z[21], b = bits.Sub64(z[21], 6415429827500927434, b)
		z[22], b = bits.Sub64(z[22], 9969743536277534484, b)
		z[23], b = bits.Sub64(z[23], 13493967136577301588, b)
		z[24], b = bits.Sub64(z[24], 11095387261239247891, b)
		z[25], _ = bits.Sub64(z[25], 7540722130141040015, b)
	}
	return z
}

// Sub  z = x - y mod q
func (z *Element26) Sub(x, y *Element26) *Element26 {
	var b uint64
	z[0], b = bits.Sub64(x[0], y[0], 0)
	z[1], b = bits.Sub64(x[1], y[1], b)
	z[2], b = bits.Sub64(x[2], y[2], b)
	z[3], b = bits.Sub64(x[3], y[3], b)
	z[4], b = bits.Sub64(x[4], y[4], b)
	z[5], b = bits.Sub64(x[5], y[5], b)
	z[6], b = bits.Sub64(x[6], y[6], b)
	z[7], b = bits.Sub64(x[7], y[7], b)
	z[8], b = bits.Sub64(x[8], y[8], b)
	z[9], b = bits.Sub64(x[9], y[9], b)
	z[10], b = bits.Sub64(x[10], y[10], b)
	z[11], b = bits.Sub64(x[11], y[11], b)
	z[12], b = bits.Sub64(x[12], y[12], b)
	z[13], b = bits.Sub64(x[13], y[13], b)
	z[14], b = bits.Sub64(x[14], y[14], b)
	z[15], b = bits.Sub64(x[15], y[15], b)
	z[16], b = bits.Sub64(x[16], y[16], b)
	z[17], b = bits.Sub64(x[17], y[17], b)
	z[18], b = bits.Sub64(x[18], y[18], b)
	z[19], b = bits.Sub64(x[19], y[19], b)
	z[20], b = bits.Sub64(x[20], y[20], b)
	z[21], b = bits.Sub64(x[21], y[21], b)
	z[22], b = bits.Sub64(x[22], y[22], b)
	z[23], b = bits.Sub64(x[23], y[23], b)
	z[24], b = bits.Sub64(x[24], y[24], b)
	z[25], b = bits.Sub64(x[25], y[25], b)
	if b != 0 {
		var c uint64
		z[0], c = bits.Add64(z[0], 1318738878612053369, 0)
		z[1], c = bits.Add64(z[1], 16732179128150725226, c)
		z[2], c = bits.Add64(z[2], 15355618193144791007, c)
		z[3], c = bits.Add64(z[3], 4396344304518515882, c)
		z[4], c = bits.Add64(z[4], 11620695255275462168, c)
		z[5], c = bits.Add64(z[5], 5162480155730353270, c)
		z[6], c = bits.Add64(z[6], 11918365908634919040, c)
		z[7], c = bits.Add64(z[7], 18310788083607185061, c)
		z[8], c = bits.Add64(z[8], 1706818182961302545, c)
		z[9], c = bits.Add64(z[9], 7715318651855780330, c)
		z[10], c = bits.Add64(z[10], 4193845188432429317, c)
		z[11], c = bits.Add64(z[11], 1108113797489890163, c)
		z[12], c = bits.Add64(z[12], 16851474546529677959, c)
		z[13], c = bits.Add64(z[13], 14885581468941587647, c)
		z[14], c = bits.Add64(z[14], 4501432112780460688, c)
		z[15], c = bits.Add64(z[15], 781891996848210117, c)
		z[16], c = bits.Add64(z[16], 12250709359727562561, c)
		z[17], c = bits.Add64(z[17], 15994884257273436159, c)
		z[18], c = bits.Add64(z[18], 11140475058215084841, c)
		z[19], c = bits.Add64(z[19], 15324160921537003790, c)
		z[20], c = bits.Add64(z[20], 9275171629996515882, c)
		z[21], c = bits.Add64(z[21], 6415429827500927434, c)
		z[22], c = bits.Add64(z[22], 9969743536277534484, c)
		z[23], c = bits.Add64(z[23], 13493967136577301588, c)
		z[24], c = bits.Add64(z[24], 11095387261239247891, c)
		z[25], _ = bits.Add64(z[25], 7540722130141040015, c)
	}
	return z
}

// SubAssign  z = z - x mod q
func (z *Element26) SubAssign(x *Element26) *Element26 {
	var b uint64
	z[0], b = bits.Sub64(z[0], x[0], 0)
	z[1], b = bits.Sub64(z[1], x[1], b)
	z[2], b = bits.Sub64(z[2], x[2], b)
	z[3], b = bits.Sub64(z[3], x[3], b)
	z[4], b = bits.Sub64(z[4], x[4], b)
	z[5], b = bits.Sub64(z[5], x[5], b)
	z[6], b = bits.Sub64(z[6], x[6], b)
	z[7], b = bits.Sub64(z[7], x[7], b)
	z[8], b = bits.Sub64(z[8], x[8], b)
	z[9], b = bits.Sub64(z[9], x[9], b)
	z[10], b = bits.Sub64(z[10], x[10], b)
	z[11], b = bits.Sub64(z[11], x[11], b)
	z[12], b = bits.Sub64(z[12], x[12], b)
	z[13], b = bits.Sub64(z[13], x[13], b)
	z[14], b = bits.Sub64(z[14], x[14], b)
	z[15], b = bits.Sub64(z[15], x[15], b)
	z[16], b = bits.Sub64(z[16], x[16], b)
	z[17], b = bits.Sub64(z[17], x[17], b)
	z[18], b = bits.Sub64(z[18], x[18], b)
	z[19], b = bits.Sub64(z[19], x[19], b)
	z[20], b = bits.Sub64(z[20], x[20], b)
	z[21], b = bits.Sub64(z[21], x[21], b)
	z[22], b = bits.Sub64(z[22], x[22], b)
	z[23], b = bits.Sub64(z[23], x[23], b)
	z[24], b = bits.Sub64(z[24], x[24], b)
	z[25], b = bits.Sub64(z[25], x[25], b)
	if b != 0 {
		var c uint64
		z[0], c = bits.Add64(z[0], 1318738878612053369, 0)
		z[1], c = bits.Add64(z[1], 16732179128150725226, c)
		z[2], c = bits.Add64(z[2], 15355618193144791007, c)
		z[3], c = bits.Add64(z[3], 4396344304518515882, c)
		z[4], c = bits.Add64(z[4], 11620695255275462168, c)
		z[5], c = bits.Add64(z[5], 5162480155730353270, c)
		z[6], c = bits.Add64(z[6], 11918365908634919040, c)
		z[7], c = bits.Add64(z[7], 18310788083607185061, c)
		z[8], c = bits.Add64(z[8], 1706818182961302545, c)
		z[9], c = bits.Add64(z[9], 7715318651855780330, c)
		z[10], c = bits.Add64(z[10], 4193845188432429317, c)
		z[11], c = bits.Add64(z[11], 1108113797489890163, c)
		z[12], c = bits.Add64(z[12], 16851474546529677959, c)
		z[13], c = bits.Add64(z[13], 14885581468941587647, c)
		z[14], c = bits.Add64(z[14], 4501432112780460688, c)
		z[15], c = bits.Add64(z[15], 781891996848210117, c)
		z[16], c = bits.Add64(z[16], 12250709359727562561, c)
		z[17], c = bits.Add64(z[17], 15994884257273436159, c)
		z[18], c = bits.Add64(z[18], 11140475058215084841, c)
		z[19], c = bits.Add64(z[19], 15324160921537003790, c)
		z[20], c = bits.Add64(z[20], 9275171629996515882, c)
		z[21], c = bits.Add64(z[21], 6415429827500927434, c)
		z[22], c = bits.Add64(z[22], 9969743536277534484, c)
		z[23], c = bits.Add64(z[23], 13493967136577301588, c)
		z[24], c = bits.Add64(z[24], 11095387261239247891, c)
		z[25], _ = bits.Add64(z[25], 7540722130141040015, c)
	}
	return z
}

// Exp z = x^exponent mod q
// (not optimized)
// exponent (non-montgomery form) is ordered from least significant word to most significant word
func (z *Element26) Exp(x Element26, exponent ...uint64) *Element26 {
	r := 0
	msb := 0
	for i := len(exponent) - 1; i >= 0; i-- {
		if exponent[i] == 0 {
			r++
		} else {
			msb = (i * 64) + bits.Len64(exponent[i])
			break
		}
	}
	exponent = exponent[:len(exponent)-r]
	if len(exponent) == 0 {
		return z.SetOne()
	}

	z.Set(&x)

	l := msb - 2
	for i := l; i >= 0; i-- {
		z.Square(z)
		if exponent[i/64]&(1<<uint(i%64)) != 0 {
			z.MulAssign(&x)
		}
	}
	return z
}

// FromMont converts z in place (i.e. mutates) from Montgomery to regular representation
// sets and returns z = z * 1
func (z *Element26) FromMont() *Element26 {

	// the following lines implement z = z * 1
	// with a modified CIOS montgomery multiplication
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 4285846825131721527
		C := madd0(m, 1318738878612053369, z[0])
		C, z[0] = madd2(m, 16732179128150725226, z[1], C)
		C, z[1] = madd2(m, 15355618193144791007, z[2], C)
		C, z[2] = madd2(m, 4396344304518515882, z[3], C)
		C, z[3] = madd2(m, 11620695255275462168, z[4], C)
		C, z[4] = madd2(m, 5162480155730353270, z[5], C)
		C, z[5] = madd2(m, 11918365908634919040, z[6], C)
		C, z[6] = madd2(m, 18310788083607185061, z[7], C)
		C, z[7] = madd2(m, 1706818182961302545, z[8], C)
		C, z[8] = madd2(m, 7715318651855780330, z[9], C)
		C, z[9] = madd2(m, 4193845188432429317, z[10], C)
		C, z[10] = madd2(m, 1108113797489890163, z[11], C)
		C, z[11] = madd2(m, 16851474546529677959, z[12], C)
		C, z[12] = madd2(m, 14885581468941587647, z[13], C)
		C, z[13] = madd2(m, 4501432112780460688, z[14], C)
		C, z[14] = madd2(m, 781891996848210117, z[15], C)
		C, z[15] = madd2(m, 12250709359727562561, z[16], C)
		C, z[16] = madd2(m, 15994884257273436159, z[17], C)
		C, z[17] = madd2(m, 11140475058215084841, z[18], C)
		C, z[18] = madd2(m, 15324160921537003790, z[19], C)
		C, z[19] = madd2(m, 9275171629996515882, z[20], C)
		C, z[20] = madd2(m, 6415429827500927434, z[21], C)
		C, z[21] = madd2(m, 9969743536277534484, z[22], C)
		C, z[22] = madd2(m, 13493967136577301588, z[23], C)
		C, z[23] = madd2(m, 11095387261239247891, z[24], C)
		C, z[24] = madd2(m, 7540722130141040015, z[25], C)
		z[25] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 4285846825131721527
		C := madd0(m, 1318738878612053369, z[0])
		C, z[0] = madd2(m, 16732179128150725226, z[1], C)
		C, z[1] = madd2(m, 15355618193144791007, z[2], C)
		C, z[2] = madd2(m, 4396344304518515882, z[3], C)
		C, z[3] = madd2(m, 11620695255275462168, z[4], C)
		C, z[4] = madd2(m, 5162480155730353270, z[5], C)
		C, z[5] = madd2(m, 11918365908634919040, z[6], C)
		C, z[6] = madd2(m, 18310788083607185061, z[7], C)
		C, z[7] = madd2(m, 1706818182961302545, z[8], C)
		C, z[8] = madd2(m, 7715318651855780330, z[9], C)
		C, z[9] = madd2(m, 4193845188432429317, z[10], C)
		C, z[10] = madd2(m, 1108113797489890163, z[11], C)
		C, z[11] = madd2(m, 16851474546529677959, z[12], C)
		C, z[12] = madd2(m, 14885581468941587647, z[13], C)
		C, z[13] = madd2(m, 4501432112780460688, z[14], C)
		C, z[14] = madd2(m, 781891996848210117, z[15], C)
		C, z[15] = madd2(m, 12250709359727562561, z[16], C)
		C, z[16] = madd2(m, 15994884257273436159, z[17], C)
		C, z[17] = madd2(m, 11140475058215084841, z[18], C)
		C, z[18] = madd2(m, 15324160921537003790, z[19], C)
		C, z[19] = madd2(m, 9275171629996515882, z[20], C)
		C, z[20] = madd2(m, 6415429827500927434, z[21], C)
		C, z[21] = madd2(m, 9969743536277534484, z[22], C)
		C, z[22] = madd2(m, 13493967136577301588, z[23], C)
		C, z[23] = madd2(m, 11095387261239247891, z[24], C)
		C, z[24] = madd2(m, 7540722130141040015, z[25], C)
		z[25] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 4285846825131721527
		C := madd0(m, 1318738878612053369, z[0])
		C, z[0] = madd2(m, 16732179128150725226, z[1], C)
		C, z[1] = madd2(m, 15355618193144791007, z[2], C)
		C, z[2] = madd2(m, 4396344304518515882, z[3], C)
		C, z[3] = madd2(m, 11620695255275462168, z[4], C)
		C, z[4] = madd2(m, 5162480155730353270, z[5], C)
		C, z[5] = madd2(m, 11918365908634919040, z[6], C)
		C, z[6] = madd2(m, 18310788083607185061, z[7], C)
		C, z[7] = madd2(m, 1706818182961302545, z[8], C)
		C, z[8] = madd2(m, 7715318651855780330, z[9], C)
		C, z[9] = madd2(m, 4193845188432429317, z[10], C)
		C, z[10] = madd2(m, 1108113797489890163, z[11], C)
		C, z[11] = madd2(m, 16851474546529677959, z[12], C)
		C, z[12] = madd2(m, 14885581468941587647, z[13], C)
		C, z[13] = madd2(m, 4501432112780460688, z[14], C)
		C, z[14] = madd2(m, 781891996848210117, z[15], C)
		C, z[15] = madd2(m, 12250709359727562561, z[16], C)
		C, z[16] = madd2(m, 15994884257273436159, z[17], C)
		C, z[17] = madd2(m, 11140475058215084841, z[18], C)
		C, z[18] = madd2(m, 15324160921537003790, z[19], C)
		C, z[19] = madd2(m, 9275171629996515882, z[20], C)
		C, z[20] = madd2(m, 6415429827500927434, z[21], C)
		C, z[21] = madd2(m, 9969743536277534484, z[22], C)
		C, z[22] = madd2(m, 13493967136577301588, z[23], C)
		C, z[23] = madd2(m, 11095387261239247891, z[24], C)
		C, z[24] = madd2(m, 7540722130141040015, z[25], C)
		z[25] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 4285846825131721527
		C := madd0(m, 1318738878612053369, z[0])
		C, z[0] = madd2(m, 16732179128150725226, z[1], C)
		C, z[1] = madd2(m, 15355618193144791007, z[2], C)
		C, z[2] = madd2(m, 4396344304518515882, z[3], C)
		C, z[3] = madd2(m, 11620695255275462168, z[4], C)
		C, z[4] = madd2(m, 5162480155730353270, z[5], C)
		C, z[5] = madd2(m, 11918365908634919040, z[6], C)
		C, z[6] = madd2(m, 18310788083607185061, z[7], C)
		C, z[7] = madd2(m, 1706818182961302545, z[8], C)
		C, z[8] = madd2(m, 7715318651855780330, z[9], C)
		C, z[9] = madd2(m, 4193845188432429317, z[10], C)
		C, z[10] = madd2(m, 1108113797489890163, z[11], C)
		C, z[11] = madd2(m, 16851474546529677959, z[12], C)
		C, z[12] = madd2(m, 14885581468941587647, z[13], C)
		C, z[13] = madd2(m, 4501432112780460688, z[14], C)
		C, z[14] = madd2(m, 781891996848210117, z[15], C)
		C, z[15] = madd2(m, 12250709359727562561, z[16], C)
		C, z[16] = madd2(m, 15994884257273436159, z[17], C)
		C, z[17] = madd2(m, 11140475058215084841, z[18], C)
		C, z[18] = madd2(m, 15324160921537003790, z[19], C)
		C, z[19] = madd2(m, 9275171629996515882, z[20], C)
		C, z[20] = madd2(m, 6415429827500927434, z[21], C)
		C, z[21] = madd2(m, 9969743536277534484, z[22], C)
		C, z[22] = madd2(m, 13493967136577301588, z[23], C)
		C, z[23] = madd2(m, 11095387261239247891, z[24], C)
		C, z[24] = madd2(m, 7540722130141040015, z[25], C)
		z[25] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 4285846825131721527
		C := madd0(m, 1318738878612053369, z[0])
		C, z[0] = madd2(m, 16732179128150725226, z[1], C)
		C, z[1] = madd2(m, 15355618193144791007, z[2], C)
		C, z[2] = madd2(m, 4396344304518515882, z[3], C)
		C, z[3] = madd2(m, 11620695255275462168, z[4], C)
		C, z[4] = madd2(m, 5162480155730353270, z[5], C)
		C, z[5] = madd2(m, 11918365908634919040, z[6], C)
		C, z[6] = madd2(m, 18310788083607185061, z[7], C)
		C, z[7] = madd2(m, 1706818182961302545, z[8], C)
		C, z[8] = madd2(m, 7715318651855780330, z[9], C)
		C, z[9] = madd2(m, 4193845188432429317, z[10], C)
		C, z[10] = madd2(m, 1108113797489890163, z[11], C)
		C, z[11] = madd2(m, 16851474546529677959, z[12], C)
		C, z[12] = madd2(m, 14885581468941587647, z[13], C)
		C, z[13] = madd2(m, 4501432112780460688, z[14], C)
		C, z[14] = madd2(m, 781891996848210117, z[15], C)
		C, z[15] = madd2(m, 12250709359727562561, z[16], C)
		C, z[16] = madd2(m, 15994884257273436159, z[17], C)
		C, z[17] = madd2(m, 11140475058215084841, z[18], C)
		C, z[18] = madd2(m, 15324160921537003790, z[19], C)
		C, z[19] = madd2(m, 9275171629996515882, z[20], C)
		C, z[20] = madd2(m, 6415429827500927434, z[21], C)
		C, z[21] = madd2(m, 9969743536277534484, z[22], C)
		C, z[22] = madd2(m, 13493967136577301588, z[23], C)
		C, z[23] = madd2(m, 11095387261239247891, z[24], C)
		C, z[24] = madd2(m, 7540722130141040015, z[25], C)
		z[25] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 4285846825131721527
		C := madd0(m, 1318738878612053369, z[0])
		C, z[0] = madd2(m, 16732179128150725226, z[1], C)
		C, z[1] = madd2(m, 15355618193144791007, z[2], C)
		C, z[2] = madd2(m, 4396344304518515882, z[3], C)
		C, z[3] = madd2(m, 11620695255275462168, z[4], C)
		C, z[4] = madd2(m, 5162480155730353270, z[5], C)
		C, z[5] = madd2(m, 11918365908634919040, z[6], C)
		C, z[6] = madd2(m, 18310788083607185061, z[7], C)
		C, z[7] = madd2(m, 1706818182961302545, z[8], C)
		C, z[8] = madd2(m, 7715318651855780330, z[9], C)
		C, z[9] = madd2(m, 4193845188432429317, z[10], C)
		C, z[10] = madd2(m, 1108113797489890163, z[11], C)
		C, z[11] = madd2(m, 16851474546529677959, z[12], C)
		C, z[12] = madd2(m, 14885581468941587647, z[13], C)
		C, z[13] = madd2(m, 4501432112780460688, z[14], C)
		C, z[14] = madd2(m, 781891996848210117, z[15], C)
		C, z[15] = madd2(m, 12250709359727562561, z[16], C)
		C, z[16] = madd2(m, 15994884257273436159, z[17], C)
		C, z[17] = madd2(m, 11140475058215084841, z[18], C)
		C, z[18] = madd2(m, 15324160921537003790, z[19], C)
		C, z[19] = madd2(m, 9275171629996515882, z[20], C)
		C, z[20] = madd2(m, 6415429827500927434, z[21], C)
		C, z[21] = madd2(m, 9969743536277534484, z[22], C)
		C, z[22] = madd2(m, 13493967136577301588, z[23], C)
		C, z[23] = madd2(m, 11095387261239247891, z[24], C)
		C, z[24] = madd2(m, 7540722130141040015, z[25], C)
		z[25] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 4285846825131721527
		C := madd0(m, 1318738878612053369, z[0])
		C, z[0] = madd2(m, 16732179128150725226, z[1], C)
		C, z[1] = madd2(m, 15355618193144791007, z[2], C)
		C, z[2] = madd2(m, 4396344304518515882, z[3], C)
		C, z[3] = madd2(m, 11620695255275462168, z[4], C)
		C, z[4] = madd2(m, 5162480155730353270, z[5], C)
		C, z[5] = madd2(m, 11918365908634919040, z[6], C)
		C, z[6] = madd2(m, 18310788083607185061, z[7], C)
		C, z[7] = madd2(m, 1706818182961302545, z[8], C)
		C, z[8] = madd2(m, 7715318651855780330, z[9], C)
		C, z[9] = madd2(m, 4193845188432429317, z[10], C)
		C, z[10] = madd2(m, 1108113797489890163, z[11], C)
		C, z[11] = madd2(m, 16851474546529677959, z[12], C)
		C, z[12] = madd2(m, 14885581468941587647, z[13], C)
		C, z[13] = madd2(m, 4501432112780460688, z[14], C)
		C, z[14] = madd2(m, 781891996848210117, z[15], C)
		C, z[15] = madd2(m, 12250709359727562561, z[16], C)
		C, z[16] = madd2(m, 15994884257273436159, z[17], C)
		C, z[17] = madd2(m, 11140475058215084841, z[18], C)
		C, z[18] = madd2(m, 15324160921537003790, z[19], C)
		C, z[19] = madd2(m, 9275171629996515882, z[20], C)
		C, z[20] = madd2(m, 6415429827500927434, z[21], C)
		C, z[21] = madd2(m, 9969743536277534484, z[22], C)
		C, z[22] = madd2(m, 13493967136577301588, z[23], C)
		C, z[23] = madd2(m, 11095387261239247891, z[24], C)
		C, z[24] = madd2(m, 7540722130141040015, z[25], C)
		z[25] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 4285846825131721527
		C := madd0(m, 1318738878612053369, z[0])
		C, z[0] = madd2(m, 16732179128150725226, z[1], C)
		C, z[1] = madd2(m, 15355618193144791007, z[2], C)
		C, z[2] = madd2(m, 4396344304518515882, z[3], C)
		C, z[3] = madd2(m, 11620695255275462168, z[4], C)
		C, z[4] = madd2(m, 5162480155730353270, z[5], C)
		C, z[5] = madd2(m, 11918365908634919040, z[6], C)
		C, z[6] = madd2(m, 18310788083607185061, z[7], C)
		C, z[7] = madd2(m, 1706818182961302545, z[8], C)
		C, z[8] = madd2(m, 7715318651855780330, z[9], C)
		C, z[9] = madd2(m, 4193845188432429317, z[10], C)
		C, z[10] = madd2(m, 1108113797489890163, z[11], C)
		C, z[11] = madd2(m, 16851474546529677959, z[12], C)
		C, z[12] = madd2(m, 14885581468941587647, z[13], C)
		C, z[13] = madd2(m, 4501432112780460688, z[14], C)
		C, z[14] = madd2(m, 781891996848210117, z[15], C)
		C, z[15] = madd2(m, 12250709359727562561, z[16], C)
		C, z[16] = madd2(m, 15994884257273436159, z[17], C)
		C, z[17] = madd2(m, 11140475058215084841, z[18], C)
		C, z[18] = madd2(m, 15324160921537003790, z[19], C)
		C, z[19] = madd2(m, 9275171629996515882, z[20], C)
		C, z[20] = madd2(m, 6415429827500927434, z[21], C)
		C, z[21] = madd2(m, 9969743536277534484, z[22], C)
		C, z[22] = madd2(m, 13493967136577301588, z[23], C)
		C, z[23] = madd2(m, 11095387261239247891, z[24], C)
		C, z[24] = madd2(m, 7540722130141040015, z[25], C)
		z[25] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 4285846825131721527
		C := madd0(m, 1318738878612053369, z[0])
		C, z[0] = madd2(m, 16732179128150725226, z[1], C)
		C, z[1] = madd2(m, 15355618193144791007, z[2], C)
		C, z[2] = madd2(m, 4396344304518515882, z[3], C)
		C, z[3] = madd2(m, 11620695255275462168, z[4], C)
		C, z[4] = madd2(m, 5162480155730353270, z[5], C)
		C, z[5] = madd2(m, 11918365908634919040, z[6], C)
		C, z[6] = madd2(m, 18310788083607185061, z[7], C)
		C, z[7] = madd2(m, 1706818182961302545, z[8], C)
		C, z[8] = madd2(m, 7715318651855780330, z[9], C)
		C, z[9] = madd2(m, 4193845188432429317, z[10], C)
		C, z[10] = madd2(m, 1108113797489890163, z[11], C)
		C, z[11] = madd2(m, 16851474546529677959, z[12], C)
		C, z[12] = madd2(m, 14885581468941587647, z[13], C)
		C, z[13] = madd2(m, 4501432112780460688, z[14], C)
		C, z[14] = madd2(m, 781891996848210117, z[15], C)
		C, z[15] = madd2(m, 12250709359727562561, z[16], C)
		C, z[16] = madd2(m, 15994884257273436159, z[17], C)
		C, z[17] = madd2(m, 11140475058215084841, z[18], C)
		C, z[18] = madd2(m, 15324160921537003790, z[19], C)
		C, z[19] = madd2(m, 9275171629996515882, z[20], C)
		C, z[20] = madd2(m, 6415429827500927434, z[21], C)
		C, z[21] = madd2(m, 9969743536277534484, z[22], C)
		C, z[22] = madd2(m, 13493967136577301588, z[23], C)
		C, z[23] = madd2(m, 11095387261239247891, z[24], C)
		C, z[24] = madd2(m, 7540722130141040015, z[25], C)
		z[25] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 4285846825131721527
		C := madd0(m, 1318738878612053369, z[0])
		C, z[0] = madd2(m, 16732179128150725226, z[1], C)
		C, z[1] = madd2(m, 15355618193144791007, z[2], C)
		C, z[2] = madd2(m, 4396344304518515882, z[3], C)
		C, z[3] = madd2(m, 11620695255275462168, z[4], C)
		C, z[4] = madd2(m, 5162480155730353270, z[5], C)
		C, z[5] = madd2(m, 11918365908634919040, z[6], C)
		C, z[6] = madd2(m, 18310788083607185061, z[7], C)
		C, z[7] = madd2(m, 1706818182961302545, z[8], C)
		C, z[8] = madd2(m, 7715318651855780330, z[9], C)
		C, z[9] = madd2(m, 4193845188432429317, z[10], C)
		C, z[10] = madd2(m, 1108113797489890163, z[11], C)
		C, z[11] = madd2(m, 16851474546529677959, z[12], C)
		C, z[12] = madd2(m, 14885581468941587647, z[13], C)
		C, z[13] = madd2(m, 4501432112780460688, z[14], C)
		C, z[14] = madd2(m, 781891996848210117, z[15], C)
		C, z[15] = madd2(m, 12250709359727562561, z[16], C)
		C, z[16] = madd2(m, 15994884257273436159, z[17], C)
		C, z[17] = madd2(m, 11140475058215084841, z[18], C)
		C, z[18] = madd2(m, 15324160921537003790, z[19], C)
		C, z[19] = madd2(m, 9275171629996515882, z[20], C)
		C, z[20] = madd2(m, 6415429827500927434, z[21], C)
		C, z[21] = madd2(m, 9969743536277534484, z[22], C)
		C, z[22] = madd2(m, 13493967136577301588, z[23], C)
		C, z[23] = madd2(m, 11095387261239247891, z[24], C)
		C, z[24] = madd2(m, 7540722130141040015, z[25], C)
		z[25] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 4285846825131721527
		C := madd0(m, 1318738878612053369, z[0])
		C, z[0] = madd2(m, 16732179128150725226, z[1], C)
		C, z[1] = madd2(m, 15355618193144791007, z[2], C)
		C, z[2] = madd2(m, 4396344304518515882, z[3], C)
		C, z[3] = madd2(m, 11620695255275462168, z[4], C)
		C, z[4] = madd2(m, 5162480155730353270, z[5], C)
		C, z[5] = madd2(m, 11918365908634919040, z[6], C)
		C, z[6] = madd2(m, 18310788083607185061, z[7], C)
		C, z[7] = madd2(m, 1706818182961302545, z[8], C)
		C, z[8] = madd2(m, 7715318651855780330, z[9], C)
		C, z[9] = madd2(m, 4193845188432429317, z[10], C)
		C, z[10] = madd2(m, 1108113797489890163, z[11], C)
		C, z[11] = madd2(m, 16851474546529677959, z[12], C)
		C, z[12] = madd2(m, 14885581468941587647, z[13], C)
		C, z[13] = madd2(m, 4501432112780460688, z[14], C)
		C, z[14] = madd2(m, 781891996848210117, z[15], C)
		C, z[15] = madd2(m, 12250709359727562561, z[16], C)
		C, z[16] = madd2(m, 15994884257273436159, z[17], C)
		C, z[17] = madd2(m, 11140475058215084841, z[18], C)
		C, z[18] = madd2(m, 15324160921537003790, z[19], C)
		C, z[19] = madd2(m, 9275171629996515882, z[20], C)
		C, z[20] = madd2(m, 6415429827500927434, z[21], C)
		C, z[21] = madd2(m, 9969743536277534484, z[22], C)
		C, z[22] = madd2(m, 13493967136577301588, z[23], C)
		C, z[23] = madd2(m, 11095387261239247891, z[24], C)
		C, z[24] = madd2(m, 7540722130141040015, z[25], C)
		z[25] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 4285846825131721527
		C := madd0(m, 1318738878612053369, z[0])
		C, z[0] = madd2(m, 16732179128150725226, z[1], C)
		C, z[1] = madd2(m, 15355618193144791007, z[2], C)
		C, z[2] = madd2(m, 4396344304518515882, z[3], C)
		C, z[3] = madd2(m, 11620695255275462168, z[4], C)
		C, z[4] = madd2(m, 5162480155730353270, z[5], C)
		C, z[5] = madd2(m, 11918365908634919040, z[6], C)
		C, z[6] = madd2(m, 18310788083607185061, z[7], C)
		C, z[7] = madd2(m, 1706818182961302545, z[8], C)
		C, z[8] = madd2(m, 7715318651855780330, z[9], C)
		C, z[9] = madd2(m, 4193845188432429317, z[10], C)
		C, z[10] = madd2(m, 1108113797489890163, z[11], C)
		C, z[11] = madd2(m, 16851474546529677959, z[12], C)
		C, z[12] = madd2(m, 14885581468941587647, z[13], C)
		C, z[13] = madd2(m, 4501432112780460688, z[14], C)
		C, z[14] = madd2(m, 781891996848210117, z[15], C)
		C, z[15] = madd2(m, 12250709359727562561, z[16], C)
		C, z[16] = madd2(m, 15994884257273436159, z[17], C)
		C, z[17] = madd2(m, 11140475058215084841, z[18], C)
		C, z[18] = madd2(m, 15324160921537003790, z[19], C)
		C, z[19] = madd2(m, 9275171629996515882, z[20], C)
		C, z[20] = madd2(m, 6415429827500927434, z[21], C)
		C, z[21] = madd2(m, 9969743536277534484, z[22], C)
		C, z[22] = madd2(m, 13493967136577301588, z[23], C)
		C, z[23] = madd2(m, 11095387261239247891, z[24], C)
		C, z[24] = madd2(m, 7540722130141040015, z[25], C)
		z[25] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 4285846825131721527
		C := madd0(m, 1318738878612053369, z[0])
		C, z[0] = madd2(m, 16732179128150725226, z[1], C)
		C, z[1] = madd2(m, 15355618193144791007, z[2], C)
		C, z[2] = madd2(m, 4396344304518515882, z[3], C)
		C, z[3] = madd2(m, 11620695255275462168, z[4], C)
		C, z[4] = madd2(m, 5162480155730353270, z[5], C)
		C, z[5] = madd2(m, 11918365908634919040, z[6], C)
		C, z[6] = madd2(m, 18310788083607185061, z[7], C)
		C, z[7] = madd2(m, 1706818182961302545, z[8], C)
		C, z[8] = madd2(m, 7715318651855780330, z[9], C)
		C, z[9] = madd2(m, 4193845188432429317, z[10], C)
		C, z[10] = madd2(m, 1108113797489890163, z[11], C)
		C, z[11] = madd2(m, 16851474546529677959, z[12], C)
		C, z[12] = madd2(m, 14885581468941587647, z[13], C)
		C, z[13] = madd2(m, 4501432112780460688, z[14], C)
		C, z[14] = madd2(m, 781891996848210117, z[15], C)
		C, z[15] = madd2(m, 12250709359727562561, z[16], C)
		C, z[16] = madd2(m, 15994884257273436159, z[17], C)
		C, z[17] = madd2(m, 11140475058215084841, z[18], C)
		C, z[18] = madd2(m, 15324160921537003790, z[19], C)
		C, z[19] = madd2(m, 9275171629996515882, z[20], C)
		C, z[20] = madd2(m, 6415429827500927434, z[21], C)
		C, z[21] = madd2(m, 9969743536277534484, z[22], C)
		C, z[22] = madd2(m, 13493967136577301588, z[23], C)
		C, z[23] = madd2(m, 11095387261239247891, z[24], C)
		C, z[24] = madd2(m, 7540722130141040015, z[25], C)
		z[25] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 4285846825131721527
		C := madd0(m, 1318738878612053369, z[0])
		C, z[0] = madd2(m, 16732179128150725226, z[1], C)
		C, z[1] = madd2(m, 15355618193144791007, z[2], C)
		C, z[2] = madd2(m, 4396344304518515882, z[3], C)
		C, z[3] = madd2(m, 11620695255275462168, z[4], C)
		C, z[4] = madd2(m, 5162480155730353270, z[5], C)
		C, z[5] = madd2(m, 11918365908634919040, z[6], C)
		C, z[6] = madd2(m, 18310788083607185061, z[7], C)
		C, z[7] = madd2(m, 1706818182961302545, z[8], C)
		C, z[8] = madd2(m, 7715318651855780330, z[9], C)
		C, z[9] = madd2(m, 4193845188432429317, z[10], C)
		C, z[10] = madd2(m, 1108113797489890163, z[11], C)
		C, z[11] = madd2(m, 16851474546529677959, z[12], C)
		C, z[12] = madd2(m, 14885581468941587647, z[13], C)
		C, z[13] = madd2(m, 4501432112780460688, z[14], C)
		C, z[14] = madd2(m, 781891996848210117, z[15], C)
		C, z[15] = madd2(m, 12250709359727562561, z[16], C)
		C, z[16] = madd2(m, 15994884257273436159, z[17], C)
		C, z[17] = madd2(m, 11140475058215084841, z[18], C)
		C, z[18] = madd2(m, 15324160921537003790, z[19], C)
		C, z[19] = madd2(m, 9275171629996515882, z[20], C)
		C, z[20] = madd2(m, 6415429827500927434, z[21], C)
		C, z[21] = madd2(m, 9969743536277534484, z[22], C)
		C, z[22] = madd2(m, 13493967136577301588, z[23], C)
		C, z[23] = madd2(m, 11095387261239247891, z[24], C)
		C, z[24] = madd2(m, 7540722130141040015, z[25], C)
		z[25] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 4285846825131721527
		C := madd0(m, 1318738878612053369, z[0])
		C, z[0] = madd2(m, 16732179128150725226, z[1], C)
		C, z[1] = madd2(m, 15355618193144791007, z[2], C)
		C, z[2] = madd2(m, 4396344304518515882, z[3], C)
		C, z[3] = madd2(m, 11620695255275462168, z[4], C)
		C, z[4] = madd2(m, 5162480155730353270, z[5], C)
		C, z[5] = madd2(m, 11918365908634919040, z[6], C)
		C, z[6] = madd2(m, 18310788083607185061, z[7], C)
		C, z[7] = madd2(m, 1706818182961302545, z[8], C)
		C, z[8] = madd2(m, 7715318651855780330, z[9], C)
		C, z[9] = madd2(m, 4193845188432429317, z[10], C)
		C, z[10] = madd2(m, 1108113797489890163, z[11], C)
		C, z[11] = madd2(m, 16851474546529677959, z[12], C)
		C, z[12] = madd2(m, 14885581468941587647, z[13], C)
		C, z[13] = madd2(m, 4501432112780460688, z[14], C)
		C, z[14] = madd2(m, 781891996848210117, z[15], C)
		C, z[15] = madd2(m, 12250709359727562561, z[16], C)
		C, z[16] = madd2(m, 15994884257273436159, z[17], C)
		C, z[17] = madd2(m, 11140475058215084841, z[18], C)
		C, z[18] = madd2(m, 15324160921537003790, z[19], C)
		C, z[19] = madd2(m, 9275171629996515882, z[20], C)
		C, z[20] = madd2(m, 6415429827500927434, z[21], C)
		C, z[21] = madd2(m, 9969743536277534484, z[22], C)
		C, z[22] = madd2(m, 13493967136577301588, z[23], C)
		C, z[23] = madd2(m, 11095387261239247891, z[24], C)
		C, z[24] = madd2(m, 7540722130141040015, z[25], C)
		z[25] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 4285846825131721527
		C := madd0(m, 1318738878612053369, z[0])
		C, z[0] = madd2(m, 16732179128150725226, z[1], C)
		C, z[1] = madd2(m, 15355618193144791007, z[2], C)
		C, z[2] = madd2(m, 4396344304518515882, z[3], C)
		C, z[3] = madd2(m, 11620695255275462168, z[4], C)
		C, z[4] = madd2(m, 5162480155730353270, z[5], C)
		C, z[5] = madd2(m, 11918365908634919040, z[6], C)
		C, z[6] = madd2(m, 18310788083607185061, z[7], C)
		C, z[7] = madd2(m, 1706818182961302545, z[8], C)
		C, z[8] = madd2(m, 7715318651855780330, z[9], C)
		C, z[9] = madd2(m, 4193845188432429317, z[10], C)
		C, z[10] = madd2(m, 1108113797489890163, z[11], C)
		C, z[11] = madd2(m, 16851474546529677959, z[12], C)
		C, z[12] = madd2(m, 14885581468941587647, z[13], C)
		C, z[13] = madd2(m, 4501432112780460688, z[14], C)
		C, z[14] = madd2(m, 781891996848210117, z[15], C)
		C, z[15] = madd2(m, 12250709359727562561, z[16], C)
		C, z[16] = madd2(m, 15994884257273436159, z[17], C)
		C, z[17] = madd2(m, 11140475058215084841, z[18], C)
		C, z[18] = madd2(m, 15324160921537003790, z[19], C)
		C, z[19] = madd2(m, 9275171629996515882, z[20], C)
		C, z[20] = madd2(m, 6415429827500927434, z[21], C)
		C, z[21] = madd2(m, 9969743536277534484, z[22], C)
		C, z[22] = madd2(m, 13493967136577301588, z[23], C)
		C, z[23] = madd2(m, 11095387261239247891, z[24], C)
		C, z[24] = madd2(m, 7540722130141040015, z[25], C)
		z[25] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 4285846825131721527
		C := madd0(m, 1318738878612053369, z[0])
		C, z[0] = madd2(m, 16732179128150725226, z[1], C)
		C, z[1] = madd2(m, 15355618193144791007, z[2], C)
		C, z[2] = madd2(m, 4396344304518515882, z[3], C)
		C, z[3] = madd2(m, 11620695255275462168, z[4], C)
		C, z[4] = madd2(m, 5162480155730353270, z[5], C)
		C, z[5] = madd2(m, 11918365908634919040, z[6], C)
		C, z[6] = madd2(m, 18310788083607185061, z[7], C)
		C, z[7] = madd2(m, 1706818182961302545, z[8], C)
		C, z[8] = madd2(m, 7715318651855780330, z[9], C)
		C, z[9] = madd2(m, 4193845188432429317, z[10], C)
		C, z[10] = madd2(m, 1108113797489890163, z[11], C)
		C, z[11] = madd2(m, 16851474546529677959, z[12], C)
		C, z[12] = madd2(m, 14885581468941587647, z[13], C)
		C, z[13] = madd2(m, 4501432112780460688, z[14], C)
		C, z[14] = madd2(m, 781891996848210117, z[15], C)
		C, z[15] = madd2(m, 12250709359727562561, z[16], C)
		C, z[16] = madd2(m, 15994884257273436159, z[17], C)
		C, z[17] = madd2(m, 11140475058215084841, z[18], C)
		C, z[18] = madd2(m, 15324160921537003790, z[19], C)
		C, z[19] = madd2(m, 9275171629996515882, z[20], C)
		C, z[20] = madd2(m, 6415429827500927434, z[21], C)
		C, z[21] = madd2(m, 9969743536277534484, z[22], C)
		C, z[22] = madd2(m, 13493967136577301588, z[23], C)
		C, z[23] = madd2(m, 11095387261239247891, z[24], C)
		C, z[24] = madd2(m, 7540722130141040015, z[25], C)
		z[25] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 4285846825131721527
		C := madd0(m, 1318738878612053369, z[0])
		C, z[0] = madd2(m, 16732179128150725226, z[1], C)
		C, z[1] = madd2(m, 15355618193144791007, z[2], C)
		C, z[2] = madd2(m, 4396344304518515882, z[3], C)
		C, z[3] = madd2(m, 11620695255275462168, z[4], C)
		C, z[4] = madd2(m, 5162480155730353270, z[5], C)
		C, z[5] = madd2(m, 11918365908634919040, z[6], C)
		C, z[6] = madd2(m, 18310788083607185061, z[7], C)
		C, z[7] = madd2(m, 1706818182961302545, z[8], C)
		C, z[8] = madd2(m, 7715318651855780330, z[9], C)
		C, z[9] = madd2(m, 4193845188432429317, z[10], C)
		C, z[10] = madd2(m, 1108113797489890163, z[11], C)
		C, z[11] = madd2(m, 16851474546529677959, z[12], C)
		C, z[12] = madd2(m, 14885581468941587647, z[13], C)
		C, z[13] = madd2(m, 4501432112780460688, z[14], C)
		C, z[14] = madd2(m, 781891996848210117, z[15], C)
		C, z[15] = madd2(m, 12250709359727562561, z[16], C)
		C, z[16] = madd2(m, 15994884257273436159, z[17], C)
		C, z[17] = madd2(m, 11140475058215084841, z[18], C)
		C, z[18] = madd2(m, 15324160921537003790, z[19], C)
		C, z[19] = madd2(m, 9275171629996515882, z[20], C)
		C, z[20] = madd2(m, 6415429827500927434, z[21], C)
		C, z[21] = madd2(m, 9969743536277534484, z[22], C)
		C, z[22] = madd2(m, 13493967136577301588, z[23], C)
		C, z[23] = madd2(m, 11095387261239247891, z[24], C)
		C, z[24] = madd2(m, 7540722130141040015, z[25], C)
		z[25] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 4285846825131721527
		C := madd0(m, 1318738878612053369, z[0])
		C, z[0] = madd2(m, 16732179128150725226, z[1], C)
		C, z[1] = madd2(m, 15355618193144791007, z[2], C)
		C, z[2] = madd2(m, 4396344304518515882, z[3], C)
		C, z[3] = madd2(m, 11620695255275462168, z[4], C)
		C, z[4] = madd2(m, 5162480155730353270, z[5], C)
		C, z[5] = madd2(m, 11918365908634919040, z[6], C)
		C, z[6] = madd2(m, 18310788083607185061, z[7], C)
		C, z[7] = madd2(m, 1706818182961302545, z[8], C)
		C, z[8] = madd2(m, 7715318651855780330, z[9], C)
		C, z[9] = madd2(m, 4193845188432429317, z[10], C)
		C, z[10] = madd2(m, 1108113797489890163, z[11], C)
		C, z[11] = madd2(m, 16851474546529677959, z[12], C)
		C, z[12] = madd2(m, 14885581468941587647, z[13], C)
		C, z[13] = madd2(m, 4501432112780460688, z[14], C)
		C, z[14] = madd2(m, 781891996848210117, z[15], C)
		C, z[15] = madd2(m, 12250709359727562561, z[16], C)
		C, z[16] = madd2(m, 15994884257273436159, z[17], C)
		C, z[17] = madd2(m, 11140475058215084841, z[18], C)
		C, z[18] = madd2(m, 15324160921537003790, z[19], C)
		C, z[19] = madd2(m, 9275171629996515882, z[20], C)
		C, z[20] = madd2(m, 6415429827500927434, z[21], C)
		C, z[21] = madd2(m, 9969743536277534484, z[22], C)
		C, z[22] = madd2(m, 13493967136577301588, z[23], C)
		C, z[23] = madd2(m, 11095387261239247891, z[24], C)
		C, z[24] = madd2(m, 7540722130141040015, z[25], C)
		z[25] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 4285846825131721527
		C := madd0(m, 1318738878612053369, z[0])
		C, z[0] = madd2(m, 16732179128150725226, z[1], C)
		C, z[1] = madd2(m, 15355618193144791007, z[2], C)
		C, z[2] = madd2(m, 4396344304518515882, z[3], C)
		C, z[3] = madd2(m, 11620695255275462168, z[4], C)
		C, z[4] = madd2(m, 5162480155730353270, z[5], C)
		C, z[5] = madd2(m, 11918365908634919040, z[6], C)
		C, z[6] = madd2(m, 18310788083607185061, z[7], C)
		C, z[7] = madd2(m, 1706818182961302545, z[8], C)
		C, z[8] = madd2(m, 7715318651855780330, z[9], C)
		C, z[9] = madd2(m, 4193845188432429317, z[10], C)
		C, z[10] = madd2(m, 1108113797489890163, z[11], C)
		C, z[11] = madd2(m, 16851474546529677959, z[12], C)
		C, z[12] = madd2(m, 14885581468941587647, z[13], C)
		C, z[13] = madd2(m, 4501432112780460688, z[14], C)
		C, z[14] = madd2(m, 781891996848210117, z[15], C)
		C, z[15] = madd2(m, 12250709359727562561, z[16], C)
		C, z[16] = madd2(m, 15994884257273436159, z[17], C)
		C, z[17] = madd2(m, 11140475058215084841, z[18], C)
		C, z[18] = madd2(m, 15324160921537003790, z[19], C)
		C, z[19] = madd2(m, 9275171629996515882, z[20], C)
		C, z[20] = madd2(m, 6415429827500927434, z[21], C)
		C, z[21] = madd2(m, 9969743536277534484, z[22], C)
		C, z[22] = madd2(m, 13493967136577301588, z[23], C)
		C, z[23] = madd2(m, 11095387261239247891, z[24], C)
		C, z[24] = madd2(m, 7540722130141040015, z[25], C)
		z[25] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 4285846825131721527
		C := madd0(m, 1318738878612053369, z[0])
		C, z[0] = madd2(m, 16732179128150725226, z[1], C)
		C, z[1] = madd2(m, 15355618193144791007, z[2], C)
		C, z[2] = madd2(m, 4396344304518515882, z[3], C)
		C, z[3] = madd2(m, 11620695255275462168, z[4], C)
		C, z[4] = madd2(m, 5162480155730353270, z[5], C)
		C, z[5] = madd2(m, 11918365908634919040, z[6], C)
		C, z[6] = madd2(m, 18310788083607185061, z[7], C)
		C, z[7] = madd2(m, 1706818182961302545, z[8], C)
		C, z[8] = madd2(m, 7715318651855780330, z[9], C)
		C, z[9] = madd2(m, 4193845188432429317, z[10], C)
		C, z[10] = madd2(m, 1108113797489890163, z[11], C)
		C, z[11] = madd2(m, 16851474546529677959, z[12], C)
		C, z[12] = madd2(m, 14885581468941587647, z[13], C)
		C, z[13] = madd2(m, 4501432112780460688, z[14], C)
		C, z[14] = madd2(m, 781891996848210117, z[15], C)
		C, z[15] = madd2(m, 12250709359727562561, z[16], C)
		C, z[16] = madd2(m, 15994884257273436159, z[17], C)
		C, z[17] = madd2(m, 11140475058215084841, z[18], C)
		C, z[18] = madd2(m, 15324160921537003790, z[19], C)
		C, z[19] = madd2(m, 9275171629996515882, z[20], C)
		C, z[20] = madd2(m, 6415429827500927434, z[21], C)
		C, z[21] = madd2(m, 9969743536277534484, z[22], C)
		C, z[22] = madd2(m, 13493967136577301588, z[23], C)
		C, z[23] = madd2(m, 11095387261239247891, z[24], C)
		C, z[24] = madd2(m, 7540722130141040015, z[25], C)
		z[25] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 4285846825131721527
		C := madd0(m, 1318738878612053369, z[0])
		C, z[0] = madd2(m, 16732179128150725226, z[1], C)
		C, z[1] = madd2(m, 15355618193144791007, z[2], C)
		C, z[2] = madd2(m, 4396344304518515882, z[3], C)
		C, z[3] = madd2(m, 11620695255275462168, z[4], C)
		C, z[4] = madd2(m, 5162480155730353270, z[5], C)
		C, z[5] = madd2(m, 11918365908634919040, z[6], C)
		C, z[6] = madd2(m, 18310788083607185061, z[7], C)
		C, z[7] = madd2(m, 1706818182961302545, z[8], C)
		C, z[8] = madd2(m, 7715318651855780330, z[9], C)
		C, z[9] = madd2(m, 4193845188432429317, z[10], C)
		C, z[10] = madd2(m, 1108113797489890163, z[11], C)
		C, z[11] = madd2(m, 16851474546529677959, z[12], C)
		C, z[12] = madd2(m, 14885581468941587647, z[13], C)
		C, z[13] = madd2(m, 4501432112780460688, z[14], C)
		C, z[14] = madd2(m, 781891996848210117, z[15], C)
		C, z[15] = madd2(m, 12250709359727562561, z[16], C)
		C, z[16] = madd2(m, 15994884257273436159, z[17], C)
		C, z[17] = madd2(m, 11140475058215084841, z[18], C)
		C, z[18] = madd2(m, 15324160921537003790, z[19], C)
		C, z[19] = madd2(m, 9275171629996515882, z[20], C)
		C, z[20] = madd2(m, 6415429827500927434, z[21], C)
		C, z[21] = madd2(m, 9969743536277534484, z[22], C)
		C, z[22] = madd2(m, 13493967136577301588, z[23], C)
		C, z[23] = madd2(m, 11095387261239247891, z[24], C)
		C, z[24] = madd2(m, 7540722130141040015, z[25], C)
		z[25] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 4285846825131721527
		C := madd0(m, 1318738878612053369, z[0])
		C, z[0] = madd2(m, 16732179128150725226, z[1], C)
		C, z[1] = madd2(m, 15355618193144791007, z[2], C)
		C, z[2] = madd2(m, 4396344304518515882, z[3], C)
		C, z[3] = madd2(m, 11620695255275462168, z[4], C)
		C, z[4] = madd2(m, 5162480155730353270, z[5], C)
		C, z[5] = madd2(m, 11918365908634919040, z[6], C)
		C, z[6] = madd2(m, 18310788083607185061, z[7], C)
		C, z[7] = madd2(m, 1706818182961302545, z[8], C)
		C, z[8] = madd2(m, 7715318651855780330, z[9], C)
		C, z[9] = madd2(m, 4193845188432429317, z[10], C)
		C, z[10] = madd2(m, 1108113797489890163, z[11], C)
		C, z[11] = madd2(m, 16851474546529677959, z[12], C)
		C, z[12] = madd2(m, 14885581468941587647, z[13], C)
		C, z[13] = madd2(m, 4501432112780460688, z[14], C)
		C, z[14] = madd2(m, 781891996848210117, z[15], C)
		C, z[15] = madd2(m, 12250709359727562561, z[16], C)
		C, z[16] = madd2(m, 15994884257273436159, z[17], C)
		C, z[17] = madd2(m, 11140475058215084841, z[18], C)
		C, z[18] = madd2(m, 15324160921537003790, z[19], C)
		C, z[19] = madd2(m, 9275171629996515882, z[20], C)
		C, z[20] = madd2(m, 6415429827500927434, z[21], C)
		C, z[21] = madd2(m, 9969743536277534484, z[22], C)
		C, z[22] = madd2(m, 13493967136577301588, z[23], C)
		C, z[23] = madd2(m, 11095387261239247891, z[24], C)
		C, z[24] = madd2(m, 7540722130141040015, z[25], C)
		z[25] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 4285846825131721527
		C := madd0(m, 1318738878612053369, z[0])
		C, z[0] = madd2(m, 16732179128150725226, z[1], C)
		C, z[1] = madd2(m, 15355618193144791007, z[2], C)
		C, z[2] = madd2(m, 4396344304518515882, z[3], C)
		C, z[3] = madd2(m, 11620695255275462168, z[4], C)
		C, z[4] = madd2(m, 5162480155730353270, z[5], C)
		C, z[5] = madd2(m, 11918365908634919040, z[6], C)
		C, z[6] = madd2(m, 18310788083607185061, z[7], C)
		C, z[7] = madd2(m, 1706818182961302545, z[8], C)
		C, z[8] = madd2(m, 7715318651855780330, z[9], C)
		C, z[9] = madd2(m, 4193845188432429317, z[10], C)
		C, z[10] = madd2(m, 1108113797489890163, z[11], C)
		C, z[11] = madd2(m, 16851474546529677959, z[12], C)
		C, z[12] = madd2(m, 14885581468941587647, z[13], C)
		C, z[13] = madd2(m, 4501432112780460688, z[14], C)
		C, z[14] = madd2(m, 781891996848210117, z[15], C)
		C, z[15] = madd2(m, 12250709359727562561, z[16], C)
		C, z[16] = madd2(m, 15994884257273436159, z[17], C)
		C, z[17] = madd2(m, 11140475058215084841, z[18], C)
		C, z[18] = madd2(m, 15324160921537003790, z[19], C)
		C, z[19] = madd2(m, 9275171629996515882, z[20], C)
		C, z[20] = madd2(m, 6415429827500927434, z[21], C)
		C, z[21] = madd2(m, 9969743536277534484, z[22], C)
		C, z[22] = madd2(m, 13493967136577301588, z[23], C)
		C, z[23] = madd2(m, 11095387261239247891, z[24], C)
		C, z[24] = madd2(m, 7540722130141040015, z[25], C)
		z[25] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 4285846825131721527
		C := madd0(m, 1318738878612053369, z[0])
		C, z[0] = madd2(m, 16732179128150725226, z[1], C)
		C, z[1] = madd2(m, 15355618193144791007, z[2], C)
		C, z[2] = madd2(m, 4396344304518515882, z[3], C)
		C, z[3] = madd2(m, 11620695255275462168, z[4], C)
		C, z[4] = madd2(m, 5162480155730353270, z[5], C)
		C, z[5] = madd2(m, 11918365908634919040, z[6], C)
		C, z[6] = madd2(m, 18310788083607185061, z[7], C)
		C, z[7] = madd2(m, 1706818182961302545, z[8], C)
		C, z[8] = madd2(m, 7715318651855780330, z[9], C)
		C, z[9] = madd2(m, 4193845188432429317, z[10], C)
		C, z[10] = madd2(m, 1108113797489890163, z[11], C)
		C, z[11] = madd2(m, 16851474546529677959, z[12], C)
		C, z[12] = madd2(m, 14885581468941587647, z[13], C)
		C, z[13] = madd2(m, 4501432112780460688, z[14], C)
		C, z[14] = madd2(m, 781891996848210117, z[15], C)
		C, z[15] = madd2(m, 12250709359727562561, z[16], C)
		C, z[16] = madd2(m, 15994884257273436159, z[17], C)
		C, z[17] = madd2(m, 11140475058215084841, z[18], C)
		C, z[18] = madd2(m, 15324160921537003790, z[19], C)
		C, z[19] = madd2(m, 9275171629996515882, z[20], C)
		C, z[20] = madd2(m, 6415429827500927434, z[21], C)
		C, z[21] = madd2(m, 9969743536277534484, z[22], C)
		C, z[22] = madd2(m, 13493967136577301588, z[23], C)
		C, z[23] = madd2(m, 11095387261239247891, z[24], C)
		C, z[24] = madd2(m, 7540722130141040015, z[25], C)
		z[25] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 4285846825131721527
		C := madd0(m, 1318738878612053369, z[0])
		C, z[0] = madd2(m, 16732179128150725226, z[1], C)
		C, z[1] = madd2(m, 15355618193144791007, z[2], C)
		C, z[2] = madd2(m, 4396344304518515882, z[3], C)
		C, z[3] = madd2(m, 11620695255275462168, z[4], C)
		C, z[4] = madd2(m, 5162480155730353270, z[5], C)
		C, z[5] = madd2(m, 11918365908634919040, z[6], C)
		C, z[6] = madd2(m, 18310788083607185061, z[7], C)
		C, z[7] = madd2(m, 1706818182961302545, z[8], C)
		C, z[8] = madd2(m, 7715318651855780330, z[9], C)
		C, z[9] = madd2(m, 4193845188432429317, z[10], C)
		C, z[10] = madd2(m, 1108113797489890163, z[11], C)
		C, z[11] = madd2(m, 16851474546529677959, z[12], C)
		C, z[12] = madd2(m, 14885581468941587647, z[13], C)
		C, z[13] = madd2(m, 4501432112780460688, z[14], C)
		C, z[14] = madd2(m, 781891996848210117, z[15], C)
		C, z[15] = madd2(m, 12250709359727562561, z[16], C)
		C, z[16] = madd2(m, 15994884257273436159, z[17], C)
		C, z[17] = madd2(m, 11140475058215084841, z[18], C)
		C, z[18] = madd2(m, 15324160921537003790, z[19], C)
		C, z[19] = madd2(m, 9275171629996515882, z[20], C)
		C, z[20] = madd2(m, 6415429827500927434, z[21], C)
		C, z[21] = madd2(m, 9969743536277534484, z[22], C)
		C, z[22] = madd2(m, 13493967136577301588, z[23], C)
		C, z[23] = madd2(m, 11095387261239247891, z[24], C)
		C, z[24] = madd2(m, 7540722130141040015, z[25], C)
		z[25] = C
	}

	// if z > q --> z -= q
	// note: this is NOT constant time
	if !(z[25] < 7540722130141040015 || (z[25] == 7540722130141040015 && (z[24] < 11095387261239247891 || (z[24] == 11095387261239247891 && (z[23] < 13493967136577301588 || (z[23] == 13493967136577301588 && (z[22] < 9969743536277534484 || (z[22] == 9969743536277534484 && (z[21] < 6415429827500927434 || (z[21] == 6415429827500927434 && (z[20] < 9275171629996515882 || (z[20] == 9275171629996515882 && (z[19] < 15324160921537003790 || (z[19] == 15324160921537003790 && (z[18] < 11140475058215084841 || (z[18] == 11140475058215084841 && (z[17] < 15994884257273436159 || (z[17] == 15994884257273436159 && (z[16] < 12250709359727562561 || (z[16] == 12250709359727562561 && (z[15] < 781891996848210117 || (z[15] == 781891996848210117 && (z[14] < 4501432112780460688 || (z[14] == 4501432112780460688 && (z[13] < 14885581468941587647 || (z[13] == 14885581468941587647 && (z[12] < 16851474546529677959 || (z[12] == 16851474546529677959 && (z[11] < 1108113797489890163 || (z[11] == 1108113797489890163 && (z[10] < 4193845188432429317 || (z[10] == 4193845188432429317 && (z[9] < 7715318651855780330 || (z[9] == 7715318651855780330 && (z[8] < 1706818182961302545 || (z[8] == 1706818182961302545 && (z[7] < 18310788083607185061 || (z[7] == 18310788083607185061 && (z[6] < 11918365908634919040 || (z[6] == 11918365908634919040 && (z[5] < 5162480155730353270 || (z[5] == 5162480155730353270 && (z[4] < 11620695255275462168 || (z[4] == 11620695255275462168 && (z[3] < 4396344304518515882 || (z[3] == 4396344304518515882 && (z[2] < 15355618193144791007 || (z[2] == 15355618193144791007 && (z[1] < 16732179128150725226 || (z[1] == 16732179128150725226 && (z[0] < 1318738878612053369))))))))))))))))))))))))))))))))))))))))))))))))))) {
		var b uint64
		z[0], b = bits.Sub64(z[0], 1318738878612053369, 0)
		z[1], b = bits.Sub64(z[1], 16732179128150725226, b)
		z[2], b = bits.Sub64(z[2], 15355618193144791007, b)
		z[3], b = bits.Sub64(z[3], 4396344304518515882, b)
		z[4], b = bits.Sub64(z[4], 11620695255275462168, b)
		z[5], b = bits.Sub64(z[5], 5162480155730353270, b)
		z[6], b = bits.Sub64(z[6], 11918365908634919040, b)
		z[7], b = bits.Sub64(z[7], 18310788083607185061, b)
		z[8], b = bits.Sub64(z[8], 1706818182961302545, b)
		z[9], b = bits.Sub64(z[9], 7715318651855780330, b)
		z[10], b = bits.Sub64(z[10], 4193845188432429317, b)
		z[11], b = bits.Sub64(z[11], 1108113797489890163, b)
		z[12], b = bits.Sub64(z[12], 16851474546529677959, b)
		z[13], b = bits.Sub64(z[13], 14885581468941587647, b)
		z[14], b = bits.Sub64(z[14], 4501432112780460688, b)
		z[15], b = bits.Sub64(z[15], 781891996848210117, b)
		z[16], b = bits.Sub64(z[16], 12250709359727562561, b)
		z[17], b = bits.Sub64(z[17], 15994884257273436159, b)
		z[18], b = bits.Sub64(z[18], 11140475058215084841, b)
		z[19], b = bits.Sub64(z[19], 15324160921537003790, b)
		z[20], b = bits.Sub64(z[20], 9275171629996515882, b)
		z[21], b = bits.Sub64(z[21], 6415429827500927434, b)
		z[22], b = bits.Sub64(z[22], 9969743536277534484, b)
		z[23], b = bits.Sub64(z[23], 13493967136577301588, b)
		z[24], b = bits.Sub64(z[24], 11095387261239247891, b)
		z[25], _ = bits.Sub64(z[25], 7540722130141040015, b)
	}
	return z
}

// ToMont converts z to Montgomery form
// sets and returns z = z * r^2
func (z *Element26) ToMont() *Element26 {
	var rSquare = Element26{
		10126656432751333712,
		79118957680632058,
		14961667492349065107,
		6935458042889952468,
		3926393473921298697,
		4516548014855206197,
		5646204798992821639,
		10071099383914686083,
		12249618352303169074,
		8615922348598521591,
		8854100013316742984,
		14646900574000930676,
		6225260997067047688,
		6659816623720382007,
		2624701734186634227,
		4831968290006513136,
		2511756463482048463,
		6162095010217818578,
		17590492581290441412,
		5670896797940371386,
		10857101817022457564,
		12214224979185403864,
		14946077888343898027,
		13533987929023639287,
		6188932975421304854,
		958322734916354783,
	}
	return z.MulAssign(&rSquare)
}

// ToRegular returns z in regular form (doesn't mutate z)
func (z Element26) ToRegular() Element26 {
	return *z.FromMont()
}

// String returns the string form of an Element26 in Montgomery form
func (z *Element26) String() string {
	var _z big.Int
	return z.ToBigIntRegular(&_z).String()
}

// ToBigInt returns z as a big.Int in Montgomery form
func (z *Element26) ToBigInt(res *big.Int) *big.Int {
	bits := (*[26]big.Word)(unsafe.Pointer(z))
	return res.SetBits(bits[:])
}

// ToBigIntRegular returns z as a big.Int in regular form
func (z Element26) ToBigIntRegular(res *big.Int) *big.Int {
	z.FromMont()
	bits := (*[26]big.Word)(unsafe.Pointer(&z))
	return res.SetBits(bits[:])
}

// SetBigInt sets z to v (regular form) and returns z in Montgomery form
func (z *Element26) SetBigInt(v *big.Int) *Element26 {
	z.SetZero()

	zero := big.NewInt(0)
	q := element26ModulusBigInt()

	// copy input
	vv := new(big.Int).Set(v)

	// while v < 0, v+=q
	for vv.Cmp(zero) == -1 {
		vv.Add(vv, q)
	}
	// while v > q, v-=q
	for vv.Cmp(q) == 1 {
		vv.Sub(vv, q)
	}
	// if v == q, return 0
	if vv.Cmp(q) == 0 {
		return z
	}
	// v should
	vBits := vv.Bits()
	for i := 0; i < len(vBits); i++ {
		z[i] = uint64(vBits[i])
	}
	return z.ToMont()
}

// SetString creates a big.Int with s (in base 10) and calls SetBigInt on z
func (z *Element26) SetString(s string) *Element26 {
	x, ok := new(big.Int).SetString(s, 10)
	if !ok {
		panic("Element26.SetString failed -> can't parse number in base10 into a big.Int")
	}
	return z.SetBigInt(x)
}

// Mul z = x * y mod q
func (z *Element26) Mul(x, y *Element26) *Element26 {

	var t [27]uint64
	var D uint64
	var m, C uint64
	// -----------------------------------
	// First loop

	C, t[0] = bits.Mul64(y[0], x[0])
	C, t[1] = madd1(y[0], x[1], C)
	C, t[2] = madd1(y[0], x[2], C)
	C, t[3] = madd1(y[0], x[3], C)
	C, t[4] = madd1(y[0], x[4], C)
	C, t[5] = madd1(y[0], x[5], C)
	C, t[6] = madd1(y[0], x[6], C)
	C, t[7] = madd1(y[0], x[7], C)
	C, t[8] = madd1(y[0], x[8], C)
	C, t[9] = madd1(y[0], x[9], C)
	C, t[10] = madd1(y[0], x[10], C)
	C, t[11] = madd1(y[0], x[11], C)
	C, t[12] = madd1(y[0], x[12], C)
	C, t[13] = madd1(y[0], x[13], C)
	C, t[14] = madd1(y[0], x[14], C)
	C, t[15] = madd1(y[0], x[15], C)
	C, t[16] = madd1(y[0], x[16], C)
	C, t[17] = madd1(y[0], x[17], C)
	C, t[18] = madd1(y[0], x[18], C)
	C, t[19] = madd1(y[0], x[19], C)
	C, t[20] = madd1(y[0], x[20], C)
	C, t[21] = madd1(y[0], x[21], C)
	C, t[22] = madd1(y[0], x[22], C)
	C, t[23] = madd1(y[0], x[23], C)
	C, t[24] = madd1(y[0], x[24], C)
	C, t[25] = madd1(y[0], x[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 4285846825131721527

	// -----------------------------------
	// Second loop
	C = madd0(m, 1318738878612053369, t[0])

	C, t[0] = madd2(m, 16732179128150725226, t[1], C)

	C, t[1] = madd2(m, 15355618193144791007, t[2], C)

	C, t[2] = madd2(m, 4396344304518515882, t[3], C)

	C, t[3] = madd2(m, 11620695255275462168, t[4], C)

	C, t[4] = madd2(m, 5162480155730353270, t[5], C)

	C, t[5] = madd2(m, 11918365908634919040, t[6], C)

	C, t[6] = madd2(m, 18310788083607185061, t[7], C)

	C, t[7] = madd2(m, 1706818182961302545, t[8], C)

	C, t[8] = madd2(m, 7715318651855780330, t[9], C)

	C, t[9] = madd2(m, 4193845188432429317, t[10], C)

	C, t[10] = madd2(m, 1108113797489890163, t[11], C)

	C, t[11] = madd2(m, 16851474546529677959, t[12], C)

	C, t[12] = madd2(m, 14885581468941587647, t[13], C)

	C, t[13] = madd2(m, 4501432112780460688, t[14], C)

	C, t[14] = madd2(m, 781891996848210117, t[15], C)

	C, t[15] = madd2(m, 12250709359727562561, t[16], C)

	C, t[16] = madd2(m, 15994884257273436159, t[17], C)

	C, t[17] = madd2(m, 11140475058215084841, t[18], C)

	C, t[18] = madd2(m, 15324160921537003790, t[19], C)

	C, t[19] = madd2(m, 9275171629996515882, t[20], C)

	C, t[20] = madd2(m, 6415429827500927434, t[21], C)

	C, t[21] = madd2(m, 9969743536277534484, t[22], C)

	C, t[22] = madd2(m, 13493967136577301588, t[23], C)

	C, t[23] = madd2(m, 11095387261239247891, t[24], C)

	C, t[24] = madd3(m, 7540722130141040015, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[1], x[0], t[0])
	C, t[1] = madd2(y[1], x[1], t[1], C)
	C, t[2] = madd2(y[1], x[2], t[2], C)
	C, t[3] = madd2(y[1], x[3], t[3], C)
	C, t[4] = madd2(y[1], x[4], t[4], C)
	C, t[5] = madd2(y[1], x[5], t[5], C)
	C, t[6] = madd2(y[1], x[6], t[6], C)
	C, t[7] = madd2(y[1], x[7], t[7], C)
	C, t[8] = madd2(y[1], x[8], t[8], C)
	C, t[9] = madd2(y[1], x[9], t[9], C)
	C, t[10] = madd2(y[1], x[10], t[10], C)
	C, t[11] = madd2(y[1], x[11], t[11], C)
	C, t[12] = madd2(y[1], x[12], t[12], C)
	C, t[13] = madd2(y[1], x[13], t[13], C)
	C, t[14] = madd2(y[1], x[14], t[14], C)
	C, t[15] = madd2(y[1], x[15], t[15], C)
	C, t[16] = madd2(y[1], x[16], t[16], C)
	C, t[17] = madd2(y[1], x[17], t[17], C)
	C, t[18] = madd2(y[1], x[18], t[18], C)
	C, t[19] = madd2(y[1], x[19], t[19], C)
	C, t[20] = madd2(y[1], x[20], t[20], C)
	C, t[21] = madd2(y[1], x[21], t[21], C)
	C, t[22] = madd2(y[1], x[22], t[22], C)
	C, t[23] = madd2(y[1], x[23], t[23], C)
	C, t[24] = madd2(y[1], x[24], t[24], C)
	C, t[25] = madd2(y[1], x[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 4285846825131721527

	// -----------------------------------
	// Second loop
	C = madd0(m, 1318738878612053369, t[0])

	C, t[0] = madd2(m, 16732179128150725226, t[1], C)

	C, t[1] = madd2(m, 15355618193144791007, t[2], C)

	C, t[2] = madd2(m, 4396344304518515882, t[3], C)

	C, t[3] = madd2(m, 11620695255275462168, t[4], C)

	C, t[4] = madd2(m, 5162480155730353270, t[5], C)

	C, t[5] = madd2(m, 11918365908634919040, t[6], C)

	C, t[6] = madd2(m, 18310788083607185061, t[7], C)

	C, t[7] = madd2(m, 1706818182961302545, t[8], C)

	C, t[8] = madd2(m, 7715318651855780330, t[9], C)

	C, t[9] = madd2(m, 4193845188432429317, t[10], C)

	C, t[10] = madd2(m, 1108113797489890163, t[11], C)

	C, t[11] = madd2(m, 16851474546529677959, t[12], C)

	C, t[12] = madd2(m, 14885581468941587647, t[13], C)

	C, t[13] = madd2(m, 4501432112780460688, t[14], C)

	C, t[14] = madd2(m, 781891996848210117, t[15], C)

	C, t[15] = madd2(m, 12250709359727562561, t[16], C)

	C, t[16] = madd2(m, 15994884257273436159, t[17], C)

	C, t[17] = madd2(m, 11140475058215084841, t[18], C)

	C, t[18] = madd2(m, 15324160921537003790, t[19], C)

	C, t[19] = madd2(m, 9275171629996515882, t[20], C)

	C, t[20] = madd2(m, 6415429827500927434, t[21], C)

	C, t[21] = madd2(m, 9969743536277534484, t[22], C)

	C, t[22] = madd2(m, 13493967136577301588, t[23], C)

	C, t[23] = madd2(m, 11095387261239247891, t[24], C)

	C, t[24] = madd3(m, 7540722130141040015, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[2], x[0], t[0])
	C, t[1] = madd2(y[2], x[1], t[1], C)
	C, t[2] = madd2(y[2], x[2], t[2], C)
	C, t[3] = madd2(y[2], x[3], t[3], C)
	C, t[4] = madd2(y[2], x[4], t[4], C)
	C, t[5] = madd2(y[2], x[5], t[5], C)
	C, t[6] = madd2(y[2], x[6], t[6], C)
	C, t[7] = madd2(y[2], x[7], t[7], C)
	C, t[8] = madd2(y[2], x[8], t[8], C)
	C, t[9] = madd2(y[2], x[9], t[9], C)
	C, t[10] = madd2(y[2], x[10], t[10], C)
	C, t[11] = madd2(y[2], x[11], t[11], C)
	C, t[12] = madd2(y[2], x[12], t[12], C)
	C, t[13] = madd2(y[2], x[13], t[13], C)
	C, t[14] = madd2(y[2], x[14], t[14], C)
	C, t[15] = madd2(y[2], x[15], t[15], C)
	C, t[16] = madd2(y[2], x[16], t[16], C)
	C, t[17] = madd2(y[2], x[17], t[17], C)
	C, t[18] = madd2(y[2], x[18], t[18], C)
	C, t[19] = madd2(y[2], x[19], t[19], C)
	C, t[20] = madd2(y[2], x[20], t[20], C)
	C, t[21] = madd2(y[2], x[21], t[21], C)
	C, t[22] = madd2(y[2], x[22], t[22], C)
	C, t[23] = madd2(y[2], x[23], t[23], C)
	C, t[24] = madd2(y[2], x[24], t[24], C)
	C, t[25] = madd2(y[2], x[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 4285846825131721527

	// -----------------------------------
	// Second loop
	C = madd0(m, 1318738878612053369, t[0])

	C, t[0] = madd2(m, 16732179128150725226, t[1], C)

	C, t[1] = madd2(m, 15355618193144791007, t[2], C)

	C, t[2] = madd2(m, 4396344304518515882, t[3], C)

	C, t[3] = madd2(m, 11620695255275462168, t[4], C)

	C, t[4] = madd2(m, 5162480155730353270, t[5], C)

	C, t[5] = madd2(m, 11918365908634919040, t[6], C)

	C, t[6] = madd2(m, 18310788083607185061, t[7], C)

	C, t[7] = madd2(m, 1706818182961302545, t[8], C)

	C, t[8] = madd2(m, 7715318651855780330, t[9], C)

	C, t[9] = madd2(m, 4193845188432429317, t[10], C)

	C, t[10] = madd2(m, 1108113797489890163, t[11], C)

	C, t[11] = madd2(m, 16851474546529677959, t[12], C)

	C, t[12] = madd2(m, 14885581468941587647, t[13], C)

	C, t[13] = madd2(m, 4501432112780460688, t[14], C)

	C, t[14] = madd2(m, 781891996848210117, t[15], C)

	C, t[15] = madd2(m, 12250709359727562561, t[16], C)

	C, t[16] = madd2(m, 15994884257273436159, t[17], C)

	C, t[17] = madd2(m, 11140475058215084841, t[18], C)

	C, t[18] = madd2(m, 15324160921537003790, t[19], C)

	C, t[19] = madd2(m, 9275171629996515882, t[20], C)

	C, t[20] = madd2(m, 6415429827500927434, t[21], C)

	C, t[21] = madd2(m, 9969743536277534484, t[22], C)

	C, t[22] = madd2(m, 13493967136577301588, t[23], C)

	C, t[23] = madd2(m, 11095387261239247891, t[24], C)

	C, t[24] = madd3(m, 7540722130141040015, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[3], x[0], t[0])
	C, t[1] = madd2(y[3], x[1], t[1], C)
	C, t[2] = madd2(y[3], x[2], t[2], C)
	C, t[3] = madd2(y[3], x[3], t[3], C)
	C, t[4] = madd2(y[3], x[4], t[4], C)
	C, t[5] = madd2(y[3], x[5], t[5], C)
	C, t[6] = madd2(y[3], x[6], t[6], C)
	C, t[7] = madd2(y[3], x[7], t[7], C)
	C, t[8] = madd2(y[3], x[8], t[8], C)
	C, t[9] = madd2(y[3], x[9], t[9], C)
	C, t[10] = madd2(y[3], x[10], t[10], C)
	C, t[11] = madd2(y[3], x[11], t[11], C)
	C, t[12] = madd2(y[3], x[12], t[12], C)
	C, t[13] = madd2(y[3], x[13], t[13], C)
	C, t[14] = madd2(y[3], x[14], t[14], C)
	C, t[15] = madd2(y[3], x[15], t[15], C)
	C, t[16] = madd2(y[3], x[16], t[16], C)
	C, t[17] = madd2(y[3], x[17], t[17], C)
	C, t[18] = madd2(y[3], x[18], t[18], C)
	C, t[19] = madd2(y[3], x[19], t[19], C)
	C, t[20] = madd2(y[3], x[20], t[20], C)
	C, t[21] = madd2(y[3], x[21], t[21], C)
	C, t[22] = madd2(y[3], x[22], t[22], C)
	C, t[23] = madd2(y[3], x[23], t[23], C)
	C, t[24] = madd2(y[3], x[24], t[24], C)
	C, t[25] = madd2(y[3], x[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 4285846825131721527

	// -----------------------------------
	// Second loop
	C = madd0(m, 1318738878612053369, t[0])

	C, t[0] = madd2(m, 16732179128150725226, t[1], C)

	C, t[1] = madd2(m, 15355618193144791007, t[2], C)

	C, t[2] = madd2(m, 4396344304518515882, t[3], C)

	C, t[3] = madd2(m, 11620695255275462168, t[4], C)

	C, t[4] = madd2(m, 5162480155730353270, t[5], C)

	C, t[5] = madd2(m, 11918365908634919040, t[6], C)

	C, t[6] = madd2(m, 18310788083607185061, t[7], C)

	C, t[7] = madd2(m, 1706818182961302545, t[8], C)

	C, t[8] = madd2(m, 7715318651855780330, t[9], C)

	C, t[9] = madd2(m, 4193845188432429317, t[10], C)

	C, t[10] = madd2(m, 1108113797489890163, t[11], C)

	C, t[11] = madd2(m, 16851474546529677959, t[12], C)

	C, t[12] = madd2(m, 14885581468941587647, t[13], C)

	C, t[13] = madd2(m, 4501432112780460688, t[14], C)

	C, t[14] = madd2(m, 781891996848210117, t[15], C)

	C, t[15] = madd2(m, 12250709359727562561, t[16], C)

	C, t[16] = madd2(m, 15994884257273436159, t[17], C)

	C, t[17] = madd2(m, 11140475058215084841, t[18], C)

	C, t[18] = madd2(m, 15324160921537003790, t[19], C)

	C, t[19] = madd2(m, 9275171629996515882, t[20], C)

	C, t[20] = madd2(m, 6415429827500927434, t[21], C)

	C, t[21] = madd2(m, 9969743536277534484, t[22], C)

	C, t[22] = madd2(m, 13493967136577301588, t[23], C)

	C, t[23] = madd2(m, 11095387261239247891, t[24], C)

	C, t[24] = madd3(m, 7540722130141040015, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[4], x[0], t[0])
	C, t[1] = madd2(y[4], x[1], t[1], C)
	C, t[2] = madd2(y[4], x[2], t[2], C)
	C, t[3] = madd2(y[4], x[3], t[3], C)
	C, t[4] = madd2(y[4], x[4], t[4], C)
	C, t[5] = madd2(y[4], x[5], t[5], C)
	C, t[6] = madd2(y[4], x[6], t[6], C)
	C, t[7] = madd2(y[4], x[7], t[7], C)
	C, t[8] = madd2(y[4], x[8], t[8], C)
	C, t[9] = madd2(y[4], x[9], t[9], C)
	C, t[10] = madd2(y[4], x[10], t[10], C)
	C, t[11] = madd2(y[4], x[11], t[11], C)
	C, t[12] = madd2(y[4], x[12], t[12], C)
	C, t[13] = madd2(y[4], x[13], t[13], C)
	C, t[14] = madd2(y[4], x[14], t[14], C)
	C, t[15] = madd2(y[4], x[15], t[15], C)
	C, t[16] = madd2(y[4], x[16], t[16], C)
	C, t[17] = madd2(y[4], x[17], t[17], C)
	C, t[18] = madd2(y[4], x[18], t[18], C)
	C, t[19] = madd2(y[4], x[19], t[19], C)
	C, t[20] = madd2(y[4], x[20], t[20], C)
	C, t[21] = madd2(y[4], x[21], t[21], C)
	C, t[22] = madd2(y[4], x[22], t[22], C)
	C, t[23] = madd2(y[4], x[23], t[23], C)
	C, t[24] = madd2(y[4], x[24], t[24], C)
	C, t[25] = madd2(y[4], x[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 4285846825131721527

	// -----------------------------------
	// Second loop
	C = madd0(m, 1318738878612053369, t[0])

	C, t[0] = madd2(m, 16732179128150725226, t[1], C)

	C, t[1] = madd2(m, 15355618193144791007, t[2], C)

	C, t[2] = madd2(m, 4396344304518515882, t[3], C)

	C, t[3] = madd2(m, 11620695255275462168, t[4], C)

	C, t[4] = madd2(m, 5162480155730353270, t[5], C)

	C, t[5] = madd2(m, 11918365908634919040, t[6], C)

	C, t[6] = madd2(m, 18310788083607185061, t[7], C)

	C, t[7] = madd2(m, 1706818182961302545, t[8], C)

	C, t[8] = madd2(m, 7715318651855780330, t[9], C)

	C, t[9] = madd2(m, 4193845188432429317, t[10], C)

	C, t[10] = madd2(m, 1108113797489890163, t[11], C)

	C, t[11] = madd2(m, 16851474546529677959, t[12], C)

	C, t[12] = madd2(m, 14885581468941587647, t[13], C)

	C, t[13] = madd2(m, 4501432112780460688, t[14], C)

	C, t[14] = madd2(m, 781891996848210117, t[15], C)

	C, t[15] = madd2(m, 12250709359727562561, t[16], C)

	C, t[16] = madd2(m, 15994884257273436159, t[17], C)

	C, t[17] = madd2(m, 11140475058215084841, t[18], C)

	C, t[18] = madd2(m, 15324160921537003790, t[19], C)

	C, t[19] = madd2(m, 9275171629996515882, t[20], C)

	C, t[20] = madd2(m, 6415429827500927434, t[21], C)

	C, t[21] = madd2(m, 9969743536277534484, t[22], C)

	C, t[22] = madd2(m, 13493967136577301588, t[23], C)

	C, t[23] = madd2(m, 11095387261239247891, t[24], C)

	C, t[24] = madd3(m, 7540722130141040015, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[5], x[0], t[0])
	C, t[1] = madd2(y[5], x[1], t[1], C)
	C, t[2] = madd2(y[5], x[2], t[2], C)
	C, t[3] = madd2(y[5], x[3], t[3], C)
	C, t[4] = madd2(y[5], x[4], t[4], C)
	C, t[5] = madd2(y[5], x[5], t[5], C)
	C, t[6] = madd2(y[5], x[6], t[6], C)
	C, t[7] = madd2(y[5], x[7], t[7], C)
	C, t[8] = madd2(y[5], x[8], t[8], C)
	C, t[9] = madd2(y[5], x[9], t[9], C)
	C, t[10] = madd2(y[5], x[10], t[10], C)
	C, t[11] = madd2(y[5], x[11], t[11], C)
	C, t[12] = madd2(y[5], x[12], t[12], C)
	C, t[13] = madd2(y[5], x[13], t[13], C)
	C, t[14] = madd2(y[5], x[14], t[14], C)
	C, t[15] = madd2(y[5], x[15], t[15], C)
	C, t[16] = madd2(y[5], x[16], t[16], C)
	C, t[17] = madd2(y[5], x[17], t[17], C)
	C, t[18] = madd2(y[5], x[18], t[18], C)
	C, t[19] = madd2(y[5], x[19], t[19], C)
	C, t[20] = madd2(y[5], x[20], t[20], C)
	C, t[21] = madd2(y[5], x[21], t[21], C)
	C, t[22] = madd2(y[5], x[22], t[22], C)
	C, t[23] = madd2(y[5], x[23], t[23], C)
	C, t[24] = madd2(y[5], x[24], t[24], C)
	C, t[25] = madd2(y[5], x[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 4285846825131721527

	// -----------------------------------
	// Second loop
	C = madd0(m, 1318738878612053369, t[0])

	C, t[0] = madd2(m, 16732179128150725226, t[1], C)

	C, t[1] = madd2(m, 15355618193144791007, t[2], C)

	C, t[2] = madd2(m, 4396344304518515882, t[3], C)

	C, t[3] = madd2(m, 11620695255275462168, t[4], C)

	C, t[4] = madd2(m, 5162480155730353270, t[5], C)

	C, t[5] = madd2(m, 11918365908634919040, t[6], C)

	C, t[6] = madd2(m, 18310788083607185061, t[7], C)

	C, t[7] = madd2(m, 1706818182961302545, t[8], C)

	C, t[8] = madd2(m, 7715318651855780330, t[9], C)

	C, t[9] = madd2(m, 4193845188432429317, t[10], C)

	C, t[10] = madd2(m, 1108113797489890163, t[11], C)

	C, t[11] = madd2(m, 16851474546529677959, t[12], C)

	C, t[12] = madd2(m, 14885581468941587647, t[13], C)

	C, t[13] = madd2(m, 4501432112780460688, t[14], C)

	C, t[14] = madd2(m, 781891996848210117, t[15], C)

	C, t[15] = madd2(m, 12250709359727562561, t[16], C)

	C, t[16] = madd2(m, 15994884257273436159, t[17], C)

	C, t[17] = madd2(m, 11140475058215084841, t[18], C)

	C, t[18] = madd2(m, 15324160921537003790, t[19], C)

	C, t[19] = madd2(m, 9275171629996515882, t[20], C)

	C, t[20] = madd2(m, 6415429827500927434, t[21], C)

	C, t[21] = madd2(m, 9969743536277534484, t[22], C)

	C, t[22] = madd2(m, 13493967136577301588, t[23], C)

	C, t[23] = madd2(m, 11095387261239247891, t[24], C)

	C, t[24] = madd3(m, 7540722130141040015, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[6], x[0], t[0])
	C, t[1] = madd2(y[6], x[1], t[1], C)
	C, t[2] = madd2(y[6], x[2], t[2], C)
	C, t[3] = madd2(y[6], x[3], t[3], C)
	C, t[4] = madd2(y[6], x[4], t[4], C)
	C, t[5] = madd2(y[6], x[5], t[5], C)
	C, t[6] = madd2(y[6], x[6], t[6], C)
	C, t[7] = madd2(y[6], x[7], t[7], C)
	C, t[8] = madd2(y[6], x[8], t[8], C)
	C, t[9] = madd2(y[6], x[9], t[9], C)
	C, t[10] = madd2(y[6], x[10], t[10], C)
	C, t[11] = madd2(y[6], x[11], t[11], C)
	C, t[12] = madd2(y[6], x[12], t[12], C)
	C, t[13] = madd2(y[6], x[13], t[13], C)
	C, t[14] = madd2(y[6], x[14], t[14], C)
	C, t[15] = madd2(y[6], x[15], t[15], C)
	C, t[16] = madd2(y[6], x[16], t[16], C)
	C, t[17] = madd2(y[6], x[17], t[17], C)
	C, t[18] = madd2(y[6], x[18], t[18], C)
	C, t[19] = madd2(y[6], x[19], t[19], C)
	C, t[20] = madd2(y[6], x[20], t[20], C)
	C, t[21] = madd2(y[6], x[21], t[21], C)
	C, t[22] = madd2(y[6], x[22], t[22], C)
	C, t[23] = madd2(y[6], x[23], t[23], C)
	C, t[24] = madd2(y[6], x[24], t[24], C)
	C, t[25] = madd2(y[6], x[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 4285846825131721527

	// -----------------------------------
	// Second loop
	C = madd0(m, 1318738878612053369, t[0])

	C, t[0] = madd2(m, 16732179128150725226, t[1], C)

	C, t[1] = madd2(m, 15355618193144791007, t[2], C)

	C, t[2] = madd2(m, 4396344304518515882, t[3], C)

	C, t[3] = madd2(m, 11620695255275462168, t[4], C)

	C, t[4] = madd2(m, 5162480155730353270, t[5], C)

	C, t[5] = madd2(m, 11918365908634919040, t[6], C)

	C, t[6] = madd2(m, 18310788083607185061, t[7], C)

	C, t[7] = madd2(m, 1706818182961302545, t[8], C)

	C, t[8] = madd2(m, 7715318651855780330, t[9], C)

	C, t[9] = madd2(m, 4193845188432429317, t[10], C)

	C, t[10] = madd2(m, 1108113797489890163, t[11], C)

	C, t[11] = madd2(m, 16851474546529677959, t[12], C)

	C, t[12] = madd2(m, 14885581468941587647, t[13], C)

	C, t[13] = madd2(m, 4501432112780460688, t[14], C)

	C, t[14] = madd2(m, 781891996848210117, t[15], C)

	C, t[15] = madd2(m, 12250709359727562561, t[16], C)

	C, t[16] = madd2(m, 15994884257273436159, t[17], C)

	C, t[17] = madd2(m, 11140475058215084841, t[18], C)

	C, t[18] = madd2(m, 15324160921537003790, t[19], C)

	C, t[19] = madd2(m, 9275171629996515882, t[20], C)

	C, t[20] = madd2(m, 6415429827500927434, t[21], C)

	C, t[21] = madd2(m, 9969743536277534484, t[22], C)

	C, t[22] = madd2(m, 13493967136577301588, t[23], C)

	C, t[23] = madd2(m, 11095387261239247891, t[24], C)

	C, t[24] = madd3(m, 7540722130141040015, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[7], x[0], t[0])
	C, t[1] = madd2(y[7], x[1], t[1], C)
	C, t[2] = madd2(y[7], x[2], t[2], C)
	C, t[3] = madd2(y[7], x[3], t[3], C)
	C, t[4] = madd2(y[7], x[4], t[4], C)
	C, t[5] = madd2(y[7], x[5], t[5], C)
	C, t[6] = madd2(y[7], x[6], t[6], C)
	C, t[7] = madd2(y[7], x[7], t[7], C)
	C, t[8] = madd2(y[7], x[8], t[8], C)
	C, t[9] = madd2(y[7], x[9], t[9], C)
	C, t[10] = madd2(y[7], x[10], t[10], C)
	C, t[11] = madd2(y[7], x[11], t[11], C)
	C, t[12] = madd2(y[7], x[12], t[12], C)
	C, t[13] = madd2(y[7], x[13], t[13], C)
	C, t[14] = madd2(y[7], x[14], t[14], C)
	C, t[15] = madd2(y[7], x[15], t[15], C)
	C, t[16] = madd2(y[7], x[16], t[16], C)
	C, t[17] = madd2(y[7], x[17], t[17], C)
	C, t[18] = madd2(y[7], x[18], t[18], C)
	C, t[19] = madd2(y[7], x[19], t[19], C)
	C, t[20] = madd2(y[7], x[20], t[20], C)
	C, t[21] = madd2(y[7], x[21], t[21], C)
	C, t[22] = madd2(y[7], x[22], t[22], C)
	C, t[23] = madd2(y[7], x[23], t[23], C)
	C, t[24] = madd2(y[7], x[24], t[24], C)
	C, t[25] = madd2(y[7], x[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 4285846825131721527

	// -----------------------------------
	// Second loop
	C = madd0(m, 1318738878612053369, t[0])

	C, t[0] = madd2(m, 16732179128150725226, t[1], C)

	C, t[1] = madd2(m, 15355618193144791007, t[2], C)

	C, t[2] = madd2(m, 4396344304518515882, t[3], C)

	C, t[3] = madd2(m, 11620695255275462168, t[4], C)

	C, t[4] = madd2(m, 5162480155730353270, t[5], C)

	C, t[5] = madd2(m, 11918365908634919040, t[6], C)

	C, t[6] = madd2(m, 18310788083607185061, t[7], C)

	C, t[7] = madd2(m, 1706818182961302545, t[8], C)

	C, t[8] = madd2(m, 7715318651855780330, t[9], C)

	C, t[9] = madd2(m, 4193845188432429317, t[10], C)

	C, t[10] = madd2(m, 1108113797489890163, t[11], C)

	C, t[11] = madd2(m, 16851474546529677959, t[12], C)

	C, t[12] = madd2(m, 14885581468941587647, t[13], C)

	C, t[13] = madd2(m, 4501432112780460688, t[14], C)

	C, t[14] = madd2(m, 781891996848210117, t[15], C)

	C, t[15] = madd2(m, 12250709359727562561, t[16], C)

	C, t[16] = madd2(m, 15994884257273436159, t[17], C)

	C, t[17] = madd2(m, 11140475058215084841, t[18], C)

	C, t[18] = madd2(m, 15324160921537003790, t[19], C)

	C, t[19] = madd2(m, 9275171629996515882, t[20], C)

	C, t[20] = madd2(m, 6415429827500927434, t[21], C)

	C, t[21] = madd2(m, 9969743536277534484, t[22], C)

	C, t[22] = madd2(m, 13493967136577301588, t[23], C)

	C, t[23] = madd2(m, 11095387261239247891, t[24], C)

	C, t[24] = madd3(m, 7540722130141040015, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[8], x[0], t[0])
	C, t[1] = madd2(y[8], x[1], t[1], C)
	C, t[2] = madd2(y[8], x[2], t[2], C)
	C, t[3] = madd2(y[8], x[3], t[3], C)
	C, t[4] = madd2(y[8], x[4], t[4], C)
	C, t[5] = madd2(y[8], x[5], t[5], C)
	C, t[6] = madd2(y[8], x[6], t[6], C)
	C, t[7] = madd2(y[8], x[7], t[7], C)
	C, t[8] = madd2(y[8], x[8], t[8], C)
	C, t[9] = madd2(y[8], x[9], t[9], C)
	C, t[10] = madd2(y[8], x[10], t[10], C)
	C, t[11] = madd2(y[8], x[11], t[11], C)
	C, t[12] = madd2(y[8], x[12], t[12], C)
	C, t[13] = madd2(y[8], x[13], t[13], C)
	C, t[14] = madd2(y[8], x[14], t[14], C)
	C, t[15] = madd2(y[8], x[15], t[15], C)
	C, t[16] = madd2(y[8], x[16], t[16], C)
	C, t[17] = madd2(y[8], x[17], t[17], C)
	C, t[18] = madd2(y[8], x[18], t[18], C)
	C, t[19] = madd2(y[8], x[19], t[19], C)
	C, t[20] = madd2(y[8], x[20], t[20], C)
	C, t[21] = madd2(y[8], x[21], t[21], C)
	C, t[22] = madd2(y[8], x[22], t[22], C)
	C, t[23] = madd2(y[8], x[23], t[23], C)
	C, t[24] = madd2(y[8], x[24], t[24], C)
	C, t[25] = madd2(y[8], x[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 4285846825131721527

	// -----------------------------------
	// Second loop
	C = madd0(m, 1318738878612053369, t[0])

	C, t[0] = madd2(m, 16732179128150725226, t[1], C)

	C, t[1] = madd2(m, 15355618193144791007, t[2], C)

	C, t[2] = madd2(m, 4396344304518515882, t[3], C)

	C, t[3] = madd2(m, 11620695255275462168, t[4], C)

	C, t[4] = madd2(m, 5162480155730353270, t[5], C)

	C, t[5] = madd2(m, 11918365908634919040, t[6], C)

	C, t[6] = madd2(m, 18310788083607185061, t[7], C)

	C, t[7] = madd2(m, 1706818182961302545, t[8], C)

	C, t[8] = madd2(m, 7715318651855780330, t[9], C)

	C, t[9] = madd2(m, 4193845188432429317, t[10], C)

	C, t[10] = madd2(m, 1108113797489890163, t[11], C)

	C, t[11] = madd2(m, 16851474546529677959, t[12], C)

	C, t[12] = madd2(m, 14885581468941587647, t[13], C)

	C, t[13] = madd2(m, 4501432112780460688, t[14], C)

	C, t[14] = madd2(m, 781891996848210117, t[15], C)

	C, t[15] = madd2(m, 12250709359727562561, t[16], C)

	C, t[16] = madd2(m, 15994884257273436159, t[17], C)

	C, t[17] = madd2(m, 11140475058215084841, t[18], C)

	C, t[18] = madd2(m, 15324160921537003790, t[19], C)

	C, t[19] = madd2(m, 9275171629996515882, t[20], C)

	C, t[20] = madd2(m, 6415429827500927434, t[21], C)

	C, t[21] = madd2(m, 9969743536277534484, t[22], C)

	C, t[22] = madd2(m, 13493967136577301588, t[23], C)

	C, t[23] = madd2(m, 11095387261239247891, t[24], C)

	C, t[24] = madd3(m, 7540722130141040015, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[9], x[0], t[0])
	C, t[1] = madd2(y[9], x[1], t[1], C)
	C, t[2] = madd2(y[9], x[2], t[2], C)
	C, t[3] = madd2(y[9], x[3], t[3], C)
	C, t[4] = madd2(y[9], x[4], t[4], C)
	C, t[5] = madd2(y[9], x[5], t[5], C)
	C, t[6] = madd2(y[9], x[6], t[6], C)
	C, t[7] = madd2(y[9], x[7], t[7], C)
	C, t[8] = madd2(y[9], x[8], t[8], C)
	C, t[9] = madd2(y[9], x[9], t[9], C)
	C, t[10] = madd2(y[9], x[10], t[10], C)
	C, t[11] = madd2(y[9], x[11], t[11], C)
	C, t[12] = madd2(y[9], x[12], t[12], C)
	C, t[13] = madd2(y[9], x[13], t[13], C)
	C, t[14] = madd2(y[9], x[14], t[14], C)
	C, t[15] = madd2(y[9], x[15], t[15], C)
	C, t[16] = madd2(y[9], x[16], t[16], C)
	C, t[17] = madd2(y[9], x[17], t[17], C)
	C, t[18] = madd2(y[9], x[18], t[18], C)
	C, t[19] = madd2(y[9], x[19], t[19], C)
	C, t[20] = madd2(y[9], x[20], t[20], C)
	C, t[21] = madd2(y[9], x[21], t[21], C)
	C, t[22] = madd2(y[9], x[22], t[22], C)
	C, t[23] = madd2(y[9], x[23], t[23], C)
	C, t[24] = madd2(y[9], x[24], t[24], C)
	C, t[25] = madd2(y[9], x[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 4285846825131721527

	// -----------------------------------
	// Second loop
	C = madd0(m, 1318738878612053369, t[0])

	C, t[0] = madd2(m, 16732179128150725226, t[1], C)

	C, t[1] = madd2(m, 15355618193144791007, t[2], C)

	C, t[2] = madd2(m, 4396344304518515882, t[3], C)

	C, t[3] = madd2(m, 11620695255275462168, t[4], C)

	C, t[4] = madd2(m, 5162480155730353270, t[5], C)

	C, t[5] = madd2(m, 11918365908634919040, t[6], C)

	C, t[6] = madd2(m, 18310788083607185061, t[7], C)

	C, t[7] = madd2(m, 1706818182961302545, t[8], C)

	C, t[8] = madd2(m, 7715318651855780330, t[9], C)

	C, t[9] = madd2(m, 4193845188432429317, t[10], C)

	C, t[10] = madd2(m, 1108113797489890163, t[11], C)

	C, t[11] = madd2(m, 16851474546529677959, t[12], C)

	C, t[12] = madd2(m, 14885581468941587647, t[13], C)

	C, t[13] = madd2(m, 4501432112780460688, t[14], C)

	C, t[14] = madd2(m, 781891996848210117, t[15], C)

	C, t[15] = madd2(m, 12250709359727562561, t[16], C)

	C, t[16] = madd2(m, 15994884257273436159, t[17], C)

	C, t[17] = madd2(m, 11140475058215084841, t[18], C)

	C, t[18] = madd2(m, 15324160921537003790, t[19], C)

	C, t[19] = madd2(m, 9275171629996515882, t[20], C)

	C, t[20] = madd2(m, 6415429827500927434, t[21], C)

	C, t[21] = madd2(m, 9969743536277534484, t[22], C)

	C, t[22] = madd2(m, 13493967136577301588, t[23], C)

	C, t[23] = madd2(m, 11095387261239247891, t[24], C)

	C, t[24] = madd3(m, 7540722130141040015, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[10], x[0], t[0])
	C, t[1] = madd2(y[10], x[1], t[1], C)
	C, t[2] = madd2(y[10], x[2], t[2], C)
	C, t[3] = madd2(y[10], x[3], t[3], C)
	C, t[4] = madd2(y[10], x[4], t[4], C)
	C, t[5] = madd2(y[10], x[5], t[5], C)
	C, t[6] = madd2(y[10], x[6], t[6], C)
	C, t[7] = madd2(y[10], x[7], t[7], C)
	C, t[8] = madd2(y[10], x[8], t[8], C)
	C, t[9] = madd2(y[10], x[9], t[9], C)
	C, t[10] = madd2(y[10], x[10], t[10], C)
	C, t[11] = madd2(y[10], x[11], t[11], C)
	C, t[12] = madd2(y[10], x[12], t[12], C)
	C, t[13] = madd2(y[10], x[13], t[13], C)
	C, t[14] = madd2(y[10], x[14], t[14], C)
	C, t[15] = madd2(y[10], x[15], t[15], C)
	C, t[16] = madd2(y[10], x[16], t[16], C)
	C, t[17] = madd2(y[10], x[17], t[17], C)
	C, t[18] = madd2(y[10], x[18], t[18], C)
	C, t[19] = madd2(y[10], x[19], t[19], C)
	C, t[20] = madd2(y[10], x[20], t[20], C)
	C, t[21] = madd2(y[10], x[21], t[21], C)
	C, t[22] = madd2(y[10], x[22], t[22], C)
	C, t[23] = madd2(y[10], x[23], t[23], C)
	C, t[24] = madd2(y[10], x[24], t[24], C)
	C, t[25] = madd2(y[10], x[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 4285846825131721527

	// -----------------------------------
	// Second loop
	C = madd0(m, 1318738878612053369, t[0])

	C, t[0] = madd2(m, 16732179128150725226, t[1], C)

	C, t[1] = madd2(m, 15355618193144791007, t[2], C)

	C, t[2] = madd2(m, 4396344304518515882, t[3], C)

	C, t[3] = madd2(m, 11620695255275462168, t[4], C)

	C, t[4] = madd2(m, 5162480155730353270, t[5], C)

	C, t[5] = madd2(m, 11918365908634919040, t[6], C)

	C, t[6] = madd2(m, 18310788083607185061, t[7], C)

	C, t[7] = madd2(m, 1706818182961302545, t[8], C)

	C, t[8] = madd2(m, 7715318651855780330, t[9], C)

	C, t[9] = madd2(m, 4193845188432429317, t[10], C)

	C, t[10] = madd2(m, 1108113797489890163, t[11], C)

	C, t[11] = madd2(m, 16851474546529677959, t[12], C)

	C, t[12] = madd2(m, 14885581468941587647, t[13], C)

	C, t[13] = madd2(m, 4501432112780460688, t[14], C)

	C, t[14] = madd2(m, 781891996848210117, t[15], C)

	C, t[15] = madd2(m, 12250709359727562561, t[16], C)

	C, t[16] = madd2(m, 15994884257273436159, t[17], C)

	C, t[17] = madd2(m, 11140475058215084841, t[18], C)

	C, t[18] = madd2(m, 15324160921537003790, t[19], C)

	C, t[19] = madd2(m, 9275171629996515882, t[20], C)

	C, t[20] = madd2(m, 6415429827500927434, t[21], C)

	C, t[21] = madd2(m, 9969743536277534484, t[22], C)

	C, t[22] = madd2(m, 13493967136577301588, t[23], C)

	C, t[23] = madd2(m, 11095387261239247891, t[24], C)

	C, t[24] = madd3(m, 7540722130141040015, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[11], x[0], t[0])
	C, t[1] = madd2(y[11], x[1], t[1], C)
	C, t[2] = madd2(y[11], x[2], t[2], C)
	C, t[3] = madd2(y[11], x[3], t[3], C)
	C, t[4] = madd2(y[11], x[4], t[4], C)
	C, t[5] = madd2(y[11], x[5], t[5], C)
	C, t[6] = madd2(y[11], x[6], t[6], C)
	C, t[7] = madd2(y[11], x[7], t[7], C)
	C, t[8] = madd2(y[11], x[8], t[8], C)
	C, t[9] = madd2(y[11], x[9], t[9], C)
	C, t[10] = madd2(y[11], x[10], t[10], C)
	C, t[11] = madd2(y[11], x[11], t[11], C)
	C, t[12] = madd2(y[11], x[12], t[12], C)
	C, t[13] = madd2(y[11], x[13], t[13], C)
	C, t[14] = madd2(y[11], x[14], t[14], C)
	C, t[15] = madd2(y[11], x[15], t[15], C)
	C, t[16] = madd2(y[11], x[16], t[16], C)
	C, t[17] = madd2(y[11], x[17], t[17], C)
	C, t[18] = madd2(y[11], x[18], t[18], C)
	C, t[19] = madd2(y[11], x[19], t[19], C)
	C, t[20] = madd2(y[11], x[20], t[20], C)
	C, t[21] = madd2(y[11], x[21], t[21], C)
	C, t[22] = madd2(y[11], x[22], t[22], C)
	C, t[23] = madd2(y[11], x[23], t[23], C)
	C, t[24] = madd2(y[11], x[24], t[24], C)
	C, t[25] = madd2(y[11], x[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 4285846825131721527

	// -----------------------------------
	// Second loop
	C = madd0(m, 1318738878612053369, t[0])

	C, t[0] = madd2(m, 16732179128150725226, t[1], C)

	C, t[1] = madd2(m, 15355618193144791007, t[2], C)

	C, t[2] = madd2(m, 4396344304518515882, t[3], C)

	C, t[3] = madd2(m, 11620695255275462168, t[4], C)

	C, t[4] = madd2(m, 5162480155730353270, t[5], C)

	C, t[5] = madd2(m, 11918365908634919040, t[6], C)

	C, t[6] = madd2(m, 18310788083607185061, t[7], C)

	C, t[7] = madd2(m, 1706818182961302545, t[8], C)

	C, t[8] = madd2(m, 7715318651855780330, t[9], C)

	C, t[9] = madd2(m, 4193845188432429317, t[10], C)

	C, t[10] = madd2(m, 1108113797489890163, t[11], C)

	C, t[11] = madd2(m, 16851474546529677959, t[12], C)

	C, t[12] = madd2(m, 14885581468941587647, t[13], C)

	C, t[13] = madd2(m, 4501432112780460688, t[14], C)

	C, t[14] = madd2(m, 781891996848210117, t[15], C)

	C, t[15] = madd2(m, 12250709359727562561, t[16], C)

	C, t[16] = madd2(m, 15994884257273436159, t[17], C)

	C, t[17] = madd2(m, 11140475058215084841, t[18], C)

	C, t[18] = madd2(m, 15324160921537003790, t[19], C)

	C, t[19] = madd2(m, 9275171629996515882, t[20], C)

	C, t[20] = madd2(m, 6415429827500927434, t[21], C)

	C, t[21] = madd2(m, 9969743536277534484, t[22], C)

	C, t[22] = madd2(m, 13493967136577301588, t[23], C)

	C, t[23] = madd2(m, 11095387261239247891, t[24], C)

	C, t[24] = madd3(m, 7540722130141040015, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[12], x[0], t[0])
	C, t[1] = madd2(y[12], x[1], t[1], C)
	C, t[2] = madd2(y[12], x[2], t[2], C)
	C, t[3] = madd2(y[12], x[3], t[3], C)
	C, t[4] = madd2(y[12], x[4], t[4], C)
	C, t[5] = madd2(y[12], x[5], t[5], C)
	C, t[6] = madd2(y[12], x[6], t[6], C)
	C, t[7] = madd2(y[12], x[7], t[7], C)
	C, t[8] = madd2(y[12], x[8], t[8], C)
	C, t[9] = madd2(y[12], x[9], t[9], C)
	C, t[10] = madd2(y[12], x[10], t[10], C)
	C, t[11] = madd2(y[12], x[11], t[11], C)
	C, t[12] = madd2(y[12], x[12], t[12], C)
	C, t[13] = madd2(y[12], x[13], t[13], C)
	C, t[14] = madd2(y[12], x[14], t[14], C)
	C, t[15] = madd2(y[12], x[15], t[15], C)
	C, t[16] = madd2(y[12], x[16], t[16], C)
	C, t[17] = madd2(y[12], x[17], t[17], C)
	C, t[18] = madd2(y[12], x[18], t[18], C)
	C, t[19] = madd2(y[12], x[19], t[19], C)
	C, t[20] = madd2(y[12], x[20], t[20], C)
	C, t[21] = madd2(y[12], x[21], t[21], C)
	C, t[22] = madd2(y[12], x[22], t[22], C)
	C, t[23] = madd2(y[12], x[23], t[23], C)
	C, t[24] = madd2(y[12], x[24], t[24], C)
	C, t[25] = madd2(y[12], x[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 4285846825131721527

	// -----------------------------------
	// Second loop
	C = madd0(m, 1318738878612053369, t[0])

	C, t[0] = madd2(m, 16732179128150725226, t[1], C)

	C, t[1] = madd2(m, 15355618193144791007, t[2], C)

	C, t[2] = madd2(m, 4396344304518515882, t[3], C)

	C, t[3] = madd2(m, 11620695255275462168, t[4], C)

	C, t[4] = madd2(m, 5162480155730353270, t[5], C)

	C, t[5] = madd2(m, 11918365908634919040, t[6], C)

	C, t[6] = madd2(m, 18310788083607185061, t[7], C)

	C, t[7] = madd2(m, 1706818182961302545, t[8], C)

	C, t[8] = madd2(m, 7715318651855780330, t[9], C)

	C, t[9] = madd2(m, 4193845188432429317, t[10], C)

	C, t[10] = madd2(m, 1108113797489890163, t[11], C)

	C, t[11] = madd2(m, 16851474546529677959, t[12], C)

	C, t[12] = madd2(m, 14885581468941587647, t[13], C)

	C, t[13] = madd2(m, 4501432112780460688, t[14], C)

	C, t[14] = madd2(m, 781891996848210117, t[15], C)

	C, t[15] = madd2(m, 12250709359727562561, t[16], C)

	C, t[16] = madd2(m, 15994884257273436159, t[17], C)

	C, t[17] = madd2(m, 11140475058215084841, t[18], C)

	C, t[18] = madd2(m, 15324160921537003790, t[19], C)

	C, t[19] = madd2(m, 9275171629996515882, t[20], C)

	C, t[20] = madd2(m, 6415429827500927434, t[21], C)

	C, t[21] = madd2(m, 9969743536277534484, t[22], C)

	C, t[22] = madd2(m, 13493967136577301588, t[23], C)

	C, t[23] = madd2(m, 11095387261239247891, t[24], C)

	C, t[24] = madd3(m, 7540722130141040015, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[13], x[0], t[0])
	C, t[1] = madd2(y[13], x[1], t[1], C)
	C, t[2] = madd2(y[13], x[2], t[2], C)
	C, t[3] = madd2(y[13], x[3], t[3], C)
	C, t[4] = madd2(y[13], x[4], t[4], C)
	C, t[5] = madd2(y[13], x[5], t[5], C)
	C, t[6] = madd2(y[13], x[6], t[6], C)
	C, t[7] = madd2(y[13], x[7], t[7], C)
	C, t[8] = madd2(y[13], x[8], t[8], C)
	C, t[9] = madd2(y[13], x[9], t[9], C)
	C, t[10] = madd2(y[13], x[10], t[10], C)
	C, t[11] = madd2(y[13], x[11], t[11], C)
	C, t[12] = madd2(y[13], x[12], t[12], C)
	C, t[13] = madd2(y[13], x[13], t[13], C)
	C, t[14] = madd2(y[13], x[14], t[14], C)
	C, t[15] = madd2(y[13], x[15], t[15], C)
	C, t[16] = madd2(y[13], x[16], t[16], C)
	C, t[17] = madd2(y[13], x[17], t[17], C)
	C, t[18] = madd2(y[13], x[18], t[18], C)
	C, t[19] = madd2(y[13], x[19], t[19], C)
	C, t[20] = madd2(y[13], x[20], t[20], C)
	C, t[21] = madd2(y[13], x[21], t[21], C)
	C, t[22] = madd2(y[13], x[22], t[22], C)
	C, t[23] = madd2(y[13], x[23], t[23], C)
	C, t[24] = madd2(y[13], x[24], t[24], C)
	C, t[25] = madd2(y[13], x[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 4285846825131721527

	// -----------------------------------
	// Second loop
	C = madd0(m, 1318738878612053369, t[0])

	C, t[0] = madd2(m, 16732179128150725226, t[1], C)

	C, t[1] = madd2(m, 15355618193144791007, t[2], C)

	C, t[2] = madd2(m, 4396344304518515882, t[3], C)

	C, t[3] = madd2(m, 11620695255275462168, t[4], C)

	C, t[4] = madd2(m, 5162480155730353270, t[5], C)

	C, t[5] = madd2(m, 11918365908634919040, t[6], C)

	C, t[6] = madd2(m, 18310788083607185061, t[7], C)

	C, t[7] = madd2(m, 1706818182961302545, t[8], C)

	C, t[8] = madd2(m, 7715318651855780330, t[9], C)

	C, t[9] = madd2(m, 4193845188432429317, t[10], C)

	C, t[10] = madd2(m, 1108113797489890163, t[11], C)

	C, t[11] = madd2(m, 16851474546529677959, t[12], C)

	C, t[12] = madd2(m, 14885581468941587647, t[13], C)

	C, t[13] = madd2(m, 4501432112780460688, t[14], C)

	C, t[14] = madd2(m, 781891996848210117, t[15], C)

	C, t[15] = madd2(m, 12250709359727562561, t[16], C)

	C, t[16] = madd2(m, 15994884257273436159, t[17], C)

	C, t[17] = madd2(m, 11140475058215084841, t[18], C)

	C, t[18] = madd2(m, 15324160921537003790, t[19], C)

	C, t[19] = madd2(m, 9275171629996515882, t[20], C)

	C, t[20] = madd2(m, 6415429827500927434, t[21], C)

	C, t[21] = madd2(m, 9969743536277534484, t[22], C)

	C, t[22] = madd2(m, 13493967136577301588, t[23], C)

	C, t[23] = madd2(m, 11095387261239247891, t[24], C)

	C, t[24] = madd3(m, 7540722130141040015, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[14], x[0], t[0])
	C, t[1] = madd2(y[14], x[1], t[1], C)
	C, t[2] = madd2(y[14], x[2], t[2], C)
	C, t[3] = madd2(y[14], x[3], t[3], C)
	C, t[4] = madd2(y[14], x[4], t[4], C)
	C, t[5] = madd2(y[14], x[5], t[5], C)
	C, t[6] = madd2(y[14], x[6], t[6], C)
	C, t[7] = madd2(y[14], x[7], t[7], C)
	C, t[8] = madd2(y[14], x[8], t[8], C)
	C, t[9] = madd2(y[14], x[9], t[9], C)
	C, t[10] = madd2(y[14], x[10], t[10], C)
	C, t[11] = madd2(y[14], x[11], t[11], C)
	C, t[12] = madd2(y[14], x[12], t[12], C)
	C, t[13] = madd2(y[14], x[13], t[13], C)
	C, t[14] = madd2(y[14], x[14], t[14], C)
	C, t[15] = madd2(y[14], x[15], t[15], C)
	C, t[16] = madd2(y[14], x[16], t[16], C)
	C, t[17] = madd2(y[14], x[17], t[17], C)
	C, t[18] = madd2(y[14], x[18], t[18], C)
	C, t[19] = madd2(y[14], x[19], t[19], C)
	C, t[20] = madd2(y[14], x[20], t[20], C)
	C, t[21] = madd2(y[14], x[21], t[21], C)
	C, t[22] = madd2(y[14], x[22], t[22], C)
	C, t[23] = madd2(y[14], x[23], t[23], C)
	C, t[24] = madd2(y[14], x[24], t[24], C)
	C, t[25] = madd2(y[14], x[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 4285846825131721527

	// -----------------------------------
	// Second loop
	C = madd0(m, 1318738878612053369, t[0])

	C, t[0] = madd2(m, 16732179128150725226, t[1], C)

	C, t[1] = madd2(m, 15355618193144791007, t[2], C)

	C, t[2] = madd2(m, 4396344304518515882, t[3], C)

	C, t[3] = madd2(m, 11620695255275462168, t[4], C)

	C, t[4] = madd2(m, 5162480155730353270, t[5], C)

	C, t[5] = madd2(m, 11918365908634919040, t[6], C)

	C, t[6] = madd2(m, 18310788083607185061, t[7], C)

	C, t[7] = madd2(m, 1706818182961302545, t[8], C)

	C, t[8] = madd2(m, 7715318651855780330, t[9], C)

	C, t[9] = madd2(m, 4193845188432429317, t[10], C)

	C, t[10] = madd2(m, 1108113797489890163, t[11], C)

	C, t[11] = madd2(m, 16851474546529677959, t[12], C)

	C, t[12] = madd2(m, 14885581468941587647, t[13], C)

	C, t[13] = madd2(m, 4501432112780460688, t[14], C)

	C, t[14] = madd2(m, 781891996848210117, t[15], C)

	C, t[15] = madd2(m, 12250709359727562561, t[16], C)

	C, t[16] = madd2(m, 15994884257273436159, t[17], C)

	C, t[17] = madd2(m, 11140475058215084841, t[18], C)

	C, t[18] = madd2(m, 15324160921537003790, t[19], C)

	C, t[19] = madd2(m, 9275171629996515882, t[20], C)

	C, t[20] = madd2(m, 6415429827500927434, t[21], C)

	C, t[21] = madd2(m, 9969743536277534484, t[22], C)

	C, t[22] = madd2(m, 13493967136577301588, t[23], C)

	C, t[23] = madd2(m, 11095387261239247891, t[24], C)

	C, t[24] = madd3(m, 7540722130141040015, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[15], x[0], t[0])
	C, t[1] = madd2(y[15], x[1], t[1], C)
	C, t[2] = madd2(y[15], x[2], t[2], C)
	C, t[3] = madd2(y[15], x[3], t[3], C)
	C, t[4] = madd2(y[15], x[4], t[4], C)
	C, t[5] = madd2(y[15], x[5], t[5], C)
	C, t[6] = madd2(y[15], x[6], t[6], C)
	C, t[7] = madd2(y[15], x[7], t[7], C)
	C, t[8] = madd2(y[15], x[8], t[8], C)
	C, t[9] = madd2(y[15], x[9], t[9], C)
	C, t[10] = madd2(y[15], x[10], t[10], C)
	C, t[11] = madd2(y[15], x[11], t[11], C)
	C, t[12] = madd2(y[15], x[12], t[12], C)
	C, t[13] = madd2(y[15], x[13], t[13], C)
	C, t[14] = madd2(y[15], x[14], t[14], C)
	C, t[15] = madd2(y[15], x[15], t[15], C)
	C, t[16] = madd2(y[15], x[16], t[16], C)
	C, t[17] = madd2(y[15], x[17], t[17], C)
	C, t[18] = madd2(y[15], x[18], t[18], C)
	C, t[19] = madd2(y[15], x[19], t[19], C)
	C, t[20] = madd2(y[15], x[20], t[20], C)
	C, t[21] = madd2(y[15], x[21], t[21], C)
	C, t[22] = madd2(y[15], x[22], t[22], C)
	C, t[23] = madd2(y[15], x[23], t[23], C)
	C, t[24] = madd2(y[15], x[24], t[24], C)
	C, t[25] = madd2(y[15], x[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 4285846825131721527

	// -----------------------------------
	// Second loop
	C = madd0(m, 1318738878612053369, t[0])

	C, t[0] = madd2(m, 16732179128150725226, t[1], C)

	C, t[1] = madd2(m, 15355618193144791007, t[2], C)

	C, t[2] = madd2(m, 4396344304518515882, t[3], C)

	C, t[3] = madd2(m, 11620695255275462168, t[4], C)

	C, t[4] = madd2(m, 5162480155730353270, t[5], C)

	C, t[5] = madd2(m, 11918365908634919040, t[6], C)

	C, t[6] = madd2(m, 18310788083607185061, t[7], C)

	C, t[7] = madd2(m, 1706818182961302545, t[8], C)

	C, t[8] = madd2(m, 7715318651855780330, t[9], C)

	C, t[9] = madd2(m, 4193845188432429317, t[10], C)

	C, t[10] = madd2(m, 1108113797489890163, t[11], C)

	C, t[11] = madd2(m, 16851474546529677959, t[12], C)

	C, t[12] = madd2(m, 14885581468941587647, t[13], C)

	C, t[13] = madd2(m, 4501432112780460688, t[14], C)

	C, t[14] = madd2(m, 781891996848210117, t[15], C)

	C, t[15] = madd2(m, 12250709359727562561, t[16], C)

	C, t[16] = madd2(m, 15994884257273436159, t[17], C)

	C, t[17] = madd2(m, 11140475058215084841, t[18], C)

	C, t[18] = madd2(m, 15324160921537003790, t[19], C)

	C, t[19] = madd2(m, 9275171629996515882, t[20], C)

	C, t[20] = madd2(m, 6415429827500927434, t[21], C)

	C, t[21] = madd2(m, 9969743536277534484, t[22], C)

	C, t[22] = madd2(m, 13493967136577301588, t[23], C)

	C, t[23] = madd2(m, 11095387261239247891, t[24], C)

	C, t[24] = madd3(m, 7540722130141040015, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[16], x[0], t[0])
	C, t[1] = madd2(y[16], x[1], t[1], C)
	C, t[2] = madd2(y[16], x[2], t[2], C)
	C, t[3] = madd2(y[16], x[3], t[3], C)
	C, t[4] = madd2(y[16], x[4], t[4], C)
	C, t[5] = madd2(y[16], x[5], t[5], C)
	C, t[6] = madd2(y[16], x[6], t[6], C)
	C, t[7] = madd2(y[16], x[7], t[7], C)
	C, t[8] = madd2(y[16], x[8], t[8], C)
	C, t[9] = madd2(y[16], x[9], t[9], C)
	C, t[10] = madd2(y[16], x[10], t[10], C)
	C, t[11] = madd2(y[16], x[11], t[11], C)
	C, t[12] = madd2(y[16], x[12], t[12], C)
	C, t[13] = madd2(y[16], x[13], t[13], C)
	C, t[14] = madd2(y[16], x[14], t[14], C)
	C, t[15] = madd2(y[16], x[15], t[15], C)
	C, t[16] = madd2(y[16], x[16], t[16], C)
	C, t[17] = madd2(y[16], x[17], t[17], C)
	C, t[18] = madd2(y[16], x[18], t[18], C)
	C, t[19] = madd2(y[16], x[19], t[19], C)
	C, t[20] = madd2(y[16], x[20], t[20], C)
	C, t[21] = madd2(y[16], x[21], t[21], C)
	C, t[22] = madd2(y[16], x[22], t[22], C)
	C, t[23] = madd2(y[16], x[23], t[23], C)
	C, t[24] = madd2(y[16], x[24], t[24], C)
	C, t[25] = madd2(y[16], x[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 4285846825131721527

	// -----------------------------------
	// Second loop
	C = madd0(m, 1318738878612053369, t[0])

	C, t[0] = madd2(m, 16732179128150725226, t[1], C)

	C, t[1] = madd2(m, 15355618193144791007, t[2], C)

	C, t[2] = madd2(m, 4396344304518515882, t[3], C)

	C, t[3] = madd2(m, 11620695255275462168, t[4], C)

	C, t[4] = madd2(m, 5162480155730353270, t[5], C)

	C, t[5] = madd2(m, 11918365908634919040, t[6], C)

	C, t[6] = madd2(m, 18310788083607185061, t[7], C)

	C, t[7] = madd2(m, 1706818182961302545, t[8], C)

	C, t[8] = madd2(m, 7715318651855780330, t[9], C)

	C, t[9] = madd2(m, 4193845188432429317, t[10], C)

	C, t[10] = madd2(m, 1108113797489890163, t[11], C)

	C, t[11] = madd2(m, 16851474546529677959, t[12], C)

	C, t[12] = madd2(m, 14885581468941587647, t[13], C)

	C, t[13] = madd2(m, 4501432112780460688, t[14], C)

	C, t[14] = madd2(m, 781891996848210117, t[15], C)

	C, t[15] = madd2(m, 12250709359727562561, t[16], C)

	C, t[16] = madd2(m, 15994884257273436159, t[17], C)

	C, t[17] = madd2(m, 11140475058215084841, t[18], C)

	C, t[18] = madd2(m, 15324160921537003790, t[19], C)

	C, t[19] = madd2(m, 9275171629996515882, t[20], C)

	C, t[20] = madd2(m, 6415429827500927434, t[21], C)

	C, t[21] = madd2(m, 9969743536277534484, t[22], C)

	C, t[22] = madd2(m, 13493967136577301588, t[23], C)

	C, t[23] = madd2(m, 11095387261239247891, t[24], C)

	C, t[24] = madd3(m, 7540722130141040015, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[17], x[0], t[0])
	C, t[1] = madd2(y[17], x[1], t[1], C)
	C, t[2] = madd2(y[17], x[2], t[2], C)
	C, t[3] = madd2(y[17], x[3], t[3], C)
	C, t[4] = madd2(y[17], x[4], t[4], C)
	C, t[5] = madd2(y[17], x[5], t[5], C)
	C, t[6] = madd2(y[17], x[6], t[6], C)
	C, t[7] = madd2(y[17], x[7], t[7], C)
	C, t[8] = madd2(y[17], x[8], t[8], C)
	C, t[9] = madd2(y[17], x[9], t[9], C)
	C, t[10] = madd2(y[17], x[10], t[10], C)
	C, t[11] = madd2(y[17], x[11], t[11], C)
	C, t[12] = madd2(y[17], x[12], t[12], C)
	C, t[13] = madd2(y[17], x[13], t[13], C)
	C, t[14] = madd2(y[17], x[14], t[14], C)
	C, t[15] = madd2(y[17], x[15], t[15], C)
	C, t[16] = madd2(y[17], x[16], t[16], C)
	C, t[17] = madd2(y[17], x[17], t[17], C)
	C, t[18] = madd2(y[17], x[18], t[18], C)
	C, t[19] = madd2(y[17], x[19], t[19], C)
	C, t[20] = madd2(y[17], x[20], t[20], C)
	C, t[21] = madd2(y[17], x[21], t[21], C)
	C, t[22] = madd2(y[17], x[22], t[22], C)
	C, t[23] = madd2(y[17], x[23], t[23], C)
	C, t[24] = madd2(y[17], x[24], t[24], C)
	C, t[25] = madd2(y[17], x[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 4285846825131721527

	// -----------------------------------
	// Second loop
	C = madd0(m, 1318738878612053369, t[0])

	C, t[0] = madd2(m, 16732179128150725226, t[1], C)

	C, t[1] = madd2(m, 15355618193144791007, t[2], C)

	C, t[2] = madd2(m, 4396344304518515882, t[3], C)

	C, t[3] = madd2(m, 11620695255275462168, t[4], C)

	C, t[4] = madd2(m, 5162480155730353270, t[5], C)

	C, t[5] = madd2(m, 11918365908634919040, t[6], C)

	C, t[6] = madd2(m, 18310788083607185061, t[7], C)

	C, t[7] = madd2(m, 1706818182961302545, t[8], C)

	C, t[8] = madd2(m, 7715318651855780330, t[9], C)

	C, t[9] = madd2(m, 4193845188432429317, t[10], C)

	C, t[10] = madd2(m, 1108113797489890163, t[11], C)

	C, t[11] = madd2(m, 16851474546529677959, t[12], C)

	C, t[12] = madd2(m, 14885581468941587647, t[13], C)

	C, t[13] = madd2(m, 4501432112780460688, t[14], C)

	C, t[14] = madd2(m, 781891996848210117, t[15], C)

	C, t[15] = madd2(m, 12250709359727562561, t[16], C)

	C, t[16] = madd2(m, 15994884257273436159, t[17], C)

	C, t[17] = madd2(m, 11140475058215084841, t[18], C)

	C, t[18] = madd2(m, 15324160921537003790, t[19], C)

	C, t[19] = madd2(m, 9275171629996515882, t[20], C)

	C, t[20] = madd2(m, 6415429827500927434, t[21], C)

	C, t[21] = madd2(m, 9969743536277534484, t[22], C)

	C, t[22] = madd2(m, 13493967136577301588, t[23], C)

	C, t[23] = madd2(m, 11095387261239247891, t[24], C)

	C, t[24] = madd3(m, 7540722130141040015, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[18], x[0], t[0])
	C, t[1] = madd2(y[18], x[1], t[1], C)
	C, t[2] = madd2(y[18], x[2], t[2], C)
	C, t[3] = madd2(y[18], x[3], t[3], C)
	C, t[4] = madd2(y[18], x[4], t[4], C)
	C, t[5] = madd2(y[18], x[5], t[5], C)
	C, t[6] = madd2(y[18], x[6], t[6], C)
	C, t[7] = madd2(y[18], x[7], t[7], C)
	C, t[8] = madd2(y[18], x[8], t[8], C)
	C, t[9] = madd2(y[18], x[9], t[9], C)
	C, t[10] = madd2(y[18], x[10], t[10], C)
	C, t[11] = madd2(y[18], x[11], t[11], C)
	C, t[12] = madd2(y[18], x[12], t[12], C)
	C, t[13] = madd2(y[18], x[13], t[13], C)
	C, t[14] = madd2(y[18], x[14], t[14], C)
	C, t[15] = madd2(y[18], x[15], t[15], C)
	C, t[16] = madd2(y[18], x[16], t[16], C)
	C, t[17] = madd2(y[18], x[17], t[17], C)
	C, t[18] = madd2(y[18], x[18], t[18], C)
	C, t[19] = madd2(y[18], x[19], t[19], C)
	C, t[20] = madd2(y[18], x[20], t[20], C)
	C, t[21] = madd2(y[18], x[21], t[21], C)
	C, t[22] = madd2(y[18], x[22], t[22], C)
	C, t[23] = madd2(y[18], x[23], t[23], C)
	C, t[24] = madd2(y[18], x[24], t[24], C)
	C, t[25] = madd2(y[18], x[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 4285846825131721527

	// -----------------------------------
	// Second loop
	C = madd0(m, 1318738878612053369, t[0])

	C, t[0] = madd2(m, 16732179128150725226, t[1], C)

	C, t[1] = madd2(m, 15355618193144791007, t[2], C)

	C, t[2] = madd2(m, 4396344304518515882, t[3], C)

	C, t[3] = madd2(m, 11620695255275462168, t[4], C)

	C, t[4] = madd2(m, 5162480155730353270, t[5], C)

	C, t[5] = madd2(m, 11918365908634919040, t[6], C)

	C, t[6] = madd2(m, 18310788083607185061, t[7], C)

	C, t[7] = madd2(m, 1706818182961302545, t[8], C)

	C, t[8] = madd2(m, 7715318651855780330, t[9], C)

	C, t[9] = madd2(m, 4193845188432429317, t[10], C)

	C, t[10] = madd2(m, 1108113797489890163, t[11], C)

	C, t[11] = madd2(m, 16851474546529677959, t[12], C)

	C, t[12] = madd2(m, 14885581468941587647, t[13], C)

	C, t[13] = madd2(m, 4501432112780460688, t[14], C)

	C, t[14] = madd2(m, 781891996848210117, t[15], C)

	C, t[15] = madd2(m, 12250709359727562561, t[16], C)

	C, t[16] = madd2(m, 15994884257273436159, t[17], C)

	C, t[17] = madd2(m, 11140475058215084841, t[18], C)

	C, t[18] = madd2(m, 15324160921537003790, t[19], C)

	C, t[19] = madd2(m, 9275171629996515882, t[20], C)

	C, t[20] = madd2(m, 6415429827500927434, t[21], C)

	C, t[21] = madd2(m, 9969743536277534484, t[22], C)

	C, t[22] = madd2(m, 13493967136577301588, t[23], C)

	C, t[23] = madd2(m, 11095387261239247891, t[24], C)

	C, t[24] = madd3(m, 7540722130141040015, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[19], x[0], t[0])
	C, t[1] = madd2(y[19], x[1], t[1], C)
	C, t[2] = madd2(y[19], x[2], t[2], C)
	C, t[3] = madd2(y[19], x[3], t[3], C)
	C, t[4] = madd2(y[19], x[4], t[4], C)
	C, t[5] = madd2(y[19], x[5], t[5], C)
	C, t[6] = madd2(y[19], x[6], t[6], C)
	C, t[7] = madd2(y[19], x[7], t[7], C)
	C, t[8] = madd2(y[19], x[8], t[8], C)
	C, t[9] = madd2(y[19], x[9], t[9], C)
	C, t[10] = madd2(y[19], x[10], t[10], C)
	C, t[11] = madd2(y[19], x[11], t[11], C)
	C, t[12] = madd2(y[19], x[12], t[12], C)
	C, t[13] = madd2(y[19], x[13], t[13], C)
	C, t[14] = madd2(y[19], x[14], t[14], C)
	C, t[15] = madd2(y[19], x[15], t[15], C)
	C, t[16] = madd2(y[19], x[16], t[16], C)
	C, t[17] = madd2(y[19], x[17], t[17], C)
	C, t[18] = madd2(y[19], x[18], t[18], C)
	C, t[19] = madd2(y[19], x[19], t[19], C)
	C, t[20] = madd2(y[19], x[20], t[20], C)
	C, t[21] = madd2(y[19], x[21], t[21], C)
	C, t[22] = madd2(y[19], x[22], t[22], C)
	C, t[23] = madd2(y[19], x[23], t[23], C)
	C, t[24] = madd2(y[19], x[24], t[24], C)
	C, t[25] = madd2(y[19], x[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 4285846825131721527

	// -----------------------------------
	// Second loop
	C = madd0(m, 1318738878612053369, t[0])

	C, t[0] = madd2(m, 16732179128150725226, t[1], C)

	C, t[1] = madd2(m, 15355618193144791007, t[2], C)

	C, t[2] = madd2(m, 4396344304518515882, t[3], C)

	C, t[3] = madd2(m, 11620695255275462168, t[4], C)

	C, t[4] = madd2(m, 5162480155730353270, t[5], C)

	C, t[5] = madd2(m, 11918365908634919040, t[6], C)

	C, t[6] = madd2(m, 18310788083607185061, t[7], C)

	C, t[7] = madd2(m, 1706818182961302545, t[8], C)

	C, t[8] = madd2(m, 7715318651855780330, t[9], C)

	C, t[9] = madd2(m, 4193845188432429317, t[10], C)

	C, t[10] = madd2(m, 1108113797489890163, t[11], C)

	C, t[11] = madd2(m, 16851474546529677959, t[12], C)

	C, t[12] = madd2(m, 14885581468941587647, t[13], C)

	C, t[13] = madd2(m, 4501432112780460688, t[14], C)

	C, t[14] = madd2(m, 781891996848210117, t[15], C)

	C, t[15] = madd2(m, 12250709359727562561, t[16], C)

	C, t[16] = madd2(m, 15994884257273436159, t[17], C)

	C, t[17] = madd2(m, 11140475058215084841, t[18], C)

	C, t[18] = madd2(m, 15324160921537003790, t[19], C)

	C, t[19] = madd2(m, 9275171629996515882, t[20], C)

	C, t[20] = madd2(m, 6415429827500927434, t[21], C)

	C, t[21] = madd2(m, 9969743536277534484, t[22], C)

	C, t[22] = madd2(m, 13493967136577301588, t[23], C)

	C, t[23] = madd2(m, 11095387261239247891, t[24], C)

	C, t[24] = madd3(m, 7540722130141040015, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[20], x[0], t[0])
	C, t[1] = madd2(y[20], x[1], t[1], C)
	C, t[2] = madd2(y[20], x[2], t[2], C)
	C, t[3] = madd2(y[20], x[3], t[3], C)
	C, t[4] = madd2(y[20], x[4], t[4], C)
	C, t[5] = madd2(y[20], x[5], t[5], C)
	C, t[6] = madd2(y[20], x[6], t[6], C)
	C, t[7] = madd2(y[20], x[7], t[7], C)
	C, t[8] = madd2(y[20], x[8], t[8], C)
	C, t[9] = madd2(y[20], x[9], t[9], C)
	C, t[10] = madd2(y[20], x[10], t[10], C)
	C, t[11] = madd2(y[20], x[11], t[11], C)
	C, t[12] = madd2(y[20], x[12], t[12], C)
	C, t[13] = madd2(y[20], x[13], t[13], C)
	C, t[14] = madd2(y[20], x[14], t[14], C)
	C, t[15] = madd2(y[20], x[15], t[15], C)
	C, t[16] = madd2(y[20], x[16], t[16], C)
	C, t[17] = madd2(y[20], x[17], t[17], C)
	C, t[18] = madd2(y[20], x[18], t[18], C)
	C, t[19] = madd2(y[20], x[19], t[19], C)
	C, t[20] = madd2(y[20], x[20], t[20], C)
	C, t[21] = madd2(y[20], x[21], t[21], C)
	C, t[22] = madd2(y[20], x[22], t[22], C)
	C, t[23] = madd2(y[20], x[23], t[23], C)
	C, t[24] = madd2(y[20], x[24], t[24], C)
	C, t[25] = madd2(y[20], x[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 4285846825131721527

	// -----------------------------------
	// Second loop
	C = madd0(m, 1318738878612053369, t[0])

	C, t[0] = madd2(m, 16732179128150725226, t[1], C)

	C, t[1] = madd2(m, 15355618193144791007, t[2], C)

	C, t[2] = madd2(m, 4396344304518515882, t[3], C)

	C, t[3] = madd2(m, 11620695255275462168, t[4], C)

	C, t[4] = madd2(m, 5162480155730353270, t[5], C)

	C, t[5] = madd2(m, 11918365908634919040, t[6], C)

	C, t[6] = madd2(m, 18310788083607185061, t[7], C)

	C, t[7] = madd2(m, 1706818182961302545, t[8], C)

	C, t[8] = madd2(m, 7715318651855780330, t[9], C)

	C, t[9] = madd2(m, 4193845188432429317, t[10], C)

	C, t[10] = madd2(m, 1108113797489890163, t[11], C)

	C, t[11] = madd2(m, 16851474546529677959, t[12], C)

	C, t[12] = madd2(m, 14885581468941587647, t[13], C)

	C, t[13] = madd2(m, 4501432112780460688, t[14], C)

	C, t[14] = madd2(m, 781891996848210117, t[15], C)

	C, t[15] = madd2(m, 12250709359727562561, t[16], C)

	C, t[16] = madd2(m, 15994884257273436159, t[17], C)

	C, t[17] = madd2(m, 11140475058215084841, t[18], C)

	C, t[18] = madd2(m, 15324160921537003790, t[19], C)

	C, t[19] = madd2(m, 9275171629996515882, t[20], C)

	C, t[20] = madd2(m, 6415429827500927434, t[21], C)

	C, t[21] = madd2(m, 9969743536277534484, t[22], C)

	C, t[22] = madd2(m, 13493967136577301588, t[23], C)

	C, t[23] = madd2(m, 11095387261239247891, t[24], C)

	C, t[24] = madd3(m, 7540722130141040015, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[21], x[0], t[0])
	C, t[1] = madd2(y[21], x[1], t[1], C)
	C, t[2] = madd2(y[21], x[2], t[2], C)
	C, t[3] = madd2(y[21], x[3], t[3], C)
	C, t[4] = madd2(y[21], x[4], t[4], C)
	C, t[5] = madd2(y[21], x[5], t[5], C)
	C, t[6] = madd2(y[21], x[6], t[6], C)
	C, t[7] = madd2(y[21], x[7], t[7], C)
	C, t[8] = madd2(y[21], x[8], t[8], C)
	C, t[9] = madd2(y[21], x[9], t[9], C)
	C, t[10] = madd2(y[21], x[10], t[10], C)
	C, t[11] = madd2(y[21], x[11], t[11], C)
	C, t[12] = madd2(y[21], x[12], t[12], C)
	C, t[13] = madd2(y[21], x[13], t[13], C)
	C, t[14] = madd2(y[21], x[14], t[14], C)
	C, t[15] = madd2(y[21], x[15], t[15], C)
	C, t[16] = madd2(y[21], x[16], t[16], C)
	C, t[17] = madd2(y[21], x[17], t[17], C)
	C, t[18] = madd2(y[21], x[18], t[18], C)
	C, t[19] = madd2(y[21], x[19], t[19], C)
	C, t[20] = madd2(y[21], x[20], t[20], C)
	C, t[21] = madd2(y[21], x[21], t[21], C)
	C, t[22] = madd2(y[21], x[22], t[22], C)
	C, t[23] = madd2(y[21], x[23], t[23], C)
	C, t[24] = madd2(y[21], x[24], t[24], C)
	C, t[25] = madd2(y[21], x[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 4285846825131721527

	// -----------------------------------
	// Second loop
	C = madd0(m, 1318738878612053369, t[0])

	C, t[0] = madd2(m, 16732179128150725226, t[1], C)

	C, t[1] = madd2(m, 15355618193144791007, t[2], C)

	C, t[2] = madd2(m, 4396344304518515882, t[3], C)

	C, t[3] = madd2(m, 11620695255275462168, t[4], C)

	C, t[4] = madd2(m, 5162480155730353270, t[5], C)

	C, t[5] = madd2(m, 11918365908634919040, t[6], C)

	C, t[6] = madd2(m, 18310788083607185061, t[7], C)

	C, t[7] = madd2(m, 1706818182961302545, t[8], C)

	C, t[8] = madd2(m, 7715318651855780330, t[9], C)

	C, t[9] = madd2(m, 4193845188432429317, t[10], C)

	C, t[10] = madd2(m, 1108113797489890163, t[11], C)

	C, t[11] = madd2(m, 16851474546529677959, t[12], C)

	C, t[12] = madd2(m, 14885581468941587647, t[13], C)

	C, t[13] = madd2(m, 4501432112780460688, t[14], C)

	C, t[14] = madd2(m, 781891996848210117, t[15], C)

	C, t[15] = madd2(m, 12250709359727562561, t[16], C)

	C, t[16] = madd2(m, 15994884257273436159, t[17], C)

	C, t[17] = madd2(m, 11140475058215084841, t[18], C)

	C, t[18] = madd2(m, 15324160921537003790, t[19], C)

	C, t[19] = madd2(m, 9275171629996515882, t[20], C)

	C, t[20] = madd2(m, 6415429827500927434, t[21], C)

	C, t[21] = madd2(m, 9969743536277534484, t[22], C)

	C, t[22] = madd2(m, 13493967136577301588, t[23], C)

	C, t[23] = madd2(m, 11095387261239247891, t[24], C)

	C, t[24] = madd3(m, 7540722130141040015, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[22], x[0], t[0])
	C, t[1] = madd2(y[22], x[1], t[1], C)
	C, t[2] = madd2(y[22], x[2], t[2], C)
	C, t[3] = madd2(y[22], x[3], t[3], C)
	C, t[4] = madd2(y[22], x[4], t[4], C)
	C, t[5] = madd2(y[22], x[5], t[5], C)
	C, t[6] = madd2(y[22], x[6], t[6], C)
	C, t[7] = madd2(y[22], x[7], t[7], C)
	C, t[8] = madd2(y[22], x[8], t[8], C)
	C, t[9] = madd2(y[22], x[9], t[9], C)
	C, t[10] = madd2(y[22], x[10], t[10], C)
	C, t[11] = madd2(y[22], x[11], t[11], C)
	C, t[12] = madd2(y[22], x[12], t[12], C)
	C, t[13] = madd2(y[22], x[13], t[13], C)
	C, t[14] = madd2(y[22], x[14], t[14], C)
	C, t[15] = madd2(y[22], x[15], t[15], C)
	C, t[16] = madd2(y[22], x[16], t[16], C)
	C, t[17] = madd2(y[22], x[17], t[17], C)
	C, t[18] = madd2(y[22], x[18], t[18], C)
	C, t[19] = madd2(y[22], x[19], t[19], C)
	C, t[20] = madd2(y[22], x[20], t[20], C)
	C, t[21] = madd2(y[22], x[21], t[21], C)
	C, t[22] = madd2(y[22], x[22], t[22], C)
	C, t[23] = madd2(y[22], x[23], t[23], C)
	C, t[24] = madd2(y[22], x[24], t[24], C)
	C, t[25] = madd2(y[22], x[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 4285846825131721527

	// -----------------------------------
	// Second loop
	C = madd0(m, 1318738878612053369, t[0])

	C, t[0] = madd2(m, 16732179128150725226, t[1], C)

	C, t[1] = madd2(m, 15355618193144791007, t[2], C)

	C, t[2] = madd2(m, 4396344304518515882, t[3], C)

	C, t[3] = madd2(m, 11620695255275462168, t[4], C)

	C, t[4] = madd2(m, 5162480155730353270, t[5], C)

	C, t[5] = madd2(m, 11918365908634919040, t[6], C)

	C, t[6] = madd2(m, 18310788083607185061, t[7], C)

	C, t[7] = madd2(m, 1706818182961302545, t[8], C)

	C, t[8] = madd2(m, 7715318651855780330, t[9], C)

	C, t[9] = madd2(m, 4193845188432429317, t[10], C)

	C, t[10] = madd2(m, 1108113797489890163, t[11], C)

	C, t[11] = madd2(m, 16851474546529677959, t[12], C)

	C, t[12] = madd2(m, 14885581468941587647, t[13], C)

	C, t[13] = madd2(m, 4501432112780460688, t[14], C)

	C, t[14] = madd2(m, 781891996848210117, t[15], C)

	C, t[15] = madd2(m, 12250709359727562561, t[16], C)

	C, t[16] = madd2(m, 15994884257273436159, t[17], C)

	C, t[17] = madd2(m, 11140475058215084841, t[18], C)

	C, t[18] = madd2(m, 15324160921537003790, t[19], C)

	C, t[19] = madd2(m, 9275171629996515882, t[20], C)

	C, t[20] = madd2(m, 6415429827500927434, t[21], C)

	C, t[21] = madd2(m, 9969743536277534484, t[22], C)

	C, t[22] = madd2(m, 13493967136577301588, t[23], C)

	C, t[23] = madd2(m, 11095387261239247891, t[24], C)

	C, t[24] = madd3(m, 7540722130141040015, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[23], x[0], t[0])
	C, t[1] = madd2(y[23], x[1], t[1], C)
	C, t[2] = madd2(y[23], x[2], t[2], C)
	C, t[3] = madd2(y[23], x[3], t[3], C)
	C, t[4] = madd2(y[23], x[4], t[4], C)
	C, t[5] = madd2(y[23], x[5], t[5], C)
	C, t[6] = madd2(y[23], x[6], t[6], C)
	C, t[7] = madd2(y[23], x[7], t[7], C)
	C, t[8] = madd2(y[23], x[8], t[8], C)
	C, t[9] = madd2(y[23], x[9], t[9], C)
	C, t[10] = madd2(y[23], x[10], t[10], C)
	C, t[11] = madd2(y[23], x[11], t[11], C)
	C, t[12] = madd2(y[23], x[12], t[12], C)
	C, t[13] = madd2(y[23], x[13], t[13], C)
	C, t[14] = madd2(y[23], x[14], t[14], C)
	C, t[15] = madd2(y[23], x[15], t[15], C)
	C, t[16] = madd2(y[23], x[16], t[16], C)
	C, t[17] = madd2(y[23], x[17], t[17], C)
	C, t[18] = madd2(y[23], x[18], t[18], C)
	C, t[19] = madd2(y[23], x[19], t[19], C)
	C, t[20] = madd2(y[23], x[20], t[20], C)
	C, t[21] = madd2(y[23], x[21], t[21], C)
	C, t[22] = madd2(y[23], x[22], t[22], C)
	C, t[23] = madd2(y[23], x[23], t[23], C)
	C, t[24] = madd2(y[23], x[24], t[24], C)
	C, t[25] = madd2(y[23], x[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 4285846825131721527

	// -----------------------------------
	// Second loop
	C = madd0(m, 1318738878612053369, t[0])

	C, t[0] = madd2(m, 16732179128150725226, t[1], C)

	C, t[1] = madd2(m, 15355618193144791007, t[2], C)

	C, t[2] = madd2(m, 4396344304518515882, t[3], C)

	C, t[3] = madd2(m, 11620695255275462168, t[4], C)

	C, t[4] = madd2(m, 5162480155730353270, t[5], C)

	C, t[5] = madd2(m, 11918365908634919040, t[6], C)

	C, t[6] = madd2(m, 18310788083607185061, t[7], C)

	C, t[7] = madd2(m, 1706818182961302545, t[8], C)

	C, t[8] = madd2(m, 7715318651855780330, t[9], C)

	C, t[9] = madd2(m, 4193845188432429317, t[10], C)

	C, t[10] = madd2(m, 1108113797489890163, t[11], C)

	C, t[11] = madd2(m, 16851474546529677959, t[12], C)

	C, t[12] = madd2(m, 14885581468941587647, t[13], C)

	C, t[13] = madd2(m, 4501432112780460688, t[14], C)

	C, t[14] = madd2(m, 781891996848210117, t[15], C)

	C, t[15] = madd2(m, 12250709359727562561, t[16], C)

	C, t[16] = madd2(m, 15994884257273436159, t[17], C)

	C, t[17] = madd2(m, 11140475058215084841, t[18], C)

	C, t[18] = madd2(m, 15324160921537003790, t[19], C)

	C, t[19] = madd2(m, 9275171629996515882, t[20], C)

	C, t[20] = madd2(m, 6415429827500927434, t[21], C)

	C, t[21] = madd2(m, 9969743536277534484, t[22], C)

	C, t[22] = madd2(m, 13493967136577301588, t[23], C)

	C, t[23] = madd2(m, 11095387261239247891, t[24], C)

	C, t[24] = madd3(m, 7540722130141040015, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[24], x[0], t[0])
	C, t[1] = madd2(y[24], x[1], t[1], C)
	C, t[2] = madd2(y[24], x[2], t[2], C)
	C, t[3] = madd2(y[24], x[3], t[3], C)
	C, t[4] = madd2(y[24], x[4], t[4], C)
	C, t[5] = madd2(y[24], x[5], t[5], C)
	C, t[6] = madd2(y[24], x[6], t[6], C)
	C, t[7] = madd2(y[24], x[7], t[7], C)
	C, t[8] = madd2(y[24], x[8], t[8], C)
	C, t[9] = madd2(y[24], x[9], t[9], C)
	C, t[10] = madd2(y[24], x[10], t[10], C)
	C, t[11] = madd2(y[24], x[11], t[11], C)
	C, t[12] = madd2(y[24], x[12], t[12], C)
	C, t[13] = madd2(y[24], x[13], t[13], C)
	C, t[14] = madd2(y[24], x[14], t[14], C)
	C, t[15] = madd2(y[24], x[15], t[15], C)
	C, t[16] = madd2(y[24], x[16], t[16], C)
	C, t[17] = madd2(y[24], x[17], t[17], C)
	C, t[18] = madd2(y[24], x[18], t[18], C)
	C, t[19] = madd2(y[24], x[19], t[19], C)
	C, t[20] = madd2(y[24], x[20], t[20], C)
	C, t[21] = madd2(y[24], x[21], t[21], C)
	C, t[22] = madd2(y[24], x[22], t[22], C)
	C, t[23] = madd2(y[24], x[23], t[23], C)
	C, t[24] = madd2(y[24], x[24], t[24], C)
	C, t[25] = madd2(y[24], x[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 4285846825131721527

	// -----------------------------------
	// Second loop
	C = madd0(m, 1318738878612053369, t[0])

	C, t[0] = madd2(m, 16732179128150725226, t[1], C)

	C, t[1] = madd2(m, 15355618193144791007, t[2], C)

	C, t[2] = madd2(m, 4396344304518515882, t[3], C)

	C, t[3] = madd2(m, 11620695255275462168, t[4], C)

	C, t[4] = madd2(m, 5162480155730353270, t[5], C)

	C, t[5] = madd2(m, 11918365908634919040, t[6], C)

	C, t[6] = madd2(m, 18310788083607185061, t[7], C)

	C, t[7] = madd2(m, 1706818182961302545, t[8], C)

	C, t[8] = madd2(m, 7715318651855780330, t[9], C)

	C, t[9] = madd2(m, 4193845188432429317, t[10], C)

	C, t[10] = madd2(m, 1108113797489890163, t[11], C)

	C, t[11] = madd2(m, 16851474546529677959, t[12], C)

	C, t[12] = madd2(m, 14885581468941587647, t[13], C)

	C, t[13] = madd2(m, 4501432112780460688, t[14], C)

	C, t[14] = madd2(m, 781891996848210117, t[15], C)

	C, t[15] = madd2(m, 12250709359727562561, t[16], C)

	C, t[16] = madd2(m, 15994884257273436159, t[17], C)

	C, t[17] = madd2(m, 11140475058215084841, t[18], C)

	C, t[18] = madd2(m, 15324160921537003790, t[19], C)

	C, t[19] = madd2(m, 9275171629996515882, t[20], C)

	C, t[20] = madd2(m, 6415429827500927434, t[21], C)

	C, t[21] = madd2(m, 9969743536277534484, t[22], C)

	C, t[22] = madd2(m, 13493967136577301588, t[23], C)

	C, t[23] = madd2(m, 11095387261239247891, t[24], C)

	C, t[24] = madd3(m, 7540722130141040015, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[25], x[0], t[0])
	C, t[1] = madd2(y[25], x[1], t[1], C)
	C, t[2] = madd2(y[25], x[2], t[2], C)
	C, t[3] = madd2(y[25], x[3], t[3], C)
	C, t[4] = madd2(y[25], x[4], t[4], C)
	C, t[5] = madd2(y[25], x[5], t[5], C)
	C, t[6] = madd2(y[25], x[6], t[6], C)
	C, t[7] = madd2(y[25], x[7], t[7], C)
	C, t[8] = madd2(y[25], x[8], t[8], C)
	C, t[9] = madd2(y[25], x[9], t[9], C)
	C, t[10] = madd2(y[25], x[10], t[10], C)
	C, t[11] = madd2(y[25], x[11], t[11], C)
	C, t[12] = madd2(y[25], x[12], t[12], C)
	C, t[13] = madd2(y[25], x[13], t[13], C)
	C, t[14] = madd2(y[25], x[14], t[14], C)
	C, t[15] = madd2(y[25], x[15], t[15], C)
	C, t[16] = madd2(y[25], x[16], t[16], C)
	C, t[17] = madd2(y[25], x[17], t[17], C)
	C, t[18] = madd2(y[25], x[18], t[18], C)
	C, t[19] = madd2(y[25], x[19], t[19], C)
	C, t[20] = madd2(y[25], x[20], t[20], C)
	C, t[21] = madd2(y[25], x[21], t[21], C)
	C, t[22] = madd2(y[25], x[22], t[22], C)
	C, t[23] = madd2(y[25], x[23], t[23], C)
	C, t[24] = madd2(y[25], x[24], t[24], C)
	C, t[25] = madd2(y[25], x[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 4285846825131721527

	// -----------------------------------
	// Second loop
	C = madd0(m, 1318738878612053369, t[0])

	C, t[0] = madd2(m, 16732179128150725226, t[1], C)

	C, t[1] = madd2(m, 15355618193144791007, t[2], C)

	C, t[2] = madd2(m, 4396344304518515882, t[3], C)

	C, t[3] = madd2(m, 11620695255275462168, t[4], C)

	C, t[4] = madd2(m, 5162480155730353270, t[5], C)

	C, t[5] = madd2(m, 11918365908634919040, t[6], C)

	C, t[6] = madd2(m, 18310788083607185061, t[7], C)

	C, t[7] = madd2(m, 1706818182961302545, t[8], C)

	C, t[8] = madd2(m, 7715318651855780330, t[9], C)

	C, t[9] = madd2(m, 4193845188432429317, t[10], C)

	C, t[10] = madd2(m, 1108113797489890163, t[11], C)

	C, t[11] = madd2(m, 16851474546529677959, t[12], C)

	C, t[12] = madd2(m, 14885581468941587647, t[13], C)

	C, t[13] = madd2(m, 4501432112780460688, t[14], C)

	C, t[14] = madd2(m, 781891996848210117, t[15], C)

	C, t[15] = madd2(m, 12250709359727562561, t[16], C)

	C, t[16] = madd2(m, 15994884257273436159, t[17], C)

	C, t[17] = madd2(m, 11140475058215084841, t[18], C)

	C, t[18] = madd2(m, 15324160921537003790, t[19], C)

	C, t[19] = madd2(m, 9275171629996515882, t[20], C)

	C, t[20] = madd2(m, 6415429827500927434, t[21], C)

	C, t[21] = madd2(m, 9969743536277534484, t[22], C)

	C, t[22] = madd2(m, 13493967136577301588, t[23], C)

	C, t[23] = madd2(m, 11095387261239247891, t[24], C)

	C, t[24] = madd3(m, 7540722130141040015, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)

	if t[26] != 0 {
		// we need to reduce, we have a result on 27 words
		var b uint64
		z[0], b = bits.Sub64(t[0], 1318738878612053369, 0)
		z[1], b = bits.Sub64(t[1], 16732179128150725226, b)
		z[2], b = bits.Sub64(t[2], 15355618193144791007, b)
		z[3], b = bits.Sub64(t[3], 4396344304518515882, b)
		z[4], b = bits.Sub64(t[4], 11620695255275462168, b)
		z[5], b = bits.Sub64(t[5], 5162480155730353270, b)
		z[6], b = bits.Sub64(t[6], 11918365908634919040, b)
		z[7], b = bits.Sub64(t[7], 18310788083607185061, b)
		z[8], b = bits.Sub64(t[8], 1706818182961302545, b)
		z[9], b = bits.Sub64(t[9], 7715318651855780330, b)
		z[10], b = bits.Sub64(t[10], 4193845188432429317, b)
		z[11], b = bits.Sub64(t[11], 1108113797489890163, b)
		z[12], b = bits.Sub64(t[12], 16851474546529677959, b)
		z[13], b = bits.Sub64(t[13], 14885581468941587647, b)
		z[14], b = bits.Sub64(t[14], 4501432112780460688, b)
		z[15], b = bits.Sub64(t[15], 781891996848210117, b)
		z[16], b = bits.Sub64(t[16], 12250709359727562561, b)
		z[17], b = bits.Sub64(t[17], 15994884257273436159, b)
		z[18], b = bits.Sub64(t[18], 11140475058215084841, b)
		z[19], b = bits.Sub64(t[19], 15324160921537003790, b)
		z[20], b = bits.Sub64(t[20], 9275171629996515882, b)
		z[21], b = bits.Sub64(t[21], 6415429827500927434, b)
		z[22], b = bits.Sub64(t[22], 9969743536277534484, b)
		z[23], b = bits.Sub64(t[23], 13493967136577301588, b)
		z[24], b = bits.Sub64(t[24], 11095387261239247891, b)
		z[25], _ = bits.Sub64(t[25], 7540722130141040015, b)
		return z
	}

	// copy t into z
	z[0] = t[0]
	z[1] = t[1]
	z[2] = t[2]
	z[3] = t[3]
	z[4] = t[4]
	z[5] = t[5]
	z[6] = t[6]
	z[7] = t[7]
	z[8] = t[8]
	z[9] = t[9]
	z[10] = t[10]
	z[11] = t[11]
	z[12] = t[12]
	z[13] = t[13]
	z[14] = t[14]
	z[15] = t[15]
	z[16] = t[16]
	z[17] = t[17]
	z[18] = t[18]
	z[19] = t[19]
	z[20] = t[20]
	z[21] = t[21]
	z[22] = t[22]
	z[23] = t[23]
	z[24] = t[24]
	z[25] = t[25]

	// if z > q --> z -= q
	// note: this is NOT constant time
	if !(z[25] < 7540722130141040015 || (z[25] == 7540722130141040015 && (z[24] < 11095387261239247891 || (z[24] == 11095387261239247891 && (z[23] < 13493967136577301588 || (z[23] == 13493967136577301588 && (z[22] < 9969743536277534484 || (z[22] == 9969743536277534484 && (z[21] < 6415429827500927434 || (z[21] == 6415429827500927434 && (z[20] < 9275171629996515882 || (z[20] == 9275171629996515882 && (z[19] < 15324160921537003790 || (z[19] == 15324160921537003790 && (z[18] < 11140475058215084841 || (z[18] == 11140475058215084841 && (z[17] < 15994884257273436159 || (z[17] == 15994884257273436159 && (z[16] < 12250709359727562561 || (z[16] == 12250709359727562561 && (z[15] < 781891996848210117 || (z[15] == 781891996848210117 && (z[14] < 4501432112780460688 || (z[14] == 4501432112780460688 && (z[13] < 14885581468941587647 || (z[13] == 14885581468941587647 && (z[12] < 16851474546529677959 || (z[12] == 16851474546529677959 && (z[11] < 1108113797489890163 || (z[11] == 1108113797489890163 && (z[10] < 4193845188432429317 || (z[10] == 4193845188432429317 && (z[9] < 7715318651855780330 || (z[9] == 7715318651855780330 && (z[8] < 1706818182961302545 || (z[8] == 1706818182961302545 && (z[7] < 18310788083607185061 || (z[7] == 18310788083607185061 && (z[6] < 11918365908634919040 || (z[6] == 11918365908634919040 && (z[5] < 5162480155730353270 || (z[5] == 5162480155730353270 && (z[4] < 11620695255275462168 || (z[4] == 11620695255275462168 && (z[3] < 4396344304518515882 || (z[3] == 4396344304518515882 && (z[2] < 15355618193144791007 || (z[2] == 15355618193144791007 && (z[1] < 16732179128150725226 || (z[1] == 16732179128150725226 && (z[0] < 1318738878612053369))))))))))))))))))))))))))))))))))))))))))))))))))) {
		var b uint64
		z[0], b = bits.Sub64(z[0], 1318738878612053369, 0)
		z[1], b = bits.Sub64(z[1], 16732179128150725226, b)
		z[2], b = bits.Sub64(z[2], 15355618193144791007, b)
		z[3], b = bits.Sub64(z[3], 4396344304518515882, b)
		z[4], b = bits.Sub64(z[4], 11620695255275462168, b)
		z[5], b = bits.Sub64(z[5], 5162480155730353270, b)
		z[6], b = bits.Sub64(z[6], 11918365908634919040, b)
		z[7], b = bits.Sub64(z[7], 18310788083607185061, b)
		z[8], b = bits.Sub64(z[8], 1706818182961302545, b)
		z[9], b = bits.Sub64(z[9], 7715318651855780330, b)
		z[10], b = bits.Sub64(z[10], 4193845188432429317, b)
		z[11], b = bits.Sub64(z[11], 1108113797489890163, b)
		z[12], b = bits.Sub64(z[12], 16851474546529677959, b)
		z[13], b = bits.Sub64(z[13], 14885581468941587647, b)
		z[14], b = bits.Sub64(z[14], 4501432112780460688, b)
		z[15], b = bits.Sub64(z[15], 781891996848210117, b)
		z[16], b = bits.Sub64(z[16], 12250709359727562561, b)
		z[17], b = bits.Sub64(z[17], 15994884257273436159, b)
		z[18], b = bits.Sub64(z[18], 11140475058215084841, b)
		z[19], b = bits.Sub64(z[19], 15324160921537003790, b)
		z[20], b = bits.Sub64(z[20], 9275171629996515882, b)
		z[21], b = bits.Sub64(z[21], 6415429827500927434, b)
		z[22], b = bits.Sub64(z[22], 9969743536277534484, b)
		z[23], b = bits.Sub64(z[23], 13493967136577301588, b)
		z[24], b = bits.Sub64(z[24], 11095387261239247891, b)
		z[25], _ = bits.Sub64(z[25], 7540722130141040015, b)
	}
	return z
}

// MulAssign z = z * x mod q
func (z *Element26) MulAssign(x *Element26) *Element26 {

	var t [27]uint64
	var D uint64
	var m, C uint64
	// -----------------------------------
	// First loop

	C, t[0] = bits.Mul64(x[0], z[0])
	C, t[1] = madd1(x[0], z[1], C)
	C, t[2] = madd1(x[0], z[2], C)
	C, t[3] = madd1(x[0], z[3], C)
	C, t[4] = madd1(x[0], z[4], C)
	C, t[5] = madd1(x[0], z[5], C)
	C, t[6] = madd1(x[0], z[6], C)
	C, t[7] = madd1(x[0], z[7], C)
	C, t[8] = madd1(x[0], z[8], C)
	C, t[9] = madd1(x[0], z[9], C)
	C, t[10] = madd1(x[0], z[10], C)
	C, t[11] = madd1(x[0], z[11], C)
	C, t[12] = madd1(x[0], z[12], C)
	C, t[13] = madd1(x[0], z[13], C)
	C, t[14] = madd1(x[0], z[14], C)
	C, t[15] = madd1(x[0], z[15], C)
	C, t[16] = madd1(x[0], z[16], C)
	C, t[17] = madd1(x[0], z[17], C)
	C, t[18] = madd1(x[0], z[18], C)
	C, t[19] = madd1(x[0], z[19], C)
	C, t[20] = madd1(x[0], z[20], C)
	C, t[21] = madd1(x[0], z[21], C)
	C, t[22] = madd1(x[0], z[22], C)
	C, t[23] = madd1(x[0], z[23], C)
	C, t[24] = madd1(x[0], z[24], C)
	C, t[25] = madd1(x[0], z[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 4285846825131721527

	// -----------------------------------
	// Second loop
	C = madd0(m, 1318738878612053369, t[0])

	C, t[0] = madd2(m, 16732179128150725226, t[1], C)

	C, t[1] = madd2(m, 15355618193144791007, t[2], C)

	C, t[2] = madd2(m, 4396344304518515882, t[3], C)

	C, t[3] = madd2(m, 11620695255275462168, t[4], C)

	C, t[4] = madd2(m, 5162480155730353270, t[5], C)

	C, t[5] = madd2(m, 11918365908634919040, t[6], C)

	C, t[6] = madd2(m, 18310788083607185061, t[7], C)

	C, t[7] = madd2(m, 1706818182961302545, t[8], C)

	C, t[8] = madd2(m, 7715318651855780330, t[9], C)

	C, t[9] = madd2(m, 4193845188432429317, t[10], C)

	C, t[10] = madd2(m, 1108113797489890163, t[11], C)

	C, t[11] = madd2(m, 16851474546529677959, t[12], C)

	C, t[12] = madd2(m, 14885581468941587647, t[13], C)

	C, t[13] = madd2(m, 4501432112780460688, t[14], C)

	C, t[14] = madd2(m, 781891996848210117, t[15], C)

	C, t[15] = madd2(m, 12250709359727562561, t[16], C)

	C, t[16] = madd2(m, 15994884257273436159, t[17], C)

	C, t[17] = madd2(m, 11140475058215084841, t[18], C)

	C, t[18] = madd2(m, 15324160921537003790, t[19], C)

	C, t[19] = madd2(m, 9275171629996515882, t[20], C)

	C, t[20] = madd2(m, 6415429827500927434, t[21], C)

	C, t[21] = madd2(m, 9969743536277534484, t[22], C)

	C, t[22] = madd2(m, 13493967136577301588, t[23], C)

	C, t[23] = madd2(m, 11095387261239247891, t[24], C)

	C, t[24] = madd3(m, 7540722130141040015, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[1], z[0], t[0])
	C, t[1] = madd2(x[1], z[1], t[1], C)
	C, t[2] = madd2(x[1], z[2], t[2], C)
	C, t[3] = madd2(x[1], z[3], t[3], C)
	C, t[4] = madd2(x[1], z[4], t[4], C)
	C, t[5] = madd2(x[1], z[5], t[5], C)
	C, t[6] = madd2(x[1], z[6], t[6], C)
	C, t[7] = madd2(x[1], z[7], t[7], C)
	C, t[8] = madd2(x[1], z[8], t[8], C)
	C, t[9] = madd2(x[1], z[9], t[9], C)
	C, t[10] = madd2(x[1], z[10], t[10], C)
	C, t[11] = madd2(x[1], z[11], t[11], C)
	C, t[12] = madd2(x[1], z[12], t[12], C)
	C, t[13] = madd2(x[1], z[13], t[13], C)
	C, t[14] = madd2(x[1], z[14], t[14], C)
	C, t[15] = madd2(x[1], z[15], t[15], C)
	C, t[16] = madd2(x[1], z[16], t[16], C)
	C, t[17] = madd2(x[1], z[17], t[17], C)
	C, t[18] = madd2(x[1], z[18], t[18], C)
	C, t[19] = madd2(x[1], z[19], t[19], C)
	C, t[20] = madd2(x[1], z[20], t[20], C)
	C, t[21] = madd2(x[1], z[21], t[21], C)
	C, t[22] = madd2(x[1], z[22], t[22], C)
	C, t[23] = madd2(x[1], z[23], t[23], C)
	C, t[24] = madd2(x[1], z[24], t[24], C)
	C, t[25] = madd2(x[1], z[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 4285846825131721527

	// -----------------------------------
	// Second loop
	C = madd0(m, 1318738878612053369, t[0])

	C, t[0] = madd2(m, 16732179128150725226, t[1], C)

	C, t[1] = madd2(m, 15355618193144791007, t[2], C)

	C, t[2] = madd2(m, 4396344304518515882, t[3], C)

	C, t[3] = madd2(m, 11620695255275462168, t[4], C)

	C, t[4] = madd2(m, 5162480155730353270, t[5], C)

	C, t[5] = madd2(m, 11918365908634919040, t[6], C)

	C, t[6] = madd2(m, 18310788083607185061, t[7], C)

	C, t[7] = madd2(m, 1706818182961302545, t[8], C)

	C, t[8] = madd2(m, 7715318651855780330, t[9], C)

	C, t[9] = madd2(m, 4193845188432429317, t[10], C)

	C, t[10] = madd2(m, 1108113797489890163, t[11], C)

	C, t[11] = madd2(m, 16851474546529677959, t[12], C)

	C, t[12] = madd2(m, 14885581468941587647, t[13], C)

	C, t[13] = madd2(m, 4501432112780460688, t[14], C)

	C, t[14] = madd2(m, 781891996848210117, t[15], C)

	C, t[15] = madd2(m, 12250709359727562561, t[16], C)

	C, t[16] = madd2(m, 15994884257273436159, t[17], C)

	C, t[17] = madd2(m, 11140475058215084841, t[18], C)

	C, t[18] = madd2(m, 15324160921537003790, t[19], C)

	C, t[19] = madd2(m, 9275171629996515882, t[20], C)

	C, t[20] = madd2(m, 6415429827500927434, t[21], C)

	C, t[21] = madd2(m, 9969743536277534484, t[22], C)

	C, t[22] = madd2(m, 13493967136577301588, t[23], C)

	C, t[23] = madd2(m, 11095387261239247891, t[24], C)

	C, t[24] = madd3(m, 7540722130141040015, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[2], z[0], t[0])
	C, t[1] = madd2(x[2], z[1], t[1], C)
	C, t[2] = madd2(x[2], z[2], t[2], C)
	C, t[3] = madd2(x[2], z[3], t[3], C)
	C, t[4] = madd2(x[2], z[4], t[4], C)
	C, t[5] = madd2(x[2], z[5], t[5], C)
	C, t[6] = madd2(x[2], z[6], t[6], C)
	C, t[7] = madd2(x[2], z[7], t[7], C)
	C, t[8] = madd2(x[2], z[8], t[8], C)
	C, t[9] = madd2(x[2], z[9], t[9], C)
	C, t[10] = madd2(x[2], z[10], t[10], C)
	C, t[11] = madd2(x[2], z[11], t[11], C)
	C, t[12] = madd2(x[2], z[12], t[12], C)
	C, t[13] = madd2(x[2], z[13], t[13], C)
	C, t[14] = madd2(x[2], z[14], t[14], C)
	C, t[15] = madd2(x[2], z[15], t[15], C)
	C, t[16] = madd2(x[2], z[16], t[16], C)
	C, t[17] = madd2(x[2], z[17], t[17], C)
	C, t[18] = madd2(x[2], z[18], t[18], C)
	C, t[19] = madd2(x[2], z[19], t[19], C)
	C, t[20] = madd2(x[2], z[20], t[20], C)
	C, t[21] = madd2(x[2], z[21], t[21], C)
	C, t[22] = madd2(x[2], z[22], t[22], C)
	C, t[23] = madd2(x[2], z[23], t[23], C)
	C, t[24] = madd2(x[2], z[24], t[24], C)
	C, t[25] = madd2(x[2], z[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 4285846825131721527

	// -----------------------------------
	// Second loop
	C = madd0(m, 1318738878612053369, t[0])

	C, t[0] = madd2(m, 16732179128150725226, t[1], C)

	C, t[1] = madd2(m, 15355618193144791007, t[2], C)

	C, t[2] = madd2(m, 4396344304518515882, t[3], C)

	C, t[3] = madd2(m, 11620695255275462168, t[4], C)

	C, t[4] = madd2(m, 5162480155730353270, t[5], C)

	C, t[5] = madd2(m, 11918365908634919040, t[6], C)

	C, t[6] = madd2(m, 18310788083607185061, t[7], C)

	C, t[7] = madd2(m, 1706818182961302545, t[8], C)

	C, t[8] = madd2(m, 7715318651855780330, t[9], C)

	C, t[9] = madd2(m, 4193845188432429317, t[10], C)

	C, t[10] = madd2(m, 1108113797489890163, t[11], C)

	C, t[11] = madd2(m, 16851474546529677959, t[12], C)

	C, t[12] = madd2(m, 14885581468941587647, t[13], C)

	C, t[13] = madd2(m, 4501432112780460688, t[14], C)

	C, t[14] = madd2(m, 781891996848210117, t[15], C)

	C, t[15] = madd2(m, 12250709359727562561, t[16], C)

	C, t[16] = madd2(m, 15994884257273436159, t[17], C)

	C, t[17] = madd2(m, 11140475058215084841, t[18], C)

	C, t[18] = madd2(m, 15324160921537003790, t[19], C)

	C, t[19] = madd2(m, 9275171629996515882, t[20], C)

	C, t[20] = madd2(m, 6415429827500927434, t[21], C)

	C, t[21] = madd2(m, 9969743536277534484, t[22], C)

	C, t[22] = madd2(m, 13493967136577301588, t[23], C)

	C, t[23] = madd2(m, 11095387261239247891, t[24], C)

	C, t[24] = madd3(m, 7540722130141040015, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[3], z[0], t[0])
	C, t[1] = madd2(x[3], z[1], t[1], C)
	C, t[2] = madd2(x[3], z[2], t[2], C)
	C, t[3] = madd2(x[3], z[3], t[3], C)
	C, t[4] = madd2(x[3], z[4], t[4], C)
	C, t[5] = madd2(x[3], z[5], t[5], C)
	C, t[6] = madd2(x[3], z[6], t[6], C)
	C, t[7] = madd2(x[3], z[7], t[7], C)
	C, t[8] = madd2(x[3], z[8], t[8], C)
	C, t[9] = madd2(x[3], z[9], t[9], C)
	C, t[10] = madd2(x[3], z[10], t[10], C)
	C, t[11] = madd2(x[3], z[11], t[11], C)
	C, t[12] = madd2(x[3], z[12], t[12], C)
	C, t[13] = madd2(x[3], z[13], t[13], C)
	C, t[14] = madd2(x[3], z[14], t[14], C)
	C, t[15] = madd2(x[3], z[15], t[15], C)
	C, t[16] = madd2(x[3], z[16], t[16], C)
	C, t[17] = madd2(x[3], z[17], t[17], C)
	C, t[18] = madd2(x[3], z[18], t[18], C)
	C, t[19] = madd2(x[3], z[19], t[19], C)
	C, t[20] = madd2(x[3], z[20], t[20], C)
	C, t[21] = madd2(x[3], z[21], t[21], C)
	C, t[22] = madd2(x[3], z[22], t[22], C)
	C, t[23] = madd2(x[3], z[23], t[23], C)
	C, t[24] = madd2(x[3], z[24], t[24], C)
	C, t[25] = madd2(x[3], z[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 4285846825131721527

	// -----------------------------------
	// Second loop
	C = madd0(m, 1318738878612053369, t[0])

	C, t[0] = madd2(m, 16732179128150725226, t[1], C)

	C, t[1] = madd2(m, 15355618193144791007, t[2], C)

	C, t[2] = madd2(m, 4396344304518515882, t[3], C)

	C, t[3] = madd2(m, 11620695255275462168, t[4], C)

	C, t[4] = madd2(m, 5162480155730353270, t[5], C)

	C, t[5] = madd2(m, 11918365908634919040, t[6], C)

	C, t[6] = madd2(m, 18310788083607185061, t[7], C)

	C, t[7] = madd2(m, 1706818182961302545, t[8], C)

	C, t[8] = madd2(m, 7715318651855780330, t[9], C)

	C, t[9] = madd2(m, 4193845188432429317, t[10], C)

	C, t[10] = madd2(m, 1108113797489890163, t[11], C)

	C, t[11] = madd2(m, 16851474546529677959, t[12], C)

	C, t[12] = madd2(m, 14885581468941587647, t[13], C)

	C, t[13] = madd2(m, 4501432112780460688, t[14], C)

	C, t[14] = madd2(m, 781891996848210117, t[15], C)

	C, t[15] = madd2(m, 12250709359727562561, t[16], C)

	C, t[16] = madd2(m, 15994884257273436159, t[17], C)

	C, t[17] = madd2(m, 11140475058215084841, t[18], C)

	C, t[18] = madd2(m, 15324160921537003790, t[19], C)

	C, t[19] = madd2(m, 9275171629996515882, t[20], C)

	C, t[20] = madd2(m, 6415429827500927434, t[21], C)

	C, t[21] = madd2(m, 9969743536277534484, t[22], C)

	C, t[22] = madd2(m, 13493967136577301588, t[23], C)

	C, t[23] = madd2(m, 11095387261239247891, t[24], C)

	C, t[24] = madd3(m, 7540722130141040015, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[4], z[0], t[0])
	C, t[1] = madd2(x[4], z[1], t[1], C)
	C, t[2] = madd2(x[4], z[2], t[2], C)
	C, t[3] = madd2(x[4], z[3], t[3], C)
	C, t[4] = madd2(x[4], z[4], t[4], C)
	C, t[5] = madd2(x[4], z[5], t[5], C)
	C, t[6] = madd2(x[4], z[6], t[6], C)
	C, t[7] = madd2(x[4], z[7], t[7], C)
	C, t[8] = madd2(x[4], z[8], t[8], C)
	C, t[9] = madd2(x[4], z[9], t[9], C)
	C, t[10] = madd2(x[4], z[10], t[10], C)
	C, t[11] = madd2(x[4], z[11], t[11], C)
	C, t[12] = madd2(x[4], z[12], t[12], C)
	C, t[13] = madd2(x[4], z[13], t[13], C)
	C, t[14] = madd2(x[4], z[14], t[14], C)
	C, t[15] = madd2(x[4], z[15], t[15], C)
	C, t[16] = madd2(x[4], z[16], t[16], C)
	C, t[17] = madd2(x[4], z[17], t[17], C)
	C, t[18] = madd2(x[4], z[18], t[18], C)
	C, t[19] = madd2(x[4], z[19], t[19], C)
	C, t[20] = madd2(x[4], z[20], t[20], C)
	C, t[21] = madd2(x[4], z[21], t[21], C)
	C, t[22] = madd2(x[4], z[22], t[22], C)
	C, t[23] = madd2(x[4], z[23], t[23], C)
	C, t[24] = madd2(x[4], z[24], t[24], C)
	C, t[25] = madd2(x[4], z[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 4285846825131721527

	// -----------------------------------
	// Second loop
	C = madd0(m, 1318738878612053369, t[0])

	C, t[0] = madd2(m, 16732179128150725226, t[1], C)

	C, t[1] = madd2(m, 15355618193144791007, t[2], C)

	C, t[2] = madd2(m, 4396344304518515882, t[3], C)

	C, t[3] = madd2(m, 11620695255275462168, t[4], C)

	C, t[4] = madd2(m, 5162480155730353270, t[5], C)

	C, t[5] = madd2(m, 11918365908634919040, t[6], C)

	C, t[6] = madd2(m, 18310788083607185061, t[7], C)

	C, t[7] = madd2(m, 1706818182961302545, t[8], C)

	C, t[8] = madd2(m, 7715318651855780330, t[9], C)

	C, t[9] = madd2(m, 4193845188432429317, t[10], C)

	C, t[10] = madd2(m, 1108113797489890163, t[11], C)

	C, t[11] = madd2(m, 16851474546529677959, t[12], C)

	C, t[12] = madd2(m, 14885581468941587647, t[13], C)

	C, t[13] = madd2(m, 4501432112780460688, t[14], C)

	C, t[14] = madd2(m, 781891996848210117, t[15], C)

	C, t[15] = madd2(m, 12250709359727562561, t[16], C)

	C, t[16] = madd2(m, 15994884257273436159, t[17], C)

	C, t[17] = madd2(m, 11140475058215084841, t[18], C)

	C, t[18] = madd2(m, 15324160921537003790, t[19], C)

	C, t[19] = madd2(m, 9275171629996515882, t[20], C)

	C, t[20] = madd2(m, 6415429827500927434, t[21], C)

	C, t[21] = madd2(m, 9969743536277534484, t[22], C)

	C, t[22] = madd2(m, 13493967136577301588, t[23], C)

	C, t[23] = madd2(m, 11095387261239247891, t[24], C)

	C, t[24] = madd3(m, 7540722130141040015, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[5], z[0], t[0])
	C, t[1] = madd2(x[5], z[1], t[1], C)
	C, t[2] = madd2(x[5], z[2], t[2], C)
	C, t[3] = madd2(x[5], z[3], t[3], C)
	C, t[4] = madd2(x[5], z[4], t[4], C)
	C, t[5] = madd2(x[5], z[5], t[5], C)
	C, t[6] = madd2(x[5], z[6], t[6], C)
	C, t[7] = madd2(x[5], z[7], t[7], C)
	C, t[8] = madd2(x[5], z[8], t[8], C)
	C, t[9] = madd2(x[5], z[9], t[9], C)
	C, t[10] = madd2(x[5], z[10], t[10], C)
	C, t[11] = madd2(x[5], z[11], t[11], C)
	C, t[12] = madd2(x[5], z[12], t[12], C)
	C, t[13] = madd2(x[5], z[13], t[13], C)
	C, t[14] = madd2(x[5], z[14], t[14], C)
	C, t[15] = madd2(x[5], z[15], t[15], C)
	C, t[16] = madd2(x[5], z[16], t[16], C)
	C, t[17] = madd2(x[5], z[17], t[17], C)
	C, t[18] = madd2(x[5], z[18], t[18], C)
	C, t[19] = madd2(x[5], z[19], t[19], C)
	C, t[20] = madd2(x[5], z[20], t[20], C)
	C, t[21] = madd2(x[5], z[21], t[21], C)
	C, t[22] = madd2(x[5], z[22], t[22], C)
	C, t[23] = madd2(x[5], z[23], t[23], C)
	C, t[24] = madd2(x[5], z[24], t[24], C)
	C, t[25] = madd2(x[5], z[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 4285846825131721527

	// -----------------------------------
	// Second loop
	C = madd0(m, 1318738878612053369, t[0])

	C, t[0] = madd2(m, 16732179128150725226, t[1], C)

	C, t[1] = madd2(m, 15355618193144791007, t[2], C)

	C, t[2] = madd2(m, 4396344304518515882, t[3], C)

	C, t[3] = madd2(m, 11620695255275462168, t[4], C)

	C, t[4] = madd2(m, 5162480155730353270, t[5], C)

	C, t[5] = madd2(m, 11918365908634919040, t[6], C)

	C, t[6] = madd2(m, 18310788083607185061, t[7], C)

	C, t[7] = madd2(m, 1706818182961302545, t[8], C)

	C, t[8] = madd2(m, 7715318651855780330, t[9], C)

	C, t[9] = madd2(m, 4193845188432429317, t[10], C)

	C, t[10] = madd2(m, 1108113797489890163, t[11], C)

	C, t[11] = madd2(m, 16851474546529677959, t[12], C)

	C, t[12] = madd2(m, 14885581468941587647, t[13], C)

	C, t[13] = madd2(m, 4501432112780460688, t[14], C)

	C, t[14] = madd2(m, 781891996848210117, t[15], C)

	C, t[15] = madd2(m, 12250709359727562561, t[16], C)

	C, t[16] = madd2(m, 15994884257273436159, t[17], C)

	C, t[17] = madd2(m, 11140475058215084841, t[18], C)

	C, t[18] = madd2(m, 15324160921537003790, t[19], C)

	C, t[19] = madd2(m, 9275171629996515882, t[20], C)

	C, t[20] = madd2(m, 6415429827500927434, t[21], C)

	C, t[21] = madd2(m, 9969743536277534484, t[22], C)

	C, t[22] = madd2(m, 13493967136577301588, t[23], C)

	C, t[23] = madd2(m, 11095387261239247891, t[24], C)

	C, t[24] = madd3(m, 7540722130141040015, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[6], z[0], t[0])
	C, t[1] = madd2(x[6], z[1], t[1], C)
	C, t[2] = madd2(x[6], z[2], t[2], C)
	C, t[3] = madd2(x[6], z[3], t[3], C)
	C, t[4] = madd2(x[6], z[4], t[4], C)
	C, t[5] = madd2(x[6], z[5], t[5], C)
	C, t[6] = madd2(x[6], z[6], t[6], C)
	C, t[7] = madd2(x[6], z[7], t[7], C)
	C, t[8] = madd2(x[6], z[8], t[8], C)
	C, t[9] = madd2(x[6], z[9], t[9], C)
	C, t[10] = madd2(x[6], z[10], t[10], C)
	C, t[11] = madd2(x[6], z[11], t[11], C)
	C, t[12] = madd2(x[6], z[12], t[12], C)
	C, t[13] = madd2(x[6], z[13], t[13], C)
	C, t[14] = madd2(x[6], z[14], t[14], C)
	C, t[15] = madd2(x[6], z[15], t[15], C)
	C, t[16] = madd2(x[6], z[16], t[16], C)
	C, t[17] = madd2(x[6], z[17], t[17], C)
	C, t[18] = madd2(x[6], z[18], t[18], C)
	C, t[19] = madd2(x[6], z[19], t[19], C)
	C, t[20] = madd2(x[6], z[20], t[20], C)
	C, t[21] = madd2(x[6], z[21], t[21], C)
	C, t[22] = madd2(x[6], z[22], t[22], C)
	C, t[23] = madd2(x[6], z[23], t[23], C)
	C, t[24] = madd2(x[6], z[24], t[24], C)
	C, t[25] = madd2(x[6], z[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 4285846825131721527

	// -----------------------------------
	// Second loop
	C = madd0(m, 1318738878612053369, t[0])

	C, t[0] = madd2(m, 16732179128150725226, t[1], C)

	C, t[1] = madd2(m, 15355618193144791007, t[2], C)

	C, t[2] = madd2(m, 4396344304518515882, t[3], C)

	C, t[3] = madd2(m, 11620695255275462168, t[4], C)

	C, t[4] = madd2(m, 5162480155730353270, t[5], C)

	C, t[5] = madd2(m, 11918365908634919040, t[6], C)

	C, t[6] = madd2(m, 18310788083607185061, t[7], C)

	C, t[7] = madd2(m, 1706818182961302545, t[8], C)

	C, t[8] = madd2(m, 7715318651855780330, t[9], C)

	C, t[9] = madd2(m, 4193845188432429317, t[10], C)

	C, t[10] = madd2(m, 1108113797489890163, t[11], C)

	C, t[11] = madd2(m, 16851474546529677959, t[12], C)

	C, t[12] = madd2(m, 14885581468941587647, t[13], C)

	C, t[13] = madd2(m, 4501432112780460688, t[14], C)

	C, t[14] = madd2(m, 781891996848210117, t[15], C)

	C, t[15] = madd2(m, 12250709359727562561, t[16], C)

	C, t[16] = madd2(m, 15994884257273436159, t[17], C)

	C, t[17] = madd2(m, 11140475058215084841, t[18], C)

	C, t[18] = madd2(m, 15324160921537003790, t[19], C)

	C, t[19] = madd2(m, 9275171629996515882, t[20], C)

	C, t[20] = madd2(m, 6415429827500927434, t[21], C)

	C, t[21] = madd2(m, 9969743536277534484, t[22], C)

	C, t[22] = madd2(m, 13493967136577301588, t[23], C)

	C, t[23] = madd2(m, 11095387261239247891, t[24], C)

	C, t[24] = madd3(m, 7540722130141040015, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[7], z[0], t[0])
	C, t[1] = madd2(x[7], z[1], t[1], C)
	C, t[2] = madd2(x[7], z[2], t[2], C)
	C, t[3] = madd2(x[7], z[3], t[3], C)
	C, t[4] = madd2(x[7], z[4], t[4], C)
	C, t[5] = madd2(x[7], z[5], t[5], C)
	C, t[6] = madd2(x[7], z[6], t[6], C)
	C, t[7] = madd2(x[7], z[7], t[7], C)
	C, t[8] = madd2(x[7], z[8], t[8], C)
	C, t[9] = madd2(x[7], z[9], t[9], C)
	C, t[10] = madd2(x[7], z[10], t[10], C)
	C, t[11] = madd2(x[7], z[11], t[11], C)
	C, t[12] = madd2(x[7], z[12], t[12], C)
	C, t[13] = madd2(x[7], z[13], t[13], C)
	C, t[14] = madd2(x[7], z[14], t[14], C)
	C, t[15] = madd2(x[7], z[15], t[15], C)
	C, t[16] = madd2(x[7], z[16], t[16], C)
	C, t[17] = madd2(x[7], z[17], t[17], C)
	C, t[18] = madd2(x[7], z[18], t[18], C)
	C, t[19] = madd2(x[7], z[19], t[19], C)
	C, t[20] = madd2(x[7], z[20], t[20], C)
	C, t[21] = madd2(x[7], z[21], t[21], C)
	C, t[22] = madd2(x[7], z[22], t[22], C)
	C, t[23] = madd2(x[7], z[23], t[23], C)
	C, t[24] = madd2(x[7], z[24], t[24], C)
	C, t[25] = madd2(x[7], z[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 4285846825131721527

	// -----------------------------------
	// Second loop
	C = madd0(m, 1318738878612053369, t[0])

	C, t[0] = madd2(m, 16732179128150725226, t[1], C)

	C, t[1] = madd2(m, 15355618193144791007, t[2], C)

	C, t[2] = madd2(m, 4396344304518515882, t[3], C)

	C, t[3] = madd2(m, 11620695255275462168, t[4], C)

	C, t[4] = madd2(m, 5162480155730353270, t[5], C)

	C, t[5] = madd2(m, 11918365908634919040, t[6], C)

	C, t[6] = madd2(m, 18310788083607185061, t[7], C)

	C, t[7] = madd2(m, 1706818182961302545, t[8], C)

	C, t[8] = madd2(m, 7715318651855780330, t[9], C)

	C, t[9] = madd2(m, 4193845188432429317, t[10], C)

	C, t[10] = madd2(m, 1108113797489890163, t[11], C)

	C, t[11] = madd2(m, 16851474546529677959, t[12], C)

	C, t[12] = madd2(m, 14885581468941587647, t[13], C)

	C, t[13] = madd2(m, 4501432112780460688, t[14], C)

	C, t[14] = madd2(m, 781891996848210117, t[15], C)

	C, t[15] = madd2(m, 12250709359727562561, t[16], C)

	C, t[16] = madd2(m, 15994884257273436159, t[17], C)

	C, t[17] = madd2(m, 11140475058215084841, t[18], C)

	C, t[18] = madd2(m, 15324160921537003790, t[19], C)

	C, t[19] = madd2(m, 9275171629996515882, t[20], C)

	C, t[20] = madd2(m, 6415429827500927434, t[21], C)

	C, t[21] = madd2(m, 9969743536277534484, t[22], C)

	C, t[22] = madd2(m, 13493967136577301588, t[23], C)

	C, t[23] = madd2(m, 11095387261239247891, t[24], C)

	C, t[24] = madd3(m, 7540722130141040015, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[8], z[0], t[0])
	C, t[1] = madd2(x[8], z[1], t[1], C)
	C, t[2] = madd2(x[8], z[2], t[2], C)
	C, t[3] = madd2(x[8], z[3], t[3], C)
	C, t[4] = madd2(x[8], z[4], t[4], C)
	C, t[5] = madd2(x[8], z[5], t[5], C)
	C, t[6] = madd2(x[8], z[6], t[6], C)
	C, t[7] = madd2(x[8], z[7], t[7], C)
	C, t[8] = madd2(x[8], z[8], t[8], C)
	C, t[9] = madd2(x[8], z[9], t[9], C)
	C, t[10] = madd2(x[8], z[10], t[10], C)
	C, t[11] = madd2(x[8], z[11], t[11], C)
	C, t[12] = madd2(x[8], z[12], t[12], C)
	C, t[13] = madd2(x[8], z[13], t[13], C)
	C, t[14] = madd2(x[8], z[14], t[14], C)
	C, t[15] = madd2(x[8], z[15], t[15], C)
	C, t[16] = madd2(x[8], z[16], t[16], C)
	C, t[17] = madd2(x[8], z[17], t[17], C)
	C, t[18] = madd2(x[8], z[18], t[18], C)
	C, t[19] = madd2(x[8], z[19], t[19], C)
	C, t[20] = madd2(x[8], z[20], t[20], C)
	C, t[21] = madd2(x[8], z[21], t[21], C)
	C, t[22] = madd2(x[8], z[22], t[22], C)
	C, t[23] = madd2(x[8], z[23], t[23], C)
	C, t[24] = madd2(x[8], z[24], t[24], C)
	C, t[25] = madd2(x[8], z[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 4285846825131721527

	// -----------------------------------
	// Second loop
	C = madd0(m, 1318738878612053369, t[0])

	C, t[0] = madd2(m, 16732179128150725226, t[1], C)

	C, t[1] = madd2(m, 15355618193144791007, t[2], C)

	C, t[2] = madd2(m, 4396344304518515882, t[3], C)

	C, t[3] = madd2(m, 11620695255275462168, t[4], C)

	C, t[4] = madd2(m, 5162480155730353270, t[5], C)

	C, t[5] = madd2(m, 11918365908634919040, t[6], C)

	C, t[6] = madd2(m, 18310788083607185061, t[7], C)

	C, t[7] = madd2(m, 1706818182961302545, t[8], C)

	C, t[8] = madd2(m, 7715318651855780330, t[9], C)

	C, t[9] = madd2(m, 4193845188432429317, t[10], C)

	C, t[10] = madd2(m, 1108113797489890163, t[11], C)

	C, t[11] = madd2(m, 16851474546529677959, t[12], C)

	C, t[12] = madd2(m, 14885581468941587647, t[13], C)

	C, t[13] = madd2(m, 4501432112780460688, t[14], C)

	C, t[14] = madd2(m, 781891996848210117, t[15], C)

	C, t[15] = madd2(m, 12250709359727562561, t[16], C)

	C, t[16] = madd2(m, 15994884257273436159, t[17], C)

	C, t[17] = madd2(m, 11140475058215084841, t[18], C)

	C, t[18] = madd2(m, 15324160921537003790, t[19], C)

	C, t[19] = madd2(m, 9275171629996515882, t[20], C)

	C, t[20] = madd2(m, 6415429827500927434, t[21], C)

	C, t[21] = madd2(m, 9969743536277534484, t[22], C)

	C, t[22] = madd2(m, 13493967136577301588, t[23], C)

	C, t[23] = madd2(m, 11095387261239247891, t[24], C)

	C, t[24] = madd3(m, 7540722130141040015, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[9], z[0], t[0])
	C, t[1] = madd2(x[9], z[1], t[1], C)
	C, t[2] = madd2(x[9], z[2], t[2], C)
	C, t[3] = madd2(x[9], z[3], t[3], C)
	C, t[4] = madd2(x[9], z[4], t[4], C)
	C, t[5] = madd2(x[9], z[5], t[5], C)
	C, t[6] = madd2(x[9], z[6], t[6], C)
	C, t[7] = madd2(x[9], z[7], t[7], C)
	C, t[8] = madd2(x[9], z[8], t[8], C)
	C, t[9] = madd2(x[9], z[9], t[9], C)
	C, t[10] = madd2(x[9], z[10], t[10], C)
	C, t[11] = madd2(x[9], z[11], t[11], C)
	C, t[12] = madd2(x[9], z[12], t[12], C)
	C, t[13] = madd2(x[9], z[13], t[13], C)
	C, t[14] = madd2(x[9], z[14], t[14], C)
	C, t[15] = madd2(x[9], z[15], t[15], C)
	C, t[16] = madd2(x[9], z[16], t[16], C)
	C, t[17] = madd2(x[9], z[17], t[17], C)
	C, t[18] = madd2(x[9], z[18], t[18], C)
	C, t[19] = madd2(x[9], z[19], t[19], C)
	C, t[20] = madd2(x[9], z[20], t[20], C)
	C, t[21] = madd2(x[9], z[21], t[21], C)
	C, t[22] = madd2(x[9], z[22], t[22], C)
	C, t[23] = madd2(x[9], z[23], t[23], C)
	C, t[24] = madd2(x[9], z[24], t[24], C)
	C, t[25] = madd2(x[9], z[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 4285846825131721527

	// -----------------------------------
	// Second loop
	C = madd0(m, 1318738878612053369, t[0])

	C, t[0] = madd2(m, 16732179128150725226, t[1], C)

	C, t[1] = madd2(m, 15355618193144791007, t[2], C)

	C, t[2] = madd2(m, 4396344304518515882, t[3], C)

	C, t[3] = madd2(m, 11620695255275462168, t[4], C)

	C, t[4] = madd2(m, 5162480155730353270, t[5], C)

	C, t[5] = madd2(m, 11918365908634919040, t[6], C)

	C, t[6] = madd2(m, 18310788083607185061, t[7], C)

	C, t[7] = madd2(m, 1706818182961302545, t[8], C)

	C, t[8] = madd2(m, 7715318651855780330, t[9], C)

	C, t[9] = madd2(m, 4193845188432429317, t[10], C)

	C, t[10] = madd2(m, 1108113797489890163, t[11], C)

	C, t[11] = madd2(m, 16851474546529677959, t[12], C)

	C, t[12] = madd2(m, 14885581468941587647, t[13], C)

	C, t[13] = madd2(m, 4501432112780460688, t[14], C)

	C, t[14] = madd2(m, 781891996848210117, t[15], C)

	C, t[15] = madd2(m, 12250709359727562561, t[16], C)

	C, t[16] = madd2(m, 15994884257273436159, t[17], C)

	C, t[17] = madd2(m, 11140475058215084841, t[18], C)

	C, t[18] = madd2(m, 15324160921537003790, t[19], C)

	C, t[19] = madd2(m, 9275171629996515882, t[20], C)

	C, t[20] = madd2(m, 6415429827500927434, t[21], C)

	C, t[21] = madd2(m, 9969743536277534484, t[22], C)

	C, t[22] = madd2(m, 13493967136577301588, t[23], C)

	C, t[23] = madd2(m, 11095387261239247891, t[24], C)

	C, t[24] = madd3(m, 7540722130141040015, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[10], z[0], t[0])
	C, t[1] = madd2(x[10], z[1], t[1], C)
	C, t[2] = madd2(x[10], z[2], t[2], C)
	C, t[3] = madd2(x[10], z[3], t[3], C)
	C, t[4] = madd2(x[10], z[4], t[4], C)
	C, t[5] = madd2(x[10], z[5], t[5], C)
	C, t[6] = madd2(x[10], z[6], t[6], C)
	C, t[7] = madd2(x[10], z[7], t[7], C)
	C, t[8] = madd2(x[10], z[8], t[8], C)
	C, t[9] = madd2(x[10], z[9], t[9], C)
	C, t[10] = madd2(x[10], z[10], t[10], C)
	C, t[11] = madd2(x[10], z[11], t[11], C)
	C, t[12] = madd2(x[10], z[12], t[12], C)
	C, t[13] = madd2(x[10], z[13], t[13], C)
	C, t[14] = madd2(x[10], z[14], t[14], C)
	C, t[15] = madd2(x[10], z[15], t[15], C)
	C, t[16] = madd2(x[10], z[16], t[16], C)
	C, t[17] = madd2(x[10], z[17], t[17], C)
	C, t[18] = madd2(x[10], z[18], t[18], C)
	C, t[19] = madd2(x[10], z[19], t[19], C)
	C, t[20] = madd2(x[10], z[20], t[20], C)
	C, t[21] = madd2(x[10], z[21], t[21], C)
	C, t[22] = madd2(x[10], z[22], t[22], C)
	C, t[23] = madd2(x[10], z[23], t[23], C)
	C, t[24] = madd2(x[10], z[24], t[24], C)
	C, t[25] = madd2(x[10], z[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 4285846825131721527

	// -----------------------------------
	// Second loop
	C = madd0(m, 1318738878612053369, t[0])

	C, t[0] = madd2(m, 16732179128150725226, t[1], C)

	C, t[1] = madd2(m, 15355618193144791007, t[2], C)

	C, t[2] = madd2(m, 4396344304518515882, t[3], C)

	C, t[3] = madd2(m, 11620695255275462168, t[4], C)

	C, t[4] = madd2(m, 5162480155730353270, t[5], C)

	C, t[5] = madd2(m, 11918365908634919040, t[6], C)

	C, t[6] = madd2(m, 18310788083607185061, t[7], C)

	C, t[7] = madd2(m, 1706818182961302545, t[8], C)

	C, t[8] = madd2(m, 7715318651855780330, t[9], C)

	C, t[9] = madd2(m, 4193845188432429317, t[10], C)

	C, t[10] = madd2(m, 1108113797489890163, t[11], C)

	C, t[11] = madd2(m, 16851474546529677959, t[12], C)

	C, t[12] = madd2(m, 14885581468941587647, t[13], C)

	C, t[13] = madd2(m, 4501432112780460688, t[14], C)

	C, t[14] = madd2(m, 781891996848210117, t[15], C)

	C, t[15] = madd2(m, 12250709359727562561, t[16], C)

	C, t[16] = madd2(m, 15994884257273436159, t[17], C)

	C, t[17] = madd2(m, 11140475058215084841, t[18], C)

	C, t[18] = madd2(m, 15324160921537003790, t[19], C)

	C, t[19] = madd2(m, 9275171629996515882, t[20], C)

	C, t[20] = madd2(m, 6415429827500927434, t[21], C)

	C, t[21] = madd2(m, 9969743536277534484, t[22], C)

	C, t[22] = madd2(m, 13493967136577301588, t[23], C)

	C, t[23] = madd2(m, 11095387261239247891, t[24], C)

	C, t[24] = madd3(m, 7540722130141040015, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[11], z[0], t[0])
	C, t[1] = madd2(x[11], z[1], t[1], C)
	C, t[2] = madd2(x[11], z[2], t[2], C)
	C, t[3] = madd2(x[11], z[3], t[3], C)
	C, t[4] = madd2(x[11], z[4], t[4], C)
	C, t[5] = madd2(x[11], z[5], t[5], C)
	C, t[6] = madd2(x[11], z[6], t[6], C)
	C, t[7] = madd2(x[11], z[7], t[7], C)
	C, t[8] = madd2(x[11], z[8], t[8], C)
	C, t[9] = madd2(x[11], z[9], t[9], C)
	C, t[10] = madd2(x[11], z[10], t[10], C)
	C, t[11] = madd2(x[11], z[11], t[11], C)
	C, t[12] = madd2(x[11], z[12], t[12], C)
	C, t[13] = madd2(x[11], z[13], t[13], C)
	C, t[14] = madd2(x[11], z[14], t[14], C)
	C, t[15] = madd2(x[11], z[15], t[15], C)
	C, t[16] = madd2(x[11], z[16], t[16], C)
	C, t[17] = madd2(x[11], z[17], t[17], C)
	C, t[18] = madd2(x[11], z[18], t[18], C)
	C, t[19] = madd2(x[11], z[19], t[19], C)
	C, t[20] = madd2(x[11], z[20], t[20], C)
	C, t[21] = madd2(x[11], z[21], t[21], C)
	C, t[22] = madd2(x[11], z[22], t[22], C)
	C, t[23] = madd2(x[11], z[23], t[23], C)
	C, t[24] = madd2(x[11], z[24], t[24], C)
	C, t[25] = madd2(x[11], z[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 4285846825131721527

	// -----------------------------------
	// Second loop
	C = madd0(m, 1318738878612053369, t[0])

	C, t[0] = madd2(m, 16732179128150725226, t[1], C)

	C, t[1] = madd2(m, 15355618193144791007, t[2], C)

	C, t[2] = madd2(m, 4396344304518515882, t[3], C)

	C, t[3] = madd2(m, 11620695255275462168, t[4], C)

	C, t[4] = madd2(m, 5162480155730353270, t[5], C)

	C, t[5] = madd2(m, 11918365908634919040, t[6], C)

	C, t[6] = madd2(m, 18310788083607185061, t[7], C)

	C, t[7] = madd2(m, 1706818182961302545, t[8], C)

	C, t[8] = madd2(m, 7715318651855780330, t[9], C)

	C, t[9] = madd2(m, 4193845188432429317, t[10], C)

	C, t[10] = madd2(m, 1108113797489890163, t[11], C)

	C, t[11] = madd2(m, 16851474546529677959, t[12], C)

	C, t[12] = madd2(m, 14885581468941587647, t[13], C)

	C, t[13] = madd2(m, 4501432112780460688, t[14], C)

	C, t[14] = madd2(m, 781891996848210117, t[15], C)

	C, t[15] = madd2(m, 12250709359727562561, t[16], C)

	C, t[16] = madd2(m, 15994884257273436159, t[17], C)

	C, t[17] = madd2(m, 11140475058215084841, t[18], C)

	C, t[18] = madd2(m, 15324160921537003790, t[19], C)

	C, t[19] = madd2(m, 9275171629996515882, t[20], C)

	C, t[20] = madd2(m, 6415429827500927434, t[21], C)

	C, t[21] = madd2(m, 9969743536277534484, t[22], C)

	C, t[22] = madd2(m, 13493967136577301588, t[23], C)

	C, t[23] = madd2(m, 11095387261239247891, t[24], C)

	C, t[24] = madd3(m, 7540722130141040015, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[12], z[0], t[0])
	C, t[1] = madd2(x[12], z[1], t[1], C)
	C, t[2] = madd2(x[12], z[2], t[2], C)
	C, t[3] = madd2(x[12], z[3], t[3], C)
	C, t[4] = madd2(x[12], z[4], t[4], C)
	C, t[5] = madd2(x[12], z[5], t[5], C)
	C, t[6] = madd2(x[12], z[6], t[6], C)
	C, t[7] = madd2(x[12], z[7], t[7], C)
	C, t[8] = madd2(x[12], z[8], t[8], C)
	C, t[9] = madd2(x[12], z[9], t[9], C)
	C, t[10] = madd2(x[12], z[10], t[10], C)
	C, t[11] = madd2(x[12], z[11], t[11], C)
	C, t[12] = madd2(x[12], z[12], t[12], C)
	C, t[13] = madd2(x[12], z[13], t[13], C)
	C, t[14] = madd2(x[12], z[14], t[14], C)
	C, t[15] = madd2(x[12], z[15], t[15], C)
	C, t[16] = madd2(x[12], z[16], t[16], C)
	C, t[17] = madd2(x[12], z[17], t[17], C)
	C, t[18] = madd2(x[12], z[18], t[18], C)
	C, t[19] = madd2(x[12], z[19], t[19], C)
	C, t[20] = madd2(x[12], z[20], t[20], C)
	C, t[21] = madd2(x[12], z[21], t[21], C)
	C, t[22] = madd2(x[12], z[22], t[22], C)
	C, t[23] = madd2(x[12], z[23], t[23], C)
	C, t[24] = madd2(x[12], z[24], t[24], C)
	C, t[25] = madd2(x[12], z[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 4285846825131721527

	// -----------------------------------
	// Second loop
	C = madd0(m, 1318738878612053369, t[0])

	C, t[0] = madd2(m, 16732179128150725226, t[1], C)

	C, t[1] = madd2(m, 15355618193144791007, t[2], C)

	C, t[2] = madd2(m, 4396344304518515882, t[3], C)

	C, t[3] = madd2(m, 11620695255275462168, t[4], C)

	C, t[4] = madd2(m, 5162480155730353270, t[5], C)

	C, t[5] = madd2(m, 11918365908634919040, t[6], C)

	C, t[6] = madd2(m, 18310788083607185061, t[7], C)

	C, t[7] = madd2(m, 1706818182961302545, t[8], C)

	C, t[8] = madd2(m, 7715318651855780330, t[9], C)

	C, t[9] = madd2(m, 4193845188432429317, t[10], C)

	C, t[10] = madd2(m, 1108113797489890163, t[11], C)

	C, t[11] = madd2(m, 16851474546529677959, t[12], C)

	C, t[12] = madd2(m, 14885581468941587647, t[13], C)

	C, t[13] = madd2(m, 4501432112780460688, t[14], C)

	C, t[14] = madd2(m, 781891996848210117, t[15], C)

	C, t[15] = madd2(m, 12250709359727562561, t[16], C)

	C, t[16] = madd2(m, 15994884257273436159, t[17], C)

	C, t[17] = madd2(m, 11140475058215084841, t[18], C)

	C, t[18] = madd2(m, 15324160921537003790, t[19], C)

	C, t[19] = madd2(m, 9275171629996515882, t[20], C)

	C, t[20] = madd2(m, 6415429827500927434, t[21], C)

	C, t[21] = madd2(m, 9969743536277534484, t[22], C)

	C, t[22] = madd2(m, 13493967136577301588, t[23], C)

	C, t[23] = madd2(m, 11095387261239247891, t[24], C)

	C, t[24] = madd3(m, 7540722130141040015, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[13], z[0], t[0])
	C, t[1] = madd2(x[13], z[1], t[1], C)
	C, t[2] = madd2(x[13], z[2], t[2], C)
	C, t[3] = madd2(x[13], z[3], t[3], C)
	C, t[4] = madd2(x[13], z[4], t[4], C)
	C, t[5] = madd2(x[13], z[5], t[5], C)
	C, t[6] = madd2(x[13], z[6], t[6], C)
	C, t[7] = madd2(x[13], z[7], t[7], C)
	C, t[8] = madd2(x[13], z[8], t[8], C)
	C, t[9] = madd2(x[13], z[9], t[9], C)
	C, t[10] = madd2(x[13], z[10], t[10], C)
	C, t[11] = madd2(x[13], z[11], t[11], C)
	C, t[12] = madd2(x[13], z[12], t[12], C)
	C, t[13] = madd2(x[13], z[13], t[13], C)
	C, t[14] = madd2(x[13], z[14], t[14], C)
	C, t[15] = madd2(x[13], z[15], t[15], C)
	C, t[16] = madd2(x[13], z[16], t[16], C)
	C, t[17] = madd2(x[13], z[17], t[17], C)
	C, t[18] = madd2(x[13], z[18], t[18], C)
	C, t[19] = madd2(x[13], z[19], t[19], C)
	C, t[20] = madd2(x[13], z[20], t[20], C)
	C, t[21] = madd2(x[13], z[21], t[21], C)
	C, t[22] = madd2(x[13], z[22], t[22], C)
	C, t[23] = madd2(x[13], z[23], t[23], C)
	C, t[24] = madd2(x[13], z[24], t[24], C)
	C, t[25] = madd2(x[13], z[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 4285846825131721527

	// -----------------------------------
	// Second loop
	C = madd0(m, 1318738878612053369, t[0])

	C, t[0] = madd2(m, 16732179128150725226, t[1], C)

	C, t[1] = madd2(m, 15355618193144791007, t[2], C)

	C, t[2] = madd2(m, 4396344304518515882, t[3], C)

	C, t[3] = madd2(m, 11620695255275462168, t[4], C)

	C, t[4] = madd2(m, 5162480155730353270, t[5], C)

	C, t[5] = madd2(m, 11918365908634919040, t[6], C)

	C, t[6] = madd2(m, 18310788083607185061, t[7], C)

	C, t[7] = madd2(m, 1706818182961302545, t[8], C)

	C, t[8] = madd2(m, 7715318651855780330, t[9], C)

	C, t[9] = madd2(m, 4193845188432429317, t[10], C)

	C, t[10] = madd2(m, 1108113797489890163, t[11], C)

	C, t[11] = madd2(m, 16851474546529677959, t[12], C)

	C, t[12] = madd2(m, 14885581468941587647, t[13], C)

	C, t[13] = madd2(m, 4501432112780460688, t[14], C)

	C, t[14] = madd2(m, 781891996848210117, t[15], C)

	C, t[15] = madd2(m, 12250709359727562561, t[16], C)

	C, t[16] = madd2(m, 15994884257273436159, t[17], C)

	C, t[17] = madd2(m, 11140475058215084841, t[18], C)

	C, t[18] = madd2(m, 15324160921537003790, t[19], C)

	C, t[19] = madd2(m, 9275171629996515882, t[20], C)

	C, t[20] = madd2(m, 6415429827500927434, t[21], C)

	C, t[21] = madd2(m, 9969743536277534484, t[22], C)

	C, t[22] = madd2(m, 13493967136577301588, t[23], C)

	C, t[23] = madd2(m, 11095387261239247891, t[24], C)

	C, t[24] = madd3(m, 7540722130141040015, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[14], z[0], t[0])
	C, t[1] = madd2(x[14], z[1], t[1], C)
	C, t[2] = madd2(x[14], z[2], t[2], C)
	C, t[3] = madd2(x[14], z[3], t[3], C)
	C, t[4] = madd2(x[14], z[4], t[4], C)
	C, t[5] = madd2(x[14], z[5], t[5], C)
	C, t[6] = madd2(x[14], z[6], t[6], C)
	C, t[7] = madd2(x[14], z[7], t[7], C)
	C, t[8] = madd2(x[14], z[8], t[8], C)
	C, t[9] = madd2(x[14], z[9], t[9], C)
	C, t[10] = madd2(x[14], z[10], t[10], C)
	C, t[11] = madd2(x[14], z[11], t[11], C)
	C, t[12] = madd2(x[14], z[12], t[12], C)
	C, t[13] = madd2(x[14], z[13], t[13], C)
	C, t[14] = madd2(x[14], z[14], t[14], C)
	C, t[15] = madd2(x[14], z[15], t[15], C)
	C, t[16] = madd2(x[14], z[16], t[16], C)
	C, t[17] = madd2(x[14], z[17], t[17], C)
	C, t[18] = madd2(x[14], z[18], t[18], C)
	C, t[19] = madd2(x[14], z[19], t[19], C)
	C, t[20] = madd2(x[14], z[20], t[20], C)
	C, t[21] = madd2(x[14], z[21], t[21], C)
	C, t[22] = madd2(x[14], z[22], t[22], C)
	C, t[23] = madd2(x[14], z[23], t[23], C)
	C, t[24] = madd2(x[14], z[24], t[24], C)
	C, t[25] = madd2(x[14], z[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 4285846825131721527

	// -----------------------------------
	// Second loop
	C = madd0(m, 1318738878612053369, t[0])

	C, t[0] = madd2(m, 16732179128150725226, t[1], C)

	C, t[1] = madd2(m, 15355618193144791007, t[2], C)

	C, t[2] = madd2(m, 4396344304518515882, t[3], C)

	C, t[3] = madd2(m, 11620695255275462168, t[4], C)

	C, t[4] = madd2(m, 5162480155730353270, t[5], C)

	C, t[5] = madd2(m, 11918365908634919040, t[6], C)

	C, t[6] = madd2(m, 18310788083607185061, t[7], C)

	C, t[7] = madd2(m, 1706818182961302545, t[8], C)

	C, t[8] = madd2(m, 7715318651855780330, t[9], C)

	C, t[9] = madd2(m, 4193845188432429317, t[10], C)

	C, t[10] = madd2(m, 1108113797489890163, t[11], C)

	C, t[11] = madd2(m, 16851474546529677959, t[12], C)

	C, t[12] = madd2(m, 14885581468941587647, t[13], C)

	C, t[13] = madd2(m, 4501432112780460688, t[14], C)

	C, t[14] = madd2(m, 781891996848210117, t[15], C)

	C, t[15] = madd2(m, 12250709359727562561, t[16], C)

	C, t[16] = madd2(m, 15994884257273436159, t[17], C)

	C, t[17] = madd2(m, 11140475058215084841, t[18], C)

	C, t[18] = madd2(m, 15324160921537003790, t[19], C)

	C, t[19] = madd2(m, 9275171629996515882, t[20], C)

	C, t[20] = madd2(m, 6415429827500927434, t[21], C)

	C, t[21] = madd2(m, 9969743536277534484, t[22], C)

	C, t[22] = madd2(m, 13493967136577301588, t[23], C)

	C, t[23] = madd2(m, 11095387261239247891, t[24], C)

	C, t[24] = madd3(m, 7540722130141040015, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[15], z[0], t[0])
	C, t[1] = madd2(x[15], z[1], t[1], C)
	C, t[2] = madd2(x[15], z[2], t[2], C)
	C, t[3] = madd2(x[15], z[3], t[3], C)
	C, t[4] = madd2(x[15], z[4], t[4], C)
	C, t[5] = madd2(x[15], z[5], t[5], C)
	C, t[6] = madd2(x[15], z[6], t[6], C)
	C, t[7] = madd2(x[15], z[7], t[7], C)
	C, t[8] = madd2(x[15], z[8], t[8], C)
	C, t[9] = madd2(x[15], z[9], t[9], C)
	C, t[10] = madd2(x[15], z[10], t[10], C)
	C, t[11] = madd2(x[15], z[11], t[11], C)
	C, t[12] = madd2(x[15], z[12], t[12], C)
	C, t[13] = madd2(x[15], z[13], t[13], C)
	C, t[14] = madd2(x[15], z[14], t[14], C)
	C, t[15] = madd2(x[15], z[15], t[15], C)
	C, t[16] = madd2(x[15], z[16], t[16], C)
	C, t[17] = madd2(x[15], z[17], t[17], C)
	C, t[18] = madd2(x[15], z[18], t[18], C)
	C, t[19] = madd2(x[15], z[19], t[19], C)
	C, t[20] = madd2(x[15], z[20], t[20], C)
	C, t[21] = madd2(x[15], z[21], t[21], C)
	C, t[22] = madd2(x[15], z[22], t[22], C)
	C, t[23] = madd2(x[15], z[23], t[23], C)
	C, t[24] = madd2(x[15], z[24], t[24], C)
	C, t[25] = madd2(x[15], z[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 4285846825131721527

	// -----------------------------------
	// Second loop
	C = madd0(m, 1318738878612053369, t[0])

	C, t[0] = madd2(m, 16732179128150725226, t[1], C)

	C, t[1] = madd2(m, 15355618193144791007, t[2], C)

	C, t[2] = madd2(m, 4396344304518515882, t[3], C)

	C, t[3] = madd2(m, 11620695255275462168, t[4], C)

	C, t[4] = madd2(m, 5162480155730353270, t[5], C)

	C, t[5] = madd2(m, 11918365908634919040, t[6], C)

	C, t[6] = madd2(m, 18310788083607185061, t[7], C)

	C, t[7] = madd2(m, 1706818182961302545, t[8], C)

	C, t[8] = madd2(m, 7715318651855780330, t[9], C)

	C, t[9] = madd2(m, 4193845188432429317, t[10], C)

	C, t[10] = madd2(m, 1108113797489890163, t[11], C)

	C, t[11] = madd2(m, 16851474546529677959, t[12], C)

	C, t[12] = madd2(m, 14885581468941587647, t[13], C)

	C, t[13] = madd2(m, 4501432112780460688, t[14], C)

	C, t[14] = madd2(m, 781891996848210117, t[15], C)

	C, t[15] = madd2(m, 12250709359727562561, t[16], C)

	C, t[16] = madd2(m, 15994884257273436159, t[17], C)

	C, t[17] = madd2(m, 11140475058215084841, t[18], C)

	C, t[18] = madd2(m, 15324160921537003790, t[19], C)

	C, t[19] = madd2(m, 9275171629996515882, t[20], C)

	C, t[20] = madd2(m, 6415429827500927434, t[21], C)

	C, t[21] = madd2(m, 9969743536277534484, t[22], C)

	C, t[22] = madd2(m, 13493967136577301588, t[23], C)

	C, t[23] = madd2(m, 11095387261239247891, t[24], C)

	C, t[24] = madd3(m, 7540722130141040015, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[16], z[0], t[0])
	C, t[1] = madd2(x[16], z[1], t[1], C)
	C, t[2] = madd2(x[16], z[2], t[2], C)
	C, t[3] = madd2(x[16], z[3], t[3], C)
	C, t[4] = madd2(x[16], z[4], t[4], C)
	C, t[5] = madd2(x[16], z[5], t[5], C)
	C, t[6] = madd2(x[16], z[6], t[6], C)
	C, t[7] = madd2(x[16], z[7], t[7], C)
	C, t[8] = madd2(x[16], z[8], t[8], C)
	C, t[9] = madd2(x[16], z[9], t[9], C)
	C, t[10] = madd2(x[16], z[10], t[10], C)
	C, t[11] = madd2(x[16], z[11], t[11], C)
	C, t[12] = madd2(x[16], z[12], t[12], C)
	C, t[13] = madd2(x[16], z[13], t[13], C)
	C, t[14] = madd2(x[16], z[14], t[14], C)
	C, t[15] = madd2(x[16], z[15], t[15], C)
	C, t[16] = madd2(x[16], z[16], t[16], C)
	C, t[17] = madd2(x[16], z[17], t[17], C)
	C, t[18] = madd2(x[16], z[18], t[18], C)
	C, t[19] = madd2(x[16], z[19], t[19], C)
	C, t[20] = madd2(x[16], z[20], t[20], C)
	C, t[21] = madd2(x[16], z[21], t[21], C)
	C, t[22] = madd2(x[16], z[22], t[22], C)
	C, t[23] = madd2(x[16], z[23], t[23], C)
	C, t[24] = madd2(x[16], z[24], t[24], C)
	C, t[25] = madd2(x[16], z[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 4285846825131721527

	// -----------------------------------
	// Second loop
	C = madd0(m, 1318738878612053369, t[0])

	C, t[0] = madd2(m, 16732179128150725226, t[1], C)

	C, t[1] = madd2(m, 15355618193144791007, t[2], C)

	C, t[2] = madd2(m, 4396344304518515882, t[3], C)

	C, t[3] = madd2(m, 11620695255275462168, t[4], C)

	C, t[4] = madd2(m, 5162480155730353270, t[5], C)

	C, t[5] = madd2(m, 11918365908634919040, t[6], C)

	C, t[6] = madd2(m, 18310788083607185061, t[7], C)

	C, t[7] = madd2(m, 1706818182961302545, t[8], C)

	C, t[8] = madd2(m, 7715318651855780330, t[9], C)

	C, t[9] = madd2(m, 4193845188432429317, t[10], C)

	C, t[10] = madd2(m, 1108113797489890163, t[11], C)

	C, t[11] = madd2(m, 16851474546529677959, t[12], C)

	C, t[12] = madd2(m, 14885581468941587647, t[13], C)

	C, t[13] = madd2(m, 4501432112780460688, t[14], C)

	C, t[14] = madd2(m, 781891996848210117, t[15], C)

	C, t[15] = madd2(m, 12250709359727562561, t[16], C)

	C, t[16] = madd2(m, 15994884257273436159, t[17], C)

	C, t[17] = madd2(m, 11140475058215084841, t[18], C)

	C, t[18] = madd2(m, 15324160921537003790, t[19], C)

	C, t[19] = madd2(m, 9275171629996515882, t[20], C)

	C, t[20] = madd2(m, 6415429827500927434, t[21], C)

	C, t[21] = madd2(m, 9969743536277534484, t[22], C)

	C, t[22] = madd2(m, 13493967136577301588, t[23], C)

	C, t[23] = madd2(m, 11095387261239247891, t[24], C)

	C, t[24] = madd3(m, 7540722130141040015, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[17], z[0], t[0])
	C, t[1] = madd2(x[17], z[1], t[1], C)
	C, t[2] = madd2(x[17], z[2], t[2], C)
	C, t[3] = madd2(x[17], z[3], t[3], C)
	C, t[4] = madd2(x[17], z[4], t[4], C)
	C, t[5] = madd2(x[17], z[5], t[5], C)
	C, t[6] = madd2(x[17], z[6], t[6], C)
	C, t[7] = madd2(x[17], z[7], t[7], C)
	C, t[8] = madd2(x[17], z[8], t[8], C)
	C, t[9] = madd2(x[17], z[9], t[9], C)
	C, t[10] = madd2(x[17], z[10], t[10], C)
	C, t[11] = madd2(x[17], z[11], t[11], C)
	C, t[12] = madd2(x[17], z[12], t[12], C)
	C, t[13] = madd2(x[17], z[13], t[13], C)
	C, t[14] = madd2(x[17], z[14], t[14], C)
	C, t[15] = madd2(x[17], z[15], t[15], C)
	C, t[16] = madd2(x[17], z[16], t[16], C)
	C, t[17] = madd2(x[17], z[17], t[17], C)
	C, t[18] = madd2(x[17], z[18], t[18], C)
	C, t[19] = madd2(x[17], z[19], t[19], C)
	C, t[20] = madd2(x[17], z[20], t[20], C)
	C, t[21] = madd2(x[17], z[21], t[21], C)
	C, t[22] = madd2(x[17], z[22], t[22], C)
	C, t[23] = madd2(x[17], z[23], t[23], C)
	C, t[24] = madd2(x[17], z[24], t[24], C)
	C, t[25] = madd2(x[17], z[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 4285846825131721527

	// -----------------------------------
	// Second loop
	C = madd0(m, 1318738878612053369, t[0])

	C, t[0] = madd2(m, 16732179128150725226, t[1], C)

	C, t[1] = madd2(m, 15355618193144791007, t[2], C)

	C, t[2] = madd2(m, 4396344304518515882, t[3], C)

	C, t[3] = madd2(m, 11620695255275462168, t[4], C)

	C, t[4] = madd2(m, 5162480155730353270, t[5], C)

	C, t[5] = madd2(m, 11918365908634919040, t[6], C)

	C, t[6] = madd2(m, 18310788083607185061, t[7], C)

	C, t[7] = madd2(m, 1706818182961302545, t[8], C)

	C, t[8] = madd2(m, 7715318651855780330, t[9], C)

	C, t[9] = madd2(m, 4193845188432429317, t[10], C)

	C, t[10] = madd2(m, 1108113797489890163, t[11], C)

	C, t[11] = madd2(m, 16851474546529677959, t[12], C)

	C, t[12] = madd2(m, 14885581468941587647, t[13], C)

	C, t[13] = madd2(m, 4501432112780460688, t[14], C)

	C, t[14] = madd2(m, 781891996848210117, t[15], C)

	C, t[15] = madd2(m, 12250709359727562561, t[16], C)

	C, t[16] = madd2(m, 15994884257273436159, t[17], C)

	C, t[17] = madd2(m, 11140475058215084841, t[18], C)

	C, t[18] = madd2(m, 15324160921537003790, t[19], C)

	C, t[19] = madd2(m, 9275171629996515882, t[20], C)

	C, t[20] = madd2(m, 6415429827500927434, t[21], C)

	C, t[21] = madd2(m, 9969743536277534484, t[22], C)

	C, t[22] = madd2(m, 13493967136577301588, t[23], C)

	C, t[23] = madd2(m, 11095387261239247891, t[24], C)

	C, t[24] = madd3(m, 7540722130141040015, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[18], z[0], t[0])
	C, t[1] = madd2(x[18], z[1], t[1], C)
	C, t[2] = madd2(x[18], z[2], t[2], C)
	C, t[3] = madd2(x[18], z[3], t[3], C)
	C, t[4] = madd2(x[18], z[4], t[4], C)
	C, t[5] = madd2(x[18], z[5], t[5], C)
	C, t[6] = madd2(x[18], z[6], t[6], C)
	C, t[7] = madd2(x[18], z[7], t[7], C)
	C, t[8] = madd2(x[18], z[8], t[8], C)
	C, t[9] = madd2(x[18], z[9], t[9], C)
	C, t[10] = madd2(x[18], z[10], t[10], C)
	C, t[11] = madd2(x[18], z[11], t[11], C)
	C, t[12] = madd2(x[18], z[12], t[12], C)
	C, t[13] = madd2(x[18], z[13], t[13], C)
	C, t[14] = madd2(x[18], z[14], t[14], C)
	C, t[15] = madd2(x[18], z[15], t[15], C)
	C, t[16] = madd2(x[18], z[16], t[16], C)
	C, t[17] = madd2(x[18], z[17], t[17], C)
	C, t[18] = madd2(x[18], z[18], t[18], C)
	C, t[19] = madd2(x[18], z[19], t[19], C)
	C, t[20] = madd2(x[18], z[20], t[20], C)
	C, t[21] = madd2(x[18], z[21], t[21], C)
	C, t[22] = madd2(x[18], z[22], t[22], C)
	C, t[23] = madd2(x[18], z[23], t[23], C)
	C, t[24] = madd2(x[18], z[24], t[24], C)
	C, t[25] = madd2(x[18], z[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 4285846825131721527

	// -----------------------------------
	// Second loop
	C = madd0(m, 1318738878612053369, t[0])

	C, t[0] = madd2(m, 16732179128150725226, t[1], C)

	C, t[1] = madd2(m, 15355618193144791007, t[2], C)

	C, t[2] = madd2(m, 4396344304518515882, t[3], C)

	C, t[3] = madd2(m, 11620695255275462168, t[4], C)

	C, t[4] = madd2(m, 5162480155730353270, t[5], C)

	C, t[5] = madd2(m, 11918365908634919040, t[6], C)

	C, t[6] = madd2(m, 18310788083607185061, t[7], C)

	C, t[7] = madd2(m, 1706818182961302545, t[8], C)

	C, t[8] = madd2(m, 7715318651855780330, t[9], C)

	C, t[9] = madd2(m, 4193845188432429317, t[10], C)

	C, t[10] = madd2(m, 1108113797489890163, t[11], C)

	C, t[11] = madd2(m, 16851474546529677959, t[12], C)

	C, t[12] = madd2(m, 14885581468941587647, t[13], C)

	C, t[13] = madd2(m, 4501432112780460688, t[14], C)

	C, t[14] = madd2(m, 781891996848210117, t[15], C)

	C, t[15] = madd2(m, 12250709359727562561, t[16], C)

	C, t[16] = madd2(m, 15994884257273436159, t[17], C)

	C, t[17] = madd2(m, 11140475058215084841, t[18], C)

	C, t[18] = madd2(m, 15324160921537003790, t[19], C)

	C, t[19] = madd2(m, 9275171629996515882, t[20], C)

	C, t[20] = madd2(m, 6415429827500927434, t[21], C)

	C, t[21] = madd2(m, 9969743536277534484, t[22], C)

	C, t[22] = madd2(m, 13493967136577301588, t[23], C)

	C, t[23] = madd2(m, 11095387261239247891, t[24], C)

	C, t[24] = madd3(m, 7540722130141040015, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[19], z[0], t[0])
	C, t[1] = madd2(x[19], z[1], t[1], C)
	C, t[2] = madd2(x[19], z[2], t[2], C)
	C, t[3] = madd2(x[19], z[3], t[3], C)
	C, t[4] = madd2(x[19], z[4], t[4], C)
	C, t[5] = madd2(x[19], z[5], t[5], C)
	C, t[6] = madd2(x[19], z[6], t[6], C)
	C, t[7] = madd2(x[19], z[7], t[7], C)
	C, t[8] = madd2(x[19], z[8], t[8], C)
	C, t[9] = madd2(x[19], z[9], t[9], C)
	C, t[10] = madd2(x[19], z[10], t[10], C)
	C, t[11] = madd2(x[19], z[11], t[11], C)
	C, t[12] = madd2(x[19], z[12], t[12], C)
	C, t[13] = madd2(x[19], z[13], t[13], C)
	C, t[14] = madd2(x[19], z[14], t[14], C)
	C, t[15] = madd2(x[19], z[15], t[15], C)
	C, t[16] = madd2(x[19], z[16], t[16], C)
	C, t[17] = madd2(x[19], z[17], t[17], C)
	C, t[18] = madd2(x[19], z[18], t[18], C)
	C, t[19] = madd2(x[19], z[19], t[19], C)
	C, t[20] = madd2(x[19], z[20], t[20], C)
	C, t[21] = madd2(x[19], z[21], t[21], C)
	C, t[22] = madd2(x[19], z[22], t[22], C)
	C, t[23] = madd2(x[19], z[23], t[23], C)
	C, t[24] = madd2(x[19], z[24], t[24], C)
	C, t[25] = madd2(x[19], z[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 4285846825131721527

	// -----------------------------------
	// Second loop
	C = madd0(m, 1318738878612053369, t[0])

	C, t[0] = madd2(m, 16732179128150725226, t[1], C)

	C, t[1] = madd2(m, 15355618193144791007, t[2], C)

	C, t[2] = madd2(m, 4396344304518515882, t[3], C)

	C, t[3] = madd2(m, 11620695255275462168, t[4], C)

	C, t[4] = madd2(m, 5162480155730353270, t[5], C)

	C, t[5] = madd2(m, 11918365908634919040, t[6], C)

	C, t[6] = madd2(m, 18310788083607185061, t[7], C)

	C, t[7] = madd2(m, 1706818182961302545, t[8], C)

	C, t[8] = madd2(m, 7715318651855780330, t[9], C)

	C, t[9] = madd2(m, 4193845188432429317, t[10], C)

	C, t[10] = madd2(m, 1108113797489890163, t[11], C)

	C, t[11] = madd2(m, 16851474546529677959, t[12], C)

	C, t[12] = madd2(m, 14885581468941587647, t[13], C)

	C, t[13] = madd2(m, 4501432112780460688, t[14], C)

	C, t[14] = madd2(m, 781891996848210117, t[15], C)

	C, t[15] = madd2(m, 12250709359727562561, t[16], C)

	C, t[16] = madd2(m, 15994884257273436159, t[17], C)

	C, t[17] = madd2(m, 11140475058215084841, t[18], C)

	C, t[18] = madd2(m, 15324160921537003790, t[19], C)

	C, t[19] = madd2(m, 9275171629996515882, t[20], C)

	C, t[20] = madd2(m, 6415429827500927434, t[21], C)

	C, t[21] = madd2(m, 9969743536277534484, t[22], C)

	C, t[22] = madd2(m, 13493967136577301588, t[23], C)

	C, t[23] = madd2(m, 11095387261239247891, t[24], C)

	C, t[24] = madd3(m, 7540722130141040015, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[20], z[0], t[0])
	C, t[1] = madd2(x[20], z[1], t[1], C)
	C, t[2] = madd2(x[20], z[2], t[2], C)
	C, t[3] = madd2(x[20], z[3], t[3], C)
	C, t[4] = madd2(x[20], z[4], t[4], C)
	C, t[5] = madd2(x[20], z[5], t[5], C)
	C, t[6] = madd2(x[20], z[6], t[6], C)
	C, t[7] = madd2(x[20], z[7], t[7], C)
	C, t[8] = madd2(x[20], z[8], t[8], C)
	C, t[9] = madd2(x[20], z[9], t[9], C)
	C, t[10] = madd2(x[20], z[10], t[10], C)
	C, t[11] = madd2(x[20], z[11], t[11], C)
	C, t[12] = madd2(x[20], z[12], t[12], C)
	C, t[13] = madd2(x[20], z[13], t[13], C)
	C, t[14] = madd2(x[20], z[14], t[14], C)
	C, t[15] = madd2(x[20], z[15], t[15], C)
	C, t[16] = madd2(x[20], z[16], t[16], C)
	C, t[17] = madd2(x[20], z[17], t[17], C)
	C, t[18] = madd2(x[20], z[18], t[18], C)
	C, t[19] = madd2(x[20], z[19], t[19], C)
	C, t[20] = madd2(x[20], z[20], t[20], C)
	C, t[21] = madd2(x[20], z[21], t[21], C)
	C, t[22] = madd2(x[20], z[22], t[22], C)
	C, t[23] = madd2(x[20], z[23], t[23], C)
	C, t[24] = madd2(x[20], z[24], t[24], C)
	C, t[25] = madd2(x[20], z[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 4285846825131721527

	// -----------------------------------
	// Second loop
	C = madd0(m, 1318738878612053369, t[0])

	C, t[0] = madd2(m, 16732179128150725226, t[1], C)

	C, t[1] = madd2(m, 15355618193144791007, t[2], C)

	C, t[2] = madd2(m, 4396344304518515882, t[3], C)

	C, t[3] = madd2(m, 11620695255275462168, t[4], C)

	C, t[4] = madd2(m, 5162480155730353270, t[5], C)

	C, t[5] = madd2(m, 11918365908634919040, t[6], C)

	C, t[6] = madd2(m, 18310788083607185061, t[7], C)

	C, t[7] = madd2(m, 1706818182961302545, t[8], C)

	C, t[8] = madd2(m, 7715318651855780330, t[9], C)

	C, t[9] = madd2(m, 4193845188432429317, t[10], C)

	C, t[10] = madd2(m, 1108113797489890163, t[11], C)

	C, t[11] = madd2(m, 16851474546529677959, t[12], C)

	C, t[12] = madd2(m, 14885581468941587647, t[13], C)

	C, t[13] = madd2(m, 4501432112780460688, t[14], C)

	C, t[14] = madd2(m, 781891996848210117, t[15], C)

	C, t[15] = madd2(m, 12250709359727562561, t[16], C)

	C, t[16] = madd2(m, 15994884257273436159, t[17], C)

	C, t[17] = madd2(m, 11140475058215084841, t[18], C)

	C, t[18] = madd2(m, 15324160921537003790, t[19], C)

	C, t[19] = madd2(m, 9275171629996515882, t[20], C)

	C, t[20] = madd2(m, 6415429827500927434, t[21], C)

	C, t[21] = madd2(m, 9969743536277534484, t[22], C)

	C, t[22] = madd2(m, 13493967136577301588, t[23], C)

	C, t[23] = madd2(m, 11095387261239247891, t[24], C)

	C, t[24] = madd3(m, 7540722130141040015, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[21], z[0], t[0])
	C, t[1] = madd2(x[21], z[1], t[1], C)
	C, t[2] = madd2(x[21], z[2], t[2], C)
	C, t[3] = madd2(x[21], z[3], t[3], C)
	C, t[4] = madd2(x[21], z[4], t[4], C)
	C, t[5] = madd2(x[21], z[5], t[5], C)
	C, t[6] = madd2(x[21], z[6], t[6], C)
	C, t[7] = madd2(x[21], z[7], t[7], C)
	C, t[8] = madd2(x[21], z[8], t[8], C)
	C, t[9] = madd2(x[21], z[9], t[9], C)
	C, t[10] = madd2(x[21], z[10], t[10], C)
	C, t[11] = madd2(x[21], z[11], t[11], C)
	C, t[12] = madd2(x[21], z[12], t[12], C)
	C, t[13] = madd2(x[21], z[13], t[13], C)
	C, t[14] = madd2(x[21], z[14], t[14], C)
	C, t[15] = madd2(x[21], z[15], t[15], C)
	C, t[16] = madd2(x[21], z[16], t[16], C)
	C, t[17] = madd2(x[21], z[17], t[17], C)
	C, t[18] = madd2(x[21], z[18], t[18], C)
	C, t[19] = madd2(x[21], z[19], t[19], C)
	C, t[20] = madd2(x[21], z[20], t[20], C)
	C, t[21] = madd2(x[21], z[21], t[21], C)
	C, t[22] = madd2(x[21], z[22], t[22], C)
	C, t[23] = madd2(x[21], z[23], t[23], C)
	C, t[24] = madd2(x[21], z[24], t[24], C)
	C, t[25] = madd2(x[21], z[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 4285846825131721527

	// -----------------------------------
	// Second loop
	C = madd0(m, 1318738878612053369, t[0])

	C, t[0] = madd2(m, 16732179128150725226, t[1], C)

	C, t[1] = madd2(m, 15355618193144791007, t[2], C)

	C, t[2] = madd2(m, 4396344304518515882, t[3], C)

	C, t[3] = madd2(m, 11620695255275462168, t[4], C)

	C, t[4] = madd2(m, 5162480155730353270, t[5], C)

	C, t[5] = madd2(m, 11918365908634919040, t[6], C)

	C, t[6] = madd2(m, 18310788083607185061, t[7], C)

	C, t[7] = madd2(m, 1706818182961302545, t[8], C)

	C, t[8] = madd2(m, 7715318651855780330, t[9], C)

	C, t[9] = madd2(m, 4193845188432429317, t[10], C)

	C, t[10] = madd2(m, 1108113797489890163, t[11], C)

	C, t[11] = madd2(m, 16851474546529677959, t[12], C)

	C, t[12] = madd2(m, 14885581468941587647, t[13], C)

	C, t[13] = madd2(m, 4501432112780460688, t[14], C)

	C, t[14] = madd2(m, 781891996848210117, t[15], C)

	C, t[15] = madd2(m, 12250709359727562561, t[16], C)

	C, t[16] = madd2(m, 15994884257273436159, t[17], C)

	C, t[17] = madd2(m, 11140475058215084841, t[18], C)

	C, t[18] = madd2(m, 15324160921537003790, t[19], C)

	C, t[19] = madd2(m, 9275171629996515882, t[20], C)

	C, t[20] = madd2(m, 6415429827500927434, t[21], C)

	C, t[21] = madd2(m, 9969743536277534484, t[22], C)

	C, t[22] = madd2(m, 13493967136577301588, t[23], C)

	C, t[23] = madd2(m, 11095387261239247891, t[24], C)

	C, t[24] = madd3(m, 7540722130141040015, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[22], z[0], t[0])
	C, t[1] = madd2(x[22], z[1], t[1], C)
	C, t[2] = madd2(x[22], z[2], t[2], C)
	C, t[3] = madd2(x[22], z[3], t[3], C)
	C, t[4] = madd2(x[22], z[4], t[4], C)
	C, t[5] = madd2(x[22], z[5], t[5], C)
	C, t[6] = madd2(x[22], z[6], t[6], C)
	C, t[7] = madd2(x[22], z[7], t[7], C)
	C, t[8] = madd2(x[22], z[8], t[8], C)
	C, t[9] = madd2(x[22], z[9], t[9], C)
	C, t[10] = madd2(x[22], z[10], t[10], C)
	C, t[11] = madd2(x[22], z[11], t[11], C)
	C, t[12] = madd2(x[22], z[12], t[12], C)
	C, t[13] = madd2(x[22], z[13], t[13], C)
	C, t[14] = madd2(x[22], z[14], t[14], C)
	C, t[15] = madd2(x[22], z[15], t[15], C)
	C, t[16] = madd2(x[22], z[16], t[16], C)
	C, t[17] = madd2(x[22], z[17], t[17], C)
	C, t[18] = madd2(x[22], z[18], t[18], C)
	C, t[19] = madd2(x[22], z[19], t[19], C)
	C, t[20] = madd2(x[22], z[20], t[20], C)
	C, t[21] = madd2(x[22], z[21], t[21], C)
	C, t[22] = madd2(x[22], z[22], t[22], C)
	C, t[23] = madd2(x[22], z[23], t[23], C)
	C, t[24] = madd2(x[22], z[24], t[24], C)
	C, t[25] = madd2(x[22], z[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 4285846825131721527

	// -----------------------------------
	// Second loop
	C = madd0(m, 1318738878612053369, t[0])

	C, t[0] = madd2(m, 16732179128150725226, t[1], C)

	C, t[1] = madd2(m, 15355618193144791007, t[2], C)

	C, t[2] = madd2(m, 4396344304518515882, t[3], C)

	C, t[3] = madd2(m, 11620695255275462168, t[4], C)

	C, t[4] = madd2(m, 5162480155730353270, t[5], C)

	C, t[5] = madd2(m, 11918365908634919040, t[6], C)

	C, t[6] = madd2(m, 18310788083607185061, t[7], C)

	C, t[7] = madd2(m, 1706818182961302545, t[8], C)

	C, t[8] = madd2(m, 7715318651855780330, t[9], C)

	C, t[9] = madd2(m, 4193845188432429317, t[10], C)

	C, t[10] = madd2(m, 1108113797489890163, t[11], C)

	C, t[11] = madd2(m, 16851474546529677959, t[12], C)

	C, t[12] = madd2(m, 14885581468941587647, t[13], C)

	C, t[13] = madd2(m, 4501432112780460688, t[14], C)

	C, t[14] = madd2(m, 781891996848210117, t[15], C)

	C, t[15] = madd2(m, 12250709359727562561, t[16], C)

	C, t[16] = madd2(m, 15994884257273436159, t[17], C)

	C, t[17] = madd2(m, 11140475058215084841, t[18], C)

	C, t[18] = madd2(m, 15324160921537003790, t[19], C)

	C, t[19] = madd2(m, 9275171629996515882, t[20], C)

	C, t[20] = madd2(m, 6415429827500927434, t[21], C)

	C, t[21] = madd2(m, 9969743536277534484, t[22], C)

	C, t[22] = madd2(m, 13493967136577301588, t[23], C)

	C, t[23] = madd2(m, 11095387261239247891, t[24], C)

	C, t[24] = madd3(m, 7540722130141040015, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[23], z[0], t[0])
	C, t[1] = madd2(x[23], z[1], t[1], C)
	C, t[2] = madd2(x[23], z[2], t[2], C)
	C, t[3] = madd2(x[23], z[3], t[3], C)
	C, t[4] = madd2(x[23], z[4], t[4], C)
	C, t[5] = madd2(x[23], z[5], t[5], C)
	C, t[6] = madd2(x[23], z[6], t[6], C)
	C, t[7] = madd2(x[23], z[7], t[7], C)
	C, t[8] = madd2(x[23], z[8], t[8], C)
	C, t[9] = madd2(x[23], z[9], t[9], C)
	C, t[10] = madd2(x[23], z[10], t[10], C)
	C, t[11] = madd2(x[23], z[11], t[11], C)
	C, t[12] = madd2(x[23], z[12], t[12], C)
	C, t[13] = madd2(x[23], z[13], t[13], C)
	C, t[14] = madd2(x[23], z[14], t[14], C)
	C, t[15] = madd2(x[23], z[15], t[15], C)
	C, t[16] = madd2(x[23], z[16], t[16], C)
	C, t[17] = madd2(x[23], z[17], t[17], C)
	C, t[18] = madd2(x[23], z[18], t[18], C)
	C, t[19] = madd2(x[23], z[19], t[19], C)
	C, t[20] = madd2(x[23], z[20], t[20], C)
	C, t[21] = madd2(x[23], z[21], t[21], C)
	C, t[22] = madd2(x[23], z[22], t[22], C)
	C, t[23] = madd2(x[23], z[23], t[23], C)
	C, t[24] = madd2(x[23], z[24], t[24], C)
	C, t[25] = madd2(x[23], z[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 4285846825131721527

	// -----------------------------------
	// Second loop
	C = madd0(m, 1318738878612053369, t[0])

	C, t[0] = madd2(m, 16732179128150725226, t[1], C)

	C, t[1] = madd2(m, 15355618193144791007, t[2], C)

	C, t[2] = madd2(m, 4396344304518515882, t[3], C)

	C, t[3] = madd2(m, 11620695255275462168, t[4], C)

	C, t[4] = madd2(m, 5162480155730353270, t[5], C)

	C, t[5] = madd2(m, 11918365908634919040, t[6], C)

	C, t[6] = madd2(m, 18310788083607185061, t[7], C)

	C, t[7] = madd2(m, 1706818182961302545, t[8], C)

	C, t[8] = madd2(m, 7715318651855780330, t[9], C)

	C, t[9] = madd2(m, 4193845188432429317, t[10], C)

	C, t[10] = madd2(m, 1108113797489890163, t[11], C)

	C, t[11] = madd2(m, 16851474546529677959, t[12], C)

	C, t[12] = madd2(m, 14885581468941587647, t[13], C)

	C, t[13] = madd2(m, 4501432112780460688, t[14], C)

	C, t[14] = madd2(m, 781891996848210117, t[15], C)

	C, t[15] = madd2(m, 12250709359727562561, t[16], C)

	C, t[16] = madd2(m, 15994884257273436159, t[17], C)

	C, t[17] = madd2(m, 11140475058215084841, t[18], C)

	C, t[18] = madd2(m, 15324160921537003790, t[19], C)

	C, t[19] = madd2(m, 9275171629996515882, t[20], C)

	C, t[20] = madd2(m, 6415429827500927434, t[21], C)

	C, t[21] = madd2(m, 9969743536277534484, t[22], C)

	C, t[22] = madd2(m, 13493967136577301588, t[23], C)

	C, t[23] = madd2(m, 11095387261239247891, t[24], C)

	C, t[24] = madd3(m, 7540722130141040015, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[24], z[0], t[0])
	C, t[1] = madd2(x[24], z[1], t[1], C)
	C, t[2] = madd2(x[24], z[2], t[2], C)
	C, t[3] = madd2(x[24], z[3], t[3], C)
	C, t[4] = madd2(x[24], z[4], t[4], C)
	C, t[5] = madd2(x[24], z[5], t[5], C)
	C, t[6] = madd2(x[24], z[6], t[6], C)
	C, t[7] = madd2(x[24], z[7], t[7], C)
	C, t[8] = madd2(x[24], z[8], t[8], C)
	C, t[9] = madd2(x[24], z[9], t[9], C)
	C, t[10] = madd2(x[24], z[10], t[10], C)
	C, t[11] = madd2(x[24], z[11], t[11], C)
	C, t[12] = madd2(x[24], z[12], t[12], C)
	C, t[13] = madd2(x[24], z[13], t[13], C)
	C, t[14] = madd2(x[24], z[14], t[14], C)
	C, t[15] = madd2(x[24], z[15], t[15], C)
	C, t[16] = madd2(x[24], z[16], t[16], C)
	C, t[17] = madd2(x[24], z[17], t[17], C)
	C, t[18] = madd2(x[24], z[18], t[18], C)
	C, t[19] = madd2(x[24], z[19], t[19], C)
	C, t[20] = madd2(x[24], z[20], t[20], C)
	C, t[21] = madd2(x[24], z[21], t[21], C)
	C, t[22] = madd2(x[24], z[22], t[22], C)
	C, t[23] = madd2(x[24], z[23], t[23], C)
	C, t[24] = madd2(x[24], z[24], t[24], C)
	C, t[25] = madd2(x[24], z[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 4285846825131721527

	// -----------------------------------
	// Second loop
	C = madd0(m, 1318738878612053369, t[0])

	C, t[0] = madd2(m, 16732179128150725226, t[1], C)

	C, t[1] = madd2(m, 15355618193144791007, t[2], C)

	C, t[2] = madd2(m, 4396344304518515882, t[3], C)

	C, t[3] = madd2(m, 11620695255275462168, t[4], C)

	C, t[4] = madd2(m, 5162480155730353270, t[5], C)

	C, t[5] = madd2(m, 11918365908634919040, t[6], C)

	C, t[6] = madd2(m, 18310788083607185061, t[7], C)

	C, t[7] = madd2(m, 1706818182961302545, t[8], C)

	C, t[8] = madd2(m, 7715318651855780330, t[9], C)

	C, t[9] = madd2(m, 4193845188432429317, t[10], C)

	C, t[10] = madd2(m, 1108113797489890163, t[11], C)

	C, t[11] = madd2(m, 16851474546529677959, t[12], C)

	C, t[12] = madd2(m, 14885581468941587647, t[13], C)

	C, t[13] = madd2(m, 4501432112780460688, t[14], C)

	C, t[14] = madd2(m, 781891996848210117, t[15], C)

	C, t[15] = madd2(m, 12250709359727562561, t[16], C)

	C, t[16] = madd2(m, 15994884257273436159, t[17], C)

	C, t[17] = madd2(m, 11140475058215084841, t[18], C)

	C, t[18] = madd2(m, 15324160921537003790, t[19], C)

	C, t[19] = madd2(m, 9275171629996515882, t[20], C)

	C, t[20] = madd2(m, 6415429827500927434, t[21], C)

	C, t[21] = madd2(m, 9969743536277534484, t[22], C)

	C, t[22] = madd2(m, 13493967136577301588, t[23], C)

	C, t[23] = madd2(m, 11095387261239247891, t[24], C)

	C, t[24] = madd3(m, 7540722130141040015, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[25], z[0], t[0])
	C, t[1] = madd2(x[25], z[1], t[1], C)
	C, t[2] = madd2(x[25], z[2], t[2], C)
	C, t[3] = madd2(x[25], z[3], t[3], C)
	C, t[4] = madd2(x[25], z[4], t[4], C)
	C, t[5] = madd2(x[25], z[5], t[5], C)
	C, t[6] = madd2(x[25], z[6], t[6], C)
	C, t[7] = madd2(x[25], z[7], t[7], C)
	C, t[8] = madd2(x[25], z[8], t[8], C)
	C, t[9] = madd2(x[25], z[9], t[9], C)
	C, t[10] = madd2(x[25], z[10], t[10], C)
	C, t[11] = madd2(x[25], z[11], t[11], C)
	C, t[12] = madd2(x[25], z[12], t[12], C)
	C, t[13] = madd2(x[25], z[13], t[13], C)
	C, t[14] = madd2(x[25], z[14], t[14], C)
	C, t[15] = madd2(x[25], z[15], t[15], C)
	C, t[16] = madd2(x[25], z[16], t[16], C)
	C, t[17] = madd2(x[25], z[17], t[17], C)
	C, t[18] = madd2(x[25], z[18], t[18], C)
	C, t[19] = madd2(x[25], z[19], t[19], C)
	C, t[20] = madd2(x[25], z[20], t[20], C)
	C, t[21] = madd2(x[25], z[21], t[21], C)
	C, t[22] = madd2(x[25], z[22], t[22], C)
	C, t[23] = madd2(x[25], z[23], t[23], C)
	C, t[24] = madd2(x[25], z[24], t[24], C)
	C, t[25] = madd2(x[25], z[25], t[25], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 4285846825131721527

	// -----------------------------------
	// Second loop
	C = madd0(m, 1318738878612053369, t[0])

	C, t[0] = madd2(m, 16732179128150725226, t[1], C)

	C, t[1] = madd2(m, 15355618193144791007, t[2], C)

	C, t[2] = madd2(m, 4396344304518515882, t[3], C)

	C, t[3] = madd2(m, 11620695255275462168, t[4], C)

	C, t[4] = madd2(m, 5162480155730353270, t[5], C)

	C, t[5] = madd2(m, 11918365908634919040, t[6], C)

	C, t[6] = madd2(m, 18310788083607185061, t[7], C)

	C, t[7] = madd2(m, 1706818182961302545, t[8], C)

	C, t[8] = madd2(m, 7715318651855780330, t[9], C)

	C, t[9] = madd2(m, 4193845188432429317, t[10], C)

	C, t[10] = madd2(m, 1108113797489890163, t[11], C)

	C, t[11] = madd2(m, 16851474546529677959, t[12], C)

	C, t[12] = madd2(m, 14885581468941587647, t[13], C)

	C, t[13] = madd2(m, 4501432112780460688, t[14], C)

	C, t[14] = madd2(m, 781891996848210117, t[15], C)

	C, t[15] = madd2(m, 12250709359727562561, t[16], C)

	C, t[16] = madd2(m, 15994884257273436159, t[17], C)

	C, t[17] = madd2(m, 11140475058215084841, t[18], C)

	C, t[18] = madd2(m, 15324160921537003790, t[19], C)

	C, t[19] = madd2(m, 9275171629996515882, t[20], C)

	C, t[20] = madd2(m, 6415429827500927434, t[21], C)

	C, t[21] = madd2(m, 9969743536277534484, t[22], C)

	C, t[22] = madd2(m, 13493967136577301588, t[23], C)

	C, t[23] = madd2(m, 11095387261239247891, t[24], C)

	C, t[24] = madd3(m, 7540722130141040015, t[25], C, t[26])

	t[25], t[26] = bits.Add64(D, C, 0)

	if t[26] != 0 {
		// we need to reduce, we have a result on 27 words
		var b uint64
		z[0], b = bits.Sub64(t[0], 1318738878612053369, 0)
		z[1], b = bits.Sub64(t[1], 16732179128150725226, b)
		z[2], b = bits.Sub64(t[2], 15355618193144791007, b)
		z[3], b = bits.Sub64(t[3], 4396344304518515882, b)
		z[4], b = bits.Sub64(t[4], 11620695255275462168, b)
		z[5], b = bits.Sub64(t[5], 5162480155730353270, b)
		z[6], b = bits.Sub64(t[6], 11918365908634919040, b)
		z[7], b = bits.Sub64(t[7], 18310788083607185061, b)
		z[8], b = bits.Sub64(t[8], 1706818182961302545, b)
		z[9], b = bits.Sub64(t[9], 7715318651855780330, b)
		z[10], b = bits.Sub64(t[10], 4193845188432429317, b)
		z[11], b = bits.Sub64(t[11], 1108113797489890163, b)
		z[12], b = bits.Sub64(t[12], 16851474546529677959, b)
		z[13], b = bits.Sub64(t[13], 14885581468941587647, b)
		z[14], b = bits.Sub64(t[14], 4501432112780460688, b)
		z[15], b = bits.Sub64(t[15], 781891996848210117, b)
		z[16], b = bits.Sub64(t[16], 12250709359727562561, b)
		z[17], b = bits.Sub64(t[17], 15994884257273436159, b)
		z[18], b = bits.Sub64(t[18], 11140475058215084841, b)
		z[19], b = bits.Sub64(t[19], 15324160921537003790, b)
		z[20], b = bits.Sub64(t[20], 9275171629996515882, b)
		z[21], b = bits.Sub64(t[21], 6415429827500927434, b)
		z[22], b = bits.Sub64(t[22], 9969743536277534484, b)
		z[23], b = bits.Sub64(t[23], 13493967136577301588, b)
		z[24], b = bits.Sub64(t[24], 11095387261239247891, b)
		z[25], _ = bits.Sub64(t[25], 7540722130141040015, b)
		return z
	}

	// copy t into z
	z[0] = t[0]
	z[1] = t[1]
	z[2] = t[2]
	z[3] = t[3]
	z[4] = t[4]
	z[5] = t[5]
	z[6] = t[6]
	z[7] = t[7]
	z[8] = t[8]
	z[9] = t[9]
	z[10] = t[10]
	z[11] = t[11]
	z[12] = t[12]
	z[13] = t[13]
	z[14] = t[14]
	z[15] = t[15]
	z[16] = t[16]
	z[17] = t[17]
	z[18] = t[18]
	z[19] = t[19]
	z[20] = t[20]
	z[21] = t[21]
	z[22] = t[22]
	z[23] = t[23]
	z[24] = t[24]
	z[25] = t[25]

	// if z > q --> z -= q
	// note: this is NOT constant time
	if !(z[25] < 7540722130141040015 || (z[25] == 7540722130141040015 && (z[24] < 11095387261239247891 || (z[24] == 11095387261239247891 && (z[23] < 13493967136577301588 || (z[23] == 13493967136577301588 && (z[22] < 9969743536277534484 || (z[22] == 9969743536277534484 && (z[21] < 6415429827500927434 || (z[21] == 6415429827500927434 && (z[20] < 9275171629996515882 || (z[20] == 9275171629996515882 && (z[19] < 15324160921537003790 || (z[19] == 15324160921537003790 && (z[18] < 11140475058215084841 || (z[18] == 11140475058215084841 && (z[17] < 15994884257273436159 || (z[17] == 15994884257273436159 && (z[16] < 12250709359727562561 || (z[16] == 12250709359727562561 && (z[15] < 781891996848210117 || (z[15] == 781891996848210117 && (z[14] < 4501432112780460688 || (z[14] == 4501432112780460688 && (z[13] < 14885581468941587647 || (z[13] == 14885581468941587647 && (z[12] < 16851474546529677959 || (z[12] == 16851474546529677959 && (z[11] < 1108113797489890163 || (z[11] == 1108113797489890163 && (z[10] < 4193845188432429317 || (z[10] == 4193845188432429317 && (z[9] < 7715318651855780330 || (z[9] == 7715318651855780330 && (z[8] < 1706818182961302545 || (z[8] == 1706818182961302545 && (z[7] < 18310788083607185061 || (z[7] == 18310788083607185061 && (z[6] < 11918365908634919040 || (z[6] == 11918365908634919040 && (z[5] < 5162480155730353270 || (z[5] == 5162480155730353270 && (z[4] < 11620695255275462168 || (z[4] == 11620695255275462168 && (z[3] < 4396344304518515882 || (z[3] == 4396344304518515882 && (z[2] < 15355618193144791007 || (z[2] == 15355618193144791007 && (z[1] < 16732179128150725226 || (z[1] == 16732179128150725226 && (z[0] < 1318738878612053369))))))))))))))))))))))))))))))))))))))))))))))))))) {
		var b uint64
		z[0], b = bits.Sub64(z[0], 1318738878612053369, 0)
		z[1], b = bits.Sub64(z[1], 16732179128150725226, b)
		z[2], b = bits.Sub64(z[2], 15355618193144791007, b)
		z[3], b = bits.Sub64(z[3], 4396344304518515882, b)
		z[4], b = bits.Sub64(z[4], 11620695255275462168, b)
		z[5], b = bits.Sub64(z[5], 5162480155730353270, b)
		z[6], b = bits.Sub64(z[6], 11918365908634919040, b)
		z[7], b = bits.Sub64(z[7], 18310788083607185061, b)
		z[8], b = bits.Sub64(z[8], 1706818182961302545, b)
		z[9], b = bits.Sub64(z[9], 7715318651855780330, b)
		z[10], b = bits.Sub64(z[10], 4193845188432429317, b)
		z[11], b = bits.Sub64(z[11], 1108113797489890163, b)
		z[12], b = bits.Sub64(z[12], 16851474546529677959, b)
		z[13], b = bits.Sub64(z[13], 14885581468941587647, b)
		z[14], b = bits.Sub64(z[14], 4501432112780460688, b)
		z[15], b = bits.Sub64(z[15], 781891996848210117, b)
		z[16], b = bits.Sub64(z[16], 12250709359727562561, b)
		z[17], b = bits.Sub64(z[17], 15994884257273436159, b)
		z[18], b = bits.Sub64(z[18], 11140475058215084841, b)
		z[19], b = bits.Sub64(z[19], 15324160921537003790, b)
		z[20], b = bits.Sub64(z[20], 9275171629996515882, b)
		z[21], b = bits.Sub64(z[21], 6415429827500927434, b)
		z[22], b = bits.Sub64(z[22], 9969743536277534484, b)
		z[23], b = bits.Sub64(z[23], 13493967136577301588, b)
		z[24], b = bits.Sub64(z[24], 11095387261239247891, b)
		z[25], _ = bits.Sub64(z[25], 7540722130141040015, b)
	}
	return z
}

func (z *Element26) Legendre() int {
	var l Element26
	// z^((q-1)/2)
	l.Exp(*z,
		659369439306026684,
		17589461600930138421,
		7677809096572395503,
		2198172152259257941,
		5810347627637731084,
		2581240077865176635,
		15182554991172235328,
		18378766078658368338,
		853409091480651272,
		13081031362782665973,
		11320294631070990466,
		9777428935599720889,
		17649109310119614787,
		7442790734470793823,
		11474088093245006152,
		9614318035278880866,
		15348726716718557088,
		17220814165491493887,
		5570237529107542420,
		7662080460768501895,
		4637585814998257941,
		3207714913750463717,
		4984871768138767242,
		15970355605143426602,
		14771065667474399753,
		3770361065070520007,
	)

	if l.IsZero() {
		return 0
	}

	// if l == 1
	if (l[25] == 3365299813427471584) && (l[24] == 14702713624940607448) && (l[23] == 9905553874264500054) && (l[22] == 16954001074864034263) && (l[21] == 5615884418707696746) && (l[20] == 18343144887426071466) && (l[19] == 6245166304345095650) && (l[18] == 14612538030988933548) && (l[17] == 4903719632872230912) && (l[16] == 12392069427963978109) && (l[15] == 16882960080013131381) && (l[14] == 9443879848148630238) && (l[13] == 7122325209535927936) && (l[12] == 3190539054359747313) && (l[11] == 16230516478729771289) && (l[10] == 10059053696844692981) && (l[9] == 3016106769997990955) && (l[8] == 15033107707786946524) && (l[7] == 271911980204733108) && (l[6] == 13056756330149265151) && (l[5] == 8121783762248845074) && (l[4] == 13652097636868178895) && (l[3] == 9654055464672519850) && (l[2] == 6182251761129521216) && (l[1] == 3429129891117652779) && (l[0] == 15809266316485444878) {
		return 1
	}
	return -1
}

// Sqrt z = √x mod q
// if the square root doesn't exist (x is not a square mod q)
// Sqrt leaves z unchanged and returns nil
func (z *Element26) Sqrt(x *Element26) *Element26 {
	// q ≡ 1 (mod 4)
	// see modSqrtTonelliShanks in math/big/int.go
	// using https://www.maa.org/sites/default/files/pdf/upload_library/22/Polya/07468342.di020786.02p0470a.pdf

	var y, b, t, w Element26
	// w = x^((s-1)/2))
	w.Exp(*x,
		11611636225981723095,
		18339583764612124966,
		12488941183140019197,
		9498143555887183050,
		7643822481095798241,
		322655009733147079,
		6509505392323917320,
		2297345759832296042,
		11635891182503551169,
		6246814938775221150,
		3720879838097567760,
		8139707644591046967,
		18347039728260809512,
		930348841808849227,
		6045947030083013673,
		1201789754409860108,
		18059491904085677300,
		11375973807541212543,
		16837180755634300466,
		12486975103664532496,
		12108913272943252002,
		5012650382646195868,
		5234794989444733809,
		4302137459856622277,
		17987284272930157633,
		471295133133815000,
	)

	// y = x^((s+1)/2)) = w * x
	y.Mul(x, &w)

	// b = x^s = w * w * x = y * x
	b.Mul(&w, &y)

	// g = nonResidue ^ s
	var g = Element26{
		17510563295340981729,
		1746091297755724228,
		11413144772369162680,
		9937065683818945148,
		1252377106213727628,
		6947094355577540564,
		9663778035472698258,
		5016190018792107549,
		5932822385066099982,
		8065303680076611498,
		1090787060914927127,
		2660559199750808097,
		3604817200845911420,
		17111235408362093717,
		4160765358321741901,
		16796740713256452301,
		12713968700036058179,
		6530422090647001605,
		8575627432125358512,
		17393547954866275215,
		8051819867899834381,
		2157611799335719848,
		17406933744849988665,
		4732142770288678990,
		11421740380082808620,
		459827175914605132,
	}
	r := uint64(3)

	// compute legendre symbol
	// t = x^((q-1)/2) = r-1 squaring of x^s
	t.Set(&b)
	for i := uint64(0); i < r-1; i++ {
		t.Square(&t)
	}
	if t.IsZero() {
		return z.SetZero()
	}
	if !((t[25] == 3365299813427471584) && (t[24] == 14702713624940607448) && (t[23] == 9905553874264500054) && (t[22] == 16954001074864034263) && (t[21] == 5615884418707696746) && (t[20] == 18343144887426071466) && (t[19] == 6245166304345095650) && (t[18] == 14612538030988933548) && (t[17] == 4903719632872230912) && (t[16] == 12392069427963978109) && (t[15] == 16882960080013131381) && (t[14] == 9443879848148630238) && (t[13] == 7122325209535927936) && (t[12] == 3190539054359747313) && (t[11] == 16230516478729771289) && (t[10] == 10059053696844692981) && (t[9] == 3016106769997990955) && (t[8] == 15033107707786946524) && (t[7] == 271911980204733108) && (t[6] == 13056756330149265151) && (t[5] == 8121783762248845074) && (t[4] == 13652097636868178895) && (t[3] == 9654055464672519850) && (t[2] == 6182251761129521216) && (t[1] == 3429129891117652779) && (t[0] == 15809266316485444878)) {
		// t != 1, we don't have a square root
		return nil
	}
	for {
		var m uint64
		t.Set(&b)

		// for t != 1
		for !((t[25] == 3365299813427471584) && (t[24] == 14702713624940607448) && (t[23] == 9905553874264500054) && (t[22] == 16954001074864034263) && (t[21] == 5615884418707696746) && (t[20] == 18343144887426071466) && (t[19] == 6245166304345095650) && (t[18] == 14612538030988933548) && (t[17] == 4903719632872230912) && (t[16] == 12392069427963978109) && (t[15] == 16882960080013131381) && (t[14] == 9443879848148630238) && (t[13] == 7122325209535927936) && (t[12] == 3190539054359747313) && (t[11] == 16230516478729771289) && (t[10] == 10059053696844692981) && (t[9] == 3016106769997990955) && (t[8] == 15033107707786946524) && (t[7] == 271911980204733108) && (t[6] == 13056756330149265151) && (t[5] == 8121783762248845074) && (t[4] == 13652097636868178895) && (t[3] == 9654055464672519850) && (t[2] == 6182251761129521216) && (t[1] == 3429129891117652779) && (t[0] == 15809266316485444878)) {
			t.Square(&t)
			m++
		}

		if m == 0 {
			return z.Set(&y)
		}
		// t = g^(2^(r-m-1)) mod q
		ge := int(r - m - 1)
		t = g
		for ge > 0 {
			t.Square(&t)
			ge--
		}

		g.Square(&t)
		y.MulAssign(&t)
		b.MulAssign(&g)
		r = m
	}
}

// Square z = x * x mod q
func (z *Element26) Square(x *Element26) *Element26 {
	return z.Mul(x, x)
}

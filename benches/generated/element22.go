// Copyright 2020 ConsenSys AG
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// field modulus q =
//
// 2665099083777771191682597527998319915180786801674447207033597668120164171814186816513840878986246868461605634899395503364255355603947234615455969773360570441368381579015734158391351460623894041048958992974187247068680326934852115786971622524360550747956585316585523250533937642439794052502738151365026559578550375203600166500043818519327192942005891008270555601118612486461485649353746020802224155143592228339919373962534323
// Code generated by goff DO NOT EDIT
// Element22 are assumed to be in Montgomery form in all methods

// /!\ WARNING /!\
// this code has not been audited and is provided as-is. In particular,
// there is no security guarantees such as constant time implementation
// or side-channel attack resistance
// /!\ WARNING /!\

// Package generated (generated by goff) contains field arithmetics operations
package generated

import (
	"crypto/rand"
	"encoding/binary"
	"io"
	"math/big"
	"math/bits"
	"sync"
	"unsafe"
)

// Element22 represents a field element stored on 22 words (uint64)
// Element22 are assumed to be in Montgomery form in all methods
type Element22 [22]uint64

// Element22Limbs number of 64 bits words needed to represent Element22
const Element22Limbs = 22

// Element22Bits number bits needed to represent Element22
const Element22Bits = 1407

// SetUint64 z = v, sets z LSB to v (non-Montgomery form) and convert z to Montgomery form
func (z *Element22) SetUint64(v uint64) *Element22 {
	z[0] = v
	z[1] = 0
	z[2] = 0
	z[3] = 0
	z[4] = 0
	z[5] = 0
	z[6] = 0
	z[7] = 0
	z[8] = 0
	z[9] = 0
	z[10] = 0
	z[11] = 0
	z[12] = 0
	z[13] = 0
	z[14] = 0
	z[15] = 0
	z[16] = 0
	z[17] = 0
	z[18] = 0
	z[19] = 0
	z[20] = 0
	z[21] = 0
	return z.ToMont()
}

// Set z = x
func (z *Element22) Set(x *Element22) *Element22 {
	z[0] = x[0]
	z[1] = x[1]
	z[2] = x[2]
	z[3] = x[3]
	z[4] = x[4]
	z[5] = x[5]
	z[6] = x[6]
	z[7] = x[7]
	z[8] = x[8]
	z[9] = x[9]
	z[10] = x[10]
	z[11] = x[11]
	z[12] = x[12]
	z[13] = x[13]
	z[14] = x[14]
	z[15] = x[15]
	z[16] = x[16]
	z[17] = x[17]
	z[18] = x[18]
	z[19] = x[19]
	z[20] = x[20]
	z[21] = x[21]
	return z
}

// SetZero z = 0
func (z *Element22) SetZero() *Element22 {
	z[0] = 0
	z[1] = 0
	z[2] = 0
	z[3] = 0
	z[4] = 0
	z[5] = 0
	z[6] = 0
	z[7] = 0
	z[8] = 0
	z[9] = 0
	z[10] = 0
	z[11] = 0
	z[12] = 0
	z[13] = 0
	z[14] = 0
	z[15] = 0
	z[16] = 0
	z[17] = 0
	z[18] = 0
	z[19] = 0
	z[20] = 0
	z[21] = 0
	return z
}

// SetOne z = 1 (in Montgomery form)
func (z *Element22) SetOne() *Element22 {
	z[0] = 13413851403395351706
	z[1] = 13244737286088820600
	z[2] = 16651717729527741110
	z[3] = 17384504022075100665
	z[4] = 1031420289427533317
	z[5] = 13321039230179133651
	z[6] = 7128266898366758146
	z[7] = 860721545308011227
	z[8] = 15343451218492603408
	z[9] = 2764685288874456782
	z[10] = 392029756403924802
	z[11] = 4136002439240489694
	z[12] = 1128214861147195749
	z[13] = 17147939729220268851
	z[14] = 3187999383514926698
	z[15] = 2879429878474720775
	z[16] = 6463806304175678418
	z[17] = 14210263696218390917
	z[18] = 26128562372279284
	z[19] = 17615472902031003196
	z[20] = 631122492072580529
	z[21] = 4565474660740637435
	return z
}

// Neg z = q - x
func (z *Element22) Neg(x *Element22) *Element22 {
	if x.IsZero() {
		return z.SetZero()
	}
	var borrow uint64
	z[0], borrow = bits.Sub64(11739818372011875763, x[0], 0)
	z[1], borrow = bits.Sub64(11824375430665141315, x[1], borrow)
	z[2], borrow = bits.Sub64(897513172090905252, x[2], borrow)
	z[3], borrow = bits.Sub64(531120025817225475, x[3], borrow)
	z[4], borrow = bits.Sub64(8707661892141009149, x[4], borrow)
	z[5], borrow = bits.Sub64(11786224458619984790, x[5], borrow)
	z[6], borrow = bits.Sub64(5659238587671396734, x[6], borrow)
	z[7], borrow = bits.Sub64(18016383301055546002, x[7], borrow)
	z[8], borrow = bits.Sub64(10775018464463249911, x[8], borrow)
	z[9], borrow = bits.Sub64(17064401429272323224, x[9], borrow)
	z[10], borrow = bits.Sub64(18250729195507589214, x[10], borrow)
	z[11], borrow = bits.Sub64(7155370817234530960, x[11], borrow)
	z[12], borrow = bits.Sub64(8659264606281177933, x[12], borrow)
	z[13], borrow = bits.Sub64(9872774209099417190, x[13], borrow)
	z[14], borrow = bits.Sub64(7629372345097312458, x[14], borrow)
	z[15], borrow = bits.Sub64(17007029134472191228, x[15], borrow)
	z[16], borrow = bits.Sub64(5991468884766936598, x[16], borrow)
	z[17], borrow = bits.Sub64(11341612225600356157, x[17], borrow)
	z[18], borrow = bits.Sub64(18433679792523411973, x[18], borrow)
	z[19], borrow = bits.Sub64(415635585839274209, x[19], borrow)
	z[20], borrow = bits.Sub64(8907810790818485543, x[20], borrow)
	z[21], _ = bits.Sub64(6940634706484457090, x[21], borrow)
	return z
}

// Div z = x*y^-1 mod q
func (z *Element22) Div(x, y *Element22) *Element22 {
	var yInv Element22
	yInv.Inverse(y)
	z.Mul(x, &yInv)
	return z
}

// Equal returns z == x
func (z *Element22) Equal(x *Element22) bool {
	return (z[21] == x[21]) && (z[20] == x[20]) && (z[19] == x[19]) && (z[18] == x[18]) && (z[17] == x[17]) && (z[16] == x[16]) && (z[15] == x[15]) && (z[14] == x[14]) && (z[13] == x[13]) && (z[12] == x[12]) && (z[11] == x[11]) && (z[10] == x[10]) && (z[9] == x[9]) && (z[8] == x[8]) && (z[7] == x[7]) && (z[6] == x[6]) && (z[5] == x[5]) && (z[4] == x[4]) && (z[3] == x[3]) && (z[2] == x[2]) && (z[1] == x[1]) && (z[0] == x[0])
}

// IsZero returns z == 0
func (z *Element22) IsZero() bool {
	return (z[21] | z[20] | z[19] | z[18] | z[17] | z[16] | z[15] | z[14] | z[13] | z[12] | z[11] | z[10] | z[9] | z[8] | z[7] | z[6] | z[5] | z[4] | z[3] | z[2] | z[1] | z[0]) == 0
}

// field modulus stored as big.Int
var _element22ModulusBigInt big.Int
var onceelement22Modulus sync.Once

func element22ModulusBigInt() *big.Int {
	onceelement22Modulus.Do(func() {
		_element22ModulusBigInt.SetString("2665099083777771191682597527998319915180786801674447207033597668120164171814186816513840878986246868461605634899395503364255355603947234615455969773360570441368381579015734158391351460623894041048958992974187247068680326934852115786971622524360550747956585316585523250533937642439794052502738151365026559578550375203600166500043818519327192942005891008270555601118612486461485649353746020802224155143592228339919373962534323", 10)
	})
	return &_element22ModulusBigInt
}

// Inverse z = x^-1 mod q
// note: allocates a big.Int (math/big)
func (z *Element22) Inverse(x *Element22) *Element22 {
	var _xNonMont big.Int
	x.ToBigIntRegular(&_xNonMont)
	_xNonMont.ModInverse(&_xNonMont, element22ModulusBigInt())
	z.SetBigInt(&_xNonMont)
	return z
}

// SetRandom sets z to a random element < q
func (z *Element22) SetRandom() *Element22 {
	bytes := make([]byte, 176)
	io.ReadFull(rand.Reader, bytes)
	z[0] = binary.BigEndian.Uint64(bytes[0:8])
	z[1] = binary.BigEndian.Uint64(bytes[8:16])
	z[2] = binary.BigEndian.Uint64(bytes[16:24])
	z[3] = binary.BigEndian.Uint64(bytes[24:32])
	z[4] = binary.BigEndian.Uint64(bytes[32:40])
	z[5] = binary.BigEndian.Uint64(bytes[40:48])
	z[6] = binary.BigEndian.Uint64(bytes[48:56])
	z[7] = binary.BigEndian.Uint64(bytes[56:64])
	z[8] = binary.BigEndian.Uint64(bytes[64:72])
	z[9] = binary.BigEndian.Uint64(bytes[72:80])
	z[10] = binary.BigEndian.Uint64(bytes[80:88])
	z[11] = binary.BigEndian.Uint64(bytes[88:96])
	z[12] = binary.BigEndian.Uint64(bytes[96:104])
	z[13] = binary.BigEndian.Uint64(bytes[104:112])
	z[14] = binary.BigEndian.Uint64(bytes[112:120])
	z[15] = binary.BigEndian.Uint64(bytes[120:128])
	z[16] = binary.BigEndian.Uint64(bytes[128:136])
	z[17] = binary.BigEndian.Uint64(bytes[136:144])
	z[18] = binary.BigEndian.Uint64(bytes[144:152])
	z[19] = binary.BigEndian.Uint64(bytes[152:160])
	z[20] = binary.BigEndian.Uint64(bytes[160:168])
	z[21] = binary.BigEndian.Uint64(bytes[168:176])
	z[21] %= 6940634706484457090

	// if z > q --> z -= q
	// note: this is NOT constant time
	if !(z[21] < 6940634706484457090 || (z[21] == 6940634706484457090 && (z[20] < 8907810790818485543 || (z[20] == 8907810790818485543 && (z[19] < 415635585839274209 || (z[19] == 415635585839274209 && (z[18] < 18433679792523411973 || (z[18] == 18433679792523411973 && (z[17] < 11341612225600356157 || (z[17] == 11341612225600356157 && (z[16] < 5991468884766936598 || (z[16] == 5991468884766936598 && (z[15] < 17007029134472191228 || (z[15] == 17007029134472191228 && (z[14] < 7629372345097312458 || (z[14] == 7629372345097312458 && (z[13] < 9872774209099417190 || (z[13] == 9872774209099417190 && (z[12] < 8659264606281177933 || (z[12] == 8659264606281177933 && (z[11] < 7155370817234530960 || (z[11] == 7155370817234530960 && (z[10] < 18250729195507589214 || (z[10] == 18250729195507589214 && (z[9] < 17064401429272323224 || (z[9] == 17064401429272323224 && (z[8] < 10775018464463249911 || (z[8] == 10775018464463249911 && (z[7] < 18016383301055546002 || (z[7] == 18016383301055546002 && (z[6] < 5659238587671396734 || (z[6] == 5659238587671396734 && (z[5] < 11786224458619984790 || (z[5] == 11786224458619984790 && (z[4] < 8707661892141009149 || (z[4] == 8707661892141009149 && (z[3] < 531120025817225475 || (z[3] == 531120025817225475 && (z[2] < 897513172090905252 || (z[2] == 897513172090905252 && (z[1] < 11824375430665141315 || (z[1] == 11824375430665141315 && (z[0] < 11739818372011875763))))))))))))))))))))))))))))))))))))))))))) {
		var b uint64
		z[0], b = bits.Sub64(z[0], 11739818372011875763, 0)
		z[1], b = bits.Sub64(z[1], 11824375430665141315, b)
		z[2], b = bits.Sub64(z[2], 897513172090905252, b)
		z[3], b = bits.Sub64(z[3], 531120025817225475, b)
		z[4], b = bits.Sub64(z[4], 8707661892141009149, b)
		z[5], b = bits.Sub64(z[5], 11786224458619984790, b)
		z[6], b = bits.Sub64(z[6], 5659238587671396734, b)
		z[7], b = bits.Sub64(z[7], 18016383301055546002, b)
		z[8], b = bits.Sub64(z[8], 10775018464463249911, b)
		z[9], b = bits.Sub64(z[9], 17064401429272323224, b)
		z[10], b = bits.Sub64(z[10], 18250729195507589214, b)
		z[11], b = bits.Sub64(z[11], 7155370817234530960, b)
		z[12], b = bits.Sub64(z[12], 8659264606281177933, b)
		z[13], b = bits.Sub64(z[13], 9872774209099417190, b)
		z[14], b = bits.Sub64(z[14], 7629372345097312458, b)
		z[15], b = bits.Sub64(z[15], 17007029134472191228, b)
		z[16], b = bits.Sub64(z[16], 5991468884766936598, b)
		z[17], b = bits.Sub64(z[17], 11341612225600356157, b)
		z[18], b = bits.Sub64(z[18], 18433679792523411973, b)
		z[19], b = bits.Sub64(z[19], 415635585839274209, b)
		z[20], b = bits.Sub64(z[20], 8907810790818485543, b)
		z[21], _ = bits.Sub64(z[21], 6940634706484457090, b)
	}

	return z
}

// Add z = x + y mod q
func (z *Element22) Add(x, y *Element22) *Element22 {
	var carry uint64

	z[0], carry = bits.Add64(x[0], y[0], 0)
	z[1], carry = bits.Add64(x[1], y[1], carry)
	z[2], carry = bits.Add64(x[2], y[2], carry)
	z[3], carry = bits.Add64(x[3], y[3], carry)
	z[4], carry = bits.Add64(x[4], y[4], carry)
	z[5], carry = bits.Add64(x[5], y[5], carry)
	z[6], carry = bits.Add64(x[6], y[6], carry)
	z[7], carry = bits.Add64(x[7], y[7], carry)
	z[8], carry = bits.Add64(x[8], y[8], carry)
	z[9], carry = bits.Add64(x[9], y[9], carry)
	z[10], carry = bits.Add64(x[10], y[10], carry)
	z[11], carry = bits.Add64(x[11], y[11], carry)
	z[12], carry = bits.Add64(x[12], y[12], carry)
	z[13], carry = bits.Add64(x[13], y[13], carry)
	z[14], carry = bits.Add64(x[14], y[14], carry)
	z[15], carry = bits.Add64(x[15], y[15], carry)
	z[16], carry = bits.Add64(x[16], y[16], carry)
	z[17], carry = bits.Add64(x[17], y[17], carry)
	z[18], carry = bits.Add64(x[18], y[18], carry)
	z[19], carry = bits.Add64(x[19], y[19], carry)
	z[20], carry = bits.Add64(x[20], y[20], carry)
	z[21], carry = bits.Add64(x[21], y[21], carry)
	// if we overflowed the last addition, z >= q
	// if z >= q, z = z - q
	if carry != 0 {
		// we overflowed, so z >= q
		z[0], carry = bits.Sub64(z[0], 11739818372011875763, 0)
		z[1], carry = bits.Sub64(z[1], 11824375430665141315, carry)
		z[2], carry = bits.Sub64(z[2], 897513172090905252, carry)
		z[3], carry = bits.Sub64(z[3], 531120025817225475, carry)
		z[4], carry = bits.Sub64(z[4], 8707661892141009149, carry)
		z[5], carry = bits.Sub64(z[5], 11786224458619984790, carry)
		z[6], carry = bits.Sub64(z[6], 5659238587671396734, carry)
		z[7], carry = bits.Sub64(z[7], 18016383301055546002, carry)
		z[8], carry = bits.Sub64(z[8], 10775018464463249911, carry)
		z[9], carry = bits.Sub64(z[9], 17064401429272323224, carry)
		z[10], carry = bits.Sub64(z[10], 18250729195507589214, carry)
		z[11], carry = bits.Sub64(z[11], 7155370817234530960, carry)
		z[12], carry = bits.Sub64(z[12], 8659264606281177933, carry)
		z[13], carry = bits.Sub64(z[13], 9872774209099417190, carry)
		z[14], carry = bits.Sub64(z[14], 7629372345097312458, carry)
		z[15], carry = bits.Sub64(z[15], 17007029134472191228, carry)
		z[16], carry = bits.Sub64(z[16], 5991468884766936598, carry)
		z[17], carry = bits.Sub64(z[17], 11341612225600356157, carry)
		z[18], carry = bits.Sub64(z[18], 18433679792523411973, carry)
		z[19], carry = bits.Sub64(z[19], 415635585839274209, carry)
		z[20], carry = bits.Sub64(z[20], 8907810790818485543, carry)
		z[21], carry = bits.Sub64(z[21], 6940634706484457090, carry)
		return z
	}

	// if z > q --> z -= q
	// note: this is NOT constant time
	if !(z[21] < 6940634706484457090 || (z[21] == 6940634706484457090 && (z[20] < 8907810790818485543 || (z[20] == 8907810790818485543 && (z[19] < 415635585839274209 || (z[19] == 415635585839274209 && (z[18] < 18433679792523411973 || (z[18] == 18433679792523411973 && (z[17] < 11341612225600356157 || (z[17] == 11341612225600356157 && (z[16] < 5991468884766936598 || (z[16] == 5991468884766936598 && (z[15] < 17007029134472191228 || (z[15] == 17007029134472191228 && (z[14] < 7629372345097312458 || (z[14] == 7629372345097312458 && (z[13] < 9872774209099417190 || (z[13] == 9872774209099417190 && (z[12] < 8659264606281177933 || (z[12] == 8659264606281177933 && (z[11] < 7155370817234530960 || (z[11] == 7155370817234530960 && (z[10] < 18250729195507589214 || (z[10] == 18250729195507589214 && (z[9] < 17064401429272323224 || (z[9] == 17064401429272323224 && (z[8] < 10775018464463249911 || (z[8] == 10775018464463249911 && (z[7] < 18016383301055546002 || (z[7] == 18016383301055546002 && (z[6] < 5659238587671396734 || (z[6] == 5659238587671396734 && (z[5] < 11786224458619984790 || (z[5] == 11786224458619984790 && (z[4] < 8707661892141009149 || (z[4] == 8707661892141009149 && (z[3] < 531120025817225475 || (z[3] == 531120025817225475 && (z[2] < 897513172090905252 || (z[2] == 897513172090905252 && (z[1] < 11824375430665141315 || (z[1] == 11824375430665141315 && (z[0] < 11739818372011875763))))))))))))))))))))))))))))))))))))))))))) {
		var b uint64
		z[0], b = bits.Sub64(z[0], 11739818372011875763, 0)
		z[1], b = bits.Sub64(z[1], 11824375430665141315, b)
		z[2], b = bits.Sub64(z[2], 897513172090905252, b)
		z[3], b = bits.Sub64(z[3], 531120025817225475, b)
		z[4], b = bits.Sub64(z[4], 8707661892141009149, b)
		z[5], b = bits.Sub64(z[5], 11786224458619984790, b)
		z[6], b = bits.Sub64(z[6], 5659238587671396734, b)
		z[7], b = bits.Sub64(z[7], 18016383301055546002, b)
		z[8], b = bits.Sub64(z[8], 10775018464463249911, b)
		z[9], b = bits.Sub64(z[9], 17064401429272323224, b)
		z[10], b = bits.Sub64(z[10], 18250729195507589214, b)
		z[11], b = bits.Sub64(z[11], 7155370817234530960, b)
		z[12], b = bits.Sub64(z[12], 8659264606281177933, b)
		z[13], b = bits.Sub64(z[13], 9872774209099417190, b)
		z[14], b = bits.Sub64(z[14], 7629372345097312458, b)
		z[15], b = bits.Sub64(z[15], 17007029134472191228, b)
		z[16], b = bits.Sub64(z[16], 5991468884766936598, b)
		z[17], b = bits.Sub64(z[17], 11341612225600356157, b)
		z[18], b = bits.Sub64(z[18], 18433679792523411973, b)
		z[19], b = bits.Sub64(z[19], 415635585839274209, b)
		z[20], b = bits.Sub64(z[20], 8907810790818485543, b)
		z[21], _ = bits.Sub64(z[21], 6940634706484457090, b)
	}
	return z
}

// AddAssign z = z + x mod q
func (z *Element22) AddAssign(x *Element22) *Element22 {
	var carry uint64

	z[0], carry = bits.Add64(z[0], x[0], 0)
	z[1], carry = bits.Add64(z[1], x[1], carry)
	z[2], carry = bits.Add64(z[2], x[2], carry)
	z[3], carry = bits.Add64(z[3], x[3], carry)
	z[4], carry = bits.Add64(z[4], x[4], carry)
	z[5], carry = bits.Add64(z[5], x[5], carry)
	z[6], carry = bits.Add64(z[6], x[6], carry)
	z[7], carry = bits.Add64(z[7], x[7], carry)
	z[8], carry = bits.Add64(z[8], x[8], carry)
	z[9], carry = bits.Add64(z[9], x[9], carry)
	z[10], carry = bits.Add64(z[10], x[10], carry)
	z[11], carry = bits.Add64(z[11], x[11], carry)
	z[12], carry = bits.Add64(z[12], x[12], carry)
	z[13], carry = bits.Add64(z[13], x[13], carry)
	z[14], carry = bits.Add64(z[14], x[14], carry)
	z[15], carry = bits.Add64(z[15], x[15], carry)
	z[16], carry = bits.Add64(z[16], x[16], carry)
	z[17], carry = bits.Add64(z[17], x[17], carry)
	z[18], carry = bits.Add64(z[18], x[18], carry)
	z[19], carry = bits.Add64(z[19], x[19], carry)
	z[20], carry = bits.Add64(z[20], x[20], carry)
	z[21], carry = bits.Add64(z[21], x[21], carry)
	// if we overflowed the last addition, z >= q
	// if z >= q, z = z - q
	if carry != 0 {
		// we overflowed, so z >= q
		z[0], carry = bits.Sub64(z[0], 11739818372011875763, 0)
		z[1], carry = bits.Sub64(z[1], 11824375430665141315, carry)
		z[2], carry = bits.Sub64(z[2], 897513172090905252, carry)
		z[3], carry = bits.Sub64(z[3], 531120025817225475, carry)
		z[4], carry = bits.Sub64(z[4], 8707661892141009149, carry)
		z[5], carry = bits.Sub64(z[5], 11786224458619984790, carry)
		z[6], carry = bits.Sub64(z[6], 5659238587671396734, carry)
		z[7], carry = bits.Sub64(z[7], 18016383301055546002, carry)
		z[8], carry = bits.Sub64(z[8], 10775018464463249911, carry)
		z[9], carry = bits.Sub64(z[9], 17064401429272323224, carry)
		z[10], carry = bits.Sub64(z[10], 18250729195507589214, carry)
		z[11], carry = bits.Sub64(z[11], 7155370817234530960, carry)
		z[12], carry = bits.Sub64(z[12], 8659264606281177933, carry)
		z[13], carry = bits.Sub64(z[13], 9872774209099417190, carry)
		z[14], carry = bits.Sub64(z[14], 7629372345097312458, carry)
		z[15], carry = bits.Sub64(z[15], 17007029134472191228, carry)
		z[16], carry = bits.Sub64(z[16], 5991468884766936598, carry)
		z[17], carry = bits.Sub64(z[17], 11341612225600356157, carry)
		z[18], carry = bits.Sub64(z[18], 18433679792523411973, carry)
		z[19], carry = bits.Sub64(z[19], 415635585839274209, carry)
		z[20], carry = bits.Sub64(z[20], 8907810790818485543, carry)
		z[21], carry = bits.Sub64(z[21], 6940634706484457090, carry)
		return z
	}

	// if z > q --> z -= q
	// note: this is NOT constant time
	if !(z[21] < 6940634706484457090 || (z[21] == 6940634706484457090 && (z[20] < 8907810790818485543 || (z[20] == 8907810790818485543 && (z[19] < 415635585839274209 || (z[19] == 415635585839274209 && (z[18] < 18433679792523411973 || (z[18] == 18433679792523411973 && (z[17] < 11341612225600356157 || (z[17] == 11341612225600356157 && (z[16] < 5991468884766936598 || (z[16] == 5991468884766936598 && (z[15] < 17007029134472191228 || (z[15] == 17007029134472191228 && (z[14] < 7629372345097312458 || (z[14] == 7629372345097312458 && (z[13] < 9872774209099417190 || (z[13] == 9872774209099417190 && (z[12] < 8659264606281177933 || (z[12] == 8659264606281177933 && (z[11] < 7155370817234530960 || (z[11] == 7155370817234530960 && (z[10] < 18250729195507589214 || (z[10] == 18250729195507589214 && (z[9] < 17064401429272323224 || (z[9] == 17064401429272323224 && (z[8] < 10775018464463249911 || (z[8] == 10775018464463249911 && (z[7] < 18016383301055546002 || (z[7] == 18016383301055546002 && (z[6] < 5659238587671396734 || (z[6] == 5659238587671396734 && (z[5] < 11786224458619984790 || (z[5] == 11786224458619984790 && (z[4] < 8707661892141009149 || (z[4] == 8707661892141009149 && (z[3] < 531120025817225475 || (z[3] == 531120025817225475 && (z[2] < 897513172090905252 || (z[2] == 897513172090905252 && (z[1] < 11824375430665141315 || (z[1] == 11824375430665141315 && (z[0] < 11739818372011875763))))))))))))))))))))))))))))))))))))))))))) {
		var b uint64
		z[0], b = bits.Sub64(z[0], 11739818372011875763, 0)
		z[1], b = bits.Sub64(z[1], 11824375430665141315, b)
		z[2], b = bits.Sub64(z[2], 897513172090905252, b)
		z[3], b = bits.Sub64(z[3], 531120025817225475, b)
		z[4], b = bits.Sub64(z[4], 8707661892141009149, b)
		z[5], b = bits.Sub64(z[5], 11786224458619984790, b)
		z[6], b = bits.Sub64(z[6], 5659238587671396734, b)
		z[7], b = bits.Sub64(z[7], 18016383301055546002, b)
		z[8], b = bits.Sub64(z[8], 10775018464463249911, b)
		z[9], b = bits.Sub64(z[9], 17064401429272323224, b)
		z[10], b = bits.Sub64(z[10], 18250729195507589214, b)
		z[11], b = bits.Sub64(z[11], 7155370817234530960, b)
		z[12], b = bits.Sub64(z[12], 8659264606281177933, b)
		z[13], b = bits.Sub64(z[13], 9872774209099417190, b)
		z[14], b = bits.Sub64(z[14], 7629372345097312458, b)
		z[15], b = bits.Sub64(z[15], 17007029134472191228, b)
		z[16], b = bits.Sub64(z[16], 5991468884766936598, b)
		z[17], b = bits.Sub64(z[17], 11341612225600356157, b)
		z[18], b = bits.Sub64(z[18], 18433679792523411973, b)
		z[19], b = bits.Sub64(z[19], 415635585839274209, b)
		z[20], b = bits.Sub64(z[20], 8907810790818485543, b)
		z[21], _ = bits.Sub64(z[21], 6940634706484457090, b)
	}
	return z
}

// Double z = x + x mod q, aka Lsh 1
func (z *Element22) Double(x *Element22) *Element22 {
	var carry uint64

	z[0], carry = bits.Add64(x[0], x[0], 0)
	z[1], carry = bits.Add64(x[1], x[1], carry)
	z[2], carry = bits.Add64(x[2], x[2], carry)
	z[3], carry = bits.Add64(x[3], x[3], carry)
	z[4], carry = bits.Add64(x[4], x[4], carry)
	z[5], carry = bits.Add64(x[5], x[5], carry)
	z[6], carry = bits.Add64(x[6], x[6], carry)
	z[7], carry = bits.Add64(x[7], x[7], carry)
	z[8], carry = bits.Add64(x[8], x[8], carry)
	z[9], carry = bits.Add64(x[9], x[9], carry)
	z[10], carry = bits.Add64(x[10], x[10], carry)
	z[11], carry = bits.Add64(x[11], x[11], carry)
	z[12], carry = bits.Add64(x[12], x[12], carry)
	z[13], carry = bits.Add64(x[13], x[13], carry)
	z[14], carry = bits.Add64(x[14], x[14], carry)
	z[15], carry = bits.Add64(x[15], x[15], carry)
	z[16], carry = bits.Add64(x[16], x[16], carry)
	z[17], carry = bits.Add64(x[17], x[17], carry)
	z[18], carry = bits.Add64(x[18], x[18], carry)
	z[19], carry = bits.Add64(x[19], x[19], carry)
	z[20], carry = bits.Add64(x[20], x[20], carry)
	z[21], carry = bits.Add64(x[21], x[21], carry)
	// if we overflowed the last addition, z >= q
	// if z >= q, z = z - q
	if carry != 0 {
		// we overflowed, so z >= q
		z[0], carry = bits.Sub64(z[0], 11739818372011875763, 0)
		z[1], carry = bits.Sub64(z[1], 11824375430665141315, carry)
		z[2], carry = bits.Sub64(z[2], 897513172090905252, carry)
		z[3], carry = bits.Sub64(z[3], 531120025817225475, carry)
		z[4], carry = bits.Sub64(z[4], 8707661892141009149, carry)
		z[5], carry = bits.Sub64(z[5], 11786224458619984790, carry)
		z[6], carry = bits.Sub64(z[6], 5659238587671396734, carry)
		z[7], carry = bits.Sub64(z[7], 18016383301055546002, carry)
		z[8], carry = bits.Sub64(z[8], 10775018464463249911, carry)
		z[9], carry = bits.Sub64(z[9], 17064401429272323224, carry)
		z[10], carry = bits.Sub64(z[10], 18250729195507589214, carry)
		z[11], carry = bits.Sub64(z[11], 7155370817234530960, carry)
		z[12], carry = bits.Sub64(z[12], 8659264606281177933, carry)
		z[13], carry = bits.Sub64(z[13], 9872774209099417190, carry)
		z[14], carry = bits.Sub64(z[14], 7629372345097312458, carry)
		z[15], carry = bits.Sub64(z[15], 17007029134472191228, carry)
		z[16], carry = bits.Sub64(z[16], 5991468884766936598, carry)
		z[17], carry = bits.Sub64(z[17], 11341612225600356157, carry)
		z[18], carry = bits.Sub64(z[18], 18433679792523411973, carry)
		z[19], carry = bits.Sub64(z[19], 415635585839274209, carry)
		z[20], carry = bits.Sub64(z[20], 8907810790818485543, carry)
		z[21], carry = bits.Sub64(z[21], 6940634706484457090, carry)
		return z
	}

	// if z > q --> z -= q
	// note: this is NOT constant time
	if !(z[21] < 6940634706484457090 || (z[21] == 6940634706484457090 && (z[20] < 8907810790818485543 || (z[20] == 8907810790818485543 && (z[19] < 415635585839274209 || (z[19] == 415635585839274209 && (z[18] < 18433679792523411973 || (z[18] == 18433679792523411973 && (z[17] < 11341612225600356157 || (z[17] == 11341612225600356157 && (z[16] < 5991468884766936598 || (z[16] == 5991468884766936598 && (z[15] < 17007029134472191228 || (z[15] == 17007029134472191228 && (z[14] < 7629372345097312458 || (z[14] == 7629372345097312458 && (z[13] < 9872774209099417190 || (z[13] == 9872774209099417190 && (z[12] < 8659264606281177933 || (z[12] == 8659264606281177933 && (z[11] < 7155370817234530960 || (z[11] == 7155370817234530960 && (z[10] < 18250729195507589214 || (z[10] == 18250729195507589214 && (z[9] < 17064401429272323224 || (z[9] == 17064401429272323224 && (z[8] < 10775018464463249911 || (z[8] == 10775018464463249911 && (z[7] < 18016383301055546002 || (z[7] == 18016383301055546002 && (z[6] < 5659238587671396734 || (z[6] == 5659238587671396734 && (z[5] < 11786224458619984790 || (z[5] == 11786224458619984790 && (z[4] < 8707661892141009149 || (z[4] == 8707661892141009149 && (z[3] < 531120025817225475 || (z[3] == 531120025817225475 && (z[2] < 897513172090905252 || (z[2] == 897513172090905252 && (z[1] < 11824375430665141315 || (z[1] == 11824375430665141315 && (z[0] < 11739818372011875763))))))))))))))))))))))))))))))))))))))))))) {
		var b uint64
		z[0], b = bits.Sub64(z[0], 11739818372011875763, 0)
		z[1], b = bits.Sub64(z[1], 11824375430665141315, b)
		z[2], b = bits.Sub64(z[2], 897513172090905252, b)
		z[3], b = bits.Sub64(z[3], 531120025817225475, b)
		z[4], b = bits.Sub64(z[4], 8707661892141009149, b)
		z[5], b = bits.Sub64(z[5], 11786224458619984790, b)
		z[6], b = bits.Sub64(z[6], 5659238587671396734, b)
		z[7], b = bits.Sub64(z[7], 18016383301055546002, b)
		z[8], b = bits.Sub64(z[8], 10775018464463249911, b)
		z[9], b = bits.Sub64(z[9], 17064401429272323224, b)
		z[10], b = bits.Sub64(z[10], 18250729195507589214, b)
		z[11], b = bits.Sub64(z[11], 7155370817234530960, b)
		z[12], b = bits.Sub64(z[12], 8659264606281177933, b)
		z[13], b = bits.Sub64(z[13], 9872774209099417190, b)
		z[14], b = bits.Sub64(z[14], 7629372345097312458, b)
		z[15], b = bits.Sub64(z[15], 17007029134472191228, b)
		z[16], b = bits.Sub64(z[16], 5991468884766936598, b)
		z[17], b = bits.Sub64(z[17], 11341612225600356157, b)
		z[18], b = bits.Sub64(z[18], 18433679792523411973, b)
		z[19], b = bits.Sub64(z[19], 415635585839274209, b)
		z[20], b = bits.Sub64(z[20], 8907810790818485543, b)
		z[21], _ = bits.Sub64(z[21], 6940634706484457090, b)
	}
	return z
}

// Sub  z = x - y mod q
func (z *Element22) Sub(x, y *Element22) *Element22 {
	var b uint64
	z[0], b = bits.Sub64(x[0], y[0], 0)
	z[1], b = bits.Sub64(x[1], y[1], b)
	z[2], b = bits.Sub64(x[2], y[2], b)
	z[3], b = bits.Sub64(x[3], y[3], b)
	z[4], b = bits.Sub64(x[4], y[4], b)
	z[5], b = bits.Sub64(x[5], y[5], b)
	z[6], b = bits.Sub64(x[6], y[6], b)
	z[7], b = bits.Sub64(x[7], y[7], b)
	z[8], b = bits.Sub64(x[8], y[8], b)
	z[9], b = bits.Sub64(x[9], y[9], b)
	z[10], b = bits.Sub64(x[10], y[10], b)
	z[11], b = bits.Sub64(x[11], y[11], b)
	z[12], b = bits.Sub64(x[12], y[12], b)
	z[13], b = bits.Sub64(x[13], y[13], b)
	z[14], b = bits.Sub64(x[14], y[14], b)
	z[15], b = bits.Sub64(x[15], y[15], b)
	z[16], b = bits.Sub64(x[16], y[16], b)
	z[17], b = bits.Sub64(x[17], y[17], b)
	z[18], b = bits.Sub64(x[18], y[18], b)
	z[19], b = bits.Sub64(x[19], y[19], b)
	z[20], b = bits.Sub64(x[20], y[20], b)
	z[21], b = bits.Sub64(x[21], y[21], b)
	if b != 0 {
		var c uint64
		z[0], c = bits.Add64(z[0], 11739818372011875763, 0)
		z[1], c = bits.Add64(z[1], 11824375430665141315, c)
		z[2], c = bits.Add64(z[2], 897513172090905252, c)
		z[3], c = bits.Add64(z[3], 531120025817225475, c)
		z[4], c = bits.Add64(z[4], 8707661892141009149, c)
		z[5], c = bits.Add64(z[5], 11786224458619984790, c)
		z[6], c = bits.Add64(z[6], 5659238587671396734, c)
		z[7], c = bits.Add64(z[7], 18016383301055546002, c)
		z[8], c = bits.Add64(z[8], 10775018464463249911, c)
		z[9], c = bits.Add64(z[9], 17064401429272323224, c)
		z[10], c = bits.Add64(z[10], 18250729195507589214, c)
		z[11], c = bits.Add64(z[11], 7155370817234530960, c)
		z[12], c = bits.Add64(z[12], 8659264606281177933, c)
		z[13], c = bits.Add64(z[13], 9872774209099417190, c)
		z[14], c = bits.Add64(z[14], 7629372345097312458, c)
		z[15], c = bits.Add64(z[15], 17007029134472191228, c)
		z[16], c = bits.Add64(z[16], 5991468884766936598, c)
		z[17], c = bits.Add64(z[17], 11341612225600356157, c)
		z[18], c = bits.Add64(z[18], 18433679792523411973, c)
		z[19], c = bits.Add64(z[19], 415635585839274209, c)
		z[20], c = bits.Add64(z[20], 8907810790818485543, c)
		z[21], _ = bits.Add64(z[21], 6940634706484457090, c)
	}
	return z
}

// SubAssign  z = z - x mod q
func (z *Element22) SubAssign(x *Element22) *Element22 {
	var b uint64
	z[0], b = bits.Sub64(z[0], x[0], 0)
	z[1], b = bits.Sub64(z[1], x[1], b)
	z[2], b = bits.Sub64(z[2], x[2], b)
	z[3], b = bits.Sub64(z[3], x[3], b)
	z[4], b = bits.Sub64(z[4], x[4], b)
	z[5], b = bits.Sub64(z[5], x[5], b)
	z[6], b = bits.Sub64(z[6], x[6], b)
	z[7], b = bits.Sub64(z[7], x[7], b)
	z[8], b = bits.Sub64(z[8], x[8], b)
	z[9], b = bits.Sub64(z[9], x[9], b)
	z[10], b = bits.Sub64(z[10], x[10], b)
	z[11], b = bits.Sub64(z[11], x[11], b)
	z[12], b = bits.Sub64(z[12], x[12], b)
	z[13], b = bits.Sub64(z[13], x[13], b)
	z[14], b = bits.Sub64(z[14], x[14], b)
	z[15], b = bits.Sub64(z[15], x[15], b)
	z[16], b = bits.Sub64(z[16], x[16], b)
	z[17], b = bits.Sub64(z[17], x[17], b)
	z[18], b = bits.Sub64(z[18], x[18], b)
	z[19], b = bits.Sub64(z[19], x[19], b)
	z[20], b = bits.Sub64(z[20], x[20], b)
	z[21], b = bits.Sub64(z[21], x[21], b)
	if b != 0 {
		var c uint64
		z[0], c = bits.Add64(z[0], 11739818372011875763, 0)
		z[1], c = bits.Add64(z[1], 11824375430665141315, c)
		z[2], c = bits.Add64(z[2], 897513172090905252, c)
		z[3], c = bits.Add64(z[3], 531120025817225475, c)
		z[4], c = bits.Add64(z[4], 8707661892141009149, c)
		z[5], c = bits.Add64(z[5], 11786224458619984790, c)
		z[6], c = bits.Add64(z[6], 5659238587671396734, c)
		z[7], c = bits.Add64(z[7], 18016383301055546002, c)
		z[8], c = bits.Add64(z[8], 10775018464463249911, c)
		z[9], c = bits.Add64(z[9], 17064401429272323224, c)
		z[10], c = bits.Add64(z[10], 18250729195507589214, c)
		z[11], c = bits.Add64(z[11], 7155370817234530960, c)
		z[12], c = bits.Add64(z[12], 8659264606281177933, c)
		z[13], c = bits.Add64(z[13], 9872774209099417190, c)
		z[14], c = bits.Add64(z[14], 7629372345097312458, c)
		z[15], c = bits.Add64(z[15], 17007029134472191228, c)
		z[16], c = bits.Add64(z[16], 5991468884766936598, c)
		z[17], c = bits.Add64(z[17], 11341612225600356157, c)
		z[18], c = bits.Add64(z[18], 18433679792523411973, c)
		z[19], c = bits.Add64(z[19], 415635585839274209, c)
		z[20], c = bits.Add64(z[20], 8907810790818485543, c)
		z[21], _ = bits.Add64(z[21], 6940634706484457090, c)
	}
	return z
}

// Exp z = x^exponent mod q
// (not optimized)
// exponent (non-montgomery form) is ordered from least significant word to most significant word
func (z *Element22) Exp(x Element22, exponent ...uint64) *Element22 {
	r := 0
	msb := 0
	for i := len(exponent) - 1; i >= 0; i-- {
		if exponent[i] == 0 {
			r++
		} else {
			msb = (i * 64) + bits.Len64(exponent[i])
			break
		}
	}
	exponent = exponent[:len(exponent)-r]
	if len(exponent) == 0 {
		return z.SetOne()
	}

	z.Set(&x)

	l := msb - 2
	for i := l; i >= 0; i-- {
		z.Square(z)
		if exponent[i/64]&(1<<uint(i%64)) != 0 {
			z.MulAssign(&x)
		}
	}
	return z
}

// FromMont converts z in place (i.e. mutates) from Montgomery to regular representation
// sets and returns z = z * 1
func (z *Element22) FromMont() *Element22 {

	// the following lines implement z = z * 1
	// with a modified CIOS montgomery multiplication
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 5124176631818446469
		C := madd0(m, 11739818372011875763, z[0])
		C, z[0] = madd2(m, 11824375430665141315, z[1], C)
		C, z[1] = madd2(m, 897513172090905252, z[2], C)
		C, z[2] = madd2(m, 531120025817225475, z[3], C)
		C, z[3] = madd2(m, 8707661892141009149, z[4], C)
		C, z[4] = madd2(m, 11786224458619984790, z[5], C)
		C, z[5] = madd2(m, 5659238587671396734, z[6], C)
		C, z[6] = madd2(m, 18016383301055546002, z[7], C)
		C, z[7] = madd2(m, 10775018464463249911, z[8], C)
		C, z[8] = madd2(m, 17064401429272323224, z[9], C)
		C, z[9] = madd2(m, 18250729195507589214, z[10], C)
		C, z[10] = madd2(m, 7155370817234530960, z[11], C)
		C, z[11] = madd2(m, 8659264606281177933, z[12], C)
		C, z[12] = madd2(m, 9872774209099417190, z[13], C)
		C, z[13] = madd2(m, 7629372345097312458, z[14], C)
		C, z[14] = madd2(m, 17007029134472191228, z[15], C)
		C, z[15] = madd2(m, 5991468884766936598, z[16], C)
		C, z[16] = madd2(m, 11341612225600356157, z[17], C)
		C, z[17] = madd2(m, 18433679792523411973, z[18], C)
		C, z[18] = madd2(m, 415635585839274209, z[19], C)
		C, z[19] = madd2(m, 8907810790818485543, z[20], C)
		C, z[20] = madd2(m, 6940634706484457090, z[21], C)
		z[21] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 5124176631818446469
		C := madd0(m, 11739818372011875763, z[0])
		C, z[0] = madd2(m, 11824375430665141315, z[1], C)
		C, z[1] = madd2(m, 897513172090905252, z[2], C)
		C, z[2] = madd2(m, 531120025817225475, z[3], C)
		C, z[3] = madd2(m, 8707661892141009149, z[4], C)
		C, z[4] = madd2(m, 11786224458619984790, z[5], C)
		C, z[5] = madd2(m, 5659238587671396734, z[6], C)
		C, z[6] = madd2(m, 18016383301055546002, z[7], C)
		C, z[7] = madd2(m, 10775018464463249911, z[8], C)
		C, z[8] = madd2(m, 17064401429272323224, z[9], C)
		C, z[9] = madd2(m, 18250729195507589214, z[10], C)
		C, z[10] = madd2(m, 7155370817234530960, z[11], C)
		C, z[11] = madd2(m, 8659264606281177933, z[12], C)
		C, z[12] = madd2(m, 9872774209099417190, z[13], C)
		C, z[13] = madd2(m, 7629372345097312458, z[14], C)
		C, z[14] = madd2(m, 17007029134472191228, z[15], C)
		C, z[15] = madd2(m, 5991468884766936598, z[16], C)
		C, z[16] = madd2(m, 11341612225600356157, z[17], C)
		C, z[17] = madd2(m, 18433679792523411973, z[18], C)
		C, z[18] = madd2(m, 415635585839274209, z[19], C)
		C, z[19] = madd2(m, 8907810790818485543, z[20], C)
		C, z[20] = madd2(m, 6940634706484457090, z[21], C)
		z[21] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 5124176631818446469
		C := madd0(m, 11739818372011875763, z[0])
		C, z[0] = madd2(m, 11824375430665141315, z[1], C)
		C, z[1] = madd2(m, 897513172090905252, z[2], C)
		C, z[2] = madd2(m, 531120025817225475, z[3], C)
		C, z[3] = madd2(m, 8707661892141009149, z[4], C)
		C, z[4] = madd2(m, 11786224458619984790, z[5], C)
		C, z[5] = madd2(m, 5659238587671396734, z[6], C)
		C, z[6] = madd2(m, 18016383301055546002, z[7], C)
		C, z[7] = madd2(m, 10775018464463249911, z[8], C)
		C, z[8] = madd2(m, 17064401429272323224, z[9], C)
		C, z[9] = madd2(m, 18250729195507589214, z[10], C)
		C, z[10] = madd2(m, 7155370817234530960, z[11], C)
		C, z[11] = madd2(m, 8659264606281177933, z[12], C)
		C, z[12] = madd2(m, 9872774209099417190, z[13], C)
		C, z[13] = madd2(m, 7629372345097312458, z[14], C)
		C, z[14] = madd2(m, 17007029134472191228, z[15], C)
		C, z[15] = madd2(m, 5991468884766936598, z[16], C)
		C, z[16] = madd2(m, 11341612225600356157, z[17], C)
		C, z[17] = madd2(m, 18433679792523411973, z[18], C)
		C, z[18] = madd2(m, 415635585839274209, z[19], C)
		C, z[19] = madd2(m, 8907810790818485543, z[20], C)
		C, z[20] = madd2(m, 6940634706484457090, z[21], C)
		z[21] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 5124176631818446469
		C := madd0(m, 11739818372011875763, z[0])
		C, z[0] = madd2(m, 11824375430665141315, z[1], C)
		C, z[1] = madd2(m, 897513172090905252, z[2], C)
		C, z[2] = madd2(m, 531120025817225475, z[3], C)
		C, z[3] = madd2(m, 8707661892141009149, z[4], C)
		C, z[4] = madd2(m, 11786224458619984790, z[5], C)
		C, z[5] = madd2(m, 5659238587671396734, z[6], C)
		C, z[6] = madd2(m, 18016383301055546002, z[7], C)
		C, z[7] = madd2(m, 10775018464463249911, z[8], C)
		C, z[8] = madd2(m, 17064401429272323224, z[9], C)
		C, z[9] = madd2(m, 18250729195507589214, z[10], C)
		C, z[10] = madd2(m, 7155370817234530960, z[11], C)
		C, z[11] = madd2(m, 8659264606281177933, z[12], C)
		C, z[12] = madd2(m, 9872774209099417190, z[13], C)
		C, z[13] = madd2(m, 7629372345097312458, z[14], C)
		C, z[14] = madd2(m, 17007029134472191228, z[15], C)
		C, z[15] = madd2(m, 5991468884766936598, z[16], C)
		C, z[16] = madd2(m, 11341612225600356157, z[17], C)
		C, z[17] = madd2(m, 18433679792523411973, z[18], C)
		C, z[18] = madd2(m, 415635585839274209, z[19], C)
		C, z[19] = madd2(m, 8907810790818485543, z[20], C)
		C, z[20] = madd2(m, 6940634706484457090, z[21], C)
		z[21] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 5124176631818446469
		C := madd0(m, 11739818372011875763, z[0])
		C, z[0] = madd2(m, 11824375430665141315, z[1], C)
		C, z[1] = madd2(m, 897513172090905252, z[2], C)
		C, z[2] = madd2(m, 531120025817225475, z[3], C)
		C, z[3] = madd2(m, 8707661892141009149, z[4], C)
		C, z[4] = madd2(m, 11786224458619984790, z[5], C)
		C, z[5] = madd2(m, 5659238587671396734, z[6], C)
		C, z[6] = madd2(m, 18016383301055546002, z[7], C)
		C, z[7] = madd2(m, 10775018464463249911, z[8], C)
		C, z[8] = madd2(m, 17064401429272323224, z[9], C)
		C, z[9] = madd2(m, 18250729195507589214, z[10], C)
		C, z[10] = madd2(m, 7155370817234530960, z[11], C)
		C, z[11] = madd2(m, 8659264606281177933, z[12], C)
		C, z[12] = madd2(m, 9872774209099417190, z[13], C)
		C, z[13] = madd2(m, 7629372345097312458, z[14], C)
		C, z[14] = madd2(m, 17007029134472191228, z[15], C)
		C, z[15] = madd2(m, 5991468884766936598, z[16], C)
		C, z[16] = madd2(m, 11341612225600356157, z[17], C)
		C, z[17] = madd2(m, 18433679792523411973, z[18], C)
		C, z[18] = madd2(m, 415635585839274209, z[19], C)
		C, z[19] = madd2(m, 8907810790818485543, z[20], C)
		C, z[20] = madd2(m, 6940634706484457090, z[21], C)
		z[21] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 5124176631818446469
		C := madd0(m, 11739818372011875763, z[0])
		C, z[0] = madd2(m, 11824375430665141315, z[1], C)
		C, z[1] = madd2(m, 897513172090905252, z[2], C)
		C, z[2] = madd2(m, 531120025817225475, z[3], C)
		C, z[3] = madd2(m, 8707661892141009149, z[4], C)
		C, z[4] = madd2(m, 11786224458619984790, z[5], C)
		C, z[5] = madd2(m, 5659238587671396734, z[6], C)
		C, z[6] = madd2(m, 18016383301055546002, z[7], C)
		C, z[7] = madd2(m, 10775018464463249911, z[8], C)
		C, z[8] = madd2(m, 17064401429272323224, z[9], C)
		C, z[9] = madd2(m, 18250729195507589214, z[10], C)
		C, z[10] = madd2(m, 7155370817234530960, z[11], C)
		C, z[11] = madd2(m, 8659264606281177933, z[12], C)
		C, z[12] = madd2(m, 9872774209099417190, z[13], C)
		C, z[13] = madd2(m, 7629372345097312458, z[14], C)
		C, z[14] = madd2(m, 17007029134472191228, z[15], C)
		C, z[15] = madd2(m, 5991468884766936598, z[16], C)
		C, z[16] = madd2(m, 11341612225600356157, z[17], C)
		C, z[17] = madd2(m, 18433679792523411973, z[18], C)
		C, z[18] = madd2(m, 415635585839274209, z[19], C)
		C, z[19] = madd2(m, 8907810790818485543, z[20], C)
		C, z[20] = madd2(m, 6940634706484457090, z[21], C)
		z[21] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 5124176631818446469
		C := madd0(m, 11739818372011875763, z[0])
		C, z[0] = madd2(m, 11824375430665141315, z[1], C)
		C, z[1] = madd2(m, 897513172090905252, z[2], C)
		C, z[2] = madd2(m, 531120025817225475, z[3], C)
		C, z[3] = madd2(m, 8707661892141009149, z[4], C)
		C, z[4] = madd2(m, 11786224458619984790, z[5], C)
		C, z[5] = madd2(m, 5659238587671396734, z[6], C)
		C, z[6] = madd2(m, 18016383301055546002, z[7], C)
		C, z[7] = madd2(m, 10775018464463249911, z[8], C)
		C, z[8] = madd2(m, 17064401429272323224, z[9], C)
		C, z[9] = madd2(m, 18250729195507589214, z[10], C)
		C, z[10] = madd2(m, 7155370817234530960, z[11], C)
		C, z[11] = madd2(m, 8659264606281177933, z[12], C)
		C, z[12] = madd2(m, 9872774209099417190, z[13], C)
		C, z[13] = madd2(m, 7629372345097312458, z[14], C)
		C, z[14] = madd2(m, 17007029134472191228, z[15], C)
		C, z[15] = madd2(m, 5991468884766936598, z[16], C)
		C, z[16] = madd2(m, 11341612225600356157, z[17], C)
		C, z[17] = madd2(m, 18433679792523411973, z[18], C)
		C, z[18] = madd2(m, 415635585839274209, z[19], C)
		C, z[19] = madd2(m, 8907810790818485543, z[20], C)
		C, z[20] = madd2(m, 6940634706484457090, z[21], C)
		z[21] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 5124176631818446469
		C := madd0(m, 11739818372011875763, z[0])
		C, z[0] = madd2(m, 11824375430665141315, z[1], C)
		C, z[1] = madd2(m, 897513172090905252, z[2], C)
		C, z[2] = madd2(m, 531120025817225475, z[3], C)
		C, z[3] = madd2(m, 8707661892141009149, z[4], C)
		C, z[4] = madd2(m, 11786224458619984790, z[5], C)
		C, z[5] = madd2(m, 5659238587671396734, z[6], C)
		C, z[6] = madd2(m, 18016383301055546002, z[7], C)
		C, z[7] = madd2(m, 10775018464463249911, z[8], C)
		C, z[8] = madd2(m, 17064401429272323224, z[9], C)
		C, z[9] = madd2(m, 18250729195507589214, z[10], C)
		C, z[10] = madd2(m, 7155370817234530960, z[11], C)
		C, z[11] = madd2(m, 8659264606281177933, z[12], C)
		C, z[12] = madd2(m, 9872774209099417190, z[13], C)
		C, z[13] = madd2(m, 7629372345097312458, z[14], C)
		C, z[14] = madd2(m, 17007029134472191228, z[15], C)
		C, z[15] = madd2(m, 5991468884766936598, z[16], C)
		C, z[16] = madd2(m, 11341612225600356157, z[17], C)
		C, z[17] = madd2(m, 18433679792523411973, z[18], C)
		C, z[18] = madd2(m, 415635585839274209, z[19], C)
		C, z[19] = madd2(m, 8907810790818485543, z[20], C)
		C, z[20] = madd2(m, 6940634706484457090, z[21], C)
		z[21] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 5124176631818446469
		C := madd0(m, 11739818372011875763, z[0])
		C, z[0] = madd2(m, 11824375430665141315, z[1], C)
		C, z[1] = madd2(m, 897513172090905252, z[2], C)
		C, z[2] = madd2(m, 531120025817225475, z[3], C)
		C, z[3] = madd2(m, 8707661892141009149, z[4], C)
		C, z[4] = madd2(m, 11786224458619984790, z[5], C)
		C, z[5] = madd2(m, 5659238587671396734, z[6], C)
		C, z[6] = madd2(m, 18016383301055546002, z[7], C)
		C, z[7] = madd2(m, 10775018464463249911, z[8], C)
		C, z[8] = madd2(m, 17064401429272323224, z[9], C)
		C, z[9] = madd2(m, 18250729195507589214, z[10], C)
		C, z[10] = madd2(m, 7155370817234530960, z[11], C)
		C, z[11] = madd2(m, 8659264606281177933, z[12], C)
		C, z[12] = madd2(m, 9872774209099417190, z[13], C)
		C, z[13] = madd2(m, 7629372345097312458, z[14], C)
		C, z[14] = madd2(m, 17007029134472191228, z[15], C)
		C, z[15] = madd2(m, 5991468884766936598, z[16], C)
		C, z[16] = madd2(m, 11341612225600356157, z[17], C)
		C, z[17] = madd2(m, 18433679792523411973, z[18], C)
		C, z[18] = madd2(m, 415635585839274209, z[19], C)
		C, z[19] = madd2(m, 8907810790818485543, z[20], C)
		C, z[20] = madd2(m, 6940634706484457090, z[21], C)
		z[21] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 5124176631818446469
		C := madd0(m, 11739818372011875763, z[0])
		C, z[0] = madd2(m, 11824375430665141315, z[1], C)
		C, z[1] = madd2(m, 897513172090905252, z[2], C)
		C, z[2] = madd2(m, 531120025817225475, z[3], C)
		C, z[3] = madd2(m, 8707661892141009149, z[4], C)
		C, z[4] = madd2(m, 11786224458619984790, z[5], C)
		C, z[5] = madd2(m, 5659238587671396734, z[6], C)
		C, z[6] = madd2(m, 18016383301055546002, z[7], C)
		C, z[7] = madd2(m, 10775018464463249911, z[8], C)
		C, z[8] = madd2(m, 17064401429272323224, z[9], C)
		C, z[9] = madd2(m, 18250729195507589214, z[10], C)
		C, z[10] = madd2(m, 7155370817234530960, z[11], C)
		C, z[11] = madd2(m, 8659264606281177933, z[12], C)
		C, z[12] = madd2(m, 9872774209099417190, z[13], C)
		C, z[13] = madd2(m, 7629372345097312458, z[14], C)
		C, z[14] = madd2(m, 17007029134472191228, z[15], C)
		C, z[15] = madd2(m, 5991468884766936598, z[16], C)
		C, z[16] = madd2(m, 11341612225600356157, z[17], C)
		C, z[17] = madd2(m, 18433679792523411973, z[18], C)
		C, z[18] = madd2(m, 415635585839274209, z[19], C)
		C, z[19] = madd2(m, 8907810790818485543, z[20], C)
		C, z[20] = madd2(m, 6940634706484457090, z[21], C)
		z[21] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 5124176631818446469
		C := madd0(m, 11739818372011875763, z[0])
		C, z[0] = madd2(m, 11824375430665141315, z[1], C)
		C, z[1] = madd2(m, 897513172090905252, z[2], C)
		C, z[2] = madd2(m, 531120025817225475, z[3], C)
		C, z[3] = madd2(m, 8707661892141009149, z[4], C)
		C, z[4] = madd2(m, 11786224458619984790, z[5], C)
		C, z[5] = madd2(m, 5659238587671396734, z[6], C)
		C, z[6] = madd2(m, 18016383301055546002, z[7], C)
		C, z[7] = madd2(m, 10775018464463249911, z[8], C)
		C, z[8] = madd2(m, 17064401429272323224, z[9], C)
		C, z[9] = madd2(m, 18250729195507589214, z[10], C)
		C, z[10] = madd2(m, 7155370817234530960, z[11], C)
		C, z[11] = madd2(m, 8659264606281177933, z[12], C)
		C, z[12] = madd2(m, 9872774209099417190, z[13], C)
		C, z[13] = madd2(m, 7629372345097312458, z[14], C)
		C, z[14] = madd2(m, 17007029134472191228, z[15], C)
		C, z[15] = madd2(m, 5991468884766936598, z[16], C)
		C, z[16] = madd2(m, 11341612225600356157, z[17], C)
		C, z[17] = madd2(m, 18433679792523411973, z[18], C)
		C, z[18] = madd2(m, 415635585839274209, z[19], C)
		C, z[19] = madd2(m, 8907810790818485543, z[20], C)
		C, z[20] = madd2(m, 6940634706484457090, z[21], C)
		z[21] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 5124176631818446469
		C := madd0(m, 11739818372011875763, z[0])
		C, z[0] = madd2(m, 11824375430665141315, z[1], C)
		C, z[1] = madd2(m, 897513172090905252, z[2], C)
		C, z[2] = madd2(m, 531120025817225475, z[3], C)
		C, z[3] = madd2(m, 8707661892141009149, z[4], C)
		C, z[4] = madd2(m, 11786224458619984790, z[5], C)
		C, z[5] = madd2(m, 5659238587671396734, z[6], C)
		C, z[6] = madd2(m, 18016383301055546002, z[7], C)
		C, z[7] = madd2(m, 10775018464463249911, z[8], C)
		C, z[8] = madd2(m, 17064401429272323224, z[9], C)
		C, z[9] = madd2(m, 18250729195507589214, z[10], C)
		C, z[10] = madd2(m, 7155370817234530960, z[11], C)
		C, z[11] = madd2(m, 8659264606281177933, z[12], C)
		C, z[12] = madd2(m, 9872774209099417190, z[13], C)
		C, z[13] = madd2(m, 7629372345097312458, z[14], C)
		C, z[14] = madd2(m, 17007029134472191228, z[15], C)
		C, z[15] = madd2(m, 5991468884766936598, z[16], C)
		C, z[16] = madd2(m, 11341612225600356157, z[17], C)
		C, z[17] = madd2(m, 18433679792523411973, z[18], C)
		C, z[18] = madd2(m, 415635585839274209, z[19], C)
		C, z[19] = madd2(m, 8907810790818485543, z[20], C)
		C, z[20] = madd2(m, 6940634706484457090, z[21], C)
		z[21] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 5124176631818446469
		C := madd0(m, 11739818372011875763, z[0])
		C, z[0] = madd2(m, 11824375430665141315, z[1], C)
		C, z[1] = madd2(m, 897513172090905252, z[2], C)
		C, z[2] = madd2(m, 531120025817225475, z[3], C)
		C, z[3] = madd2(m, 8707661892141009149, z[4], C)
		C, z[4] = madd2(m, 11786224458619984790, z[5], C)
		C, z[5] = madd2(m, 5659238587671396734, z[6], C)
		C, z[6] = madd2(m, 18016383301055546002, z[7], C)
		C, z[7] = madd2(m, 10775018464463249911, z[8], C)
		C, z[8] = madd2(m, 17064401429272323224, z[9], C)
		C, z[9] = madd2(m, 18250729195507589214, z[10], C)
		C, z[10] = madd2(m, 7155370817234530960, z[11], C)
		C, z[11] = madd2(m, 8659264606281177933, z[12], C)
		C, z[12] = madd2(m, 9872774209099417190, z[13], C)
		C, z[13] = madd2(m, 7629372345097312458, z[14], C)
		C, z[14] = madd2(m, 17007029134472191228, z[15], C)
		C, z[15] = madd2(m, 5991468884766936598, z[16], C)
		C, z[16] = madd2(m, 11341612225600356157, z[17], C)
		C, z[17] = madd2(m, 18433679792523411973, z[18], C)
		C, z[18] = madd2(m, 415635585839274209, z[19], C)
		C, z[19] = madd2(m, 8907810790818485543, z[20], C)
		C, z[20] = madd2(m, 6940634706484457090, z[21], C)
		z[21] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 5124176631818446469
		C := madd0(m, 11739818372011875763, z[0])
		C, z[0] = madd2(m, 11824375430665141315, z[1], C)
		C, z[1] = madd2(m, 897513172090905252, z[2], C)
		C, z[2] = madd2(m, 531120025817225475, z[3], C)
		C, z[3] = madd2(m, 8707661892141009149, z[4], C)
		C, z[4] = madd2(m, 11786224458619984790, z[5], C)
		C, z[5] = madd2(m, 5659238587671396734, z[6], C)
		C, z[6] = madd2(m, 18016383301055546002, z[7], C)
		C, z[7] = madd2(m, 10775018464463249911, z[8], C)
		C, z[8] = madd2(m, 17064401429272323224, z[9], C)
		C, z[9] = madd2(m, 18250729195507589214, z[10], C)
		C, z[10] = madd2(m, 7155370817234530960, z[11], C)
		C, z[11] = madd2(m, 8659264606281177933, z[12], C)
		C, z[12] = madd2(m, 9872774209099417190, z[13], C)
		C, z[13] = madd2(m, 7629372345097312458, z[14], C)
		C, z[14] = madd2(m, 17007029134472191228, z[15], C)
		C, z[15] = madd2(m, 5991468884766936598, z[16], C)
		C, z[16] = madd2(m, 11341612225600356157, z[17], C)
		C, z[17] = madd2(m, 18433679792523411973, z[18], C)
		C, z[18] = madd2(m, 415635585839274209, z[19], C)
		C, z[19] = madd2(m, 8907810790818485543, z[20], C)
		C, z[20] = madd2(m, 6940634706484457090, z[21], C)
		z[21] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 5124176631818446469
		C := madd0(m, 11739818372011875763, z[0])
		C, z[0] = madd2(m, 11824375430665141315, z[1], C)
		C, z[1] = madd2(m, 897513172090905252, z[2], C)
		C, z[2] = madd2(m, 531120025817225475, z[3], C)
		C, z[3] = madd2(m, 8707661892141009149, z[4], C)
		C, z[4] = madd2(m, 11786224458619984790, z[5], C)
		C, z[5] = madd2(m, 5659238587671396734, z[6], C)
		C, z[6] = madd2(m, 18016383301055546002, z[7], C)
		C, z[7] = madd2(m, 10775018464463249911, z[8], C)
		C, z[8] = madd2(m, 17064401429272323224, z[9], C)
		C, z[9] = madd2(m, 18250729195507589214, z[10], C)
		C, z[10] = madd2(m, 7155370817234530960, z[11], C)
		C, z[11] = madd2(m, 8659264606281177933, z[12], C)
		C, z[12] = madd2(m, 9872774209099417190, z[13], C)
		C, z[13] = madd2(m, 7629372345097312458, z[14], C)
		C, z[14] = madd2(m, 17007029134472191228, z[15], C)
		C, z[15] = madd2(m, 5991468884766936598, z[16], C)
		C, z[16] = madd2(m, 11341612225600356157, z[17], C)
		C, z[17] = madd2(m, 18433679792523411973, z[18], C)
		C, z[18] = madd2(m, 415635585839274209, z[19], C)
		C, z[19] = madd2(m, 8907810790818485543, z[20], C)
		C, z[20] = madd2(m, 6940634706484457090, z[21], C)
		z[21] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 5124176631818446469
		C := madd0(m, 11739818372011875763, z[0])
		C, z[0] = madd2(m, 11824375430665141315, z[1], C)
		C, z[1] = madd2(m, 897513172090905252, z[2], C)
		C, z[2] = madd2(m, 531120025817225475, z[3], C)
		C, z[3] = madd2(m, 8707661892141009149, z[4], C)
		C, z[4] = madd2(m, 11786224458619984790, z[5], C)
		C, z[5] = madd2(m, 5659238587671396734, z[6], C)
		C, z[6] = madd2(m, 18016383301055546002, z[7], C)
		C, z[7] = madd2(m, 10775018464463249911, z[8], C)
		C, z[8] = madd2(m, 17064401429272323224, z[9], C)
		C, z[9] = madd2(m, 18250729195507589214, z[10], C)
		C, z[10] = madd2(m, 7155370817234530960, z[11], C)
		C, z[11] = madd2(m, 8659264606281177933, z[12], C)
		C, z[12] = madd2(m, 9872774209099417190, z[13], C)
		C, z[13] = madd2(m, 7629372345097312458, z[14], C)
		C, z[14] = madd2(m, 17007029134472191228, z[15], C)
		C, z[15] = madd2(m, 5991468884766936598, z[16], C)
		C, z[16] = madd2(m, 11341612225600356157, z[17], C)
		C, z[17] = madd2(m, 18433679792523411973, z[18], C)
		C, z[18] = madd2(m, 415635585839274209, z[19], C)
		C, z[19] = madd2(m, 8907810790818485543, z[20], C)
		C, z[20] = madd2(m, 6940634706484457090, z[21], C)
		z[21] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 5124176631818446469
		C := madd0(m, 11739818372011875763, z[0])
		C, z[0] = madd2(m, 11824375430665141315, z[1], C)
		C, z[1] = madd2(m, 897513172090905252, z[2], C)
		C, z[2] = madd2(m, 531120025817225475, z[3], C)
		C, z[3] = madd2(m, 8707661892141009149, z[4], C)
		C, z[4] = madd2(m, 11786224458619984790, z[5], C)
		C, z[5] = madd2(m, 5659238587671396734, z[6], C)
		C, z[6] = madd2(m, 18016383301055546002, z[7], C)
		C, z[7] = madd2(m, 10775018464463249911, z[8], C)
		C, z[8] = madd2(m, 17064401429272323224, z[9], C)
		C, z[9] = madd2(m, 18250729195507589214, z[10], C)
		C, z[10] = madd2(m, 7155370817234530960, z[11], C)
		C, z[11] = madd2(m, 8659264606281177933, z[12], C)
		C, z[12] = madd2(m, 9872774209099417190, z[13], C)
		C, z[13] = madd2(m, 7629372345097312458, z[14], C)
		C, z[14] = madd2(m, 17007029134472191228, z[15], C)
		C, z[15] = madd2(m, 5991468884766936598, z[16], C)
		C, z[16] = madd2(m, 11341612225600356157, z[17], C)
		C, z[17] = madd2(m, 18433679792523411973, z[18], C)
		C, z[18] = madd2(m, 415635585839274209, z[19], C)
		C, z[19] = madd2(m, 8907810790818485543, z[20], C)
		C, z[20] = madd2(m, 6940634706484457090, z[21], C)
		z[21] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 5124176631818446469
		C := madd0(m, 11739818372011875763, z[0])
		C, z[0] = madd2(m, 11824375430665141315, z[1], C)
		C, z[1] = madd2(m, 897513172090905252, z[2], C)
		C, z[2] = madd2(m, 531120025817225475, z[3], C)
		C, z[3] = madd2(m, 8707661892141009149, z[4], C)
		C, z[4] = madd2(m, 11786224458619984790, z[5], C)
		C, z[5] = madd2(m, 5659238587671396734, z[6], C)
		C, z[6] = madd2(m, 18016383301055546002, z[7], C)
		C, z[7] = madd2(m, 10775018464463249911, z[8], C)
		C, z[8] = madd2(m, 17064401429272323224, z[9], C)
		C, z[9] = madd2(m, 18250729195507589214, z[10], C)
		C, z[10] = madd2(m, 7155370817234530960, z[11], C)
		C, z[11] = madd2(m, 8659264606281177933, z[12], C)
		C, z[12] = madd2(m, 9872774209099417190, z[13], C)
		C, z[13] = madd2(m, 7629372345097312458, z[14], C)
		C, z[14] = madd2(m, 17007029134472191228, z[15], C)
		C, z[15] = madd2(m, 5991468884766936598, z[16], C)
		C, z[16] = madd2(m, 11341612225600356157, z[17], C)
		C, z[17] = madd2(m, 18433679792523411973, z[18], C)
		C, z[18] = madd2(m, 415635585839274209, z[19], C)
		C, z[19] = madd2(m, 8907810790818485543, z[20], C)
		C, z[20] = madd2(m, 6940634706484457090, z[21], C)
		z[21] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 5124176631818446469
		C := madd0(m, 11739818372011875763, z[0])
		C, z[0] = madd2(m, 11824375430665141315, z[1], C)
		C, z[1] = madd2(m, 897513172090905252, z[2], C)
		C, z[2] = madd2(m, 531120025817225475, z[3], C)
		C, z[3] = madd2(m, 8707661892141009149, z[4], C)
		C, z[4] = madd2(m, 11786224458619984790, z[5], C)
		C, z[5] = madd2(m, 5659238587671396734, z[6], C)
		C, z[6] = madd2(m, 18016383301055546002, z[7], C)
		C, z[7] = madd2(m, 10775018464463249911, z[8], C)
		C, z[8] = madd2(m, 17064401429272323224, z[9], C)
		C, z[9] = madd2(m, 18250729195507589214, z[10], C)
		C, z[10] = madd2(m, 7155370817234530960, z[11], C)
		C, z[11] = madd2(m, 8659264606281177933, z[12], C)
		C, z[12] = madd2(m, 9872774209099417190, z[13], C)
		C, z[13] = madd2(m, 7629372345097312458, z[14], C)
		C, z[14] = madd2(m, 17007029134472191228, z[15], C)
		C, z[15] = madd2(m, 5991468884766936598, z[16], C)
		C, z[16] = madd2(m, 11341612225600356157, z[17], C)
		C, z[17] = madd2(m, 18433679792523411973, z[18], C)
		C, z[18] = madd2(m, 415635585839274209, z[19], C)
		C, z[19] = madd2(m, 8907810790818485543, z[20], C)
		C, z[20] = madd2(m, 6940634706484457090, z[21], C)
		z[21] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 5124176631818446469
		C := madd0(m, 11739818372011875763, z[0])
		C, z[0] = madd2(m, 11824375430665141315, z[1], C)
		C, z[1] = madd2(m, 897513172090905252, z[2], C)
		C, z[2] = madd2(m, 531120025817225475, z[3], C)
		C, z[3] = madd2(m, 8707661892141009149, z[4], C)
		C, z[4] = madd2(m, 11786224458619984790, z[5], C)
		C, z[5] = madd2(m, 5659238587671396734, z[6], C)
		C, z[6] = madd2(m, 18016383301055546002, z[7], C)
		C, z[7] = madd2(m, 10775018464463249911, z[8], C)
		C, z[8] = madd2(m, 17064401429272323224, z[9], C)
		C, z[9] = madd2(m, 18250729195507589214, z[10], C)
		C, z[10] = madd2(m, 7155370817234530960, z[11], C)
		C, z[11] = madd2(m, 8659264606281177933, z[12], C)
		C, z[12] = madd2(m, 9872774209099417190, z[13], C)
		C, z[13] = madd2(m, 7629372345097312458, z[14], C)
		C, z[14] = madd2(m, 17007029134472191228, z[15], C)
		C, z[15] = madd2(m, 5991468884766936598, z[16], C)
		C, z[16] = madd2(m, 11341612225600356157, z[17], C)
		C, z[17] = madd2(m, 18433679792523411973, z[18], C)
		C, z[18] = madd2(m, 415635585839274209, z[19], C)
		C, z[19] = madd2(m, 8907810790818485543, z[20], C)
		C, z[20] = madd2(m, 6940634706484457090, z[21], C)
		z[21] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 5124176631818446469
		C := madd0(m, 11739818372011875763, z[0])
		C, z[0] = madd2(m, 11824375430665141315, z[1], C)
		C, z[1] = madd2(m, 897513172090905252, z[2], C)
		C, z[2] = madd2(m, 531120025817225475, z[3], C)
		C, z[3] = madd2(m, 8707661892141009149, z[4], C)
		C, z[4] = madd2(m, 11786224458619984790, z[5], C)
		C, z[5] = madd2(m, 5659238587671396734, z[6], C)
		C, z[6] = madd2(m, 18016383301055546002, z[7], C)
		C, z[7] = madd2(m, 10775018464463249911, z[8], C)
		C, z[8] = madd2(m, 17064401429272323224, z[9], C)
		C, z[9] = madd2(m, 18250729195507589214, z[10], C)
		C, z[10] = madd2(m, 7155370817234530960, z[11], C)
		C, z[11] = madd2(m, 8659264606281177933, z[12], C)
		C, z[12] = madd2(m, 9872774209099417190, z[13], C)
		C, z[13] = madd2(m, 7629372345097312458, z[14], C)
		C, z[14] = madd2(m, 17007029134472191228, z[15], C)
		C, z[15] = madd2(m, 5991468884766936598, z[16], C)
		C, z[16] = madd2(m, 11341612225600356157, z[17], C)
		C, z[17] = madd2(m, 18433679792523411973, z[18], C)
		C, z[18] = madd2(m, 415635585839274209, z[19], C)
		C, z[19] = madd2(m, 8907810790818485543, z[20], C)
		C, z[20] = madd2(m, 6940634706484457090, z[21], C)
		z[21] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 5124176631818446469
		C := madd0(m, 11739818372011875763, z[0])
		C, z[0] = madd2(m, 11824375430665141315, z[1], C)
		C, z[1] = madd2(m, 897513172090905252, z[2], C)
		C, z[2] = madd2(m, 531120025817225475, z[3], C)
		C, z[3] = madd2(m, 8707661892141009149, z[4], C)
		C, z[4] = madd2(m, 11786224458619984790, z[5], C)
		C, z[5] = madd2(m, 5659238587671396734, z[6], C)
		C, z[6] = madd2(m, 18016383301055546002, z[7], C)
		C, z[7] = madd2(m, 10775018464463249911, z[8], C)
		C, z[8] = madd2(m, 17064401429272323224, z[9], C)
		C, z[9] = madd2(m, 18250729195507589214, z[10], C)
		C, z[10] = madd2(m, 7155370817234530960, z[11], C)
		C, z[11] = madd2(m, 8659264606281177933, z[12], C)
		C, z[12] = madd2(m, 9872774209099417190, z[13], C)
		C, z[13] = madd2(m, 7629372345097312458, z[14], C)
		C, z[14] = madd2(m, 17007029134472191228, z[15], C)
		C, z[15] = madd2(m, 5991468884766936598, z[16], C)
		C, z[16] = madd2(m, 11341612225600356157, z[17], C)
		C, z[17] = madd2(m, 18433679792523411973, z[18], C)
		C, z[18] = madd2(m, 415635585839274209, z[19], C)
		C, z[19] = madd2(m, 8907810790818485543, z[20], C)
		C, z[20] = madd2(m, 6940634706484457090, z[21], C)
		z[21] = C
	}

	// if z > q --> z -= q
	// note: this is NOT constant time
	if !(z[21] < 6940634706484457090 || (z[21] == 6940634706484457090 && (z[20] < 8907810790818485543 || (z[20] == 8907810790818485543 && (z[19] < 415635585839274209 || (z[19] == 415635585839274209 && (z[18] < 18433679792523411973 || (z[18] == 18433679792523411973 && (z[17] < 11341612225600356157 || (z[17] == 11341612225600356157 && (z[16] < 5991468884766936598 || (z[16] == 5991468884766936598 && (z[15] < 17007029134472191228 || (z[15] == 17007029134472191228 && (z[14] < 7629372345097312458 || (z[14] == 7629372345097312458 && (z[13] < 9872774209099417190 || (z[13] == 9872774209099417190 && (z[12] < 8659264606281177933 || (z[12] == 8659264606281177933 && (z[11] < 7155370817234530960 || (z[11] == 7155370817234530960 && (z[10] < 18250729195507589214 || (z[10] == 18250729195507589214 && (z[9] < 17064401429272323224 || (z[9] == 17064401429272323224 && (z[8] < 10775018464463249911 || (z[8] == 10775018464463249911 && (z[7] < 18016383301055546002 || (z[7] == 18016383301055546002 && (z[6] < 5659238587671396734 || (z[6] == 5659238587671396734 && (z[5] < 11786224458619984790 || (z[5] == 11786224458619984790 && (z[4] < 8707661892141009149 || (z[4] == 8707661892141009149 && (z[3] < 531120025817225475 || (z[3] == 531120025817225475 && (z[2] < 897513172090905252 || (z[2] == 897513172090905252 && (z[1] < 11824375430665141315 || (z[1] == 11824375430665141315 && (z[0] < 11739818372011875763))))))))))))))))))))))))))))))))))))))))))) {
		var b uint64
		z[0], b = bits.Sub64(z[0], 11739818372011875763, 0)
		z[1], b = bits.Sub64(z[1], 11824375430665141315, b)
		z[2], b = bits.Sub64(z[2], 897513172090905252, b)
		z[3], b = bits.Sub64(z[3], 531120025817225475, b)
		z[4], b = bits.Sub64(z[4], 8707661892141009149, b)
		z[5], b = bits.Sub64(z[5], 11786224458619984790, b)
		z[6], b = bits.Sub64(z[6], 5659238587671396734, b)
		z[7], b = bits.Sub64(z[7], 18016383301055546002, b)
		z[8], b = bits.Sub64(z[8], 10775018464463249911, b)
		z[9], b = bits.Sub64(z[9], 17064401429272323224, b)
		z[10], b = bits.Sub64(z[10], 18250729195507589214, b)
		z[11], b = bits.Sub64(z[11], 7155370817234530960, b)
		z[12], b = bits.Sub64(z[12], 8659264606281177933, b)
		z[13], b = bits.Sub64(z[13], 9872774209099417190, b)
		z[14], b = bits.Sub64(z[14], 7629372345097312458, b)
		z[15], b = bits.Sub64(z[15], 17007029134472191228, b)
		z[16], b = bits.Sub64(z[16], 5991468884766936598, b)
		z[17], b = bits.Sub64(z[17], 11341612225600356157, b)
		z[18], b = bits.Sub64(z[18], 18433679792523411973, b)
		z[19], b = bits.Sub64(z[19], 415635585839274209, b)
		z[20], b = bits.Sub64(z[20], 8907810790818485543, b)
		z[21], _ = bits.Sub64(z[21], 6940634706484457090, b)
	}
	return z
}

// ToMont converts z to Montgomery form
// sets and returns z = z * r^2
func (z *Element22) ToMont() *Element22 {
	var rSquare = Element22{
		9901674921716665561,
		13668672958573606533,
		1408907516797931921,
		16647415290003874373,
		13090722152941811966,
		13013665841691208697,
		432739466896639932,
		8427801444112232780,
		10457495725573821591,
		11727999463507199484,
		2083927881596073563,
		13528487123867359648,
		13744205382270543800,
		677055725083632008,
		14441938459731616867,
		12436732557390719199,
		1863958304940233633,
		5602010783111698812,
		4999911000077010311,
		15326642233162496446,
		13846022287005956051,
		1210226049598156668,
	}
	return z.MulAssign(&rSquare)
}

// ToRegular returns z in regular form (doesn't mutate z)
func (z Element22) ToRegular() Element22 {
	return *z.FromMont()
}

// String returns the string form of an Element22 in Montgomery form
func (z *Element22) String() string {
	var _z big.Int
	return z.ToBigIntRegular(&_z).String()
}

// ToBigInt returns z as a big.Int in Montgomery form
func (z *Element22) ToBigInt(res *big.Int) *big.Int {
	bits := (*[22]big.Word)(unsafe.Pointer(z))
	return res.SetBits(bits[:])
}

// ToBigIntRegular returns z as a big.Int in regular form
func (z Element22) ToBigIntRegular(res *big.Int) *big.Int {
	z.FromMont()
	bits := (*[22]big.Word)(unsafe.Pointer(&z))
	return res.SetBits(bits[:])
}

// SetBigInt sets z to v (regular form) and returns z in Montgomery form
func (z *Element22) SetBigInt(v *big.Int) *Element22 {
	z.SetZero()

	zero := big.NewInt(0)
	q := element22ModulusBigInt()

	// copy input
	vv := new(big.Int).Set(v)

	// while v < 0, v+=q
	for vv.Cmp(zero) == -1 {
		vv.Add(vv, q)
	}
	// while v > q, v-=q
	for vv.Cmp(q) == 1 {
		vv.Sub(vv, q)
	}
	// if v == q, return 0
	if vv.Cmp(q) == 0 {
		return z
	}
	// v should
	vBits := vv.Bits()
	for i := 0; i < len(vBits); i++ {
		z[i] = uint64(vBits[i])
	}
	return z.ToMont()
}

// SetString creates a big.Int with s (in base 10) and calls SetBigInt on z
func (z *Element22) SetString(s string) *Element22 {
	x, ok := new(big.Int).SetString(s, 10)
	if !ok {
		panic("Element22.SetString failed -> can't parse number in base10 into a big.Int")
	}
	return z.SetBigInt(x)
}

// Mul z = x * y mod q
func (z *Element22) Mul(x, y *Element22) *Element22 {

	var t [23]uint64
	var D uint64
	var m, C uint64
	// -----------------------------------
	// First loop

	C, t[0] = bits.Mul64(y[0], x[0])
	C, t[1] = madd1(y[0], x[1], C)
	C, t[2] = madd1(y[0], x[2], C)
	C, t[3] = madd1(y[0], x[3], C)
	C, t[4] = madd1(y[0], x[4], C)
	C, t[5] = madd1(y[0], x[5], C)
	C, t[6] = madd1(y[0], x[6], C)
	C, t[7] = madd1(y[0], x[7], C)
	C, t[8] = madd1(y[0], x[8], C)
	C, t[9] = madd1(y[0], x[9], C)
	C, t[10] = madd1(y[0], x[10], C)
	C, t[11] = madd1(y[0], x[11], C)
	C, t[12] = madd1(y[0], x[12], C)
	C, t[13] = madd1(y[0], x[13], C)
	C, t[14] = madd1(y[0], x[14], C)
	C, t[15] = madd1(y[0], x[15], C)
	C, t[16] = madd1(y[0], x[16], C)
	C, t[17] = madd1(y[0], x[17], C)
	C, t[18] = madd1(y[0], x[18], C)
	C, t[19] = madd1(y[0], x[19], C)
	C, t[20] = madd1(y[0], x[20], C)
	C, t[21] = madd1(y[0], x[21], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 5124176631818446469

	// -----------------------------------
	// Second loop
	C = madd0(m, 11739818372011875763, t[0])

	C, t[0] = madd2(m, 11824375430665141315, t[1], C)

	C, t[1] = madd2(m, 897513172090905252, t[2], C)

	C, t[2] = madd2(m, 531120025817225475, t[3], C)

	C, t[3] = madd2(m, 8707661892141009149, t[4], C)

	C, t[4] = madd2(m, 11786224458619984790, t[5], C)

	C, t[5] = madd2(m, 5659238587671396734, t[6], C)

	C, t[6] = madd2(m, 18016383301055546002, t[7], C)

	C, t[7] = madd2(m, 10775018464463249911, t[8], C)

	C, t[8] = madd2(m, 17064401429272323224, t[9], C)

	C, t[9] = madd2(m, 18250729195507589214, t[10], C)

	C, t[10] = madd2(m, 7155370817234530960, t[11], C)

	C, t[11] = madd2(m, 8659264606281177933, t[12], C)

	C, t[12] = madd2(m, 9872774209099417190, t[13], C)

	C, t[13] = madd2(m, 7629372345097312458, t[14], C)

	C, t[14] = madd2(m, 17007029134472191228, t[15], C)

	C, t[15] = madd2(m, 5991468884766936598, t[16], C)

	C, t[16] = madd2(m, 11341612225600356157, t[17], C)

	C, t[17] = madd2(m, 18433679792523411973, t[18], C)

	C, t[18] = madd2(m, 415635585839274209, t[19], C)

	C, t[19] = madd2(m, 8907810790818485543, t[20], C)

	C, t[20] = madd3(m, 6940634706484457090, t[21], C, t[22])

	t[21], t[22] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[1], x[0], t[0])
	C, t[1] = madd2(y[1], x[1], t[1], C)
	C, t[2] = madd2(y[1], x[2], t[2], C)
	C, t[3] = madd2(y[1], x[3], t[3], C)
	C, t[4] = madd2(y[1], x[4], t[4], C)
	C, t[5] = madd2(y[1], x[5], t[5], C)
	C, t[6] = madd2(y[1], x[6], t[6], C)
	C, t[7] = madd2(y[1], x[7], t[7], C)
	C, t[8] = madd2(y[1], x[8], t[8], C)
	C, t[9] = madd2(y[1], x[9], t[9], C)
	C, t[10] = madd2(y[1], x[10], t[10], C)
	C, t[11] = madd2(y[1], x[11], t[11], C)
	C, t[12] = madd2(y[1], x[12], t[12], C)
	C, t[13] = madd2(y[1], x[13], t[13], C)
	C, t[14] = madd2(y[1], x[14], t[14], C)
	C, t[15] = madd2(y[1], x[15], t[15], C)
	C, t[16] = madd2(y[1], x[16], t[16], C)
	C, t[17] = madd2(y[1], x[17], t[17], C)
	C, t[18] = madd2(y[1], x[18], t[18], C)
	C, t[19] = madd2(y[1], x[19], t[19], C)
	C, t[20] = madd2(y[1], x[20], t[20], C)
	C, t[21] = madd2(y[1], x[21], t[21], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 5124176631818446469

	// -----------------------------------
	// Second loop
	C = madd0(m, 11739818372011875763, t[0])

	C, t[0] = madd2(m, 11824375430665141315, t[1], C)

	C, t[1] = madd2(m, 897513172090905252, t[2], C)

	C, t[2] = madd2(m, 531120025817225475, t[3], C)

	C, t[3] = madd2(m, 8707661892141009149, t[4], C)

	C, t[4] = madd2(m, 11786224458619984790, t[5], C)

	C, t[5] = madd2(m, 5659238587671396734, t[6], C)

	C, t[6] = madd2(m, 18016383301055546002, t[7], C)

	C, t[7] = madd2(m, 10775018464463249911, t[8], C)

	C, t[8] = madd2(m, 17064401429272323224, t[9], C)

	C, t[9] = madd2(m, 18250729195507589214, t[10], C)

	C, t[10] = madd2(m, 7155370817234530960, t[11], C)

	C, t[11] = madd2(m, 8659264606281177933, t[12], C)

	C, t[12] = madd2(m, 9872774209099417190, t[13], C)

	C, t[13] = madd2(m, 7629372345097312458, t[14], C)

	C, t[14] = madd2(m, 17007029134472191228, t[15], C)

	C, t[15] = madd2(m, 5991468884766936598, t[16], C)

	C, t[16] = madd2(m, 11341612225600356157, t[17], C)

	C, t[17] = madd2(m, 18433679792523411973, t[18], C)

	C, t[18] = madd2(m, 415635585839274209, t[19], C)

	C, t[19] = madd2(m, 8907810790818485543, t[20], C)

	C, t[20] = madd3(m, 6940634706484457090, t[21], C, t[22])

	t[21], t[22] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[2], x[0], t[0])
	C, t[1] = madd2(y[2], x[1], t[1], C)
	C, t[2] = madd2(y[2], x[2], t[2], C)
	C, t[3] = madd2(y[2], x[3], t[3], C)
	C, t[4] = madd2(y[2], x[4], t[4], C)
	C, t[5] = madd2(y[2], x[5], t[5], C)
	C, t[6] = madd2(y[2], x[6], t[6], C)
	C, t[7] = madd2(y[2], x[7], t[7], C)
	C, t[8] = madd2(y[2], x[8], t[8], C)
	C, t[9] = madd2(y[2], x[9], t[9], C)
	C, t[10] = madd2(y[2], x[10], t[10], C)
	C, t[11] = madd2(y[2], x[11], t[11], C)
	C, t[12] = madd2(y[2], x[12], t[12], C)
	C, t[13] = madd2(y[2], x[13], t[13], C)
	C, t[14] = madd2(y[2], x[14], t[14], C)
	C, t[15] = madd2(y[2], x[15], t[15], C)
	C, t[16] = madd2(y[2], x[16], t[16], C)
	C, t[17] = madd2(y[2], x[17], t[17], C)
	C, t[18] = madd2(y[2], x[18], t[18], C)
	C, t[19] = madd2(y[2], x[19], t[19], C)
	C, t[20] = madd2(y[2], x[20], t[20], C)
	C, t[21] = madd2(y[2], x[21], t[21], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 5124176631818446469

	// -----------------------------------
	// Second loop
	C = madd0(m, 11739818372011875763, t[0])

	C, t[0] = madd2(m, 11824375430665141315, t[1], C)

	C, t[1] = madd2(m, 897513172090905252, t[2], C)

	C, t[2] = madd2(m, 531120025817225475, t[3], C)

	C, t[3] = madd2(m, 8707661892141009149, t[4], C)

	C, t[4] = madd2(m, 11786224458619984790, t[5], C)

	C, t[5] = madd2(m, 5659238587671396734, t[6], C)

	C, t[6] = madd2(m, 18016383301055546002, t[7], C)

	C, t[7] = madd2(m, 10775018464463249911, t[8], C)

	C, t[8] = madd2(m, 17064401429272323224, t[9], C)

	C, t[9] = madd2(m, 18250729195507589214, t[10], C)

	C, t[10] = madd2(m, 7155370817234530960, t[11], C)

	C, t[11] = madd2(m, 8659264606281177933, t[12], C)

	C, t[12] = madd2(m, 9872774209099417190, t[13], C)

	C, t[13] = madd2(m, 7629372345097312458, t[14], C)

	C, t[14] = madd2(m, 17007029134472191228, t[15], C)

	C, t[15] = madd2(m, 5991468884766936598, t[16], C)

	C, t[16] = madd2(m, 11341612225600356157, t[17], C)

	C, t[17] = madd2(m, 18433679792523411973, t[18], C)

	C, t[18] = madd2(m, 415635585839274209, t[19], C)

	C, t[19] = madd2(m, 8907810790818485543, t[20], C)

	C, t[20] = madd3(m, 6940634706484457090, t[21], C, t[22])

	t[21], t[22] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[3], x[0], t[0])
	C, t[1] = madd2(y[3], x[1], t[1], C)
	C, t[2] = madd2(y[3], x[2], t[2], C)
	C, t[3] = madd2(y[3], x[3], t[3], C)
	C, t[4] = madd2(y[3], x[4], t[4], C)
	C, t[5] = madd2(y[3], x[5], t[5], C)
	C, t[6] = madd2(y[3], x[6], t[6], C)
	C, t[7] = madd2(y[3], x[7], t[7], C)
	C, t[8] = madd2(y[3], x[8], t[8], C)
	C, t[9] = madd2(y[3], x[9], t[9], C)
	C, t[10] = madd2(y[3], x[10], t[10], C)
	C, t[11] = madd2(y[3], x[11], t[11], C)
	C, t[12] = madd2(y[3], x[12], t[12], C)
	C, t[13] = madd2(y[3], x[13], t[13], C)
	C, t[14] = madd2(y[3], x[14], t[14], C)
	C, t[15] = madd2(y[3], x[15], t[15], C)
	C, t[16] = madd2(y[3], x[16], t[16], C)
	C, t[17] = madd2(y[3], x[17], t[17], C)
	C, t[18] = madd2(y[3], x[18], t[18], C)
	C, t[19] = madd2(y[3], x[19], t[19], C)
	C, t[20] = madd2(y[3], x[20], t[20], C)
	C, t[21] = madd2(y[3], x[21], t[21], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 5124176631818446469

	// -----------------------------------
	// Second loop
	C = madd0(m, 11739818372011875763, t[0])

	C, t[0] = madd2(m, 11824375430665141315, t[1], C)

	C, t[1] = madd2(m, 897513172090905252, t[2], C)

	C, t[2] = madd2(m, 531120025817225475, t[3], C)

	C, t[3] = madd2(m, 8707661892141009149, t[4], C)

	C, t[4] = madd2(m, 11786224458619984790, t[5], C)

	C, t[5] = madd2(m, 5659238587671396734, t[6], C)

	C, t[6] = madd2(m, 18016383301055546002, t[7], C)

	C, t[7] = madd2(m, 10775018464463249911, t[8], C)

	C, t[8] = madd2(m, 17064401429272323224, t[9], C)

	C, t[9] = madd2(m, 18250729195507589214, t[10], C)

	C, t[10] = madd2(m, 7155370817234530960, t[11], C)

	C, t[11] = madd2(m, 8659264606281177933, t[12], C)

	C, t[12] = madd2(m, 9872774209099417190, t[13], C)

	C, t[13] = madd2(m, 7629372345097312458, t[14], C)

	C, t[14] = madd2(m, 17007029134472191228, t[15], C)

	C, t[15] = madd2(m, 5991468884766936598, t[16], C)

	C, t[16] = madd2(m, 11341612225600356157, t[17], C)

	C, t[17] = madd2(m, 18433679792523411973, t[18], C)

	C, t[18] = madd2(m, 415635585839274209, t[19], C)

	C, t[19] = madd2(m, 8907810790818485543, t[20], C)

	C, t[20] = madd3(m, 6940634706484457090, t[21], C, t[22])

	t[21], t[22] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[4], x[0], t[0])
	C, t[1] = madd2(y[4], x[1], t[1], C)
	C, t[2] = madd2(y[4], x[2], t[2], C)
	C, t[3] = madd2(y[4], x[3], t[3], C)
	C, t[4] = madd2(y[4], x[4], t[4], C)
	C, t[5] = madd2(y[4], x[5], t[5], C)
	C, t[6] = madd2(y[4], x[6], t[6], C)
	C, t[7] = madd2(y[4], x[7], t[7], C)
	C, t[8] = madd2(y[4], x[8], t[8], C)
	C, t[9] = madd2(y[4], x[9], t[9], C)
	C, t[10] = madd2(y[4], x[10], t[10], C)
	C, t[11] = madd2(y[4], x[11], t[11], C)
	C, t[12] = madd2(y[4], x[12], t[12], C)
	C, t[13] = madd2(y[4], x[13], t[13], C)
	C, t[14] = madd2(y[4], x[14], t[14], C)
	C, t[15] = madd2(y[4], x[15], t[15], C)
	C, t[16] = madd2(y[4], x[16], t[16], C)
	C, t[17] = madd2(y[4], x[17], t[17], C)
	C, t[18] = madd2(y[4], x[18], t[18], C)
	C, t[19] = madd2(y[4], x[19], t[19], C)
	C, t[20] = madd2(y[4], x[20], t[20], C)
	C, t[21] = madd2(y[4], x[21], t[21], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 5124176631818446469

	// -----------------------------------
	// Second loop
	C = madd0(m, 11739818372011875763, t[0])

	C, t[0] = madd2(m, 11824375430665141315, t[1], C)

	C, t[1] = madd2(m, 897513172090905252, t[2], C)

	C, t[2] = madd2(m, 531120025817225475, t[3], C)

	C, t[3] = madd2(m, 8707661892141009149, t[4], C)

	C, t[4] = madd2(m, 11786224458619984790, t[5], C)

	C, t[5] = madd2(m, 5659238587671396734, t[6], C)

	C, t[6] = madd2(m, 18016383301055546002, t[7], C)

	C, t[7] = madd2(m, 10775018464463249911, t[8], C)

	C, t[8] = madd2(m, 17064401429272323224, t[9], C)

	C, t[9] = madd2(m, 18250729195507589214, t[10], C)

	C, t[10] = madd2(m, 7155370817234530960, t[11], C)

	C, t[11] = madd2(m, 8659264606281177933, t[12], C)

	C, t[12] = madd2(m, 9872774209099417190, t[13], C)

	C, t[13] = madd2(m, 7629372345097312458, t[14], C)

	C, t[14] = madd2(m, 17007029134472191228, t[15], C)

	C, t[15] = madd2(m, 5991468884766936598, t[16], C)

	C, t[16] = madd2(m, 11341612225600356157, t[17], C)

	C, t[17] = madd2(m, 18433679792523411973, t[18], C)

	C, t[18] = madd2(m, 415635585839274209, t[19], C)

	C, t[19] = madd2(m, 8907810790818485543, t[20], C)

	C, t[20] = madd3(m, 6940634706484457090, t[21], C, t[22])

	t[21], t[22] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[5], x[0], t[0])
	C, t[1] = madd2(y[5], x[1], t[1], C)
	C, t[2] = madd2(y[5], x[2], t[2], C)
	C, t[3] = madd2(y[5], x[3], t[3], C)
	C, t[4] = madd2(y[5], x[4], t[4], C)
	C, t[5] = madd2(y[5], x[5], t[5], C)
	C, t[6] = madd2(y[5], x[6], t[6], C)
	C, t[7] = madd2(y[5], x[7], t[7], C)
	C, t[8] = madd2(y[5], x[8], t[8], C)
	C, t[9] = madd2(y[5], x[9], t[9], C)
	C, t[10] = madd2(y[5], x[10], t[10], C)
	C, t[11] = madd2(y[5], x[11], t[11], C)
	C, t[12] = madd2(y[5], x[12], t[12], C)
	C, t[13] = madd2(y[5], x[13], t[13], C)
	C, t[14] = madd2(y[5], x[14], t[14], C)
	C, t[15] = madd2(y[5], x[15], t[15], C)
	C, t[16] = madd2(y[5], x[16], t[16], C)
	C, t[17] = madd2(y[5], x[17], t[17], C)
	C, t[18] = madd2(y[5], x[18], t[18], C)
	C, t[19] = madd2(y[5], x[19], t[19], C)
	C, t[20] = madd2(y[5], x[20], t[20], C)
	C, t[21] = madd2(y[5], x[21], t[21], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 5124176631818446469

	// -----------------------------------
	// Second loop
	C = madd0(m, 11739818372011875763, t[0])

	C, t[0] = madd2(m, 11824375430665141315, t[1], C)

	C, t[1] = madd2(m, 897513172090905252, t[2], C)

	C, t[2] = madd2(m, 531120025817225475, t[3], C)

	C, t[3] = madd2(m, 8707661892141009149, t[4], C)

	C, t[4] = madd2(m, 11786224458619984790, t[5], C)

	C, t[5] = madd2(m, 5659238587671396734, t[6], C)

	C, t[6] = madd2(m, 18016383301055546002, t[7], C)

	C, t[7] = madd2(m, 10775018464463249911, t[8], C)

	C, t[8] = madd2(m, 17064401429272323224, t[9], C)

	C, t[9] = madd2(m, 18250729195507589214, t[10], C)

	C, t[10] = madd2(m, 7155370817234530960, t[11], C)

	C, t[11] = madd2(m, 8659264606281177933, t[12], C)

	C, t[12] = madd2(m, 9872774209099417190, t[13], C)

	C, t[13] = madd2(m, 7629372345097312458, t[14], C)

	C, t[14] = madd2(m, 17007029134472191228, t[15], C)

	C, t[15] = madd2(m, 5991468884766936598, t[16], C)

	C, t[16] = madd2(m, 11341612225600356157, t[17], C)

	C, t[17] = madd2(m, 18433679792523411973, t[18], C)

	C, t[18] = madd2(m, 415635585839274209, t[19], C)

	C, t[19] = madd2(m, 8907810790818485543, t[20], C)

	C, t[20] = madd3(m, 6940634706484457090, t[21], C, t[22])

	t[21], t[22] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[6], x[0], t[0])
	C, t[1] = madd2(y[6], x[1], t[1], C)
	C, t[2] = madd2(y[6], x[2], t[2], C)
	C, t[3] = madd2(y[6], x[3], t[3], C)
	C, t[4] = madd2(y[6], x[4], t[4], C)
	C, t[5] = madd2(y[6], x[5], t[5], C)
	C, t[6] = madd2(y[6], x[6], t[6], C)
	C, t[7] = madd2(y[6], x[7], t[7], C)
	C, t[8] = madd2(y[6], x[8], t[8], C)
	C, t[9] = madd2(y[6], x[9], t[9], C)
	C, t[10] = madd2(y[6], x[10], t[10], C)
	C, t[11] = madd2(y[6], x[11], t[11], C)
	C, t[12] = madd2(y[6], x[12], t[12], C)
	C, t[13] = madd2(y[6], x[13], t[13], C)
	C, t[14] = madd2(y[6], x[14], t[14], C)
	C, t[15] = madd2(y[6], x[15], t[15], C)
	C, t[16] = madd2(y[6], x[16], t[16], C)
	C, t[17] = madd2(y[6], x[17], t[17], C)
	C, t[18] = madd2(y[6], x[18], t[18], C)
	C, t[19] = madd2(y[6], x[19], t[19], C)
	C, t[20] = madd2(y[6], x[20], t[20], C)
	C, t[21] = madd2(y[6], x[21], t[21], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 5124176631818446469

	// -----------------------------------
	// Second loop
	C = madd0(m, 11739818372011875763, t[0])

	C, t[0] = madd2(m, 11824375430665141315, t[1], C)

	C, t[1] = madd2(m, 897513172090905252, t[2], C)

	C, t[2] = madd2(m, 531120025817225475, t[3], C)

	C, t[3] = madd2(m, 8707661892141009149, t[4], C)

	C, t[4] = madd2(m, 11786224458619984790, t[5], C)

	C, t[5] = madd2(m, 5659238587671396734, t[6], C)

	C, t[6] = madd2(m, 18016383301055546002, t[7], C)

	C, t[7] = madd2(m, 10775018464463249911, t[8], C)

	C, t[8] = madd2(m, 17064401429272323224, t[9], C)

	C, t[9] = madd2(m, 18250729195507589214, t[10], C)

	C, t[10] = madd2(m, 7155370817234530960, t[11], C)

	C, t[11] = madd2(m, 8659264606281177933, t[12], C)

	C, t[12] = madd2(m, 9872774209099417190, t[13], C)

	C, t[13] = madd2(m, 7629372345097312458, t[14], C)

	C, t[14] = madd2(m, 17007029134472191228, t[15], C)

	C, t[15] = madd2(m, 5991468884766936598, t[16], C)

	C, t[16] = madd2(m, 11341612225600356157, t[17], C)

	C, t[17] = madd2(m, 18433679792523411973, t[18], C)

	C, t[18] = madd2(m, 415635585839274209, t[19], C)

	C, t[19] = madd2(m, 8907810790818485543, t[20], C)

	C, t[20] = madd3(m, 6940634706484457090, t[21], C, t[22])

	t[21], t[22] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[7], x[0], t[0])
	C, t[1] = madd2(y[7], x[1], t[1], C)
	C, t[2] = madd2(y[7], x[2], t[2], C)
	C, t[3] = madd2(y[7], x[3], t[3], C)
	C, t[4] = madd2(y[7], x[4], t[4], C)
	C, t[5] = madd2(y[7], x[5], t[5], C)
	C, t[6] = madd2(y[7], x[6], t[6], C)
	C, t[7] = madd2(y[7], x[7], t[7], C)
	C, t[8] = madd2(y[7], x[8], t[8], C)
	C, t[9] = madd2(y[7], x[9], t[9], C)
	C, t[10] = madd2(y[7], x[10], t[10], C)
	C, t[11] = madd2(y[7], x[11], t[11], C)
	C, t[12] = madd2(y[7], x[12], t[12], C)
	C, t[13] = madd2(y[7], x[13], t[13], C)
	C, t[14] = madd2(y[7], x[14], t[14], C)
	C, t[15] = madd2(y[7], x[15], t[15], C)
	C, t[16] = madd2(y[7], x[16], t[16], C)
	C, t[17] = madd2(y[7], x[17], t[17], C)
	C, t[18] = madd2(y[7], x[18], t[18], C)
	C, t[19] = madd2(y[7], x[19], t[19], C)
	C, t[20] = madd2(y[7], x[20], t[20], C)
	C, t[21] = madd2(y[7], x[21], t[21], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 5124176631818446469

	// -----------------------------------
	// Second loop
	C = madd0(m, 11739818372011875763, t[0])

	C, t[0] = madd2(m, 11824375430665141315, t[1], C)

	C, t[1] = madd2(m, 897513172090905252, t[2], C)

	C, t[2] = madd2(m, 531120025817225475, t[3], C)

	C, t[3] = madd2(m, 8707661892141009149, t[4], C)

	C, t[4] = madd2(m, 11786224458619984790, t[5], C)

	C, t[5] = madd2(m, 5659238587671396734, t[6], C)

	C, t[6] = madd2(m, 18016383301055546002, t[7], C)

	C, t[7] = madd2(m, 10775018464463249911, t[8], C)

	C, t[8] = madd2(m, 17064401429272323224, t[9], C)

	C, t[9] = madd2(m, 18250729195507589214, t[10], C)

	C, t[10] = madd2(m, 7155370817234530960, t[11], C)

	C, t[11] = madd2(m, 8659264606281177933, t[12], C)

	C, t[12] = madd2(m, 9872774209099417190, t[13], C)

	C, t[13] = madd2(m, 7629372345097312458, t[14], C)

	C, t[14] = madd2(m, 17007029134472191228, t[15], C)

	C, t[15] = madd2(m, 5991468884766936598, t[16], C)

	C, t[16] = madd2(m, 11341612225600356157, t[17], C)

	C, t[17] = madd2(m, 18433679792523411973, t[18], C)

	C, t[18] = madd2(m, 415635585839274209, t[19], C)

	C, t[19] = madd2(m, 8907810790818485543, t[20], C)

	C, t[20] = madd3(m, 6940634706484457090, t[21], C, t[22])

	t[21], t[22] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[8], x[0], t[0])
	C, t[1] = madd2(y[8], x[1], t[1], C)
	C, t[2] = madd2(y[8], x[2], t[2], C)
	C, t[3] = madd2(y[8], x[3], t[3], C)
	C, t[4] = madd2(y[8], x[4], t[4], C)
	C, t[5] = madd2(y[8], x[5], t[5], C)
	C, t[6] = madd2(y[8], x[6], t[6], C)
	C, t[7] = madd2(y[8], x[7], t[7], C)
	C, t[8] = madd2(y[8], x[8], t[8], C)
	C, t[9] = madd2(y[8], x[9], t[9], C)
	C, t[10] = madd2(y[8], x[10], t[10], C)
	C, t[11] = madd2(y[8], x[11], t[11], C)
	C, t[12] = madd2(y[8], x[12], t[12], C)
	C, t[13] = madd2(y[8], x[13], t[13], C)
	C, t[14] = madd2(y[8], x[14], t[14], C)
	C, t[15] = madd2(y[8], x[15], t[15], C)
	C, t[16] = madd2(y[8], x[16], t[16], C)
	C, t[17] = madd2(y[8], x[17], t[17], C)
	C, t[18] = madd2(y[8], x[18], t[18], C)
	C, t[19] = madd2(y[8], x[19], t[19], C)
	C, t[20] = madd2(y[8], x[20], t[20], C)
	C, t[21] = madd2(y[8], x[21], t[21], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 5124176631818446469

	// -----------------------------------
	// Second loop
	C = madd0(m, 11739818372011875763, t[0])

	C, t[0] = madd2(m, 11824375430665141315, t[1], C)

	C, t[1] = madd2(m, 897513172090905252, t[2], C)

	C, t[2] = madd2(m, 531120025817225475, t[3], C)

	C, t[3] = madd2(m, 8707661892141009149, t[4], C)

	C, t[4] = madd2(m, 11786224458619984790, t[5], C)

	C, t[5] = madd2(m, 5659238587671396734, t[6], C)

	C, t[6] = madd2(m, 18016383301055546002, t[7], C)

	C, t[7] = madd2(m, 10775018464463249911, t[8], C)

	C, t[8] = madd2(m, 17064401429272323224, t[9], C)

	C, t[9] = madd2(m, 18250729195507589214, t[10], C)

	C, t[10] = madd2(m, 7155370817234530960, t[11], C)

	C, t[11] = madd2(m, 8659264606281177933, t[12], C)

	C, t[12] = madd2(m, 9872774209099417190, t[13], C)

	C, t[13] = madd2(m, 7629372345097312458, t[14], C)

	C, t[14] = madd2(m, 17007029134472191228, t[15], C)

	C, t[15] = madd2(m, 5991468884766936598, t[16], C)

	C, t[16] = madd2(m, 11341612225600356157, t[17], C)

	C, t[17] = madd2(m, 18433679792523411973, t[18], C)

	C, t[18] = madd2(m, 415635585839274209, t[19], C)

	C, t[19] = madd2(m, 8907810790818485543, t[20], C)

	C, t[20] = madd3(m, 6940634706484457090, t[21], C, t[22])

	t[21], t[22] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[9], x[0], t[0])
	C, t[1] = madd2(y[9], x[1], t[1], C)
	C, t[2] = madd2(y[9], x[2], t[2], C)
	C, t[3] = madd2(y[9], x[3], t[3], C)
	C, t[4] = madd2(y[9], x[4], t[4], C)
	C, t[5] = madd2(y[9], x[5], t[5], C)
	C, t[6] = madd2(y[9], x[6], t[6], C)
	C, t[7] = madd2(y[9], x[7], t[7], C)
	C, t[8] = madd2(y[9], x[8], t[8], C)
	C, t[9] = madd2(y[9], x[9], t[9], C)
	C, t[10] = madd2(y[9], x[10], t[10], C)
	C, t[11] = madd2(y[9], x[11], t[11], C)
	C, t[12] = madd2(y[9], x[12], t[12], C)
	C, t[13] = madd2(y[9], x[13], t[13], C)
	C, t[14] = madd2(y[9], x[14], t[14], C)
	C, t[15] = madd2(y[9], x[15], t[15], C)
	C, t[16] = madd2(y[9], x[16], t[16], C)
	C, t[17] = madd2(y[9], x[17], t[17], C)
	C, t[18] = madd2(y[9], x[18], t[18], C)
	C, t[19] = madd2(y[9], x[19], t[19], C)
	C, t[20] = madd2(y[9], x[20], t[20], C)
	C, t[21] = madd2(y[9], x[21], t[21], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 5124176631818446469

	// -----------------------------------
	// Second loop
	C = madd0(m, 11739818372011875763, t[0])

	C, t[0] = madd2(m, 11824375430665141315, t[1], C)

	C, t[1] = madd2(m, 897513172090905252, t[2], C)

	C, t[2] = madd2(m, 531120025817225475, t[3], C)

	C, t[3] = madd2(m, 8707661892141009149, t[4], C)

	C, t[4] = madd2(m, 11786224458619984790, t[5], C)

	C, t[5] = madd2(m, 5659238587671396734, t[6], C)

	C, t[6] = madd2(m, 18016383301055546002, t[7], C)

	C, t[7] = madd2(m, 10775018464463249911, t[8], C)

	C, t[8] = madd2(m, 17064401429272323224, t[9], C)

	C, t[9] = madd2(m, 18250729195507589214, t[10], C)

	C, t[10] = madd2(m, 7155370817234530960, t[11], C)

	C, t[11] = madd2(m, 8659264606281177933, t[12], C)

	C, t[12] = madd2(m, 9872774209099417190, t[13], C)

	C, t[13] = madd2(m, 7629372345097312458, t[14], C)

	C, t[14] = madd2(m, 17007029134472191228, t[15], C)

	C, t[15] = madd2(m, 5991468884766936598, t[16], C)

	C, t[16] = madd2(m, 11341612225600356157, t[17], C)

	C, t[17] = madd2(m, 18433679792523411973, t[18], C)

	C, t[18] = madd2(m, 415635585839274209, t[19], C)

	C, t[19] = madd2(m, 8907810790818485543, t[20], C)

	C, t[20] = madd3(m, 6940634706484457090, t[21], C, t[22])

	t[21], t[22] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[10], x[0], t[0])
	C, t[1] = madd2(y[10], x[1], t[1], C)
	C, t[2] = madd2(y[10], x[2], t[2], C)
	C, t[3] = madd2(y[10], x[3], t[3], C)
	C, t[4] = madd2(y[10], x[4], t[4], C)
	C, t[5] = madd2(y[10], x[5], t[5], C)
	C, t[6] = madd2(y[10], x[6], t[6], C)
	C, t[7] = madd2(y[10], x[7], t[7], C)
	C, t[8] = madd2(y[10], x[8], t[8], C)
	C, t[9] = madd2(y[10], x[9], t[9], C)
	C, t[10] = madd2(y[10], x[10], t[10], C)
	C, t[11] = madd2(y[10], x[11], t[11], C)
	C, t[12] = madd2(y[10], x[12], t[12], C)
	C, t[13] = madd2(y[10], x[13], t[13], C)
	C, t[14] = madd2(y[10], x[14], t[14], C)
	C, t[15] = madd2(y[10], x[15], t[15], C)
	C, t[16] = madd2(y[10], x[16], t[16], C)
	C, t[17] = madd2(y[10], x[17], t[17], C)
	C, t[18] = madd2(y[10], x[18], t[18], C)
	C, t[19] = madd2(y[10], x[19], t[19], C)
	C, t[20] = madd2(y[10], x[20], t[20], C)
	C, t[21] = madd2(y[10], x[21], t[21], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 5124176631818446469

	// -----------------------------------
	// Second loop
	C = madd0(m, 11739818372011875763, t[0])

	C, t[0] = madd2(m, 11824375430665141315, t[1], C)

	C, t[1] = madd2(m, 897513172090905252, t[2], C)

	C, t[2] = madd2(m, 531120025817225475, t[3], C)

	C, t[3] = madd2(m, 8707661892141009149, t[4], C)

	C, t[4] = madd2(m, 11786224458619984790, t[5], C)

	C, t[5] = madd2(m, 5659238587671396734, t[6], C)

	C, t[6] = madd2(m, 18016383301055546002, t[7], C)

	C, t[7] = madd2(m, 10775018464463249911, t[8], C)

	C, t[8] = madd2(m, 17064401429272323224, t[9], C)

	C, t[9] = madd2(m, 18250729195507589214, t[10], C)

	C, t[10] = madd2(m, 7155370817234530960, t[11], C)

	C, t[11] = madd2(m, 8659264606281177933, t[12], C)

	C, t[12] = madd2(m, 9872774209099417190, t[13], C)

	C, t[13] = madd2(m, 7629372345097312458, t[14], C)

	C, t[14] = madd2(m, 17007029134472191228, t[15], C)

	C, t[15] = madd2(m, 5991468884766936598, t[16], C)

	C, t[16] = madd2(m, 11341612225600356157, t[17], C)

	C, t[17] = madd2(m, 18433679792523411973, t[18], C)

	C, t[18] = madd2(m, 415635585839274209, t[19], C)

	C, t[19] = madd2(m, 8907810790818485543, t[20], C)

	C, t[20] = madd3(m, 6940634706484457090, t[21], C, t[22])

	t[21], t[22] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[11], x[0], t[0])
	C, t[1] = madd2(y[11], x[1], t[1], C)
	C, t[2] = madd2(y[11], x[2], t[2], C)
	C, t[3] = madd2(y[11], x[3], t[3], C)
	C, t[4] = madd2(y[11], x[4], t[4], C)
	C, t[5] = madd2(y[11], x[5], t[5], C)
	C, t[6] = madd2(y[11], x[6], t[6], C)
	C, t[7] = madd2(y[11], x[7], t[7], C)
	C, t[8] = madd2(y[11], x[8], t[8], C)
	C, t[9] = madd2(y[11], x[9], t[9], C)
	C, t[10] = madd2(y[11], x[10], t[10], C)
	C, t[11] = madd2(y[11], x[11], t[11], C)
	C, t[12] = madd2(y[11], x[12], t[12], C)
	C, t[13] = madd2(y[11], x[13], t[13], C)
	C, t[14] = madd2(y[11], x[14], t[14], C)
	C, t[15] = madd2(y[11], x[15], t[15], C)
	C, t[16] = madd2(y[11], x[16], t[16], C)
	C, t[17] = madd2(y[11], x[17], t[17], C)
	C, t[18] = madd2(y[11], x[18], t[18], C)
	C, t[19] = madd2(y[11], x[19], t[19], C)
	C, t[20] = madd2(y[11], x[20], t[20], C)
	C, t[21] = madd2(y[11], x[21], t[21], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 5124176631818446469

	// -----------------------------------
	// Second loop
	C = madd0(m, 11739818372011875763, t[0])

	C, t[0] = madd2(m, 11824375430665141315, t[1], C)

	C, t[1] = madd2(m, 897513172090905252, t[2], C)

	C, t[2] = madd2(m, 531120025817225475, t[3], C)

	C, t[3] = madd2(m, 8707661892141009149, t[4], C)

	C, t[4] = madd2(m, 11786224458619984790, t[5], C)

	C, t[5] = madd2(m, 5659238587671396734, t[6], C)

	C, t[6] = madd2(m, 18016383301055546002, t[7], C)

	C, t[7] = madd2(m, 10775018464463249911, t[8], C)

	C, t[8] = madd2(m, 17064401429272323224, t[9], C)

	C, t[9] = madd2(m, 18250729195507589214, t[10], C)

	C, t[10] = madd2(m, 7155370817234530960, t[11], C)

	C, t[11] = madd2(m, 8659264606281177933, t[12], C)

	C, t[12] = madd2(m, 9872774209099417190, t[13], C)

	C, t[13] = madd2(m, 7629372345097312458, t[14], C)

	C, t[14] = madd2(m, 17007029134472191228, t[15], C)

	C, t[15] = madd2(m, 5991468884766936598, t[16], C)

	C, t[16] = madd2(m, 11341612225600356157, t[17], C)

	C, t[17] = madd2(m, 18433679792523411973, t[18], C)

	C, t[18] = madd2(m, 415635585839274209, t[19], C)

	C, t[19] = madd2(m, 8907810790818485543, t[20], C)

	C, t[20] = madd3(m, 6940634706484457090, t[21], C, t[22])

	t[21], t[22] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[12], x[0], t[0])
	C, t[1] = madd2(y[12], x[1], t[1], C)
	C, t[2] = madd2(y[12], x[2], t[2], C)
	C, t[3] = madd2(y[12], x[3], t[3], C)
	C, t[4] = madd2(y[12], x[4], t[4], C)
	C, t[5] = madd2(y[12], x[5], t[5], C)
	C, t[6] = madd2(y[12], x[6], t[6], C)
	C, t[7] = madd2(y[12], x[7], t[7], C)
	C, t[8] = madd2(y[12], x[8], t[8], C)
	C, t[9] = madd2(y[12], x[9], t[9], C)
	C, t[10] = madd2(y[12], x[10], t[10], C)
	C, t[11] = madd2(y[12], x[11], t[11], C)
	C, t[12] = madd2(y[12], x[12], t[12], C)
	C, t[13] = madd2(y[12], x[13], t[13], C)
	C, t[14] = madd2(y[12], x[14], t[14], C)
	C, t[15] = madd2(y[12], x[15], t[15], C)
	C, t[16] = madd2(y[12], x[16], t[16], C)
	C, t[17] = madd2(y[12], x[17], t[17], C)
	C, t[18] = madd2(y[12], x[18], t[18], C)
	C, t[19] = madd2(y[12], x[19], t[19], C)
	C, t[20] = madd2(y[12], x[20], t[20], C)
	C, t[21] = madd2(y[12], x[21], t[21], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 5124176631818446469

	// -----------------------------------
	// Second loop
	C = madd0(m, 11739818372011875763, t[0])

	C, t[0] = madd2(m, 11824375430665141315, t[1], C)

	C, t[1] = madd2(m, 897513172090905252, t[2], C)

	C, t[2] = madd2(m, 531120025817225475, t[3], C)

	C, t[3] = madd2(m, 8707661892141009149, t[4], C)

	C, t[4] = madd2(m, 11786224458619984790, t[5], C)

	C, t[5] = madd2(m, 5659238587671396734, t[6], C)

	C, t[6] = madd2(m, 18016383301055546002, t[7], C)

	C, t[7] = madd2(m, 10775018464463249911, t[8], C)

	C, t[8] = madd2(m, 17064401429272323224, t[9], C)

	C, t[9] = madd2(m, 18250729195507589214, t[10], C)

	C, t[10] = madd2(m, 7155370817234530960, t[11], C)

	C, t[11] = madd2(m, 8659264606281177933, t[12], C)

	C, t[12] = madd2(m, 9872774209099417190, t[13], C)

	C, t[13] = madd2(m, 7629372345097312458, t[14], C)

	C, t[14] = madd2(m, 17007029134472191228, t[15], C)

	C, t[15] = madd2(m, 5991468884766936598, t[16], C)

	C, t[16] = madd2(m, 11341612225600356157, t[17], C)

	C, t[17] = madd2(m, 18433679792523411973, t[18], C)

	C, t[18] = madd2(m, 415635585839274209, t[19], C)

	C, t[19] = madd2(m, 8907810790818485543, t[20], C)

	C, t[20] = madd3(m, 6940634706484457090, t[21], C, t[22])

	t[21], t[22] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[13], x[0], t[0])
	C, t[1] = madd2(y[13], x[1], t[1], C)
	C, t[2] = madd2(y[13], x[2], t[2], C)
	C, t[3] = madd2(y[13], x[3], t[3], C)
	C, t[4] = madd2(y[13], x[4], t[4], C)
	C, t[5] = madd2(y[13], x[5], t[5], C)
	C, t[6] = madd2(y[13], x[6], t[6], C)
	C, t[7] = madd2(y[13], x[7], t[7], C)
	C, t[8] = madd2(y[13], x[8], t[8], C)
	C, t[9] = madd2(y[13], x[9], t[9], C)
	C, t[10] = madd2(y[13], x[10], t[10], C)
	C, t[11] = madd2(y[13], x[11], t[11], C)
	C, t[12] = madd2(y[13], x[12], t[12], C)
	C, t[13] = madd2(y[13], x[13], t[13], C)
	C, t[14] = madd2(y[13], x[14], t[14], C)
	C, t[15] = madd2(y[13], x[15], t[15], C)
	C, t[16] = madd2(y[13], x[16], t[16], C)
	C, t[17] = madd2(y[13], x[17], t[17], C)
	C, t[18] = madd2(y[13], x[18], t[18], C)
	C, t[19] = madd2(y[13], x[19], t[19], C)
	C, t[20] = madd2(y[13], x[20], t[20], C)
	C, t[21] = madd2(y[13], x[21], t[21], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 5124176631818446469

	// -----------------------------------
	// Second loop
	C = madd0(m, 11739818372011875763, t[0])

	C, t[0] = madd2(m, 11824375430665141315, t[1], C)

	C, t[1] = madd2(m, 897513172090905252, t[2], C)

	C, t[2] = madd2(m, 531120025817225475, t[3], C)

	C, t[3] = madd2(m, 8707661892141009149, t[4], C)

	C, t[4] = madd2(m, 11786224458619984790, t[5], C)

	C, t[5] = madd2(m, 5659238587671396734, t[6], C)

	C, t[6] = madd2(m, 18016383301055546002, t[7], C)

	C, t[7] = madd2(m, 10775018464463249911, t[8], C)

	C, t[8] = madd2(m, 17064401429272323224, t[9], C)

	C, t[9] = madd2(m, 18250729195507589214, t[10], C)

	C, t[10] = madd2(m, 7155370817234530960, t[11], C)

	C, t[11] = madd2(m, 8659264606281177933, t[12], C)

	C, t[12] = madd2(m, 9872774209099417190, t[13], C)

	C, t[13] = madd2(m, 7629372345097312458, t[14], C)

	C, t[14] = madd2(m, 17007029134472191228, t[15], C)

	C, t[15] = madd2(m, 5991468884766936598, t[16], C)

	C, t[16] = madd2(m, 11341612225600356157, t[17], C)

	C, t[17] = madd2(m, 18433679792523411973, t[18], C)

	C, t[18] = madd2(m, 415635585839274209, t[19], C)

	C, t[19] = madd2(m, 8907810790818485543, t[20], C)

	C, t[20] = madd3(m, 6940634706484457090, t[21], C, t[22])

	t[21], t[22] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[14], x[0], t[0])
	C, t[1] = madd2(y[14], x[1], t[1], C)
	C, t[2] = madd2(y[14], x[2], t[2], C)
	C, t[3] = madd2(y[14], x[3], t[3], C)
	C, t[4] = madd2(y[14], x[4], t[4], C)
	C, t[5] = madd2(y[14], x[5], t[5], C)
	C, t[6] = madd2(y[14], x[6], t[6], C)
	C, t[7] = madd2(y[14], x[7], t[7], C)
	C, t[8] = madd2(y[14], x[8], t[8], C)
	C, t[9] = madd2(y[14], x[9], t[9], C)
	C, t[10] = madd2(y[14], x[10], t[10], C)
	C, t[11] = madd2(y[14], x[11], t[11], C)
	C, t[12] = madd2(y[14], x[12], t[12], C)
	C, t[13] = madd2(y[14], x[13], t[13], C)
	C, t[14] = madd2(y[14], x[14], t[14], C)
	C, t[15] = madd2(y[14], x[15], t[15], C)
	C, t[16] = madd2(y[14], x[16], t[16], C)
	C, t[17] = madd2(y[14], x[17], t[17], C)
	C, t[18] = madd2(y[14], x[18], t[18], C)
	C, t[19] = madd2(y[14], x[19], t[19], C)
	C, t[20] = madd2(y[14], x[20], t[20], C)
	C, t[21] = madd2(y[14], x[21], t[21], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 5124176631818446469

	// -----------------------------------
	// Second loop
	C = madd0(m, 11739818372011875763, t[0])

	C, t[0] = madd2(m, 11824375430665141315, t[1], C)

	C, t[1] = madd2(m, 897513172090905252, t[2], C)

	C, t[2] = madd2(m, 531120025817225475, t[3], C)

	C, t[3] = madd2(m, 8707661892141009149, t[4], C)

	C, t[4] = madd2(m, 11786224458619984790, t[5], C)

	C, t[5] = madd2(m, 5659238587671396734, t[6], C)

	C, t[6] = madd2(m, 18016383301055546002, t[7], C)

	C, t[7] = madd2(m, 10775018464463249911, t[8], C)

	C, t[8] = madd2(m, 17064401429272323224, t[9], C)

	C, t[9] = madd2(m, 18250729195507589214, t[10], C)

	C, t[10] = madd2(m, 7155370817234530960, t[11], C)

	C, t[11] = madd2(m, 8659264606281177933, t[12], C)

	C, t[12] = madd2(m, 9872774209099417190, t[13], C)

	C, t[13] = madd2(m, 7629372345097312458, t[14], C)

	C, t[14] = madd2(m, 17007029134472191228, t[15], C)

	C, t[15] = madd2(m, 5991468884766936598, t[16], C)

	C, t[16] = madd2(m, 11341612225600356157, t[17], C)

	C, t[17] = madd2(m, 18433679792523411973, t[18], C)

	C, t[18] = madd2(m, 415635585839274209, t[19], C)

	C, t[19] = madd2(m, 8907810790818485543, t[20], C)

	C, t[20] = madd3(m, 6940634706484457090, t[21], C, t[22])

	t[21], t[22] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[15], x[0], t[0])
	C, t[1] = madd2(y[15], x[1], t[1], C)
	C, t[2] = madd2(y[15], x[2], t[2], C)
	C, t[3] = madd2(y[15], x[3], t[3], C)
	C, t[4] = madd2(y[15], x[4], t[4], C)
	C, t[5] = madd2(y[15], x[5], t[5], C)
	C, t[6] = madd2(y[15], x[6], t[6], C)
	C, t[7] = madd2(y[15], x[7], t[7], C)
	C, t[8] = madd2(y[15], x[8], t[8], C)
	C, t[9] = madd2(y[15], x[9], t[9], C)
	C, t[10] = madd2(y[15], x[10], t[10], C)
	C, t[11] = madd2(y[15], x[11], t[11], C)
	C, t[12] = madd2(y[15], x[12], t[12], C)
	C, t[13] = madd2(y[15], x[13], t[13], C)
	C, t[14] = madd2(y[15], x[14], t[14], C)
	C, t[15] = madd2(y[15], x[15], t[15], C)
	C, t[16] = madd2(y[15], x[16], t[16], C)
	C, t[17] = madd2(y[15], x[17], t[17], C)
	C, t[18] = madd2(y[15], x[18], t[18], C)
	C, t[19] = madd2(y[15], x[19], t[19], C)
	C, t[20] = madd2(y[15], x[20], t[20], C)
	C, t[21] = madd2(y[15], x[21], t[21], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 5124176631818446469

	// -----------------------------------
	// Second loop
	C = madd0(m, 11739818372011875763, t[0])

	C, t[0] = madd2(m, 11824375430665141315, t[1], C)

	C, t[1] = madd2(m, 897513172090905252, t[2], C)

	C, t[2] = madd2(m, 531120025817225475, t[3], C)

	C, t[3] = madd2(m, 8707661892141009149, t[4], C)

	C, t[4] = madd2(m, 11786224458619984790, t[5], C)

	C, t[5] = madd2(m, 5659238587671396734, t[6], C)

	C, t[6] = madd2(m, 18016383301055546002, t[7], C)

	C, t[7] = madd2(m, 10775018464463249911, t[8], C)

	C, t[8] = madd2(m, 17064401429272323224, t[9], C)

	C, t[9] = madd2(m, 18250729195507589214, t[10], C)

	C, t[10] = madd2(m, 7155370817234530960, t[11], C)

	C, t[11] = madd2(m, 8659264606281177933, t[12], C)

	C, t[12] = madd2(m, 9872774209099417190, t[13], C)

	C, t[13] = madd2(m, 7629372345097312458, t[14], C)

	C, t[14] = madd2(m, 17007029134472191228, t[15], C)

	C, t[15] = madd2(m, 5991468884766936598, t[16], C)

	C, t[16] = madd2(m, 11341612225600356157, t[17], C)

	C, t[17] = madd2(m, 18433679792523411973, t[18], C)

	C, t[18] = madd2(m, 415635585839274209, t[19], C)

	C, t[19] = madd2(m, 8907810790818485543, t[20], C)

	C, t[20] = madd3(m, 6940634706484457090, t[21], C, t[22])

	t[21], t[22] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[16], x[0], t[0])
	C, t[1] = madd2(y[16], x[1], t[1], C)
	C, t[2] = madd2(y[16], x[2], t[2], C)
	C, t[3] = madd2(y[16], x[3], t[3], C)
	C, t[4] = madd2(y[16], x[4], t[4], C)
	C, t[5] = madd2(y[16], x[5], t[5], C)
	C, t[6] = madd2(y[16], x[6], t[6], C)
	C, t[7] = madd2(y[16], x[7], t[7], C)
	C, t[8] = madd2(y[16], x[8], t[8], C)
	C, t[9] = madd2(y[16], x[9], t[9], C)
	C, t[10] = madd2(y[16], x[10], t[10], C)
	C, t[11] = madd2(y[16], x[11], t[11], C)
	C, t[12] = madd2(y[16], x[12], t[12], C)
	C, t[13] = madd2(y[16], x[13], t[13], C)
	C, t[14] = madd2(y[16], x[14], t[14], C)
	C, t[15] = madd2(y[16], x[15], t[15], C)
	C, t[16] = madd2(y[16], x[16], t[16], C)
	C, t[17] = madd2(y[16], x[17], t[17], C)
	C, t[18] = madd2(y[16], x[18], t[18], C)
	C, t[19] = madd2(y[16], x[19], t[19], C)
	C, t[20] = madd2(y[16], x[20], t[20], C)
	C, t[21] = madd2(y[16], x[21], t[21], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 5124176631818446469

	// -----------------------------------
	// Second loop
	C = madd0(m, 11739818372011875763, t[0])

	C, t[0] = madd2(m, 11824375430665141315, t[1], C)

	C, t[1] = madd2(m, 897513172090905252, t[2], C)

	C, t[2] = madd2(m, 531120025817225475, t[3], C)

	C, t[3] = madd2(m, 8707661892141009149, t[4], C)

	C, t[4] = madd2(m, 11786224458619984790, t[5], C)

	C, t[5] = madd2(m, 5659238587671396734, t[6], C)

	C, t[6] = madd2(m, 18016383301055546002, t[7], C)

	C, t[7] = madd2(m, 10775018464463249911, t[8], C)

	C, t[8] = madd2(m, 17064401429272323224, t[9], C)

	C, t[9] = madd2(m, 18250729195507589214, t[10], C)

	C, t[10] = madd2(m, 7155370817234530960, t[11], C)

	C, t[11] = madd2(m, 8659264606281177933, t[12], C)

	C, t[12] = madd2(m, 9872774209099417190, t[13], C)

	C, t[13] = madd2(m, 7629372345097312458, t[14], C)

	C, t[14] = madd2(m, 17007029134472191228, t[15], C)

	C, t[15] = madd2(m, 5991468884766936598, t[16], C)

	C, t[16] = madd2(m, 11341612225600356157, t[17], C)

	C, t[17] = madd2(m, 18433679792523411973, t[18], C)

	C, t[18] = madd2(m, 415635585839274209, t[19], C)

	C, t[19] = madd2(m, 8907810790818485543, t[20], C)

	C, t[20] = madd3(m, 6940634706484457090, t[21], C, t[22])

	t[21], t[22] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[17], x[0], t[0])
	C, t[1] = madd2(y[17], x[1], t[1], C)
	C, t[2] = madd2(y[17], x[2], t[2], C)
	C, t[3] = madd2(y[17], x[3], t[3], C)
	C, t[4] = madd2(y[17], x[4], t[4], C)
	C, t[5] = madd2(y[17], x[5], t[5], C)
	C, t[6] = madd2(y[17], x[6], t[6], C)
	C, t[7] = madd2(y[17], x[7], t[7], C)
	C, t[8] = madd2(y[17], x[8], t[8], C)
	C, t[9] = madd2(y[17], x[9], t[9], C)
	C, t[10] = madd2(y[17], x[10], t[10], C)
	C, t[11] = madd2(y[17], x[11], t[11], C)
	C, t[12] = madd2(y[17], x[12], t[12], C)
	C, t[13] = madd2(y[17], x[13], t[13], C)
	C, t[14] = madd2(y[17], x[14], t[14], C)
	C, t[15] = madd2(y[17], x[15], t[15], C)
	C, t[16] = madd2(y[17], x[16], t[16], C)
	C, t[17] = madd2(y[17], x[17], t[17], C)
	C, t[18] = madd2(y[17], x[18], t[18], C)
	C, t[19] = madd2(y[17], x[19], t[19], C)
	C, t[20] = madd2(y[17], x[20], t[20], C)
	C, t[21] = madd2(y[17], x[21], t[21], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 5124176631818446469

	// -----------------------------------
	// Second loop
	C = madd0(m, 11739818372011875763, t[0])

	C, t[0] = madd2(m, 11824375430665141315, t[1], C)

	C, t[1] = madd2(m, 897513172090905252, t[2], C)

	C, t[2] = madd2(m, 531120025817225475, t[3], C)

	C, t[3] = madd2(m, 8707661892141009149, t[4], C)

	C, t[4] = madd2(m, 11786224458619984790, t[5], C)

	C, t[5] = madd2(m, 5659238587671396734, t[6], C)

	C, t[6] = madd2(m, 18016383301055546002, t[7], C)

	C, t[7] = madd2(m, 10775018464463249911, t[8], C)

	C, t[8] = madd2(m, 17064401429272323224, t[9], C)

	C, t[9] = madd2(m, 18250729195507589214, t[10], C)

	C, t[10] = madd2(m, 7155370817234530960, t[11], C)

	C, t[11] = madd2(m, 8659264606281177933, t[12], C)

	C, t[12] = madd2(m, 9872774209099417190, t[13], C)

	C, t[13] = madd2(m, 7629372345097312458, t[14], C)

	C, t[14] = madd2(m, 17007029134472191228, t[15], C)

	C, t[15] = madd2(m, 5991468884766936598, t[16], C)

	C, t[16] = madd2(m, 11341612225600356157, t[17], C)

	C, t[17] = madd2(m, 18433679792523411973, t[18], C)

	C, t[18] = madd2(m, 415635585839274209, t[19], C)

	C, t[19] = madd2(m, 8907810790818485543, t[20], C)

	C, t[20] = madd3(m, 6940634706484457090, t[21], C, t[22])

	t[21], t[22] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[18], x[0], t[0])
	C, t[1] = madd2(y[18], x[1], t[1], C)
	C, t[2] = madd2(y[18], x[2], t[2], C)
	C, t[3] = madd2(y[18], x[3], t[3], C)
	C, t[4] = madd2(y[18], x[4], t[4], C)
	C, t[5] = madd2(y[18], x[5], t[5], C)
	C, t[6] = madd2(y[18], x[6], t[6], C)
	C, t[7] = madd2(y[18], x[7], t[7], C)
	C, t[8] = madd2(y[18], x[8], t[8], C)
	C, t[9] = madd2(y[18], x[9], t[9], C)
	C, t[10] = madd2(y[18], x[10], t[10], C)
	C, t[11] = madd2(y[18], x[11], t[11], C)
	C, t[12] = madd2(y[18], x[12], t[12], C)
	C, t[13] = madd2(y[18], x[13], t[13], C)
	C, t[14] = madd2(y[18], x[14], t[14], C)
	C, t[15] = madd2(y[18], x[15], t[15], C)
	C, t[16] = madd2(y[18], x[16], t[16], C)
	C, t[17] = madd2(y[18], x[17], t[17], C)
	C, t[18] = madd2(y[18], x[18], t[18], C)
	C, t[19] = madd2(y[18], x[19], t[19], C)
	C, t[20] = madd2(y[18], x[20], t[20], C)
	C, t[21] = madd2(y[18], x[21], t[21], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 5124176631818446469

	// -----------------------------------
	// Second loop
	C = madd0(m, 11739818372011875763, t[0])

	C, t[0] = madd2(m, 11824375430665141315, t[1], C)

	C, t[1] = madd2(m, 897513172090905252, t[2], C)

	C, t[2] = madd2(m, 531120025817225475, t[3], C)

	C, t[3] = madd2(m, 8707661892141009149, t[4], C)

	C, t[4] = madd2(m, 11786224458619984790, t[5], C)

	C, t[5] = madd2(m, 5659238587671396734, t[6], C)

	C, t[6] = madd2(m, 18016383301055546002, t[7], C)

	C, t[7] = madd2(m, 10775018464463249911, t[8], C)

	C, t[8] = madd2(m, 17064401429272323224, t[9], C)

	C, t[9] = madd2(m, 18250729195507589214, t[10], C)

	C, t[10] = madd2(m, 7155370817234530960, t[11], C)

	C, t[11] = madd2(m, 8659264606281177933, t[12], C)

	C, t[12] = madd2(m, 9872774209099417190, t[13], C)

	C, t[13] = madd2(m, 7629372345097312458, t[14], C)

	C, t[14] = madd2(m, 17007029134472191228, t[15], C)

	C, t[15] = madd2(m, 5991468884766936598, t[16], C)

	C, t[16] = madd2(m, 11341612225600356157, t[17], C)

	C, t[17] = madd2(m, 18433679792523411973, t[18], C)

	C, t[18] = madd2(m, 415635585839274209, t[19], C)

	C, t[19] = madd2(m, 8907810790818485543, t[20], C)

	C, t[20] = madd3(m, 6940634706484457090, t[21], C, t[22])

	t[21], t[22] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[19], x[0], t[0])
	C, t[1] = madd2(y[19], x[1], t[1], C)
	C, t[2] = madd2(y[19], x[2], t[2], C)
	C, t[3] = madd2(y[19], x[3], t[3], C)
	C, t[4] = madd2(y[19], x[4], t[4], C)
	C, t[5] = madd2(y[19], x[5], t[5], C)
	C, t[6] = madd2(y[19], x[6], t[6], C)
	C, t[7] = madd2(y[19], x[7], t[7], C)
	C, t[8] = madd2(y[19], x[8], t[8], C)
	C, t[9] = madd2(y[19], x[9], t[9], C)
	C, t[10] = madd2(y[19], x[10], t[10], C)
	C, t[11] = madd2(y[19], x[11], t[11], C)
	C, t[12] = madd2(y[19], x[12], t[12], C)
	C, t[13] = madd2(y[19], x[13], t[13], C)
	C, t[14] = madd2(y[19], x[14], t[14], C)
	C, t[15] = madd2(y[19], x[15], t[15], C)
	C, t[16] = madd2(y[19], x[16], t[16], C)
	C, t[17] = madd2(y[19], x[17], t[17], C)
	C, t[18] = madd2(y[19], x[18], t[18], C)
	C, t[19] = madd2(y[19], x[19], t[19], C)
	C, t[20] = madd2(y[19], x[20], t[20], C)
	C, t[21] = madd2(y[19], x[21], t[21], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 5124176631818446469

	// -----------------------------------
	// Second loop
	C = madd0(m, 11739818372011875763, t[0])

	C, t[0] = madd2(m, 11824375430665141315, t[1], C)

	C, t[1] = madd2(m, 897513172090905252, t[2], C)

	C, t[2] = madd2(m, 531120025817225475, t[3], C)

	C, t[3] = madd2(m, 8707661892141009149, t[4], C)

	C, t[4] = madd2(m, 11786224458619984790, t[5], C)

	C, t[5] = madd2(m, 5659238587671396734, t[6], C)

	C, t[6] = madd2(m, 18016383301055546002, t[7], C)

	C, t[7] = madd2(m, 10775018464463249911, t[8], C)

	C, t[8] = madd2(m, 17064401429272323224, t[9], C)

	C, t[9] = madd2(m, 18250729195507589214, t[10], C)

	C, t[10] = madd2(m, 7155370817234530960, t[11], C)

	C, t[11] = madd2(m, 8659264606281177933, t[12], C)

	C, t[12] = madd2(m, 9872774209099417190, t[13], C)

	C, t[13] = madd2(m, 7629372345097312458, t[14], C)

	C, t[14] = madd2(m, 17007029134472191228, t[15], C)

	C, t[15] = madd2(m, 5991468884766936598, t[16], C)

	C, t[16] = madd2(m, 11341612225600356157, t[17], C)

	C, t[17] = madd2(m, 18433679792523411973, t[18], C)

	C, t[18] = madd2(m, 415635585839274209, t[19], C)

	C, t[19] = madd2(m, 8907810790818485543, t[20], C)

	C, t[20] = madd3(m, 6940634706484457090, t[21], C, t[22])

	t[21], t[22] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[20], x[0], t[0])
	C, t[1] = madd2(y[20], x[1], t[1], C)
	C, t[2] = madd2(y[20], x[2], t[2], C)
	C, t[3] = madd2(y[20], x[3], t[3], C)
	C, t[4] = madd2(y[20], x[4], t[4], C)
	C, t[5] = madd2(y[20], x[5], t[5], C)
	C, t[6] = madd2(y[20], x[6], t[6], C)
	C, t[7] = madd2(y[20], x[7], t[7], C)
	C, t[8] = madd2(y[20], x[8], t[8], C)
	C, t[9] = madd2(y[20], x[9], t[9], C)
	C, t[10] = madd2(y[20], x[10], t[10], C)
	C, t[11] = madd2(y[20], x[11], t[11], C)
	C, t[12] = madd2(y[20], x[12], t[12], C)
	C, t[13] = madd2(y[20], x[13], t[13], C)
	C, t[14] = madd2(y[20], x[14], t[14], C)
	C, t[15] = madd2(y[20], x[15], t[15], C)
	C, t[16] = madd2(y[20], x[16], t[16], C)
	C, t[17] = madd2(y[20], x[17], t[17], C)
	C, t[18] = madd2(y[20], x[18], t[18], C)
	C, t[19] = madd2(y[20], x[19], t[19], C)
	C, t[20] = madd2(y[20], x[20], t[20], C)
	C, t[21] = madd2(y[20], x[21], t[21], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 5124176631818446469

	// -----------------------------------
	// Second loop
	C = madd0(m, 11739818372011875763, t[0])

	C, t[0] = madd2(m, 11824375430665141315, t[1], C)

	C, t[1] = madd2(m, 897513172090905252, t[2], C)

	C, t[2] = madd2(m, 531120025817225475, t[3], C)

	C, t[3] = madd2(m, 8707661892141009149, t[4], C)

	C, t[4] = madd2(m, 11786224458619984790, t[5], C)

	C, t[5] = madd2(m, 5659238587671396734, t[6], C)

	C, t[6] = madd2(m, 18016383301055546002, t[7], C)

	C, t[7] = madd2(m, 10775018464463249911, t[8], C)

	C, t[8] = madd2(m, 17064401429272323224, t[9], C)

	C, t[9] = madd2(m, 18250729195507589214, t[10], C)

	C, t[10] = madd2(m, 7155370817234530960, t[11], C)

	C, t[11] = madd2(m, 8659264606281177933, t[12], C)

	C, t[12] = madd2(m, 9872774209099417190, t[13], C)

	C, t[13] = madd2(m, 7629372345097312458, t[14], C)

	C, t[14] = madd2(m, 17007029134472191228, t[15], C)

	C, t[15] = madd2(m, 5991468884766936598, t[16], C)

	C, t[16] = madd2(m, 11341612225600356157, t[17], C)

	C, t[17] = madd2(m, 18433679792523411973, t[18], C)

	C, t[18] = madd2(m, 415635585839274209, t[19], C)

	C, t[19] = madd2(m, 8907810790818485543, t[20], C)

	C, t[20] = madd3(m, 6940634706484457090, t[21], C, t[22])

	t[21], t[22] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[21], x[0], t[0])
	C, t[1] = madd2(y[21], x[1], t[1], C)
	C, t[2] = madd2(y[21], x[2], t[2], C)
	C, t[3] = madd2(y[21], x[3], t[3], C)
	C, t[4] = madd2(y[21], x[4], t[4], C)
	C, t[5] = madd2(y[21], x[5], t[5], C)
	C, t[6] = madd2(y[21], x[6], t[6], C)
	C, t[7] = madd2(y[21], x[7], t[7], C)
	C, t[8] = madd2(y[21], x[8], t[8], C)
	C, t[9] = madd2(y[21], x[9], t[9], C)
	C, t[10] = madd2(y[21], x[10], t[10], C)
	C, t[11] = madd2(y[21], x[11], t[11], C)
	C, t[12] = madd2(y[21], x[12], t[12], C)
	C, t[13] = madd2(y[21], x[13], t[13], C)
	C, t[14] = madd2(y[21], x[14], t[14], C)
	C, t[15] = madd2(y[21], x[15], t[15], C)
	C, t[16] = madd2(y[21], x[16], t[16], C)
	C, t[17] = madd2(y[21], x[17], t[17], C)
	C, t[18] = madd2(y[21], x[18], t[18], C)
	C, t[19] = madd2(y[21], x[19], t[19], C)
	C, t[20] = madd2(y[21], x[20], t[20], C)
	C, t[21] = madd2(y[21], x[21], t[21], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 5124176631818446469

	// -----------------------------------
	// Second loop
	C = madd0(m, 11739818372011875763, t[0])

	C, t[0] = madd2(m, 11824375430665141315, t[1], C)

	C, t[1] = madd2(m, 897513172090905252, t[2], C)

	C, t[2] = madd2(m, 531120025817225475, t[3], C)

	C, t[3] = madd2(m, 8707661892141009149, t[4], C)

	C, t[4] = madd2(m, 11786224458619984790, t[5], C)

	C, t[5] = madd2(m, 5659238587671396734, t[6], C)

	C, t[6] = madd2(m, 18016383301055546002, t[7], C)

	C, t[7] = madd2(m, 10775018464463249911, t[8], C)

	C, t[8] = madd2(m, 17064401429272323224, t[9], C)

	C, t[9] = madd2(m, 18250729195507589214, t[10], C)

	C, t[10] = madd2(m, 7155370817234530960, t[11], C)

	C, t[11] = madd2(m, 8659264606281177933, t[12], C)

	C, t[12] = madd2(m, 9872774209099417190, t[13], C)

	C, t[13] = madd2(m, 7629372345097312458, t[14], C)

	C, t[14] = madd2(m, 17007029134472191228, t[15], C)

	C, t[15] = madd2(m, 5991468884766936598, t[16], C)

	C, t[16] = madd2(m, 11341612225600356157, t[17], C)

	C, t[17] = madd2(m, 18433679792523411973, t[18], C)

	C, t[18] = madd2(m, 415635585839274209, t[19], C)

	C, t[19] = madd2(m, 8907810790818485543, t[20], C)

	C, t[20] = madd3(m, 6940634706484457090, t[21], C, t[22])

	t[21], t[22] = bits.Add64(D, C, 0)

	if t[22] != 0 {
		// we need to reduce, we have a result on 23 words
		var b uint64
		z[0], b = bits.Sub64(t[0], 11739818372011875763, 0)
		z[1], b = bits.Sub64(t[1], 11824375430665141315, b)
		z[2], b = bits.Sub64(t[2], 897513172090905252, b)
		z[3], b = bits.Sub64(t[3], 531120025817225475, b)
		z[4], b = bits.Sub64(t[4], 8707661892141009149, b)
		z[5], b = bits.Sub64(t[5], 11786224458619984790, b)
		z[6], b = bits.Sub64(t[6], 5659238587671396734, b)
		z[7], b = bits.Sub64(t[7], 18016383301055546002, b)
		z[8], b = bits.Sub64(t[8], 10775018464463249911, b)
		z[9], b = bits.Sub64(t[9], 17064401429272323224, b)
		z[10], b = bits.Sub64(t[10], 18250729195507589214, b)
		z[11], b = bits.Sub64(t[11], 7155370817234530960, b)
		z[12], b = bits.Sub64(t[12], 8659264606281177933, b)
		z[13], b = bits.Sub64(t[13], 9872774209099417190, b)
		z[14], b = bits.Sub64(t[14], 7629372345097312458, b)
		z[15], b = bits.Sub64(t[15], 17007029134472191228, b)
		z[16], b = bits.Sub64(t[16], 5991468884766936598, b)
		z[17], b = bits.Sub64(t[17], 11341612225600356157, b)
		z[18], b = bits.Sub64(t[18], 18433679792523411973, b)
		z[19], b = bits.Sub64(t[19], 415635585839274209, b)
		z[20], b = bits.Sub64(t[20], 8907810790818485543, b)
		z[21], _ = bits.Sub64(t[21], 6940634706484457090, b)
		return z
	}

	// copy t into z
	z[0] = t[0]
	z[1] = t[1]
	z[2] = t[2]
	z[3] = t[3]
	z[4] = t[4]
	z[5] = t[5]
	z[6] = t[6]
	z[7] = t[7]
	z[8] = t[8]
	z[9] = t[9]
	z[10] = t[10]
	z[11] = t[11]
	z[12] = t[12]
	z[13] = t[13]
	z[14] = t[14]
	z[15] = t[15]
	z[16] = t[16]
	z[17] = t[17]
	z[18] = t[18]
	z[19] = t[19]
	z[20] = t[20]
	z[21] = t[21]

	// if z > q --> z -= q
	// note: this is NOT constant time
	if !(z[21] < 6940634706484457090 || (z[21] == 6940634706484457090 && (z[20] < 8907810790818485543 || (z[20] == 8907810790818485543 && (z[19] < 415635585839274209 || (z[19] == 415635585839274209 && (z[18] < 18433679792523411973 || (z[18] == 18433679792523411973 && (z[17] < 11341612225600356157 || (z[17] == 11341612225600356157 && (z[16] < 5991468884766936598 || (z[16] == 5991468884766936598 && (z[15] < 17007029134472191228 || (z[15] == 17007029134472191228 && (z[14] < 7629372345097312458 || (z[14] == 7629372345097312458 && (z[13] < 9872774209099417190 || (z[13] == 9872774209099417190 && (z[12] < 8659264606281177933 || (z[12] == 8659264606281177933 && (z[11] < 7155370817234530960 || (z[11] == 7155370817234530960 && (z[10] < 18250729195507589214 || (z[10] == 18250729195507589214 && (z[9] < 17064401429272323224 || (z[9] == 17064401429272323224 && (z[8] < 10775018464463249911 || (z[8] == 10775018464463249911 && (z[7] < 18016383301055546002 || (z[7] == 18016383301055546002 && (z[6] < 5659238587671396734 || (z[6] == 5659238587671396734 && (z[5] < 11786224458619984790 || (z[5] == 11786224458619984790 && (z[4] < 8707661892141009149 || (z[4] == 8707661892141009149 && (z[3] < 531120025817225475 || (z[3] == 531120025817225475 && (z[2] < 897513172090905252 || (z[2] == 897513172090905252 && (z[1] < 11824375430665141315 || (z[1] == 11824375430665141315 && (z[0] < 11739818372011875763))))))))))))))))))))))))))))))))))))))))))) {
		var b uint64
		z[0], b = bits.Sub64(z[0], 11739818372011875763, 0)
		z[1], b = bits.Sub64(z[1], 11824375430665141315, b)
		z[2], b = bits.Sub64(z[2], 897513172090905252, b)
		z[3], b = bits.Sub64(z[3], 531120025817225475, b)
		z[4], b = bits.Sub64(z[4], 8707661892141009149, b)
		z[5], b = bits.Sub64(z[5], 11786224458619984790, b)
		z[6], b = bits.Sub64(z[6], 5659238587671396734, b)
		z[7], b = bits.Sub64(z[7], 18016383301055546002, b)
		z[8], b = bits.Sub64(z[8], 10775018464463249911, b)
		z[9], b = bits.Sub64(z[9], 17064401429272323224, b)
		z[10], b = bits.Sub64(z[10], 18250729195507589214, b)
		z[11], b = bits.Sub64(z[11], 7155370817234530960, b)
		z[12], b = bits.Sub64(z[12], 8659264606281177933, b)
		z[13], b = bits.Sub64(z[13], 9872774209099417190, b)
		z[14], b = bits.Sub64(z[14], 7629372345097312458, b)
		z[15], b = bits.Sub64(z[15], 17007029134472191228, b)
		z[16], b = bits.Sub64(z[16], 5991468884766936598, b)
		z[17], b = bits.Sub64(z[17], 11341612225600356157, b)
		z[18], b = bits.Sub64(z[18], 18433679792523411973, b)
		z[19], b = bits.Sub64(z[19], 415635585839274209, b)
		z[20], b = bits.Sub64(z[20], 8907810790818485543, b)
		z[21], _ = bits.Sub64(z[21], 6940634706484457090, b)
	}
	return z
}

// MulAssign z = z * x mod q
func (z *Element22) MulAssign(x *Element22) *Element22 {

	var t [23]uint64
	var D uint64
	var m, C uint64
	// -----------------------------------
	// First loop

	C, t[0] = bits.Mul64(x[0], z[0])
	C, t[1] = madd1(x[0], z[1], C)
	C, t[2] = madd1(x[0], z[2], C)
	C, t[3] = madd1(x[0], z[3], C)
	C, t[4] = madd1(x[0], z[4], C)
	C, t[5] = madd1(x[0], z[5], C)
	C, t[6] = madd1(x[0], z[6], C)
	C, t[7] = madd1(x[0], z[7], C)
	C, t[8] = madd1(x[0], z[8], C)
	C, t[9] = madd1(x[0], z[9], C)
	C, t[10] = madd1(x[0], z[10], C)
	C, t[11] = madd1(x[0], z[11], C)
	C, t[12] = madd1(x[0], z[12], C)
	C, t[13] = madd1(x[0], z[13], C)
	C, t[14] = madd1(x[0], z[14], C)
	C, t[15] = madd1(x[0], z[15], C)
	C, t[16] = madd1(x[0], z[16], C)
	C, t[17] = madd1(x[0], z[17], C)
	C, t[18] = madd1(x[0], z[18], C)
	C, t[19] = madd1(x[0], z[19], C)
	C, t[20] = madd1(x[0], z[20], C)
	C, t[21] = madd1(x[0], z[21], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 5124176631818446469

	// -----------------------------------
	// Second loop
	C = madd0(m, 11739818372011875763, t[0])

	C, t[0] = madd2(m, 11824375430665141315, t[1], C)

	C, t[1] = madd2(m, 897513172090905252, t[2], C)

	C, t[2] = madd2(m, 531120025817225475, t[3], C)

	C, t[3] = madd2(m, 8707661892141009149, t[4], C)

	C, t[4] = madd2(m, 11786224458619984790, t[5], C)

	C, t[5] = madd2(m, 5659238587671396734, t[6], C)

	C, t[6] = madd2(m, 18016383301055546002, t[7], C)

	C, t[7] = madd2(m, 10775018464463249911, t[8], C)

	C, t[8] = madd2(m, 17064401429272323224, t[9], C)

	C, t[9] = madd2(m, 18250729195507589214, t[10], C)

	C, t[10] = madd2(m, 7155370817234530960, t[11], C)

	C, t[11] = madd2(m, 8659264606281177933, t[12], C)

	C, t[12] = madd2(m, 9872774209099417190, t[13], C)

	C, t[13] = madd2(m, 7629372345097312458, t[14], C)

	C, t[14] = madd2(m, 17007029134472191228, t[15], C)

	C, t[15] = madd2(m, 5991468884766936598, t[16], C)

	C, t[16] = madd2(m, 11341612225600356157, t[17], C)

	C, t[17] = madd2(m, 18433679792523411973, t[18], C)

	C, t[18] = madd2(m, 415635585839274209, t[19], C)

	C, t[19] = madd2(m, 8907810790818485543, t[20], C)

	C, t[20] = madd3(m, 6940634706484457090, t[21], C, t[22])

	t[21], t[22] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[1], z[0], t[0])
	C, t[1] = madd2(x[1], z[1], t[1], C)
	C, t[2] = madd2(x[1], z[2], t[2], C)
	C, t[3] = madd2(x[1], z[3], t[3], C)
	C, t[4] = madd2(x[1], z[4], t[4], C)
	C, t[5] = madd2(x[1], z[5], t[5], C)
	C, t[6] = madd2(x[1], z[6], t[6], C)
	C, t[7] = madd2(x[1], z[7], t[7], C)
	C, t[8] = madd2(x[1], z[8], t[8], C)
	C, t[9] = madd2(x[1], z[9], t[9], C)
	C, t[10] = madd2(x[1], z[10], t[10], C)
	C, t[11] = madd2(x[1], z[11], t[11], C)
	C, t[12] = madd2(x[1], z[12], t[12], C)
	C, t[13] = madd2(x[1], z[13], t[13], C)
	C, t[14] = madd2(x[1], z[14], t[14], C)
	C, t[15] = madd2(x[1], z[15], t[15], C)
	C, t[16] = madd2(x[1], z[16], t[16], C)
	C, t[17] = madd2(x[1], z[17], t[17], C)
	C, t[18] = madd2(x[1], z[18], t[18], C)
	C, t[19] = madd2(x[1], z[19], t[19], C)
	C, t[20] = madd2(x[1], z[20], t[20], C)
	C, t[21] = madd2(x[1], z[21], t[21], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 5124176631818446469

	// -----------------------------------
	// Second loop
	C = madd0(m, 11739818372011875763, t[0])

	C, t[0] = madd2(m, 11824375430665141315, t[1], C)

	C, t[1] = madd2(m, 897513172090905252, t[2], C)

	C, t[2] = madd2(m, 531120025817225475, t[3], C)

	C, t[3] = madd2(m, 8707661892141009149, t[4], C)

	C, t[4] = madd2(m, 11786224458619984790, t[5], C)

	C, t[5] = madd2(m, 5659238587671396734, t[6], C)

	C, t[6] = madd2(m, 18016383301055546002, t[7], C)

	C, t[7] = madd2(m, 10775018464463249911, t[8], C)

	C, t[8] = madd2(m, 17064401429272323224, t[9], C)

	C, t[9] = madd2(m, 18250729195507589214, t[10], C)

	C, t[10] = madd2(m, 7155370817234530960, t[11], C)

	C, t[11] = madd2(m, 8659264606281177933, t[12], C)

	C, t[12] = madd2(m, 9872774209099417190, t[13], C)

	C, t[13] = madd2(m, 7629372345097312458, t[14], C)

	C, t[14] = madd2(m, 17007029134472191228, t[15], C)

	C, t[15] = madd2(m, 5991468884766936598, t[16], C)

	C, t[16] = madd2(m, 11341612225600356157, t[17], C)

	C, t[17] = madd2(m, 18433679792523411973, t[18], C)

	C, t[18] = madd2(m, 415635585839274209, t[19], C)

	C, t[19] = madd2(m, 8907810790818485543, t[20], C)

	C, t[20] = madd3(m, 6940634706484457090, t[21], C, t[22])

	t[21], t[22] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[2], z[0], t[0])
	C, t[1] = madd2(x[2], z[1], t[1], C)
	C, t[2] = madd2(x[2], z[2], t[2], C)
	C, t[3] = madd2(x[2], z[3], t[3], C)
	C, t[4] = madd2(x[2], z[4], t[4], C)
	C, t[5] = madd2(x[2], z[5], t[5], C)
	C, t[6] = madd2(x[2], z[6], t[6], C)
	C, t[7] = madd2(x[2], z[7], t[7], C)
	C, t[8] = madd2(x[2], z[8], t[8], C)
	C, t[9] = madd2(x[2], z[9], t[9], C)
	C, t[10] = madd2(x[2], z[10], t[10], C)
	C, t[11] = madd2(x[2], z[11], t[11], C)
	C, t[12] = madd2(x[2], z[12], t[12], C)
	C, t[13] = madd2(x[2], z[13], t[13], C)
	C, t[14] = madd2(x[2], z[14], t[14], C)
	C, t[15] = madd2(x[2], z[15], t[15], C)
	C, t[16] = madd2(x[2], z[16], t[16], C)
	C, t[17] = madd2(x[2], z[17], t[17], C)
	C, t[18] = madd2(x[2], z[18], t[18], C)
	C, t[19] = madd2(x[2], z[19], t[19], C)
	C, t[20] = madd2(x[2], z[20], t[20], C)
	C, t[21] = madd2(x[2], z[21], t[21], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 5124176631818446469

	// -----------------------------------
	// Second loop
	C = madd0(m, 11739818372011875763, t[0])

	C, t[0] = madd2(m, 11824375430665141315, t[1], C)

	C, t[1] = madd2(m, 897513172090905252, t[2], C)

	C, t[2] = madd2(m, 531120025817225475, t[3], C)

	C, t[3] = madd2(m, 8707661892141009149, t[4], C)

	C, t[4] = madd2(m, 11786224458619984790, t[5], C)

	C, t[5] = madd2(m, 5659238587671396734, t[6], C)

	C, t[6] = madd2(m, 18016383301055546002, t[7], C)

	C, t[7] = madd2(m, 10775018464463249911, t[8], C)

	C, t[8] = madd2(m, 17064401429272323224, t[9], C)

	C, t[9] = madd2(m, 18250729195507589214, t[10], C)

	C, t[10] = madd2(m, 7155370817234530960, t[11], C)

	C, t[11] = madd2(m, 8659264606281177933, t[12], C)

	C, t[12] = madd2(m, 9872774209099417190, t[13], C)

	C, t[13] = madd2(m, 7629372345097312458, t[14], C)

	C, t[14] = madd2(m, 17007029134472191228, t[15], C)

	C, t[15] = madd2(m, 5991468884766936598, t[16], C)

	C, t[16] = madd2(m, 11341612225600356157, t[17], C)

	C, t[17] = madd2(m, 18433679792523411973, t[18], C)

	C, t[18] = madd2(m, 415635585839274209, t[19], C)

	C, t[19] = madd2(m, 8907810790818485543, t[20], C)

	C, t[20] = madd3(m, 6940634706484457090, t[21], C, t[22])

	t[21], t[22] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[3], z[0], t[0])
	C, t[1] = madd2(x[3], z[1], t[1], C)
	C, t[2] = madd2(x[3], z[2], t[2], C)
	C, t[3] = madd2(x[3], z[3], t[3], C)
	C, t[4] = madd2(x[3], z[4], t[4], C)
	C, t[5] = madd2(x[3], z[5], t[5], C)
	C, t[6] = madd2(x[3], z[6], t[6], C)
	C, t[7] = madd2(x[3], z[7], t[7], C)
	C, t[8] = madd2(x[3], z[8], t[8], C)
	C, t[9] = madd2(x[3], z[9], t[9], C)
	C, t[10] = madd2(x[3], z[10], t[10], C)
	C, t[11] = madd2(x[3], z[11], t[11], C)
	C, t[12] = madd2(x[3], z[12], t[12], C)
	C, t[13] = madd2(x[3], z[13], t[13], C)
	C, t[14] = madd2(x[3], z[14], t[14], C)
	C, t[15] = madd2(x[3], z[15], t[15], C)
	C, t[16] = madd2(x[3], z[16], t[16], C)
	C, t[17] = madd2(x[3], z[17], t[17], C)
	C, t[18] = madd2(x[3], z[18], t[18], C)
	C, t[19] = madd2(x[3], z[19], t[19], C)
	C, t[20] = madd2(x[3], z[20], t[20], C)
	C, t[21] = madd2(x[3], z[21], t[21], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 5124176631818446469

	// -----------------------------------
	// Second loop
	C = madd0(m, 11739818372011875763, t[0])

	C, t[0] = madd2(m, 11824375430665141315, t[1], C)

	C, t[1] = madd2(m, 897513172090905252, t[2], C)

	C, t[2] = madd2(m, 531120025817225475, t[3], C)

	C, t[3] = madd2(m, 8707661892141009149, t[4], C)

	C, t[4] = madd2(m, 11786224458619984790, t[5], C)

	C, t[5] = madd2(m, 5659238587671396734, t[6], C)

	C, t[6] = madd2(m, 18016383301055546002, t[7], C)

	C, t[7] = madd2(m, 10775018464463249911, t[8], C)

	C, t[8] = madd2(m, 17064401429272323224, t[9], C)

	C, t[9] = madd2(m, 18250729195507589214, t[10], C)

	C, t[10] = madd2(m, 7155370817234530960, t[11], C)

	C, t[11] = madd2(m, 8659264606281177933, t[12], C)

	C, t[12] = madd2(m, 9872774209099417190, t[13], C)

	C, t[13] = madd2(m, 7629372345097312458, t[14], C)

	C, t[14] = madd2(m, 17007029134472191228, t[15], C)

	C, t[15] = madd2(m, 5991468884766936598, t[16], C)

	C, t[16] = madd2(m, 11341612225600356157, t[17], C)

	C, t[17] = madd2(m, 18433679792523411973, t[18], C)

	C, t[18] = madd2(m, 415635585839274209, t[19], C)

	C, t[19] = madd2(m, 8907810790818485543, t[20], C)

	C, t[20] = madd3(m, 6940634706484457090, t[21], C, t[22])

	t[21], t[22] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[4], z[0], t[0])
	C, t[1] = madd2(x[4], z[1], t[1], C)
	C, t[2] = madd2(x[4], z[2], t[2], C)
	C, t[3] = madd2(x[4], z[3], t[3], C)
	C, t[4] = madd2(x[4], z[4], t[4], C)
	C, t[5] = madd2(x[4], z[5], t[5], C)
	C, t[6] = madd2(x[4], z[6], t[6], C)
	C, t[7] = madd2(x[4], z[7], t[7], C)
	C, t[8] = madd2(x[4], z[8], t[8], C)
	C, t[9] = madd2(x[4], z[9], t[9], C)
	C, t[10] = madd2(x[4], z[10], t[10], C)
	C, t[11] = madd2(x[4], z[11], t[11], C)
	C, t[12] = madd2(x[4], z[12], t[12], C)
	C, t[13] = madd2(x[4], z[13], t[13], C)
	C, t[14] = madd2(x[4], z[14], t[14], C)
	C, t[15] = madd2(x[4], z[15], t[15], C)
	C, t[16] = madd2(x[4], z[16], t[16], C)
	C, t[17] = madd2(x[4], z[17], t[17], C)
	C, t[18] = madd2(x[4], z[18], t[18], C)
	C, t[19] = madd2(x[4], z[19], t[19], C)
	C, t[20] = madd2(x[4], z[20], t[20], C)
	C, t[21] = madd2(x[4], z[21], t[21], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 5124176631818446469

	// -----------------------------------
	// Second loop
	C = madd0(m, 11739818372011875763, t[0])

	C, t[0] = madd2(m, 11824375430665141315, t[1], C)

	C, t[1] = madd2(m, 897513172090905252, t[2], C)

	C, t[2] = madd2(m, 531120025817225475, t[3], C)

	C, t[3] = madd2(m, 8707661892141009149, t[4], C)

	C, t[4] = madd2(m, 11786224458619984790, t[5], C)

	C, t[5] = madd2(m, 5659238587671396734, t[6], C)

	C, t[6] = madd2(m, 18016383301055546002, t[7], C)

	C, t[7] = madd2(m, 10775018464463249911, t[8], C)

	C, t[8] = madd2(m, 17064401429272323224, t[9], C)

	C, t[9] = madd2(m, 18250729195507589214, t[10], C)

	C, t[10] = madd2(m, 7155370817234530960, t[11], C)

	C, t[11] = madd2(m, 8659264606281177933, t[12], C)

	C, t[12] = madd2(m, 9872774209099417190, t[13], C)

	C, t[13] = madd2(m, 7629372345097312458, t[14], C)

	C, t[14] = madd2(m, 17007029134472191228, t[15], C)

	C, t[15] = madd2(m, 5991468884766936598, t[16], C)

	C, t[16] = madd2(m, 11341612225600356157, t[17], C)

	C, t[17] = madd2(m, 18433679792523411973, t[18], C)

	C, t[18] = madd2(m, 415635585839274209, t[19], C)

	C, t[19] = madd2(m, 8907810790818485543, t[20], C)

	C, t[20] = madd3(m, 6940634706484457090, t[21], C, t[22])

	t[21], t[22] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[5], z[0], t[0])
	C, t[1] = madd2(x[5], z[1], t[1], C)
	C, t[2] = madd2(x[5], z[2], t[2], C)
	C, t[3] = madd2(x[5], z[3], t[3], C)
	C, t[4] = madd2(x[5], z[4], t[4], C)
	C, t[5] = madd2(x[5], z[5], t[5], C)
	C, t[6] = madd2(x[5], z[6], t[6], C)
	C, t[7] = madd2(x[5], z[7], t[7], C)
	C, t[8] = madd2(x[5], z[8], t[8], C)
	C, t[9] = madd2(x[5], z[9], t[9], C)
	C, t[10] = madd2(x[5], z[10], t[10], C)
	C, t[11] = madd2(x[5], z[11], t[11], C)
	C, t[12] = madd2(x[5], z[12], t[12], C)
	C, t[13] = madd2(x[5], z[13], t[13], C)
	C, t[14] = madd2(x[5], z[14], t[14], C)
	C, t[15] = madd2(x[5], z[15], t[15], C)
	C, t[16] = madd2(x[5], z[16], t[16], C)
	C, t[17] = madd2(x[5], z[17], t[17], C)
	C, t[18] = madd2(x[5], z[18], t[18], C)
	C, t[19] = madd2(x[5], z[19], t[19], C)
	C, t[20] = madd2(x[5], z[20], t[20], C)
	C, t[21] = madd2(x[5], z[21], t[21], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 5124176631818446469

	// -----------------------------------
	// Second loop
	C = madd0(m, 11739818372011875763, t[0])

	C, t[0] = madd2(m, 11824375430665141315, t[1], C)

	C, t[1] = madd2(m, 897513172090905252, t[2], C)

	C, t[2] = madd2(m, 531120025817225475, t[3], C)

	C, t[3] = madd2(m, 8707661892141009149, t[4], C)

	C, t[4] = madd2(m, 11786224458619984790, t[5], C)

	C, t[5] = madd2(m, 5659238587671396734, t[6], C)

	C, t[6] = madd2(m, 18016383301055546002, t[7], C)

	C, t[7] = madd2(m, 10775018464463249911, t[8], C)

	C, t[8] = madd2(m, 17064401429272323224, t[9], C)

	C, t[9] = madd2(m, 18250729195507589214, t[10], C)

	C, t[10] = madd2(m, 7155370817234530960, t[11], C)

	C, t[11] = madd2(m, 8659264606281177933, t[12], C)

	C, t[12] = madd2(m, 9872774209099417190, t[13], C)

	C, t[13] = madd2(m, 7629372345097312458, t[14], C)

	C, t[14] = madd2(m, 17007029134472191228, t[15], C)

	C, t[15] = madd2(m, 5991468884766936598, t[16], C)

	C, t[16] = madd2(m, 11341612225600356157, t[17], C)

	C, t[17] = madd2(m, 18433679792523411973, t[18], C)

	C, t[18] = madd2(m, 415635585839274209, t[19], C)

	C, t[19] = madd2(m, 8907810790818485543, t[20], C)

	C, t[20] = madd3(m, 6940634706484457090, t[21], C, t[22])

	t[21], t[22] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[6], z[0], t[0])
	C, t[1] = madd2(x[6], z[1], t[1], C)
	C, t[2] = madd2(x[6], z[2], t[2], C)
	C, t[3] = madd2(x[6], z[3], t[3], C)
	C, t[4] = madd2(x[6], z[4], t[4], C)
	C, t[5] = madd2(x[6], z[5], t[5], C)
	C, t[6] = madd2(x[6], z[6], t[6], C)
	C, t[7] = madd2(x[6], z[7], t[7], C)
	C, t[8] = madd2(x[6], z[8], t[8], C)
	C, t[9] = madd2(x[6], z[9], t[9], C)
	C, t[10] = madd2(x[6], z[10], t[10], C)
	C, t[11] = madd2(x[6], z[11], t[11], C)
	C, t[12] = madd2(x[6], z[12], t[12], C)
	C, t[13] = madd2(x[6], z[13], t[13], C)
	C, t[14] = madd2(x[6], z[14], t[14], C)
	C, t[15] = madd2(x[6], z[15], t[15], C)
	C, t[16] = madd2(x[6], z[16], t[16], C)
	C, t[17] = madd2(x[6], z[17], t[17], C)
	C, t[18] = madd2(x[6], z[18], t[18], C)
	C, t[19] = madd2(x[6], z[19], t[19], C)
	C, t[20] = madd2(x[6], z[20], t[20], C)
	C, t[21] = madd2(x[6], z[21], t[21], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 5124176631818446469

	// -----------------------------------
	// Second loop
	C = madd0(m, 11739818372011875763, t[0])

	C, t[0] = madd2(m, 11824375430665141315, t[1], C)

	C, t[1] = madd2(m, 897513172090905252, t[2], C)

	C, t[2] = madd2(m, 531120025817225475, t[3], C)

	C, t[3] = madd2(m, 8707661892141009149, t[4], C)

	C, t[4] = madd2(m, 11786224458619984790, t[5], C)

	C, t[5] = madd2(m, 5659238587671396734, t[6], C)

	C, t[6] = madd2(m, 18016383301055546002, t[7], C)

	C, t[7] = madd2(m, 10775018464463249911, t[8], C)

	C, t[8] = madd2(m, 17064401429272323224, t[9], C)

	C, t[9] = madd2(m, 18250729195507589214, t[10], C)

	C, t[10] = madd2(m, 7155370817234530960, t[11], C)

	C, t[11] = madd2(m, 8659264606281177933, t[12], C)

	C, t[12] = madd2(m, 9872774209099417190, t[13], C)

	C, t[13] = madd2(m, 7629372345097312458, t[14], C)

	C, t[14] = madd2(m, 17007029134472191228, t[15], C)

	C, t[15] = madd2(m, 5991468884766936598, t[16], C)

	C, t[16] = madd2(m, 11341612225600356157, t[17], C)

	C, t[17] = madd2(m, 18433679792523411973, t[18], C)

	C, t[18] = madd2(m, 415635585839274209, t[19], C)

	C, t[19] = madd2(m, 8907810790818485543, t[20], C)

	C, t[20] = madd3(m, 6940634706484457090, t[21], C, t[22])

	t[21], t[22] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[7], z[0], t[0])
	C, t[1] = madd2(x[7], z[1], t[1], C)
	C, t[2] = madd2(x[7], z[2], t[2], C)
	C, t[3] = madd2(x[7], z[3], t[3], C)
	C, t[4] = madd2(x[7], z[4], t[4], C)
	C, t[5] = madd2(x[7], z[5], t[5], C)
	C, t[6] = madd2(x[7], z[6], t[6], C)
	C, t[7] = madd2(x[7], z[7], t[7], C)
	C, t[8] = madd2(x[7], z[8], t[8], C)
	C, t[9] = madd2(x[7], z[9], t[9], C)
	C, t[10] = madd2(x[7], z[10], t[10], C)
	C, t[11] = madd2(x[7], z[11], t[11], C)
	C, t[12] = madd2(x[7], z[12], t[12], C)
	C, t[13] = madd2(x[7], z[13], t[13], C)
	C, t[14] = madd2(x[7], z[14], t[14], C)
	C, t[15] = madd2(x[7], z[15], t[15], C)
	C, t[16] = madd2(x[7], z[16], t[16], C)
	C, t[17] = madd2(x[7], z[17], t[17], C)
	C, t[18] = madd2(x[7], z[18], t[18], C)
	C, t[19] = madd2(x[7], z[19], t[19], C)
	C, t[20] = madd2(x[7], z[20], t[20], C)
	C, t[21] = madd2(x[7], z[21], t[21], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 5124176631818446469

	// -----------------------------------
	// Second loop
	C = madd0(m, 11739818372011875763, t[0])

	C, t[0] = madd2(m, 11824375430665141315, t[1], C)

	C, t[1] = madd2(m, 897513172090905252, t[2], C)

	C, t[2] = madd2(m, 531120025817225475, t[3], C)

	C, t[3] = madd2(m, 8707661892141009149, t[4], C)

	C, t[4] = madd2(m, 11786224458619984790, t[5], C)

	C, t[5] = madd2(m, 5659238587671396734, t[6], C)

	C, t[6] = madd2(m, 18016383301055546002, t[7], C)

	C, t[7] = madd2(m, 10775018464463249911, t[8], C)

	C, t[8] = madd2(m, 17064401429272323224, t[9], C)

	C, t[9] = madd2(m, 18250729195507589214, t[10], C)

	C, t[10] = madd2(m, 7155370817234530960, t[11], C)

	C, t[11] = madd2(m, 8659264606281177933, t[12], C)

	C, t[12] = madd2(m, 9872774209099417190, t[13], C)

	C, t[13] = madd2(m, 7629372345097312458, t[14], C)

	C, t[14] = madd2(m, 17007029134472191228, t[15], C)

	C, t[15] = madd2(m, 5991468884766936598, t[16], C)

	C, t[16] = madd2(m, 11341612225600356157, t[17], C)

	C, t[17] = madd2(m, 18433679792523411973, t[18], C)

	C, t[18] = madd2(m, 415635585839274209, t[19], C)

	C, t[19] = madd2(m, 8907810790818485543, t[20], C)

	C, t[20] = madd3(m, 6940634706484457090, t[21], C, t[22])

	t[21], t[22] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[8], z[0], t[0])
	C, t[1] = madd2(x[8], z[1], t[1], C)
	C, t[2] = madd2(x[8], z[2], t[2], C)
	C, t[3] = madd2(x[8], z[3], t[3], C)
	C, t[4] = madd2(x[8], z[4], t[4], C)
	C, t[5] = madd2(x[8], z[5], t[5], C)
	C, t[6] = madd2(x[8], z[6], t[6], C)
	C, t[7] = madd2(x[8], z[7], t[7], C)
	C, t[8] = madd2(x[8], z[8], t[8], C)
	C, t[9] = madd2(x[8], z[9], t[9], C)
	C, t[10] = madd2(x[8], z[10], t[10], C)
	C, t[11] = madd2(x[8], z[11], t[11], C)
	C, t[12] = madd2(x[8], z[12], t[12], C)
	C, t[13] = madd2(x[8], z[13], t[13], C)
	C, t[14] = madd2(x[8], z[14], t[14], C)
	C, t[15] = madd2(x[8], z[15], t[15], C)
	C, t[16] = madd2(x[8], z[16], t[16], C)
	C, t[17] = madd2(x[8], z[17], t[17], C)
	C, t[18] = madd2(x[8], z[18], t[18], C)
	C, t[19] = madd2(x[8], z[19], t[19], C)
	C, t[20] = madd2(x[8], z[20], t[20], C)
	C, t[21] = madd2(x[8], z[21], t[21], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 5124176631818446469

	// -----------------------------------
	// Second loop
	C = madd0(m, 11739818372011875763, t[0])

	C, t[0] = madd2(m, 11824375430665141315, t[1], C)

	C, t[1] = madd2(m, 897513172090905252, t[2], C)

	C, t[2] = madd2(m, 531120025817225475, t[3], C)

	C, t[3] = madd2(m, 8707661892141009149, t[4], C)

	C, t[4] = madd2(m, 11786224458619984790, t[5], C)

	C, t[5] = madd2(m, 5659238587671396734, t[6], C)

	C, t[6] = madd2(m, 18016383301055546002, t[7], C)

	C, t[7] = madd2(m, 10775018464463249911, t[8], C)

	C, t[8] = madd2(m, 17064401429272323224, t[9], C)

	C, t[9] = madd2(m, 18250729195507589214, t[10], C)

	C, t[10] = madd2(m, 7155370817234530960, t[11], C)

	C, t[11] = madd2(m, 8659264606281177933, t[12], C)

	C, t[12] = madd2(m, 9872774209099417190, t[13], C)

	C, t[13] = madd2(m, 7629372345097312458, t[14], C)

	C, t[14] = madd2(m, 17007029134472191228, t[15], C)

	C, t[15] = madd2(m, 5991468884766936598, t[16], C)

	C, t[16] = madd2(m, 11341612225600356157, t[17], C)

	C, t[17] = madd2(m, 18433679792523411973, t[18], C)

	C, t[18] = madd2(m, 415635585839274209, t[19], C)

	C, t[19] = madd2(m, 8907810790818485543, t[20], C)

	C, t[20] = madd3(m, 6940634706484457090, t[21], C, t[22])

	t[21], t[22] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[9], z[0], t[0])
	C, t[1] = madd2(x[9], z[1], t[1], C)
	C, t[2] = madd2(x[9], z[2], t[2], C)
	C, t[3] = madd2(x[9], z[3], t[3], C)
	C, t[4] = madd2(x[9], z[4], t[4], C)
	C, t[5] = madd2(x[9], z[5], t[5], C)
	C, t[6] = madd2(x[9], z[6], t[6], C)
	C, t[7] = madd2(x[9], z[7], t[7], C)
	C, t[8] = madd2(x[9], z[8], t[8], C)
	C, t[9] = madd2(x[9], z[9], t[9], C)
	C, t[10] = madd2(x[9], z[10], t[10], C)
	C, t[11] = madd2(x[9], z[11], t[11], C)
	C, t[12] = madd2(x[9], z[12], t[12], C)
	C, t[13] = madd2(x[9], z[13], t[13], C)
	C, t[14] = madd2(x[9], z[14], t[14], C)
	C, t[15] = madd2(x[9], z[15], t[15], C)
	C, t[16] = madd2(x[9], z[16], t[16], C)
	C, t[17] = madd2(x[9], z[17], t[17], C)
	C, t[18] = madd2(x[9], z[18], t[18], C)
	C, t[19] = madd2(x[9], z[19], t[19], C)
	C, t[20] = madd2(x[9], z[20], t[20], C)
	C, t[21] = madd2(x[9], z[21], t[21], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 5124176631818446469

	// -----------------------------------
	// Second loop
	C = madd0(m, 11739818372011875763, t[0])

	C, t[0] = madd2(m, 11824375430665141315, t[1], C)

	C, t[1] = madd2(m, 897513172090905252, t[2], C)

	C, t[2] = madd2(m, 531120025817225475, t[3], C)

	C, t[3] = madd2(m, 8707661892141009149, t[4], C)

	C, t[4] = madd2(m, 11786224458619984790, t[5], C)

	C, t[5] = madd2(m, 5659238587671396734, t[6], C)

	C, t[6] = madd2(m, 18016383301055546002, t[7], C)

	C, t[7] = madd2(m, 10775018464463249911, t[8], C)

	C, t[8] = madd2(m, 17064401429272323224, t[9], C)

	C, t[9] = madd2(m, 18250729195507589214, t[10], C)

	C, t[10] = madd2(m, 7155370817234530960, t[11], C)

	C, t[11] = madd2(m, 8659264606281177933, t[12], C)

	C, t[12] = madd2(m, 9872774209099417190, t[13], C)

	C, t[13] = madd2(m, 7629372345097312458, t[14], C)

	C, t[14] = madd2(m, 17007029134472191228, t[15], C)

	C, t[15] = madd2(m, 5991468884766936598, t[16], C)

	C, t[16] = madd2(m, 11341612225600356157, t[17], C)

	C, t[17] = madd2(m, 18433679792523411973, t[18], C)

	C, t[18] = madd2(m, 415635585839274209, t[19], C)

	C, t[19] = madd2(m, 8907810790818485543, t[20], C)

	C, t[20] = madd3(m, 6940634706484457090, t[21], C, t[22])

	t[21], t[22] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[10], z[0], t[0])
	C, t[1] = madd2(x[10], z[1], t[1], C)
	C, t[2] = madd2(x[10], z[2], t[2], C)
	C, t[3] = madd2(x[10], z[3], t[3], C)
	C, t[4] = madd2(x[10], z[4], t[4], C)
	C, t[5] = madd2(x[10], z[5], t[5], C)
	C, t[6] = madd2(x[10], z[6], t[6], C)
	C, t[7] = madd2(x[10], z[7], t[7], C)
	C, t[8] = madd2(x[10], z[8], t[8], C)
	C, t[9] = madd2(x[10], z[9], t[9], C)
	C, t[10] = madd2(x[10], z[10], t[10], C)
	C, t[11] = madd2(x[10], z[11], t[11], C)
	C, t[12] = madd2(x[10], z[12], t[12], C)
	C, t[13] = madd2(x[10], z[13], t[13], C)
	C, t[14] = madd2(x[10], z[14], t[14], C)
	C, t[15] = madd2(x[10], z[15], t[15], C)
	C, t[16] = madd2(x[10], z[16], t[16], C)
	C, t[17] = madd2(x[10], z[17], t[17], C)
	C, t[18] = madd2(x[10], z[18], t[18], C)
	C, t[19] = madd2(x[10], z[19], t[19], C)
	C, t[20] = madd2(x[10], z[20], t[20], C)
	C, t[21] = madd2(x[10], z[21], t[21], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 5124176631818446469

	// -----------------------------------
	// Second loop
	C = madd0(m, 11739818372011875763, t[0])

	C, t[0] = madd2(m, 11824375430665141315, t[1], C)

	C, t[1] = madd2(m, 897513172090905252, t[2], C)

	C, t[2] = madd2(m, 531120025817225475, t[3], C)

	C, t[3] = madd2(m, 8707661892141009149, t[4], C)

	C, t[4] = madd2(m, 11786224458619984790, t[5], C)

	C, t[5] = madd2(m, 5659238587671396734, t[6], C)

	C, t[6] = madd2(m, 18016383301055546002, t[7], C)

	C, t[7] = madd2(m, 10775018464463249911, t[8], C)

	C, t[8] = madd2(m, 17064401429272323224, t[9], C)

	C, t[9] = madd2(m, 18250729195507589214, t[10], C)

	C, t[10] = madd2(m, 7155370817234530960, t[11], C)

	C, t[11] = madd2(m, 8659264606281177933, t[12], C)

	C, t[12] = madd2(m, 9872774209099417190, t[13], C)

	C, t[13] = madd2(m, 7629372345097312458, t[14], C)

	C, t[14] = madd2(m, 17007029134472191228, t[15], C)

	C, t[15] = madd2(m, 5991468884766936598, t[16], C)

	C, t[16] = madd2(m, 11341612225600356157, t[17], C)

	C, t[17] = madd2(m, 18433679792523411973, t[18], C)

	C, t[18] = madd2(m, 415635585839274209, t[19], C)

	C, t[19] = madd2(m, 8907810790818485543, t[20], C)

	C, t[20] = madd3(m, 6940634706484457090, t[21], C, t[22])

	t[21], t[22] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[11], z[0], t[0])
	C, t[1] = madd2(x[11], z[1], t[1], C)
	C, t[2] = madd2(x[11], z[2], t[2], C)
	C, t[3] = madd2(x[11], z[3], t[3], C)
	C, t[4] = madd2(x[11], z[4], t[4], C)
	C, t[5] = madd2(x[11], z[5], t[5], C)
	C, t[6] = madd2(x[11], z[6], t[6], C)
	C, t[7] = madd2(x[11], z[7], t[7], C)
	C, t[8] = madd2(x[11], z[8], t[8], C)
	C, t[9] = madd2(x[11], z[9], t[9], C)
	C, t[10] = madd2(x[11], z[10], t[10], C)
	C, t[11] = madd2(x[11], z[11], t[11], C)
	C, t[12] = madd2(x[11], z[12], t[12], C)
	C, t[13] = madd2(x[11], z[13], t[13], C)
	C, t[14] = madd2(x[11], z[14], t[14], C)
	C, t[15] = madd2(x[11], z[15], t[15], C)
	C, t[16] = madd2(x[11], z[16], t[16], C)
	C, t[17] = madd2(x[11], z[17], t[17], C)
	C, t[18] = madd2(x[11], z[18], t[18], C)
	C, t[19] = madd2(x[11], z[19], t[19], C)
	C, t[20] = madd2(x[11], z[20], t[20], C)
	C, t[21] = madd2(x[11], z[21], t[21], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 5124176631818446469

	// -----------------------------------
	// Second loop
	C = madd0(m, 11739818372011875763, t[0])

	C, t[0] = madd2(m, 11824375430665141315, t[1], C)

	C, t[1] = madd2(m, 897513172090905252, t[2], C)

	C, t[2] = madd2(m, 531120025817225475, t[3], C)

	C, t[3] = madd2(m, 8707661892141009149, t[4], C)

	C, t[4] = madd2(m, 11786224458619984790, t[5], C)

	C, t[5] = madd2(m, 5659238587671396734, t[6], C)

	C, t[6] = madd2(m, 18016383301055546002, t[7], C)

	C, t[7] = madd2(m, 10775018464463249911, t[8], C)

	C, t[8] = madd2(m, 17064401429272323224, t[9], C)

	C, t[9] = madd2(m, 18250729195507589214, t[10], C)

	C, t[10] = madd2(m, 7155370817234530960, t[11], C)

	C, t[11] = madd2(m, 8659264606281177933, t[12], C)

	C, t[12] = madd2(m, 9872774209099417190, t[13], C)

	C, t[13] = madd2(m, 7629372345097312458, t[14], C)

	C, t[14] = madd2(m, 17007029134472191228, t[15], C)

	C, t[15] = madd2(m, 5991468884766936598, t[16], C)

	C, t[16] = madd2(m, 11341612225600356157, t[17], C)

	C, t[17] = madd2(m, 18433679792523411973, t[18], C)

	C, t[18] = madd2(m, 415635585839274209, t[19], C)

	C, t[19] = madd2(m, 8907810790818485543, t[20], C)

	C, t[20] = madd3(m, 6940634706484457090, t[21], C, t[22])

	t[21], t[22] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[12], z[0], t[0])
	C, t[1] = madd2(x[12], z[1], t[1], C)
	C, t[2] = madd2(x[12], z[2], t[2], C)
	C, t[3] = madd2(x[12], z[3], t[3], C)
	C, t[4] = madd2(x[12], z[4], t[4], C)
	C, t[5] = madd2(x[12], z[5], t[5], C)
	C, t[6] = madd2(x[12], z[6], t[6], C)
	C, t[7] = madd2(x[12], z[7], t[7], C)
	C, t[8] = madd2(x[12], z[8], t[8], C)
	C, t[9] = madd2(x[12], z[9], t[9], C)
	C, t[10] = madd2(x[12], z[10], t[10], C)
	C, t[11] = madd2(x[12], z[11], t[11], C)
	C, t[12] = madd2(x[12], z[12], t[12], C)
	C, t[13] = madd2(x[12], z[13], t[13], C)
	C, t[14] = madd2(x[12], z[14], t[14], C)
	C, t[15] = madd2(x[12], z[15], t[15], C)
	C, t[16] = madd2(x[12], z[16], t[16], C)
	C, t[17] = madd2(x[12], z[17], t[17], C)
	C, t[18] = madd2(x[12], z[18], t[18], C)
	C, t[19] = madd2(x[12], z[19], t[19], C)
	C, t[20] = madd2(x[12], z[20], t[20], C)
	C, t[21] = madd2(x[12], z[21], t[21], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 5124176631818446469

	// -----------------------------------
	// Second loop
	C = madd0(m, 11739818372011875763, t[0])

	C, t[0] = madd2(m, 11824375430665141315, t[1], C)

	C, t[1] = madd2(m, 897513172090905252, t[2], C)

	C, t[2] = madd2(m, 531120025817225475, t[3], C)

	C, t[3] = madd2(m, 8707661892141009149, t[4], C)

	C, t[4] = madd2(m, 11786224458619984790, t[5], C)

	C, t[5] = madd2(m, 5659238587671396734, t[6], C)

	C, t[6] = madd2(m, 18016383301055546002, t[7], C)

	C, t[7] = madd2(m, 10775018464463249911, t[8], C)

	C, t[8] = madd2(m, 17064401429272323224, t[9], C)

	C, t[9] = madd2(m, 18250729195507589214, t[10], C)

	C, t[10] = madd2(m, 7155370817234530960, t[11], C)

	C, t[11] = madd2(m, 8659264606281177933, t[12], C)

	C, t[12] = madd2(m, 9872774209099417190, t[13], C)

	C, t[13] = madd2(m, 7629372345097312458, t[14], C)

	C, t[14] = madd2(m, 17007029134472191228, t[15], C)

	C, t[15] = madd2(m, 5991468884766936598, t[16], C)

	C, t[16] = madd2(m, 11341612225600356157, t[17], C)

	C, t[17] = madd2(m, 18433679792523411973, t[18], C)

	C, t[18] = madd2(m, 415635585839274209, t[19], C)

	C, t[19] = madd2(m, 8907810790818485543, t[20], C)

	C, t[20] = madd3(m, 6940634706484457090, t[21], C, t[22])

	t[21], t[22] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[13], z[0], t[0])
	C, t[1] = madd2(x[13], z[1], t[1], C)
	C, t[2] = madd2(x[13], z[2], t[2], C)
	C, t[3] = madd2(x[13], z[3], t[3], C)
	C, t[4] = madd2(x[13], z[4], t[4], C)
	C, t[5] = madd2(x[13], z[5], t[5], C)
	C, t[6] = madd2(x[13], z[6], t[6], C)
	C, t[7] = madd2(x[13], z[7], t[7], C)
	C, t[8] = madd2(x[13], z[8], t[8], C)
	C, t[9] = madd2(x[13], z[9], t[9], C)
	C, t[10] = madd2(x[13], z[10], t[10], C)
	C, t[11] = madd2(x[13], z[11], t[11], C)
	C, t[12] = madd2(x[13], z[12], t[12], C)
	C, t[13] = madd2(x[13], z[13], t[13], C)
	C, t[14] = madd2(x[13], z[14], t[14], C)
	C, t[15] = madd2(x[13], z[15], t[15], C)
	C, t[16] = madd2(x[13], z[16], t[16], C)
	C, t[17] = madd2(x[13], z[17], t[17], C)
	C, t[18] = madd2(x[13], z[18], t[18], C)
	C, t[19] = madd2(x[13], z[19], t[19], C)
	C, t[20] = madd2(x[13], z[20], t[20], C)
	C, t[21] = madd2(x[13], z[21], t[21], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 5124176631818446469

	// -----------------------------------
	// Second loop
	C = madd0(m, 11739818372011875763, t[0])

	C, t[0] = madd2(m, 11824375430665141315, t[1], C)

	C, t[1] = madd2(m, 897513172090905252, t[2], C)

	C, t[2] = madd2(m, 531120025817225475, t[3], C)

	C, t[3] = madd2(m, 8707661892141009149, t[4], C)

	C, t[4] = madd2(m, 11786224458619984790, t[5], C)

	C, t[5] = madd2(m, 5659238587671396734, t[6], C)

	C, t[6] = madd2(m, 18016383301055546002, t[7], C)

	C, t[7] = madd2(m, 10775018464463249911, t[8], C)

	C, t[8] = madd2(m, 17064401429272323224, t[9], C)

	C, t[9] = madd2(m, 18250729195507589214, t[10], C)

	C, t[10] = madd2(m, 7155370817234530960, t[11], C)

	C, t[11] = madd2(m, 8659264606281177933, t[12], C)

	C, t[12] = madd2(m, 9872774209099417190, t[13], C)

	C, t[13] = madd2(m, 7629372345097312458, t[14], C)

	C, t[14] = madd2(m, 17007029134472191228, t[15], C)

	C, t[15] = madd2(m, 5991468884766936598, t[16], C)

	C, t[16] = madd2(m, 11341612225600356157, t[17], C)

	C, t[17] = madd2(m, 18433679792523411973, t[18], C)

	C, t[18] = madd2(m, 415635585839274209, t[19], C)

	C, t[19] = madd2(m, 8907810790818485543, t[20], C)

	C, t[20] = madd3(m, 6940634706484457090, t[21], C, t[22])

	t[21], t[22] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[14], z[0], t[0])
	C, t[1] = madd2(x[14], z[1], t[1], C)
	C, t[2] = madd2(x[14], z[2], t[2], C)
	C, t[3] = madd2(x[14], z[3], t[3], C)
	C, t[4] = madd2(x[14], z[4], t[4], C)
	C, t[5] = madd2(x[14], z[5], t[5], C)
	C, t[6] = madd2(x[14], z[6], t[6], C)
	C, t[7] = madd2(x[14], z[7], t[7], C)
	C, t[8] = madd2(x[14], z[8], t[8], C)
	C, t[9] = madd2(x[14], z[9], t[9], C)
	C, t[10] = madd2(x[14], z[10], t[10], C)
	C, t[11] = madd2(x[14], z[11], t[11], C)
	C, t[12] = madd2(x[14], z[12], t[12], C)
	C, t[13] = madd2(x[14], z[13], t[13], C)
	C, t[14] = madd2(x[14], z[14], t[14], C)
	C, t[15] = madd2(x[14], z[15], t[15], C)
	C, t[16] = madd2(x[14], z[16], t[16], C)
	C, t[17] = madd2(x[14], z[17], t[17], C)
	C, t[18] = madd2(x[14], z[18], t[18], C)
	C, t[19] = madd2(x[14], z[19], t[19], C)
	C, t[20] = madd2(x[14], z[20], t[20], C)
	C, t[21] = madd2(x[14], z[21], t[21], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 5124176631818446469

	// -----------------------------------
	// Second loop
	C = madd0(m, 11739818372011875763, t[0])

	C, t[0] = madd2(m, 11824375430665141315, t[1], C)

	C, t[1] = madd2(m, 897513172090905252, t[2], C)

	C, t[2] = madd2(m, 531120025817225475, t[3], C)

	C, t[3] = madd2(m, 8707661892141009149, t[4], C)

	C, t[4] = madd2(m, 11786224458619984790, t[5], C)

	C, t[5] = madd2(m, 5659238587671396734, t[6], C)

	C, t[6] = madd2(m, 18016383301055546002, t[7], C)

	C, t[7] = madd2(m, 10775018464463249911, t[8], C)

	C, t[8] = madd2(m, 17064401429272323224, t[9], C)

	C, t[9] = madd2(m, 18250729195507589214, t[10], C)

	C, t[10] = madd2(m, 7155370817234530960, t[11], C)

	C, t[11] = madd2(m, 8659264606281177933, t[12], C)

	C, t[12] = madd2(m, 9872774209099417190, t[13], C)

	C, t[13] = madd2(m, 7629372345097312458, t[14], C)

	C, t[14] = madd2(m, 17007029134472191228, t[15], C)

	C, t[15] = madd2(m, 5991468884766936598, t[16], C)

	C, t[16] = madd2(m, 11341612225600356157, t[17], C)

	C, t[17] = madd2(m, 18433679792523411973, t[18], C)

	C, t[18] = madd2(m, 415635585839274209, t[19], C)

	C, t[19] = madd2(m, 8907810790818485543, t[20], C)

	C, t[20] = madd3(m, 6940634706484457090, t[21], C, t[22])

	t[21], t[22] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[15], z[0], t[0])
	C, t[1] = madd2(x[15], z[1], t[1], C)
	C, t[2] = madd2(x[15], z[2], t[2], C)
	C, t[3] = madd2(x[15], z[3], t[3], C)
	C, t[4] = madd2(x[15], z[4], t[4], C)
	C, t[5] = madd2(x[15], z[5], t[5], C)
	C, t[6] = madd2(x[15], z[6], t[6], C)
	C, t[7] = madd2(x[15], z[7], t[7], C)
	C, t[8] = madd2(x[15], z[8], t[8], C)
	C, t[9] = madd2(x[15], z[9], t[9], C)
	C, t[10] = madd2(x[15], z[10], t[10], C)
	C, t[11] = madd2(x[15], z[11], t[11], C)
	C, t[12] = madd2(x[15], z[12], t[12], C)
	C, t[13] = madd2(x[15], z[13], t[13], C)
	C, t[14] = madd2(x[15], z[14], t[14], C)
	C, t[15] = madd2(x[15], z[15], t[15], C)
	C, t[16] = madd2(x[15], z[16], t[16], C)
	C, t[17] = madd2(x[15], z[17], t[17], C)
	C, t[18] = madd2(x[15], z[18], t[18], C)
	C, t[19] = madd2(x[15], z[19], t[19], C)
	C, t[20] = madd2(x[15], z[20], t[20], C)
	C, t[21] = madd2(x[15], z[21], t[21], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 5124176631818446469

	// -----------------------------------
	// Second loop
	C = madd0(m, 11739818372011875763, t[0])

	C, t[0] = madd2(m, 11824375430665141315, t[1], C)

	C, t[1] = madd2(m, 897513172090905252, t[2], C)

	C, t[2] = madd2(m, 531120025817225475, t[3], C)

	C, t[3] = madd2(m, 8707661892141009149, t[4], C)

	C, t[4] = madd2(m, 11786224458619984790, t[5], C)

	C, t[5] = madd2(m, 5659238587671396734, t[6], C)

	C, t[6] = madd2(m, 18016383301055546002, t[7], C)

	C, t[7] = madd2(m, 10775018464463249911, t[8], C)

	C, t[8] = madd2(m, 17064401429272323224, t[9], C)

	C, t[9] = madd2(m, 18250729195507589214, t[10], C)

	C, t[10] = madd2(m, 7155370817234530960, t[11], C)

	C, t[11] = madd2(m, 8659264606281177933, t[12], C)

	C, t[12] = madd2(m, 9872774209099417190, t[13], C)

	C, t[13] = madd2(m, 7629372345097312458, t[14], C)

	C, t[14] = madd2(m, 17007029134472191228, t[15], C)

	C, t[15] = madd2(m, 5991468884766936598, t[16], C)

	C, t[16] = madd2(m, 11341612225600356157, t[17], C)

	C, t[17] = madd2(m, 18433679792523411973, t[18], C)

	C, t[18] = madd2(m, 415635585839274209, t[19], C)

	C, t[19] = madd2(m, 8907810790818485543, t[20], C)

	C, t[20] = madd3(m, 6940634706484457090, t[21], C, t[22])

	t[21], t[22] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[16], z[0], t[0])
	C, t[1] = madd2(x[16], z[1], t[1], C)
	C, t[2] = madd2(x[16], z[2], t[2], C)
	C, t[3] = madd2(x[16], z[3], t[3], C)
	C, t[4] = madd2(x[16], z[4], t[4], C)
	C, t[5] = madd2(x[16], z[5], t[5], C)
	C, t[6] = madd2(x[16], z[6], t[6], C)
	C, t[7] = madd2(x[16], z[7], t[7], C)
	C, t[8] = madd2(x[16], z[8], t[8], C)
	C, t[9] = madd2(x[16], z[9], t[9], C)
	C, t[10] = madd2(x[16], z[10], t[10], C)
	C, t[11] = madd2(x[16], z[11], t[11], C)
	C, t[12] = madd2(x[16], z[12], t[12], C)
	C, t[13] = madd2(x[16], z[13], t[13], C)
	C, t[14] = madd2(x[16], z[14], t[14], C)
	C, t[15] = madd2(x[16], z[15], t[15], C)
	C, t[16] = madd2(x[16], z[16], t[16], C)
	C, t[17] = madd2(x[16], z[17], t[17], C)
	C, t[18] = madd2(x[16], z[18], t[18], C)
	C, t[19] = madd2(x[16], z[19], t[19], C)
	C, t[20] = madd2(x[16], z[20], t[20], C)
	C, t[21] = madd2(x[16], z[21], t[21], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 5124176631818446469

	// -----------------------------------
	// Second loop
	C = madd0(m, 11739818372011875763, t[0])

	C, t[0] = madd2(m, 11824375430665141315, t[1], C)

	C, t[1] = madd2(m, 897513172090905252, t[2], C)

	C, t[2] = madd2(m, 531120025817225475, t[3], C)

	C, t[3] = madd2(m, 8707661892141009149, t[4], C)

	C, t[4] = madd2(m, 11786224458619984790, t[5], C)

	C, t[5] = madd2(m, 5659238587671396734, t[6], C)

	C, t[6] = madd2(m, 18016383301055546002, t[7], C)

	C, t[7] = madd2(m, 10775018464463249911, t[8], C)

	C, t[8] = madd2(m, 17064401429272323224, t[9], C)

	C, t[9] = madd2(m, 18250729195507589214, t[10], C)

	C, t[10] = madd2(m, 7155370817234530960, t[11], C)

	C, t[11] = madd2(m, 8659264606281177933, t[12], C)

	C, t[12] = madd2(m, 9872774209099417190, t[13], C)

	C, t[13] = madd2(m, 7629372345097312458, t[14], C)

	C, t[14] = madd2(m, 17007029134472191228, t[15], C)

	C, t[15] = madd2(m, 5991468884766936598, t[16], C)

	C, t[16] = madd2(m, 11341612225600356157, t[17], C)

	C, t[17] = madd2(m, 18433679792523411973, t[18], C)

	C, t[18] = madd2(m, 415635585839274209, t[19], C)

	C, t[19] = madd2(m, 8907810790818485543, t[20], C)

	C, t[20] = madd3(m, 6940634706484457090, t[21], C, t[22])

	t[21], t[22] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[17], z[0], t[0])
	C, t[1] = madd2(x[17], z[1], t[1], C)
	C, t[2] = madd2(x[17], z[2], t[2], C)
	C, t[3] = madd2(x[17], z[3], t[3], C)
	C, t[4] = madd2(x[17], z[4], t[4], C)
	C, t[5] = madd2(x[17], z[5], t[5], C)
	C, t[6] = madd2(x[17], z[6], t[6], C)
	C, t[7] = madd2(x[17], z[7], t[7], C)
	C, t[8] = madd2(x[17], z[8], t[8], C)
	C, t[9] = madd2(x[17], z[9], t[9], C)
	C, t[10] = madd2(x[17], z[10], t[10], C)
	C, t[11] = madd2(x[17], z[11], t[11], C)
	C, t[12] = madd2(x[17], z[12], t[12], C)
	C, t[13] = madd2(x[17], z[13], t[13], C)
	C, t[14] = madd2(x[17], z[14], t[14], C)
	C, t[15] = madd2(x[17], z[15], t[15], C)
	C, t[16] = madd2(x[17], z[16], t[16], C)
	C, t[17] = madd2(x[17], z[17], t[17], C)
	C, t[18] = madd2(x[17], z[18], t[18], C)
	C, t[19] = madd2(x[17], z[19], t[19], C)
	C, t[20] = madd2(x[17], z[20], t[20], C)
	C, t[21] = madd2(x[17], z[21], t[21], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 5124176631818446469

	// -----------------------------------
	// Second loop
	C = madd0(m, 11739818372011875763, t[0])

	C, t[0] = madd2(m, 11824375430665141315, t[1], C)

	C, t[1] = madd2(m, 897513172090905252, t[2], C)

	C, t[2] = madd2(m, 531120025817225475, t[3], C)

	C, t[3] = madd2(m, 8707661892141009149, t[4], C)

	C, t[4] = madd2(m, 11786224458619984790, t[5], C)

	C, t[5] = madd2(m, 5659238587671396734, t[6], C)

	C, t[6] = madd2(m, 18016383301055546002, t[7], C)

	C, t[7] = madd2(m, 10775018464463249911, t[8], C)

	C, t[8] = madd2(m, 17064401429272323224, t[9], C)

	C, t[9] = madd2(m, 18250729195507589214, t[10], C)

	C, t[10] = madd2(m, 7155370817234530960, t[11], C)

	C, t[11] = madd2(m, 8659264606281177933, t[12], C)

	C, t[12] = madd2(m, 9872774209099417190, t[13], C)

	C, t[13] = madd2(m, 7629372345097312458, t[14], C)

	C, t[14] = madd2(m, 17007029134472191228, t[15], C)

	C, t[15] = madd2(m, 5991468884766936598, t[16], C)

	C, t[16] = madd2(m, 11341612225600356157, t[17], C)

	C, t[17] = madd2(m, 18433679792523411973, t[18], C)

	C, t[18] = madd2(m, 415635585839274209, t[19], C)

	C, t[19] = madd2(m, 8907810790818485543, t[20], C)

	C, t[20] = madd3(m, 6940634706484457090, t[21], C, t[22])

	t[21], t[22] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[18], z[0], t[0])
	C, t[1] = madd2(x[18], z[1], t[1], C)
	C, t[2] = madd2(x[18], z[2], t[2], C)
	C, t[3] = madd2(x[18], z[3], t[3], C)
	C, t[4] = madd2(x[18], z[4], t[4], C)
	C, t[5] = madd2(x[18], z[5], t[5], C)
	C, t[6] = madd2(x[18], z[6], t[6], C)
	C, t[7] = madd2(x[18], z[7], t[7], C)
	C, t[8] = madd2(x[18], z[8], t[8], C)
	C, t[9] = madd2(x[18], z[9], t[9], C)
	C, t[10] = madd2(x[18], z[10], t[10], C)
	C, t[11] = madd2(x[18], z[11], t[11], C)
	C, t[12] = madd2(x[18], z[12], t[12], C)
	C, t[13] = madd2(x[18], z[13], t[13], C)
	C, t[14] = madd2(x[18], z[14], t[14], C)
	C, t[15] = madd2(x[18], z[15], t[15], C)
	C, t[16] = madd2(x[18], z[16], t[16], C)
	C, t[17] = madd2(x[18], z[17], t[17], C)
	C, t[18] = madd2(x[18], z[18], t[18], C)
	C, t[19] = madd2(x[18], z[19], t[19], C)
	C, t[20] = madd2(x[18], z[20], t[20], C)
	C, t[21] = madd2(x[18], z[21], t[21], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 5124176631818446469

	// -----------------------------------
	// Second loop
	C = madd0(m, 11739818372011875763, t[0])

	C, t[0] = madd2(m, 11824375430665141315, t[1], C)

	C, t[1] = madd2(m, 897513172090905252, t[2], C)

	C, t[2] = madd2(m, 531120025817225475, t[3], C)

	C, t[3] = madd2(m, 8707661892141009149, t[4], C)

	C, t[4] = madd2(m, 11786224458619984790, t[5], C)

	C, t[5] = madd2(m, 5659238587671396734, t[6], C)

	C, t[6] = madd2(m, 18016383301055546002, t[7], C)

	C, t[7] = madd2(m, 10775018464463249911, t[8], C)

	C, t[8] = madd2(m, 17064401429272323224, t[9], C)

	C, t[9] = madd2(m, 18250729195507589214, t[10], C)

	C, t[10] = madd2(m, 7155370817234530960, t[11], C)

	C, t[11] = madd2(m, 8659264606281177933, t[12], C)

	C, t[12] = madd2(m, 9872774209099417190, t[13], C)

	C, t[13] = madd2(m, 7629372345097312458, t[14], C)

	C, t[14] = madd2(m, 17007029134472191228, t[15], C)

	C, t[15] = madd2(m, 5991468884766936598, t[16], C)

	C, t[16] = madd2(m, 11341612225600356157, t[17], C)

	C, t[17] = madd2(m, 18433679792523411973, t[18], C)

	C, t[18] = madd2(m, 415635585839274209, t[19], C)

	C, t[19] = madd2(m, 8907810790818485543, t[20], C)

	C, t[20] = madd3(m, 6940634706484457090, t[21], C, t[22])

	t[21], t[22] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[19], z[0], t[0])
	C, t[1] = madd2(x[19], z[1], t[1], C)
	C, t[2] = madd2(x[19], z[2], t[2], C)
	C, t[3] = madd2(x[19], z[3], t[3], C)
	C, t[4] = madd2(x[19], z[4], t[4], C)
	C, t[5] = madd2(x[19], z[5], t[5], C)
	C, t[6] = madd2(x[19], z[6], t[6], C)
	C, t[7] = madd2(x[19], z[7], t[7], C)
	C, t[8] = madd2(x[19], z[8], t[8], C)
	C, t[9] = madd2(x[19], z[9], t[9], C)
	C, t[10] = madd2(x[19], z[10], t[10], C)
	C, t[11] = madd2(x[19], z[11], t[11], C)
	C, t[12] = madd2(x[19], z[12], t[12], C)
	C, t[13] = madd2(x[19], z[13], t[13], C)
	C, t[14] = madd2(x[19], z[14], t[14], C)
	C, t[15] = madd2(x[19], z[15], t[15], C)
	C, t[16] = madd2(x[19], z[16], t[16], C)
	C, t[17] = madd2(x[19], z[17], t[17], C)
	C, t[18] = madd2(x[19], z[18], t[18], C)
	C, t[19] = madd2(x[19], z[19], t[19], C)
	C, t[20] = madd2(x[19], z[20], t[20], C)
	C, t[21] = madd2(x[19], z[21], t[21], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 5124176631818446469

	// -----------------------------------
	// Second loop
	C = madd0(m, 11739818372011875763, t[0])

	C, t[0] = madd2(m, 11824375430665141315, t[1], C)

	C, t[1] = madd2(m, 897513172090905252, t[2], C)

	C, t[2] = madd2(m, 531120025817225475, t[3], C)

	C, t[3] = madd2(m, 8707661892141009149, t[4], C)

	C, t[4] = madd2(m, 11786224458619984790, t[5], C)

	C, t[5] = madd2(m, 5659238587671396734, t[6], C)

	C, t[6] = madd2(m, 18016383301055546002, t[7], C)

	C, t[7] = madd2(m, 10775018464463249911, t[8], C)

	C, t[8] = madd2(m, 17064401429272323224, t[9], C)

	C, t[9] = madd2(m, 18250729195507589214, t[10], C)

	C, t[10] = madd2(m, 7155370817234530960, t[11], C)

	C, t[11] = madd2(m, 8659264606281177933, t[12], C)

	C, t[12] = madd2(m, 9872774209099417190, t[13], C)

	C, t[13] = madd2(m, 7629372345097312458, t[14], C)

	C, t[14] = madd2(m, 17007029134472191228, t[15], C)

	C, t[15] = madd2(m, 5991468884766936598, t[16], C)

	C, t[16] = madd2(m, 11341612225600356157, t[17], C)

	C, t[17] = madd2(m, 18433679792523411973, t[18], C)

	C, t[18] = madd2(m, 415635585839274209, t[19], C)

	C, t[19] = madd2(m, 8907810790818485543, t[20], C)

	C, t[20] = madd3(m, 6940634706484457090, t[21], C, t[22])

	t[21], t[22] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[20], z[0], t[0])
	C, t[1] = madd2(x[20], z[1], t[1], C)
	C, t[2] = madd2(x[20], z[2], t[2], C)
	C, t[3] = madd2(x[20], z[3], t[3], C)
	C, t[4] = madd2(x[20], z[4], t[4], C)
	C, t[5] = madd2(x[20], z[5], t[5], C)
	C, t[6] = madd2(x[20], z[6], t[6], C)
	C, t[7] = madd2(x[20], z[7], t[7], C)
	C, t[8] = madd2(x[20], z[8], t[8], C)
	C, t[9] = madd2(x[20], z[9], t[9], C)
	C, t[10] = madd2(x[20], z[10], t[10], C)
	C, t[11] = madd2(x[20], z[11], t[11], C)
	C, t[12] = madd2(x[20], z[12], t[12], C)
	C, t[13] = madd2(x[20], z[13], t[13], C)
	C, t[14] = madd2(x[20], z[14], t[14], C)
	C, t[15] = madd2(x[20], z[15], t[15], C)
	C, t[16] = madd2(x[20], z[16], t[16], C)
	C, t[17] = madd2(x[20], z[17], t[17], C)
	C, t[18] = madd2(x[20], z[18], t[18], C)
	C, t[19] = madd2(x[20], z[19], t[19], C)
	C, t[20] = madd2(x[20], z[20], t[20], C)
	C, t[21] = madd2(x[20], z[21], t[21], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 5124176631818446469

	// -----------------------------------
	// Second loop
	C = madd0(m, 11739818372011875763, t[0])

	C, t[0] = madd2(m, 11824375430665141315, t[1], C)

	C, t[1] = madd2(m, 897513172090905252, t[2], C)

	C, t[2] = madd2(m, 531120025817225475, t[3], C)

	C, t[3] = madd2(m, 8707661892141009149, t[4], C)

	C, t[4] = madd2(m, 11786224458619984790, t[5], C)

	C, t[5] = madd2(m, 5659238587671396734, t[6], C)

	C, t[6] = madd2(m, 18016383301055546002, t[7], C)

	C, t[7] = madd2(m, 10775018464463249911, t[8], C)

	C, t[8] = madd2(m, 17064401429272323224, t[9], C)

	C, t[9] = madd2(m, 18250729195507589214, t[10], C)

	C, t[10] = madd2(m, 7155370817234530960, t[11], C)

	C, t[11] = madd2(m, 8659264606281177933, t[12], C)

	C, t[12] = madd2(m, 9872774209099417190, t[13], C)

	C, t[13] = madd2(m, 7629372345097312458, t[14], C)

	C, t[14] = madd2(m, 17007029134472191228, t[15], C)

	C, t[15] = madd2(m, 5991468884766936598, t[16], C)

	C, t[16] = madd2(m, 11341612225600356157, t[17], C)

	C, t[17] = madd2(m, 18433679792523411973, t[18], C)

	C, t[18] = madd2(m, 415635585839274209, t[19], C)

	C, t[19] = madd2(m, 8907810790818485543, t[20], C)

	C, t[20] = madd3(m, 6940634706484457090, t[21], C, t[22])

	t[21], t[22] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[21], z[0], t[0])
	C, t[1] = madd2(x[21], z[1], t[1], C)
	C, t[2] = madd2(x[21], z[2], t[2], C)
	C, t[3] = madd2(x[21], z[3], t[3], C)
	C, t[4] = madd2(x[21], z[4], t[4], C)
	C, t[5] = madd2(x[21], z[5], t[5], C)
	C, t[6] = madd2(x[21], z[6], t[6], C)
	C, t[7] = madd2(x[21], z[7], t[7], C)
	C, t[8] = madd2(x[21], z[8], t[8], C)
	C, t[9] = madd2(x[21], z[9], t[9], C)
	C, t[10] = madd2(x[21], z[10], t[10], C)
	C, t[11] = madd2(x[21], z[11], t[11], C)
	C, t[12] = madd2(x[21], z[12], t[12], C)
	C, t[13] = madd2(x[21], z[13], t[13], C)
	C, t[14] = madd2(x[21], z[14], t[14], C)
	C, t[15] = madd2(x[21], z[15], t[15], C)
	C, t[16] = madd2(x[21], z[16], t[16], C)
	C, t[17] = madd2(x[21], z[17], t[17], C)
	C, t[18] = madd2(x[21], z[18], t[18], C)
	C, t[19] = madd2(x[21], z[19], t[19], C)
	C, t[20] = madd2(x[21], z[20], t[20], C)
	C, t[21] = madd2(x[21], z[21], t[21], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 5124176631818446469

	// -----------------------------------
	// Second loop
	C = madd0(m, 11739818372011875763, t[0])

	C, t[0] = madd2(m, 11824375430665141315, t[1], C)

	C, t[1] = madd2(m, 897513172090905252, t[2], C)

	C, t[2] = madd2(m, 531120025817225475, t[3], C)

	C, t[3] = madd2(m, 8707661892141009149, t[4], C)

	C, t[4] = madd2(m, 11786224458619984790, t[5], C)

	C, t[5] = madd2(m, 5659238587671396734, t[6], C)

	C, t[6] = madd2(m, 18016383301055546002, t[7], C)

	C, t[7] = madd2(m, 10775018464463249911, t[8], C)

	C, t[8] = madd2(m, 17064401429272323224, t[9], C)

	C, t[9] = madd2(m, 18250729195507589214, t[10], C)

	C, t[10] = madd2(m, 7155370817234530960, t[11], C)

	C, t[11] = madd2(m, 8659264606281177933, t[12], C)

	C, t[12] = madd2(m, 9872774209099417190, t[13], C)

	C, t[13] = madd2(m, 7629372345097312458, t[14], C)

	C, t[14] = madd2(m, 17007029134472191228, t[15], C)

	C, t[15] = madd2(m, 5991468884766936598, t[16], C)

	C, t[16] = madd2(m, 11341612225600356157, t[17], C)

	C, t[17] = madd2(m, 18433679792523411973, t[18], C)

	C, t[18] = madd2(m, 415635585839274209, t[19], C)

	C, t[19] = madd2(m, 8907810790818485543, t[20], C)

	C, t[20] = madd3(m, 6940634706484457090, t[21], C, t[22])

	t[21], t[22] = bits.Add64(D, C, 0)

	if t[22] != 0 {
		// we need to reduce, we have a result on 23 words
		var b uint64
		z[0], b = bits.Sub64(t[0], 11739818372011875763, 0)
		z[1], b = bits.Sub64(t[1], 11824375430665141315, b)
		z[2], b = bits.Sub64(t[2], 897513172090905252, b)
		z[3], b = bits.Sub64(t[3], 531120025817225475, b)
		z[4], b = bits.Sub64(t[4], 8707661892141009149, b)
		z[5], b = bits.Sub64(t[5], 11786224458619984790, b)
		z[6], b = bits.Sub64(t[6], 5659238587671396734, b)
		z[7], b = bits.Sub64(t[7], 18016383301055546002, b)
		z[8], b = bits.Sub64(t[8], 10775018464463249911, b)
		z[9], b = bits.Sub64(t[9], 17064401429272323224, b)
		z[10], b = bits.Sub64(t[10], 18250729195507589214, b)
		z[11], b = bits.Sub64(t[11], 7155370817234530960, b)
		z[12], b = bits.Sub64(t[12], 8659264606281177933, b)
		z[13], b = bits.Sub64(t[13], 9872774209099417190, b)
		z[14], b = bits.Sub64(t[14], 7629372345097312458, b)
		z[15], b = bits.Sub64(t[15], 17007029134472191228, b)
		z[16], b = bits.Sub64(t[16], 5991468884766936598, b)
		z[17], b = bits.Sub64(t[17], 11341612225600356157, b)
		z[18], b = bits.Sub64(t[18], 18433679792523411973, b)
		z[19], b = bits.Sub64(t[19], 415635585839274209, b)
		z[20], b = bits.Sub64(t[20], 8907810790818485543, b)
		z[21], _ = bits.Sub64(t[21], 6940634706484457090, b)
		return z
	}

	// copy t into z
	z[0] = t[0]
	z[1] = t[1]
	z[2] = t[2]
	z[3] = t[3]
	z[4] = t[4]
	z[5] = t[5]
	z[6] = t[6]
	z[7] = t[7]
	z[8] = t[8]
	z[9] = t[9]
	z[10] = t[10]
	z[11] = t[11]
	z[12] = t[12]
	z[13] = t[13]
	z[14] = t[14]
	z[15] = t[15]
	z[16] = t[16]
	z[17] = t[17]
	z[18] = t[18]
	z[19] = t[19]
	z[20] = t[20]
	z[21] = t[21]

	// if z > q --> z -= q
	// note: this is NOT constant time
	if !(z[21] < 6940634706484457090 || (z[21] == 6940634706484457090 && (z[20] < 8907810790818485543 || (z[20] == 8907810790818485543 && (z[19] < 415635585839274209 || (z[19] == 415635585839274209 && (z[18] < 18433679792523411973 || (z[18] == 18433679792523411973 && (z[17] < 11341612225600356157 || (z[17] == 11341612225600356157 && (z[16] < 5991468884766936598 || (z[16] == 5991468884766936598 && (z[15] < 17007029134472191228 || (z[15] == 17007029134472191228 && (z[14] < 7629372345097312458 || (z[14] == 7629372345097312458 && (z[13] < 9872774209099417190 || (z[13] == 9872774209099417190 && (z[12] < 8659264606281177933 || (z[12] == 8659264606281177933 && (z[11] < 7155370817234530960 || (z[11] == 7155370817234530960 && (z[10] < 18250729195507589214 || (z[10] == 18250729195507589214 && (z[9] < 17064401429272323224 || (z[9] == 17064401429272323224 && (z[8] < 10775018464463249911 || (z[8] == 10775018464463249911 && (z[7] < 18016383301055546002 || (z[7] == 18016383301055546002 && (z[6] < 5659238587671396734 || (z[6] == 5659238587671396734 && (z[5] < 11786224458619984790 || (z[5] == 11786224458619984790 && (z[4] < 8707661892141009149 || (z[4] == 8707661892141009149 && (z[3] < 531120025817225475 || (z[3] == 531120025817225475 && (z[2] < 897513172090905252 || (z[2] == 897513172090905252 && (z[1] < 11824375430665141315 || (z[1] == 11824375430665141315 && (z[0] < 11739818372011875763))))))))))))))))))))))))))))))))))))))))))) {
		var b uint64
		z[0], b = bits.Sub64(z[0], 11739818372011875763, 0)
		z[1], b = bits.Sub64(z[1], 11824375430665141315, b)
		z[2], b = bits.Sub64(z[2], 897513172090905252, b)
		z[3], b = bits.Sub64(z[3], 531120025817225475, b)
		z[4], b = bits.Sub64(z[4], 8707661892141009149, b)
		z[5], b = bits.Sub64(z[5], 11786224458619984790, b)
		z[6], b = bits.Sub64(z[6], 5659238587671396734, b)
		z[7], b = bits.Sub64(z[7], 18016383301055546002, b)
		z[8], b = bits.Sub64(z[8], 10775018464463249911, b)
		z[9], b = bits.Sub64(z[9], 17064401429272323224, b)
		z[10], b = bits.Sub64(z[10], 18250729195507589214, b)
		z[11], b = bits.Sub64(z[11], 7155370817234530960, b)
		z[12], b = bits.Sub64(z[12], 8659264606281177933, b)
		z[13], b = bits.Sub64(z[13], 9872774209099417190, b)
		z[14], b = bits.Sub64(z[14], 7629372345097312458, b)
		z[15], b = bits.Sub64(z[15], 17007029134472191228, b)
		z[16], b = bits.Sub64(z[16], 5991468884766936598, b)
		z[17], b = bits.Sub64(z[17], 11341612225600356157, b)
		z[18], b = bits.Sub64(z[18], 18433679792523411973, b)
		z[19], b = bits.Sub64(z[19], 415635585839274209, b)
		z[20], b = bits.Sub64(z[20], 8907810790818485543, b)
		z[21], _ = bits.Sub64(z[21], 6940634706484457090, b)
	}
	return z
}

func (z *Element22) Legendre() int {
	var l Element22
	// z^((p-1)/2)
	l.Exp(*z,
		15093281222860713689,
		5912187715332570657,
		9672128622900228434,
		9488932049763388545,
		4353830946070504574,
		5893112229309992395,
		2829619293835698367,
		18231563687382548809,
		5387509232231624955,
		8532200714636161612,
		9125364597753794607,
		12801057445472041288,
		4329632303140588966,
		4936387104549708595,
		3814686172548656229,
		8503514567236095614,
		12219106479238244107,
		14894178149654953886,
		18440211933116481794,
		9431189829774412912,
		4453905395409242771,
		3470317353242228545,
	)

	if l.IsZero() {
		return 0
	}

	// if l == 1
	if (l[21] == 4565474660740637435) && (l[20] == 631122492072580529) && (l[19] == 17615472902031003196) && (l[18] == 26128562372279284) && (l[17] == 14210263696218390917) && (l[16] == 6463806304175678418) && (l[15] == 2879429878474720775) && (l[14] == 3187999383514926698) && (l[13] == 17147939729220268851) && (l[12] == 1128214861147195749) && (l[11] == 4136002439240489694) && (l[10] == 392029756403924802) && (l[9] == 2764685288874456782) && (l[8] == 15343451218492603408) && (l[7] == 860721545308011227) && (l[6] == 7128266898366758146) && (l[5] == 13321039230179133651) && (l[4] == 1031420289427533317) && (l[3] == 17384504022075100665) && (l[2] == 16651717729527741110) && (l[1] == 13244737286088820600) && (l[0] == 13413851403395351706) {
		return 1
	}
	return -1
}

// Sqrt z = √x mod q
// if the square root doesn't exist (x is not a square mod q)
// Sqrt leaves z unchanged and returns nil
func (z *Element22) Sqrt(x *Element22) *Element22 {
	switch x.Legendre() {
	case -1:
		return nil
	case 0:
		return z.SetZero()
	case 1:
		break
	}
	// q ≡ 3 (mod 4)
	// using  z ≡ ± x^((p+1)/4) (mod q)
	return z.Exp(*x,
		16770012648285132653,
		2956093857666285328,
		14059436348304890025,
		4744466024881694272,
		11400287509890028095,
		12169928151509772005,
		10638181683772624991,
		18339153880546050212,
		2693754616115812477,
		13489472394172856614,
		4562682298876897303,
		6400528722736020644,
		11388188188425070291,
		11691565589129630105,
		1907343086274328114,
		13475129320472823615,
		6109553239619122053,
		7447089074827476943,
		9220105966558240897,
		13938966951741982264,
		11450324734559397193,
		1735158676621114272,
	)
}

// Square z = x * x mod q
func (z *Element22) Square(x *Element22) *Element22 {
	return z.Mul(x, x)
}

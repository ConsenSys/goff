// Code generated by goff DO NOT EDIT
package generated

import (
	"crypto/rand"
	"math/big"
	"math/bits"
	mrand "math/rand"
	"testing"
)

func TestELEMENT16CorrectnessAgainstBigInt(t *testing.T) {
	modulus, _ := new(big.Int).SetString("85844919813621053095025815941807369763552364113367833480763637809229193729002284346307575907579873937229820356451232042637570398840143715910255128854774873219641757441409520319757746396638540728433192091085074319561890423020260177445791099730928525574432282605340393530049568569258649654195975161106649514209", 10)
	cmpEandB := func(e *Element16, b *big.Int, name string) {
		var _e big.Int
		if e.FromMont().ToBigInt(&_e).Cmp(b) != 0 {
			t.Fatal(name, "failed")
		}
	}
	var modulusMinusOne, one big.Int
	one.SetUint64(1)

	modulusMinusOne.Sub(modulus, &one)

	var n int
	if testing.Short() {
		n = 10
	} else {
		n = 500
	}

	for i := 0; i < n; i++ {

		// sample 2 random big int
		b1, _ := rand.Int(rand.Reader, modulus)
		b2, _ := rand.Int(rand.Reader, modulus)
		rExp := mrand.Uint64()

		// adding edge cases
		// TODO need more edge cases
		switch i {
		case 0:
			rExp = 0
			b1.SetUint64(0)
		case 1:
			b2.SetUint64(0)
		case 2:
			b1.SetUint64(0)
			b2.SetUint64(0)
		case 3:
			rExp = 0
		case 4:
			rExp = 1
		case 5:
			rExp = ^uint64(0) // max uint
		case 6:
			rExp = 2
			b1.Set(&modulusMinusOne)
		case 7:
			b2.Set(&modulusMinusOne)
		case 8:
			b1.Set(&modulusMinusOne)
			b2.Set(&modulusMinusOne)
		}

		rbExp := new(big.Int).SetUint64(rExp)

		var bMul, bAdd, bSub, bDiv, bNeg, bLsh, bInv, bExp, bExp2, bSquare big.Int

		// e1 = mont(b1), e2 = mont(b2)
		var e1, e2, eMul, eAdd, eSub, eDiv, eNeg, eLsh, eInv, eExp, eExp2, eSquare, eMulAssign, eSubAssign, eAddAssign Element16
		e1.SetBigInt(b1)
		e2.SetBigInt(b2)

		// (e1*e2).FromMont() === b1*b2 mod q ... etc
		eSquare.Square(&e1)
		eMul.Mul(&e1, &e2)
		eMulAssign.Set(&e1)
		eMulAssign.MulAssign(&e2)
		eAdd.Add(&e1, &e2)
		eAddAssign.Set(&e1)
		eAddAssign.AddAssign(&e2)
		eSub.Sub(&e1, &e2)
		eSubAssign.Set(&e1)
		eSubAssign.SubAssign(&e2)
		eDiv.Div(&e1, &e2)
		eNeg.Neg(&e1)
		eInv.Inverse(&e1)
		eExp.Exp(e1, rExp)
		bits := b2.Bits()
		exponent := make([]uint64, len(bits))
		for k := 0; k < len(bits); k++ {
			exponent[k] = uint64(bits[k])
		}
		eExp2.Exp(e1, exponent...)
		eLsh.Double(&e1)

		// same operations with big int
		bAdd.Add(b1, b2).Mod(&bAdd, modulus)
		bMul.Mul(b1, b2).Mod(&bMul, modulus)
		bSquare.Mul(b1, b1).Mod(&bSquare, modulus)
		bSub.Sub(b1, b2).Mod(&bSub, modulus)
		bDiv.ModInverse(b2, modulus)
		bDiv.Mul(&bDiv, b1).
			Mod(&bDiv, modulus)
		bNeg.Neg(b1).Mod(&bNeg, modulus)

		bInv.ModInverse(b1, modulus)
		bExp.Exp(b1, rbExp, modulus)
		bExp2.Exp(b1, b2, modulus)
		bLsh.Lsh(b1, 1).Mod(&bLsh, modulus)

		cmpEandB(&eSquare, &bSquare, "Square")
		cmpEandB(&eMul, &bMul, "Mul")
		cmpEandB(&eMulAssign, &bMul, "MulAssign")
		cmpEandB(&eAdd, &bAdd, "Add")
		cmpEandB(&eAddAssign, &bAdd, "AddAssign")
		cmpEandB(&eSub, &bSub, "Sub")
		cmpEandB(&eSubAssign, &bSub, "SubAssign")
		cmpEandB(&eDiv, &bDiv, "Div")
		cmpEandB(&eNeg, &bNeg, "Neg")
		cmpEandB(&eInv, &bInv, "Inv")
		cmpEandB(&eExp, &bExp, "Exp")
		cmpEandB(&eExp2, &bExp2, "Exp multi words")
		cmpEandB(&eLsh, &bLsh, "Lsh")

		// legendre symbol
		if e1.Legendre() != big.Jacobi(b1, modulus) {
			t.Fatal("legendre symbol computation failed")
		}
		if e2.Legendre() != big.Jacobi(b2, modulus) {
			t.Fatal("legendre symbol computation failed")
		}

		// sqrt
	}
}

func TestELEMENT16IsRandom(t *testing.T) {
	for i := 0; i < 1000; i++ {
		var x, y Element16
		x.SetRandom()
		y.SetRandom()
		if x.Equal(&y) {
			t.Fatal("2 random numbers are unlikely to be equal")
		}
	}
}

// -------------------------------------------------------------------------------------------------
// benchmarks
// most benchmarks are rudimentary and should sample a large number of random inputs
// or be run multiple times to ensure it didn't measure the fastest path of the function
// TODO: clean up and push benchmarking branch

var benchResElement16 Element16

func BenchmarkInverseELEMENT16(b *testing.B) {
	var x Element16
	x.SetRandom()
	benchResElement16.SetRandom()
	b.ResetTimer()

	for i := 0; i < b.N; i++ {
		benchResElement16.Inverse(&x)
	}

}
func BenchmarkExpELEMENT16(b *testing.B) {
	var x Element16
	x.SetRandom()
	benchResElement16.SetRandom()
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		benchResElement16.Exp(x, mrand.Uint64())
	}
}

func BenchmarkDoubleELEMENT16(b *testing.B) {
	benchResElement16.SetRandom()
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		benchResElement16.Double(&benchResElement16)
	}
}

func BenchmarkAddELEMENT16(b *testing.B) {
	var x Element16
	x.SetRandom()
	benchResElement16.SetRandom()
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		benchResElement16.Add(&x, &benchResElement16)
	}
}

func BenchmarkSubELEMENT16(b *testing.B) {
	var x Element16
	x.SetRandom()
	benchResElement16.SetRandom()
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		benchResElement16.Sub(&x, &benchResElement16)
	}
}

func BenchmarkNegELEMENT16(b *testing.B) {
	benchResElement16.SetRandom()
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		benchResElement16.Neg(&benchResElement16)
	}
}

func BenchmarkDivELEMENT16(b *testing.B) {
	var x Element16
	x.SetRandom()
	benchResElement16.SetRandom()
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		benchResElement16.Div(&x, &benchResElement16)
	}
}

func BenchmarkFromMontELEMENT16(b *testing.B) {
	benchResElement16.SetRandom()
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		benchResElement16.FromMont()
	}
}

func BenchmarkToMontELEMENT16(b *testing.B) {
	benchResElement16.SetRandom()
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		benchResElement16.ToMont()
	}
}
func BenchmarkSquareELEMENT16(b *testing.B) {
	benchResElement16.SetRandom()
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		benchResElement16.Square(&benchResElement16)
	}
}

func BenchmarkMulAssignELEMENT16(b *testing.B) {
	x := Element16{
		8452067712471847352,
		1883068564734058565,
		8519413212565122908,
		888849372499526792,
		17233260186349718968,
		2674839780594575882,
		6331652046235113056,
		456656295101114164,
		4334751838819928478,
		16692699993954756105,
		9964487771654714340,
		7433462448299738628,
		797774406065236416,
		6816520182294048632,
		7673490596787198093,
		4650945872615123414,
	}
	benchResElement16.SetOne()
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		benchResElement16.MulAssign(&x)
	}
}

// Montgomery multiplication benchmarks
func (z *Element16) mulCIOS(x *Element16) *Element16 {

	var t [17]uint64
	var D uint64
	var m, C uint64
	// -----------------------------------
	// First loop

	C, t[0] = bits.Mul64(x[0], z[0])
	C, t[1] = madd1(x[0], z[1], C)
	C, t[2] = madd1(x[0], z[2], C)
	C, t[3] = madd1(x[0], z[3], C)
	C, t[4] = madd1(x[0], z[4], C)
	C, t[5] = madd1(x[0], z[5], C)
	C, t[6] = madd1(x[0], z[6], C)
	C, t[7] = madd1(x[0], z[7], C)
	C, t[8] = madd1(x[0], z[8], C)
	C, t[9] = madd1(x[0], z[9], C)
	C, t[10] = madd1(x[0], z[10], C)
	C, t[11] = madd1(x[0], z[11], C)
	C, t[12] = madd1(x[0], z[12], C)
	C, t[13] = madd1(x[0], z[13], C)
	C, t[14] = madd1(x[0], z[14], C)
	C, t[15] = madd1(x[0], z[15], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6320096088022170847

	// -----------------------------------
	// Second loop
	C = madd0(m, 12261662321546035425, t[0])

	C, t[0] = madd2(m, 13396937790620762833, t[1], C)

	C, t[1] = madd2(m, 8309663745306966876, t[2], C)

	C, t[2] = madd2(m, 7007646202199374189, t[3], C)

	C, t[3] = madd2(m, 10440250624070677608, t[4], C)

	C, t[4] = madd2(m, 16250487600803211366, t[5], C)

	C, t[5] = madd2(m, 2743934072509086227, t[6], C)

	C, t[6] = madd2(m, 7951817063319804812, t[7], C)

	C, t[7] = madd2(m, 11824513320187351409, t[8], C)

	C, t[8] = madd2(m, 14052882962215374979, t[9], C)

	C, t[9] = madd2(m, 5187029754367492800, t[10], C)

	C, t[10] = madd2(m, 8469403868525873005, t[11], C)

	C, t[11] = madd2(m, 3377892094264127808, t[12], C)

	C, t[12] = madd2(m, 12018175841581922000, t[13], C)

	C, t[13] = madd2(m, 7124523582219552620, t[14], C)

	C, t[14] = madd3(m, 8808840814487893967, t[15], C, t[16])

	t[15], t[16] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[1], z[0], t[0])
	C, t[1] = madd2(x[1], z[1], t[1], C)
	C, t[2] = madd2(x[1], z[2], t[2], C)
	C, t[3] = madd2(x[1], z[3], t[3], C)
	C, t[4] = madd2(x[1], z[4], t[4], C)
	C, t[5] = madd2(x[1], z[5], t[5], C)
	C, t[6] = madd2(x[1], z[6], t[6], C)
	C, t[7] = madd2(x[1], z[7], t[7], C)
	C, t[8] = madd2(x[1], z[8], t[8], C)
	C, t[9] = madd2(x[1], z[9], t[9], C)
	C, t[10] = madd2(x[1], z[10], t[10], C)
	C, t[11] = madd2(x[1], z[11], t[11], C)
	C, t[12] = madd2(x[1], z[12], t[12], C)
	C, t[13] = madd2(x[1], z[13], t[13], C)
	C, t[14] = madd2(x[1], z[14], t[14], C)
	C, t[15] = madd2(x[1], z[15], t[15], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6320096088022170847

	// -----------------------------------
	// Second loop
	C = madd0(m, 12261662321546035425, t[0])

	C, t[0] = madd2(m, 13396937790620762833, t[1], C)

	C, t[1] = madd2(m, 8309663745306966876, t[2], C)

	C, t[2] = madd2(m, 7007646202199374189, t[3], C)

	C, t[3] = madd2(m, 10440250624070677608, t[4], C)

	C, t[4] = madd2(m, 16250487600803211366, t[5], C)

	C, t[5] = madd2(m, 2743934072509086227, t[6], C)

	C, t[6] = madd2(m, 7951817063319804812, t[7], C)

	C, t[7] = madd2(m, 11824513320187351409, t[8], C)

	C, t[8] = madd2(m, 14052882962215374979, t[9], C)

	C, t[9] = madd2(m, 5187029754367492800, t[10], C)

	C, t[10] = madd2(m, 8469403868525873005, t[11], C)

	C, t[11] = madd2(m, 3377892094264127808, t[12], C)

	C, t[12] = madd2(m, 12018175841581922000, t[13], C)

	C, t[13] = madd2(m, 7124523582219552620, t[14], C)

	C, t[14] = madd3(m, 8808840814487893967, t[15], C, t[16])

	t[15], t[16] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[2], z[0], t[0])
	C, t[1] = madd2(x[2], z[1], t[1], C)
	C, t[2] = madd2(x[2], z[2], t[2], C)
	C, t[3] = madd2(x[2], z[3], t[3], C)
	C, t[4] = madd2(x[2], z[4], t[4], C)
	C, t[5] = madd2(x[2], z[5], t[5], C)
	C, t[6] = madd2(x[2], z[6], t[6], C)
	C, t[7] = madd2(x[2], z[7], t[7], C)
	C, t[8] = madd2(x[2], z[8], t[8], C)
	C, t[9] = madd2(x[2], z[9], t[9], C)
	C, t[10] = madd2(x[2], z[10], t[10], C)
	C, t[11] = madd2(x[2], z[11], t[11], C)
	C, t[12] = madd2(x[2], z[12], t[12], C)
	C, t[13] = madd2(x[2], z[13], t[13], C)
	C, t[14] = madd2(x[2], z[14], t[14], C)
	C, t[15] = madd2(x[2], z[15], t[15], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6320096088022170847

	// -----------------------------------
	// Second loop
	C = madd0(m, 12261662321546035425, t[0])

	C, t[0] = madd2(m, 13396937790620762833, t[1], C)

	C, t[1] = madd2(m, 8309663745306966876, t[2], C)

	C, t[2] = madd2(m, 7007646202199374189, t[3], C)

	C, t[3] = madd2(m, 10440250624070677608, t[4], C)

	C, t[4] = madd2(m, 16250487600803211366, t[5], C)

	C, t[5] = madd2(m, 2743934072509086227, t[6], C)

	C, t[6] = madd2(m, 7951817063319804812, t[7], C)

	C, t[7] = madd2(m, 11824513320187351409, t[8], C)

	C, t[8] = madd2(m, 14052882962215374979, t[9], C)

	C, t[9] = madd2(m, 5187029754367492800, t[10], C)

	C, t[10] = madd2(m, 8469403868525873005, t[11], C)

	C, t[11] = madd2(m, 3377892094264127808, t[12], C)

	C, t[12] = madd2(m, 12018175841581922000, t[13], C)

	C, t[13] = madd2(m, 7124523582219552620, t[14], C)

	C, t[14] = madd3(m, 8808840814487893967, t[15], C, t[16])

	t[15], t[16] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[3], z[0], t[0])
	C, t[1] = madd2(x[3], z[1], t[1], C)
	C, t[2] = madd2(x[3], z[2], t[2], C)
	C, t[3] = madd2(x[3], z[3], t[3], C)
	C, t[4] = madd2(x[3], z[4], t[4], C)
	C, t[5] = madd2(x[3], z[5], t[5], C)
	C, t[6] = madd2(x[3], z[6], t[6], C)
	C, t[7] = madd2(x[3], z[7], t[7], C)
	C, t[8] = madd2(x[3], z[8], t[8], C)
	C, t[9] = madd2(x[3], z[9], t[9], C)
	C, t[10] = madd2(x[3], z[10], t[10], C)
	C, t[11] = madd2(x[3], z[11], t[11], C)
	C, t[12] = madd2(x[3], z[12], t[12], C)
	C, t[13] = madd2(x[3], z[13], t[13], C)
	C, t[14] = madd2(x[3], z[14], t[14], C)
	C, t[15] = madd2(x[3], z[15], t[15], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6320096088022170847

	// -----------------------------------
	// Second loop
	C = madd0(m, 12261662321546035425, t[0])

	C, t[0] = madd2(m, 13396937790620762833, t[1], C)

	C, t[1] = madd2(m, 8309663745306966876, t[2], C)

	C, t[2] = madd2(m, 7007646202199374189, t[3], C)

	C, t[3] = madd2(m, 10440250624070677608, t[4], C)

	C, t[4] = madd2(m, 16250487600803211366, t[5], C)

	C, t[5] = madd2(m, 2743934072509086227, t[6], C)

	C, t[6] = madd2(m, 7951817063319804812, t[7], C)

	C, t[7] = madd2(m, 11824513320187351409, t[8], C)

	C, t[8] = madd2(m, 14052882962215374979, t[9], C)

	C, t[9] = madd2(m, 5187029754367492800, t[10], C)

	C, t[10] = madd2(m, 8469403868525873005, t[11], C)

	C, t[11] = madd2(m, 3377892094264127808, t[12], C)

	C, t[12] = madd2(m, 12018175841581922000, t[13], C)

	C, t[13] = madd2(m, 7124523582219552620, t[14], C)

	C, t[14] = madd3(m, 8808840814487893967, t[15], C, t[16])

	t[15], t[16] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[4], z[0], t[0])
	C, t[1] = madd2(x[4], z[1], t[1], C)
	C, t[2] = madd2(x[4], z[2], t[2], C)
	C, t[3] = madd2(x[4], z[3], t[3], C)
	C, t[4] = madd2(x[4], z[4], t[4], C)
	C, t[5] = madd2(x[4], z[5], t[5], C)
	C, t[6] = madd2(x[4], z[6], t[6], C)
	C, t[7] = madd2(x[4], z[7], t[7], C)
	C, t[8] = madd2(x[4], z[8], t[8], C)
	C, t[9] = madd2(x[4], z[9], t[9], C)
	C, t[10] = madd2(x[4], z[10], t[10], C)
	C, t[11] = madd2(x[4], z[11], t[11], C)
	C, t[12] = madd2(x[4], z[12], t[12], C)
	C, t[13] = madd2(x[4], z[13], t[13], C)
	C, t[14] = madd2(x[4], z[14], t[14], C)
	C, t[15] = madd2(x[4], z[15], t[15], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6320096088022170847

	// -----------------------------------
	// Second loop
	C = madd0(m, 12261662321546035425, t[0])

	C, t[0] = madd2(m, 13396937790620762833, t[1], C)

	C, t[1] = madd2(m, 8309663745306966876, t[2], C)

	C, t[2] = madd2(m, 7007646202199374189, t[3], C)

	C, t[3] = madd2(m, 10440250624070677608, t[4], C)

	C, t[4] = madd2(m, 16250487600803211366, t[5], C)

	C, t[5] = madd2(m, 2743934072509086227, t[6], C)

	C, t[6] = madd2(m, 7951817063319804812, t[7], C)

	C, t[7] = madd2(m, 11824513320187351409, t[8], C)

	C, t[8] = madd2(m, 14052882962215374979, t[9], C)

	C, t[9] = madd2(m, 5187029754367492800, t[10], C)

	C, t[10] = madd2(m, 8469403868525873005, t[11], C)

	C, t[11] = madd2(m, 3377892094264127808, t[12], C)

	C, t[12] = madd2(m, 12018175841581922000, t[13], C)

	C, t[13] = madd2(m, 7124523582219552620, t[14], C)

	C, t[14] = madd3(m, 8808840814487893967, t[15], C, t[16])

	t[15], t[16] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[5], z[0], t[0])
	C, t[1] = madd2(x[5], z[1], t[1], C)
	C, t[2] = madd2(x[5], z[2], t[2], C)
	C, t[3] = madd2(x[5], z[3], t[3], C)
	C, t[4] = madd2(x[5], z[4], t[4], C)
	C, t[5] = madd2(x[5], z[5], t[5], C)
	C, t[6] = madd2(x[5], z[6], t[6], C)
	C, t[7] = madd2(x[5], z[7], t[7], C)
	C, t[8] = madd2(x[5], z[8], t[8], C)
	C, t[9] = madd2(x[5], z[9], t[9], C)
	C, t[10] = madd2(x[5], z[10], t[10], C)
	C, t[11] = madd2(x[5], z[11], t[11], C)
	C, t[12] = madd2(x[5], z[12], t[12], C)
	C, t[13] = madd2(x[5], z[13], t[13], C)
	C, t[14] = madd2(x[5], z[14], t[14], C)
	C, t[15] = madd2(x[5], z[15], t[15], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6320096088022170847

	// -----------------------------------
	// Second loop
	C = madd0(m, 12261662321546035425, t[0])

	C, t[0] = madd2(m, 13396937790620762833, t[1], C)

	C, t[1] = madd2(m, 8309663745306966876, t[2], C)

	C, t[2] = madd2(m, 7007646202199374189, t[3], C)

	C, t[3] = madd2(m, 10440250624070677608, t[4], C)

	C, t[4] = madd2(m, 16250487600803211366, t[5], C)

	C, t[5] = madd2(m, 2743934072509086227, t[6], C)

	C, t[6] = madd2(m, 7951817063319804812, t[7], C)

	C, t[7] = madd2(m, 11824513320187351409, t[8], C)

	C, t[8] = madd2(m, 14052882962215374979, t[9], C)

	C, t[9] = madd2(m, 5187029754367492800, t[10], C)

	C, t[10] = madd2(m, 8469403868525873005, t[11], C)

	C, t[11] = madd2(m, 3377892094264127808, t[12], C)

	C, t[12] = madd2(m, 12018175841581922000, t[13], C)

	C, t[13] = madd2(m, 7124523582219552620, t[14], C)

	C, t[14] = madd3(m, 8808840814487893967, t[15], C, t[16])

	t[15], t[16] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[6], z[0], t[0])
	C, t[1] = madd2(x[6], z[1], t[1], C)
	C, t[2] = madd2(x[6], z[2], t[2], C)
	C, t[3] = madd2(x[6], z[3], t[3], C)
	C, t[4] = madd2(x[6], z[4], t[4], C)
	C, t[5] = madd2(x[6], z[5], t[5], C)
	C, t[6] = madd2(x[6], z[6], t[6], C)
	C, t[7] = madd2(x[6], z[7], t[7], C)
	C, t[8] = madd2(x[6], z[8], t[8], C)
	C, t[9] = madd2(x[6], z[9], t[9], C)
	C, t[10] = madd2(x[6], z[10], t[10], C)
	C, t[11] = madd2(x[6], z[11], t[11], C)
	C, t[12] = madd2(x[6], z[12], t[12], C)
	C, t[13] = madd2(x[6], z[13], t[13], C)
	C, t[14] = madd2(x[6], z[14], t[14], C)
	C, t[15] = madd2(x[6], z[15], t[15], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6320096088022170847

	// -----------------------------------
	// Second loop
	C = madd0(m, 12261662321546035425, t[0])

	C, t[0] = madd2(m, 13396937790620762833, t[1], C)

	C, t[1] = madd2(m, 8309663745306966876, t[2], C)

	C, t[2] = madd2(m, 7007646202199374189, t[3], C)

	C, t[3] = madd2(m, 10440250624070677608, t[4], C)

	C, t[4] = madd2(m, 16250487600803211366, t[5], C)

	C, t[5] = madd2(m, 2743934072509086227, t[6], C)

	C, t[6] = madd2(m, 7951817063319804812, t[7], C)

	C, t[7] = madd2(m, 11824513320187351409, t[8], C)

	C, t[8] = madd2(m, 14052882962215374979, t[9], C)

	C, t[9] = madd2(m, 5187029754367492800, t[10], C)

	C, t[10] = madd2(m, 8469403868525873005, t[11], C)

	C, t[11] = madd2(m, 3377892094264127808, t[12], C)

	C, t[12] = madd2(m, 12018175841581922000, t[13], C)

	C, t[13] = madd2(m, 7124523582219552620, t[14], C)

	C, t[14] = madd3(m, 8808840814487893967, t[15], C, t[16])

	t[15], t[16] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[7], z[0], t[0])
	C, t[1] = madd2(x[7], z[1], t[1], C)
	C, t[2] = madd2(x[7], z[2], t[2], C)
	C, t[3] = madd2(x[7], z[3], t[3], C)
	C, t[4] = madd2(x[7], z[4], t[4], C)
	C, t[5] = madd2(x[7], z[5], t[5], C)
	C, t[6] = madd2(x[7], z[6], t[6], C)
	C, t[7] = madd2(x[7], z[7], t[7], C)
	C, t[8] = madd2(x[7], z[8], t[8], C)
	C, t[9] = madd2(x[7], z[9], t[9], C)
	C, t[10] = madd2(x[7], z[10], t[10], C)
	C, t[11] = madd2(x[7], z[11], t[11], C)
	C, t[12] = madd2(x[7], z[12], t[12], C)
	C, t[13] = madd2(x[7], z[13], t[13], C)
	C, t[14] = madd2(x[7], z[14], t[14], C)
	C, t[15] = madd2(x[7], z[15], t[15], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6320096088022170847

	// -----------------------------------
	// Second loop
	C = madd0(m, 12261662321546035425, t[0])

	C, t[0] = madd2(m, 13396937790620762833, t[1], C)

	C, t[1] = madd2(m, 8309663745306966876, t[2], C)

	C, t[2] = madd2(m, 7007646202199374189, t[3], C)

	C, t[3] = madd2(m, 10440250624070677608, t[4], C)

	C, t[4] = madd2(m, 16250487600803211366, t[5], C)

	C, t[5] = madd2(m, 2743934072509086227, t[6], C)

	C, t[6] = madd2(m, 7951817063319804812, t[7], C)

	C, t[7] = madd2(m, 11824513320187351409, t[8], C)

	C, t[8] = madd2(m, 14052882962215374979, t[9], C)

	C, t[9] = madd2(m, 5187029754367492800, t[10], C)

	C, t[10] = madd2(m, 8469403868525873005, t[11], C)

	C, t[11] = madd2(m, 3377892094264127808, t[12], C)

	C, t[12] = madd2(m, 12018175841581922000, t[13], C)

	C, t[13] = madd2(m, 7124523582219552620, t[14], C)

	C, t[14] = madd3(m, 8808840814487893967, t[15], C, t[16])

	t[15], t[16] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[8], z[0], t[0])
	C, t[1] = madd2(x[8], z[1], t[1], C)
	C, t[2] = madd2(x[8], z[2], t[2], C)
	C, t[3] = madd2(x[8], z[3], t[3], C)
	C, t[4] = madd2(x[8], z[4], t[4], C)
	C, t[5] = madd2(x[8], z[5], t[5], C)
	C, t[6] = madd2(x[8], z[6], t[6], C)
	C, t[7] = madd2(x[8], z[7], t[7], C)
	C, t[8] = madd2(x[8], z[8], t[8], C)
	C, t[9] = madd2(x[8], z[9], t[9], C)
	C, t[10] = madd2(x[8], z[10], t[10], C)
	C, t[11] = madd2(x[8], z[11], t[11], C)
	C, t[12] = madd2(x[8], z[12], t[12], C)
	C, t[13] = madd2(x[8], z[13], t[13], C)
	C, t[14] = madd2(x[8], z[14], t[14], C)
	C, t[15] = madd2(x[8], z[15], t[15], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6320096088022170847

	// -----------------------------------
	// Second loop
	C = madd0(m, 12261662321546035425, t[0])

	C, t[0] = madd2(m, 13396937790620762833, t[1], C)

	C, t[1] = madd2(m, 8309663745306966876, t[2], C)

	C, t[2] = madd2(m, 7007646202199374189, t[3], C)

	C, t[3] = madd2(m, 10440250624070677608, t[4], C)

	C, t[4] = madd2(m, 16250487600803211366, t[5], C)

	C, t[5] = madd2(m, 2743934072509086227, t[6], C)

	C, t[6] = madd2(m, 7951817063319804812, t[7], C)

	C, t[7] = madd2(m, 11824513320187351409, t[8], C)

	C, t[8] = madd2(m, 14052882962215374979, t[9], C)

	C, t[9] = madd2(m, 5187029754367492800, t[10], C)

	C, t[10] = madd2(m, 8469403868525873005, t[11], C)

	C, t[11] = madd2(m, 3377892094264127808, t[12], C)

	C, t[12] = madd2(m, 12018175841581922000, t[13], C)

	C, t[13] = madd2(m, 7124523582219552620, t[14], C)

	C, t[14] = madd3(m, 8808840814487893967, t[15], C, t[16])

	t[15], t[16] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[9], z[0], t[0])
	C, t[1] = madd2(x[9], z[1], t[1], C)
	C, t[2] = madd2(x[9], z[2], t[2], C)
	C, t[3] = madd2(x[9], z[3], t[3], C)
	C, t[4] = madd2(x[9], z[4], t[4], C)
	C, t[5] = madd2(x[9], z[5], t[5], C)
	C, t[6] = madd2(x[9], z[6], t[6], C)
	C, t[7] = madd2(x[9], z[7], t[7], C)
	C, t[8] = madd2(x[9], z[8], t[8], C)
	C, t[9] = madd2(x[9], z[9], t[9], C)
	C, t[10] = madd2(x[9], z[10], t[10], C)
	C, t[11] = madd2(x[9], z[11], t[11], C)
	C, t[12] = madd2(x[9], z[12], t[12], C)
	C, t[13] = madd2(x[9], z[13], t[13], C)
	C, t[14] = madd2(x[9], z[14], t[14], C)
	C, t[15] = madd2(x[9], z[15], t[15], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6320096088022170847

	// -----------------------------------
	// Second loop
	C = madd0(m, 12261662321546035425, t[0])

	C, t[0] = madd2(m, 13396937790620762833, t[1], C)

	C, t[1] = madd2(m, 8309663745306966876, t[2], C)

	C, t[2] = madd2(m, 7007646202199374189, t[3], C)

	C, t[3] = madd2(m, 10440250624070677608, t[4], C)

	C, t[4] = madd2(m, 16250487600803211366, t[5], C)

	C, t[5] = madd2(m, 2743934072509086227, t[6], C)

	C, t[6] = madd2(m, 7951817063319804812, t[7], C)

	C, t[7] = madd2(m, 11824513320187351409, t[8], C)

	C, t[8] = madd2(m, 14052882962215374979, t[9], C)

	C, t[9] = madd2(m, 5187029754367492800, t[10], C)

	C, t[10] = madd2(m, 8469403868525873005, t[11], C)

	C, t[11] = madd2(m, 3377892094264127808, t[12], C)

	C, t[12] = madd2(m, 12018175841581922000, t[13], C)

	C, t[13] = madd2(m, 7124523582219552620, t[14], C)

	C, t[14] = madd3(m, 8808840814487893967, t[15], C, t[16])

	t[15], t[16] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[10], z[0], t[0])
	C, t[1] = madd2(x[10], z[1], t[1], C)
	C, t[2] = madd2(x[10], z[2], t[2], C)
	C, t[3] = madd2(x[10], z[3], t[3], C)
	C, t[4] = madd2(x[10], z[4], t[4], C)
	C, t[5] = madd2(x[10], z[5], t[5], C)
	C, t[6] = madd2(x[10], z[6], t[6], C)
	C, t[7] = madd2(x[10], z[7], t[7], C)
	C, t[8] = madd2(x[10], z[8], t[8], C)
	C, t[9] = madd2(x[10], z[9], t[9], C)
	C, t[10] = madd2(x[10], z[10], t[10], C)
	C, t[11] = madd2(x[10], z[11], t[11], C)
	C, t[12] = madd2(x[10], z[12], t[12], C)
	C, t[13] = madd2(x[10], z[13], t[13], C)
	C, t[14] = madd2(x[10], z[14], t[14], C)
	C, t[15] = madd2(x[10], z[15], t[15], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6320096088022170847

	// -----------------------------------
	// Second loop
	C = madd0(m, 12261662321546035425, t[0])

	C, t[0] = madd2(m, 13396937790620762833, t[1], C)

	C, t[1] = madd2(m, 8309663745306966876, t[2], C)

	C, t[2] = madd2(m, 7007646202199374189, t[3], C)

	C, t[3] = madd2(m, 10440250624070677608, t[4], C)

	C, t[4] = madd2(m, 16250487600803211366, t[5], C)

	C, t[5] = madd2(m, 2743934072509086227, t[6], C)

	C, t[6] = madd2(m, 7951817063319804812, t[7], C)

	C, t[7] = madd2(m, 11824513320187351409, t[8], C)

	C, t[8] = madd2(m, 14052882962215374979, t[9], C)

	C, t[9] = madd2(m, 5187029754367492800, t[10], C)

	C, t[10] = madd2(m, 8469403868525873005, t[11], C)

	C, t[11] = madd2(m, 3377892094264127808, t[12], C)

	C, t[12] = madd2(m, 12018175841581922000, t[13], C)

	C, t[13] = madd2(m, 7124523582219552620, t[14], C)

	C, t[14] = madd3(m, 8808840814487893967, t[15], C, t[16])

	t[15], t[16] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[11], z[0], t[0])
	C, t[1] = madd2(x[11], z[1], t[1], C)
	C, t[2] = madd2(x[11], z[2], t[2], C)
	C, t[3] = madd2(x[11], z[3], t[3], C)
	C, t[4] = madd2(x[11], z[4], t[4], C)
	C, t[5] = madd2(x[11], z[5], t[5], C)
	C, t[6] = madd2(x[11], z[6], t[6], C)
	C, t[7] = madd2(x[11], z[7], t[7], C)
	C, t[8] = madd2(x[11], z[8], t[8], C)
	C, t[9] = madd2(x[11], z[9], t[9], C)
	C, t[10] = madd2(x[11], z[10], t[10], C)
	C, t[11] = madd2(x[11], z[11], t[11], C)
	C, t[12] = madd2(x[11], z[12], t[12], C)
	C, t[13] = madd2(x[11], z[13], t[13], C)
	C, t[14] = madd2(x[11], z[14], t[14], C)
	C, t[15] = madd2(x[11], z[15], t[15], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6320096088022170847

	// -----------------------------------
	// Second loop
	C = madd0(m, 12261662321546035425, t[0])

	C, t[0] = madd2(m, 13396937790620762833, t[1], C)

	C, t[1] = madd2(m, 8309663745306966876, t[2], C)

	C, t[2] = madd2(m, 7007646202199374189, t[3], C)

	C, t[3] = madd2(m, 10440250624070677608, t[4], C)

	C, t[4] = madd2(m, 16250487600803211366, t[5], C)

	C, t[5] = madd2(m, 2743934072509086227, t[6], C)

	C, t[6] = madd2(m, 7951817063319804812, t[7], C)

	C, t[7] = madd2(m, 11824513320187351409, t[8], C)

	C, t[8] = madd2(m, 14052882962215374979, t[9], C)

	C, t[9] = madd2(m, 5187029754367492800, t[10], C)

	C, t[10] = madd2(m, 8469403868525873005, t[11], C)

	C, t[11] = madd2(m, 3377892094264127808, t[12], C)

	C, t[12] = madd2(m, 12018175841581922000, t[13], C)

	C, t[13] = madd2(m, 7124523582219552620, t[14], C)

	C, t[14] = madd3(m, 8808840814487893967, t[15], C, t[16])

	t[15], t[16] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[12], z[0], t[0])
	C, t[1] = madd2(x[12], z[1], t[1], C)
	C, t[2] = madd2(x[12], z[2], t[2], C)
	C, t[3] = madd2(x[12], z[3], t[3], C)
	C, t[4] = madd2(x[12], z[4], t[4], C)
	C, t[5] = madd2(x[12], z[5], t[5], C)
	C, t[6] = madd2(x[12], z[6], t[6], C)
	C, t[7] = madd2(x[12], z[7], t[7], C)
	C, t[8] = madd2(x[12], z[8], t[8], C)
	C, t[9] = madd2(x[12], z[9], t[9], C)
	C, t[10] = madd2(x[12], z[10], t[10], C)
	C, t[11] = madd2(x[12], z[11], t[11], C)
	C, t[12] = madd2(x[12], z[12], t[12], C)
	C, t[13] = madd2(x[12], z[13], t[13], C)
	C, t[14] = madd2(x[12], z[14], t[14], C)
	C, t[15] = madd2(x[12], z[15], t[15], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6320096088022170847

	// -----------------------------------
	// Second loop
	C = madd0(m, 12261662321546035425, t[0])

	C, t[0] = madd2(m, 13396937790620762833, t[1], C)

	C, t[1] = madd2(m, 8309663745306966876, t[2], C)

	C, t[2] = madd2(m, 7007646202199374189, t[3], C)

	C, t[3] = madd2(m, 10440250624070677608, t[4], C)

	C, t[4] = madd2(m, 16250487600803211366, t[5], C)

	C, t[5] = madd2(m, 2743934072509086227, t[6], C)

	C, t[6] = madd2(m, 7951817063319804812, t[7], C)

	C, t[7] = madd2(m, 11824513320187351409, t[8], C)

	C, t[8] = madd2(m, 14052882962215374979, t[9], C)

	C, t[9] = madd2(m, 5187029754367492800, t[10], C)

	C, t[10] = madd2(m, 8469403868525873005, t[11], C)

	C, t[11] = madd2(m, 3377892094264127808, t[12], C)

	C, t[12] = madd2(m, 12018175841581922000, t[13], C)

	C, t[13] = madd2(m, 7124523582219552620, t[14], C)

	C, t[14] = madd3(m, 8808840814487893967, t[15], C, t[16])

	t[15], t[16] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[13], z[0], t[0])
	C, t[1] = madd2(x[13], z[1], t[1], C)
	C, t[2] = madd2(x[13], z[2], t[2], C)
	C, t[3] = madd2(x[13], z[3], t[3], C)
	C, t[4] = madd2(x[13], z[4], t[4], C)
	C, t[5] = madd2(x[13], z[5], t[5], C)
	C, t[6] = madd2(x[13], z[6], t[6], C)
	C, t[7] = madd2(x[13], z[7], t[7], C)
	C, t[8] = madd2(x[13], z[8], t[8], C)
	C, t[9] = madd2(x[13], z[9], t[9], C)
	C, t[10] = madd2(x[13], z[10], t[10], C)
	C, t[11] = madd2(x[13], z[11], t[11], C)
	C, t[12] = madd2(x[13], z[12], t[12], C)
	C, t[13] = madd2(x[13], z[13], t[13], C)
	C, t[14] = madd2(x[13], z[14], t[14], C)
	C, t[15] = madd2(x[13], z[15], t[15], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6320096088022170847

	// -----------------------------------
	// Second loop
	C = madd0(m, 12261662321546035425, t[0])

	C, t[0] = madd2(m, 13396937790620762833, t[1], C)

	C, t[1] = madd2(m, 8309663745306966876, t[2], C)

	C, t[2] = madd2(m, 7007646202199374189, t[3], C)

	C, t[3] = madd2(m, 10440250624070677608, t[4], C)

	C, t[4] = madd2(m, 16250487600803211366, t[5], C)

	C, t[5] = madd2(m, 2743934072509086227, t[6], C)

	C, t[6] = madd2(m, 7951817063319804812, t[7], C)

	C, t[7] = madd2(m, 11824513320187351409, t[8], C)

	C, t[8] = madd2(m, 14052882962215374979, t[9], C)

	C, t[9] = madd2(m, 5187029754367492800, t[10], C)

	C, t[10] = madd2(m, 8469403868525873005, t[11], C)

	C, t[11] = madd2(m, 3377892094264127808, t[12], C)

	C, t[12] = madd2(m, 12018175841581922000, t[13], C)

	C, t[13] = madd2(m, 7124523582219552620, t[14], C)

	C, t[14] = madd3(m, 8808840814487893967, t[15], C, t[16])

	t[15], t[16] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[14], z[0], t[0])
	C, t[1] = madd2(x[14], z[1], t[1], C)
	C, t[2] = madd2(x[14], z[2], t[2], C)
	C, t[3] = madd2(x[14], z[3], t[3], C)
	C, t[4] = madd2(x[14], z[4], t[4], C)
	C, t[5] = madd2(x[14], z[5], t[5], C)
	C, t[6] = madd2(x[14], z[6], t[6], C)
	C, t[7] = madd2(x[14], z[7], t[7], C)
	C, t[8] = madd2(x[14], z[8], t[8], C)
	C, t[9] = madd2(x[14], z[9], t[9], C)
	C, t[10] = madd2(x[14], z[10], t[10], C)
	C, t[11] = madd2(x[14], z[11], t[11], C)
	C, t[12] = madd2(x[14], z[12], t[12], C)
	C, t[13] = madd2(x[14], z[13], t[13], C)
	C, t[14] = madd2(x[14], z[14], t[14], C)
	C, t[15] = madd2(x[14], z[15], t[15], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6320096088022170847

	// -----------------------------------
	// Second loop
	C = madd0(m, 12261662321546035425, t[0])

	C, t[0] = madd2(m, 13396937790620762833, t[1], C)

	C, t[1] = madd2(m, 8309663745306966876, t[2], C)

	C, t[2] = madd2(m, 7007646202199374189, t[3], C)

	C, t[3] = madd2(m, 10440250624070677608, t[4], C)

	C, t[4] = madd2(m, 16250487600803211366, t[5], C)

	C, t[5] = madd2(m, 2743934072509086227, t[6], C)

	C, t[6] = madd2(m, 7951817063319804812, t[7], C)

	C, t[7] = madd2(m, 11824513320187351409, t[8], C)

	C, t[8] = madd2(m, 14052882962215374979, t[9], C)

	C, t[9] = madd2(m, 5187029754367492800, t[10], C)

	C, t[10] = madd2(m, 8469403868525873005, t[11], C)

	C, t[11] = madd2(m, 3377892094264127808, t[12], C)

	C, t[12] = madd2(m, 12018175841581922000, t[13], C)

	C, t[13] = madd2(m, 7124523582219552620, t[14], C)

	C, t[14] = madd3(m, 8808840814487893967, t[15], C, t[16])

	t[15], t[16] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[15], z[0], t[0])
	C, t[1] = madd2(x[15], z[1], t[1], C)
	C, t[2] = madd2(x[15], z[2], t[2], C)
	C, t[3] = madd2(x[15], z[3], t[3], C)
	C, t[4] = madd2(x[15], z[4], t[4], C)
	C, t[5] = madd2(x[15], z[5], t[5], C)
	C, t[6] = madd2(x[15], z[6], t[6], C)
	C, t[7] = madd2(x[15], z[7], t[7], C)
	C, t[8] = madd2(x[15], z[8], t[8], C)
	C, t[9] = madd2(x[15], z[9], t[9], C)
	C, t[10] = madd2(x[15], z[10], t[10], C)
	C, t[11] = madd2(x[15], z[11], t[11], C)
	C, t[12] = madd2(x[15], z[12], t[12], C)
	C, t[13] = madd2(x[15], z[13], t[13], C)
	C, t[14] = madd2(x[15], z[14], t[14], C)
	C, t[15] = madd2(x[15], z[15], t[15], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 6320096088022170847

	// -----------------------------------
	// Second loop
	C = madd0(m, 12261662321546035425, t[0])

	C, t[0] = madd2(m, 13396937790620762833, t[1], C)

	C, t[1] = madd2(m, 8309663745306966876, t[2], C)

	C, t[2] = madd2(m, 7007646202199374189, t[3], C)

	C, t[3] = madd2(m, 10440250624070677608, t[4], C)

	C, t[4] = madd2(m, 16250487600803211366, t[5], C)

	C, t[5] = madd2(m, 2743934072509086227, t[6], C)

	C, t[6] = madd2(m, 7951817063319804812, t[7], C)

	C, t[7] = madd2(m, 11824513320187351409, t[8], C)

	C, t[8] = madd2(m, 14052882962215374979, t[9], C)

	C, t[9] = madd2(m, 5187029754367492800, t[10], C)

	C, t[10] = madd2(m, 8469403868525873005, t[11], C)

	C, t[11] = madd2(m, 3377892094264127808, t[12], C)

	C, t[12] = madd2(m, 12018175841581922000, t[13], C)

	C, t[13] = madd2(m, 7124523582219552620, t[14], C)

	C, t[14] = madd3(m, 8808840814487893967, t[15], C, t[16])

	t[15], t[16] = bits.Add64(D, C, 0)

	if t[16] != 0 {
		// we need to reduce, we have a result on 17 words
		var b uint64
		z[0], b = bits.Sub64(t[0], 12261662321546035425, 0)
		z[1], b = bits.Sub64(t[1], 13396937790620762833, b)
		z[2], b = bits.Sub64(t[2], 8309663745306966876, b)
		z[3], b = bits.Sub64(t[3], 7007646202199374189, b)
		z[4], b = bits.Sub64(t[4], 10440250624070677608, b)
		z[5], b = bits.Sub64(t[5], 16250487600803211366, b)
		z[6], b = bits.Sub64(t[6], 2743934072509086227, b)
		z[7], b = bits.Sub64(t[7], 7951817063319804812, b)
		z[8], b = bits.Sub64(t[8], 11824513320187351409, b)
		z[9], b = bits.Sub64(t[9], 14052882962215374979, b)
		z[10], b = bits.Sub64(t[10], 5187029754367492800, b)
		z[11], b = bits.Sub64(t[11], 8469403868525873005, b)
		z[12], b = bits.Sub64(t[12], 3377892094264127808, b)
		z[13], b = bits.Sub64(t[13], 12018175841581922000, b)
		z[14], b = bits.Sub64(t[14], 7124523582219552620, b)
		z[15], _ = bits.Sub64(t[15], 8808840814487893967, b)
		return z
	}

	// copy t into z
	z[0] = t[0]
	z[1] = t[1]
	z[2] = t[2]
	z[3] = t[3]
	z[4] = t[4]
	z[5] = t[5]
	z[6] = t[6]
	z[7] = t[7]
	z[8] = t[8]
	z[9] = t[9]
	z[10] = t[10]
	z[11] = t[11]
	z[12] = t[12]
	z[13] = t[13]
	z[14] = t[14]
	z[15] = t[15]

	// if z > q --> z -= q
	// note: this is NOT constant time
	if !(z[15] < 8808840814487893967 || (z[15] == 8808840814487893967 && (z[14] < 7124523582219552620 || (z[14] == 7124523582219552620 && (z[13] < 12018175841581922000 || (z[13] == 12018175841581922000 && (z[12] < 3377892094264127808 || (z[12] == 3377892094264127808 && (z[11] < 8469403868525873005 || (z[11] == 8469403868525873005 && (z[10] < 5187029754367492800 || (z[10] == 5187029754367492800 && (z[9] < 14052882962215374979 || (z[9] == 14052882962215374979 && (z[8] < 11824513320187351409 || (z[8] == 11824513320187351409 && (z[7] < 7951817063319804812 || (z[7] == 7951817063319804812 && (z[6] < 2743934072509086227 || (z[6] == 2743934072509086227 && (z[5] < 16250487600803211366 || (z[5] == 16250487600803211366 && (z[4] < 10440250624070677608 || (z[4] == 10440250624070677608 && (z[3] < 7007646202199374189 || (z[3] == 7007646202199374189 && (z[2] < 8309663745306966876 || (z[2] == 8309663745306966876 && (z[1] < 13396937790620762833 || (z[1] == 13396937790620762833 && (z[0] < 12261662321546035425))))))))))))))))))))))))))))))) {
		var b uint64
		z[0], b = bits.Sub64(z[0], 12261662321546035425, 0)
		z[1], b = bits.Sub64(z[1], 13396937790620762833, b)
		z[2], b = bits.Sub64(z[2], 8309663745306966876, b)
		z[3], b = bits.Sub64(z[3], 7007646202199374189, b)
		z[4], b = bits.Sub64(z[4], 10440250624070677608, b)
		z[5], b = bits.Sub64(z[5], 16250487600803211366, b)
		z[6], b = bits.Sub64(z[6], 2743934072509086227, b)
		z[7], b = bits.Sub64(z[7], 7951817063319804812, b)
		z[8], b = bits.Sub64(z[8], 11824513320187351409, b)
		z[9], b = bits.Sub64(z[9], 14052882962215374979, b)
		z[10], b = bits.Sub64(z[10], 5187029754367492800, b)
		z[11], b = bits.Sub64(z[11], 8469403868525873005, b)
		z[12], b = bits.Sub64(z[12], 3377892094264127808, b)
		z[13], b = bits.Sub64(z[13], 12018175841581922000, b)
		z[14], b = bits.Sub64(z[14], 7124523582219552620, b)
		z[15], _ = bits.Sub64(z[15], 8808840814487893967, b)
	}
	return z
}

func (z *Element16) mulNoCarry(x *Element16) *Element16 {

	var t [16]uint64
	var c [3]uint64
	{
		// round 0
		v := z[0]
		c[1], c[0] = bits.Mul64(v, x[0])
		m := c[0] * 6320096088022170847
		c[2] = madd0(m, 12261662321546035425, c[0])
		c[1], c[0] = madd1(v, x[1], c[1])
		c[2], t[0] = madd2(m, 13396937790620762833, c[2], c[0])
		c[1], c[0] = madd1(v, x[2], c[1])
		c[2], t[1] = madd2(m, 8309663745306966876, c[2], c[0])
		c[1], c[0] = madd1(v, x[3], c[1])
		c[2], t[2] = madd2(m, 7007646202199374189, c[2], c[0])
		c[1], c[0] = madd1(v, x[4], c[1])
		c[2], t[3] = madd2(m, 10440250624070677608, c[2], c[0])
		c[1], c[0] = madd1(v, x[5], c[1])
		c[2], t[4] = madd2(m, 16250487600803211366, c[2], c[0])
		c[1], c[0] = madd1(v, x[6], c[1])
		c[2], t[5] = madd2(m, 2743934072509086227, c[2], c[0])
		c[1], c[0] = madd1(v, x[7], c[1])
		c[2], t[6] = madd2(m, 7951817063319804812, c[2], c[0])
		c[1], c[0] = madd1(v, x[8], c[1])
		c[2], t[7] = madd2(m, 11824513320187351409, c[2], c[0])
		c[1], c[0] = madd1(v, x[9], c[1])
		c[2], t[8] = madd2(m, 14052882962215374979, c[2], c[0])
		c[1], c[0] = madd1(v, x[10], c[1])
		c[2], t[9] = madd2(m, 5187029754367492800, c[2], c[0])
		c[1], c[0] = madd1(v, x[11], c[1])
		c[2], t[10] = madd2(m, 8469403868525873005, c[2], c[0])
		c[1], c[0] = madd1(v, x[12], c[1])
		c[2], t[11] = madd2(m, 3377892094264127808, c[2], c[0])
		c[1], c[0] = madd1(v, x[13], c[1])
		c[2], t[12] = madd2(m, 12018175841581922000, c[2], c[0])
		c[1], c[0] = madd1(v, x[14], c[1])
		c[2], t[13] = madd2(m, 7124523582219552620, c[2], c[0])
		c[1], c[0] = madd1(v, x[15], c[1])
		t[15], t[14] = madd3(m, 8808840814487893967, c[0], c[2], c[1])
	}
	{
		// round 1
		v := z[1]
		c[1], c[0] = madd1(v, x[0], t[0])
		m := c[0] * 6320096088022170847
		c[2] = madd0(m, 12261662321546035425, c[0])
		c[1], c[0] = madd2(v, x[1], c[1], t[1])
		c[2], t[0] = madd2(m, 13396937790620762833, c[2], c[0])
		c[1], c[0] = madd2(v, x[2], c[1], t[2])
		c[2], t[1] = madd2(m, 8309663745306966876, c[2], c[0])
		c[1], c[0] = madd2(v, x[3], c[1], t[3])
		c[2], t[2] = madd2(m, 7007646202199374189, c[2], c[0])
		c[1], c[0] = madd2(v, x[4], c[1], t[4])
		c[2], t[3] = madd2(m, 10440250624070677608, c[2], c[0])
		c[1], c[0] = madd2(v, x[5], c[1], t[5])
		c[2], t[4] = madd2(m, 16250487600803211366, c[2], c[0])
		c[1], c[0] = madd2(v, x[6], c[1], t[6])
		c[2], t[5] = madd2(m, 2743934072509086227, c[2], c[0])
		c[1], c[0] = madd2(v, x[7], c[1], t[7])
		c[2], t[6] = madd2(m, 7951817063319804812, c[2], c[0])
		c[1], c[0] = madd2(v, x[8], c[1], t[8])
		c[2], t[7] = madd2(m, 11824513320187351409, c[2], c[0])
		c[1], c[0] = madd2(v, x[9], c[1], t[9])
		c[2], t[8] = madd2(m, 14052882962215374979, c[2], c[0])
		c[1], c[0] = madd2(v, x[10], c[1], t[10])
		c[2], t[9] = madd2(m, 5187029754367492800, c[2], c[0])
		c[1], c[0] = madd2(v, x[11], c[1], t[11])
		c[2], t[10] = madd2(m, 8469403868525873005, c[2], c[0])
		c[1], c[0] = madd2(v, x[12], c[1], t[12])
		c[2], t[11] = madd2(m, 3377892094264127808, c[2], c[0])
		c[1], c[0] = madd2(v, x[13], c[1], t[13])
		c[2], t[12] = madd2(m, 12018175841581922000, c[2], c[0])
		c[1], c[0] = madd2(v, x[14], c[1], t[14])
		c[2], t[13] = madd2(m, 7124523582219552620, c[2], c[0])
		c[1], c[0] = madd2(v, x[15], c[1], t[15])
		t[15], t[14] = madd3(m, 8808840814487893967, c[0], c[2], c[1])
	}
	{
		// round 2
		v := z[2]
		c[1], c[0] = madd1(v, x[0], t[0])
		m := c[0] * 6320096088022170847
		c[2] = madd0(m, 12261662321546035425, c[0])
		c[1], c[0] = madd2(v, x[1], c[1], t[1])
		c[2], t[0] = madd2(m, 13396937790620762833, c[2], c[0])
		c[1], c[0] = madd2(v, x[2], c[1], t[2])
		c[2], t[1] = madd2(m, 8309663745306966876, c[2], c[0])
		c[1], c[0] = madd2(v, x[3], c[1], t[3])
		c[2], t[2] = madd2(m, 7007646202199374189, c[2], c[0])
		c[1], c[0] = madd2(v, x[4], c[1], t[4])
		c[2], t[3] = madd2(m, 10440250624070677608, c[2], c[0])
		c[1], c[0] = madd2(v, x[5], c[1], t[5])
		c[2], t[4] = madd2(m, 16250487600803211366, c[2], c[0])
		c[1], c[0] = madd2(v, x[6], c[1], t[6])
		c[2], t[5] = madd2(m, 2743934072509086227, c[2], c[0])
		c[1], c[0] = madd2(v, x[7], c[1], t[7])
		c[2], t[6] = madd2(m, 7951817063319804812, c[2], c[0])
		c[1], c[0] = madd2(v, x[8], c[1], t[8])
		c[2], t[7] = madd2(m, 11824513320187351409, c[2], c[0])
		c[1], c[0] = madd2(v, x[9], c[1], t[9])
		c[2], t[8] = madd2(m, 14052882962215374979, c[2], c[0])
		c[1], c[0] = madd2(v, x[10], c[1], t[10])
		c[2], t[9] = madd2(m, 5187029754367492800, c[2], c[0])
		c[1], c[0] = madd2(v, x[11], c[1], t[11])
		c[2], t[10] = madd2(m, 8469403868525873005, c[2], c[0])
		c[1], c[0] = madd2(v, x[12], c[1], t[12])
		c[2], t[11] = madd2(m, 3377892094264127808, c[2], c[0])
		c[1], c[0] = madd2(v, x[13], c[1], t[13])
		c[2], t[12] = madd2(m, 12018175841581922000, c[2], c[0])
		c[1], c[0] = madd2(v, x[14], c[1], t[14])
		c[2], t[13] = madd2(m, 7124523582219552620, c[2], c[0])
		c[1], c[0] = madd2(v, x[15], c[1], t[15])
		t[15], t[14] = madd3(m, 8808840814487893967, c[0], c[2], c[1])
	}
	{
		// round 3
		v := z[3]
		c[1], c[0] = madd1(v, x[0], t[0])
		m := c[0] * 6320096088022170847
		c[2] = madd0(m, 12261662321546035425, c[0])
		c[1], c[0] = madd2(v, x[1], c[1], t[1])
		c[2], t[0] = madd2(m, 13396937790620762833, c[2], c[0])
		c[1], c[0] = madd2(v, x[2], c[1], t[2])
		c[2], t[1] = madd2(m, 8309663745306966876, c[2], c[0])
		c[1], c[0] = madd2(v, x[3], c[1], t[3])
		c[2], t[2] = madd2(m, 7007646202199374189, c[2], c[0])
		c[1], c[0] = madd2(v, x[4], c[1], t[4])
		c[2], t[3] = madd2(m, 10440250624070677608, c[2], c[0])
		c[1], c[0] = madd2(v, x[5], c[1], t[5])
		c[2], t[4] = madd2(m, 16250487600803211366, c[2], c[0])
		c[1], c[0] = madd2(v, x[6], c[1], t[6])
		c[2], t[5] = madd2(m, 2743934072509086227, c[2], c[0])
		c[1], c[0] = madd2(v, x[7], c[1], t[7])
		c[2], t[6] = madd2(m, 7951817063319804812, c[2], c[0])
		c[1], c[0] = madd2(v, x[8], c[1], t[8])
		c[2], t[7] = madd2(m, 11824513320187351409, c[2], c[0])
		c[1], c[0] = madd2(v, x[9], c[1], t[9])
		c[2], t[8] = madd2(m, 14052882962215374979, c[2], c[0])
		c[1], c[0] = madd2(v, x[10], c[1], t[10])
		c[2], t[9] = madd2(m, 5187029754367492800, c[2], c[0])
		c[1], c[0] = madd2(v, x[11], c[1], t[11])
		c[2], t[10] = madd2(m, 8469403868525873005, c[2], c[0])
		c[1], c[0] = madd2(v, x[12], c[1], t[12])
		c[2], t[11] = madd2(m, 3377892094264127808, c[2], c[0])
		c[1], c[0] = madd2(v, x[13], c[1], t[13])
		c[2], t[12] = madd2(m, 12018175841581922000, c[2], c[0])
		c[1], c[0] = madd2(v, x[14], c[1], t[14])
		c[2], t[13] = madd2(m, 7124523582219552620, c[2], c[0])
		c[1], c[0] = madd2(v, x[15], c[1], t[15])
		t[15], t[14] = madd3(m, 8808840814487893967, c[0], c[2], c[1])
	}
	{
		// round 4
		v := z[4]
		c[1], c[0] = madd1(v, x[0], t[0])
		m := c[0] * 6320096088022170847
		c[2] = madd0(m, 12261662321546035425, c[0])
		c[1], c[0] = madd2(v, x[1], c[1], t[1])
		c[2], t[0] = madd2(m, 13396937790620762833, c[2], c[0])
		c[1], c[0] = madd2(v, x[2], c[1], t[2])
		c[2], t[1] = madd2(m, 8309663745306966876, c[2], c[0])
		c[1], c[0] = madd2(v, x[3], c[1], t[3])
		c[2], t[2] = madd2(m, 7007646202199374189, c[2], c[0])
		c[1], c[0] = madd2(v, x[4], c[1], t[4])
		c[2], t[3] = madd2(m, 10440250624070677608, c[2], c[0])
		c[1], c[0] = madd2(v, x[5], c[1], t[5])
		c[2], t[4] = madd2(m, 16250487600803211366, c[2], c[0])
		c[1], c[0] = madd2(v, x[6], c[1], t[6])
		c[2], t[5] = madd2(m, 2743934072509086227, c[2], c[0])
		c[1], c[0] = madd2(v, x[7], c[1], t[7])
		c[2], t[6] = madd2(m, 7951817063319804812, c[2], c[0])
		c[1], c[0] = madd2(v, x[8], c[1], t[8])
		c[2], t[7] = madd2(m, 11824513320187351409, c[2], c[0])
		c[1], c[0] = madd2(v, x[9], c[1], t[9])
		c[2], t[8] = madd2(m, 14052882962215374979, c[2], c[0])
		c[1], c[0] = madd2(v, x[10], c[1], t[10])
		c[2], t[9] = madd2(m, 5187029754367492800, c[2], c[0])
		c[1], c[0] = madd2(v, x[11], c[1], t[11])
		c[2], t[10] = madd2(m, 8469403868525873005, c[2], c[0])
		c[1], c[0] = madd2(v, x[12], c[1], t[12])
		c[2], t[11] = madd2(m, 3377892094264127808, c[2], c[0])
		c[1], c[0] = madd2(v, x[13], c[1], t[13])
		c[2], t[12] = madd2(m, 12018175841581922000, c[2], c[0])
		c[1], c[0] = madd2(v, x[14], c[1], t[14])
		c[2], t[13] = madd2(m, 7124523582219552620, c[2], c[0])
		c[1], c[0] = madd2(v, x[15], c[1], t[15])
		t[15], t[14] = madd3(m, 8808840814487893967, c[0], c[2], c[1])
	}
	{
		// round 5
		v := z[5]
		c[1], c[0] = madd1(v, x[0], t[0])
		m := c[0] * 6320096088022170847
		c[2] = madd0(m, 12261662321546035425, c[0])
		c[1], c[0] = madd2(v, x[1], c[1], t[1])
		c[2], t[0] = madd2(m, 13396937790620762833, c[2], c[0])
		c[1], c[0] = madd2(v, x[2], c[1], t[2])
		c[2], t[1] = madd2(m, 8309663745306966876, c[2], c[0])
		c[1], c[0] = madd2(v, x[3], c[1], t[3])
		c[2], t[2] = madd2(m, 7007646202199374189, c[2], c[0])
		c[1], c[0] = madd2(v, x[4], c[1], t[4])
		c[2], t[3] = madd2(m, 10440250624070677608, c[2], c[0])
		c[1], c[0] = madd2(v, x[5], c[1], t[5])
		c[2], t[4] = madd2(m, 16250487600803211366, c[2], c[0])
		c[1], c[0] = madd2(v, x[6], c[1], t[6])
		c[2], t[5] = madd2(m, 2743934072509086227, c[2], c[0])
		c[1], c[0] = madd2(v, x[7], c[1], t[7])
		c[2], t[6] = madd2(m, 7951817063319804812, c[2], c[0])
		c[1], c[0] = madd2(v, x[8], c[1], t[8])
		c[2], t[7] = madd2(m, 11824513320187351409, c[2], c[0])
		c[1], c[0] = madd2(v, x[9], c[1], t[9])
		c[2], t[8] = madd2(m, 14052882962215374979, c[2], c[0])
		c[1], c[0] = madd2(v, x[10], c[1], t[10])
		c[2], t[9] = madd2(m, 5187029754367492800, c[2], c[0])
		c[1], c[0] = madd2(v, x[11], c[1], t[11])
		c[2], t[10] = madd2(m, 8469403868525873005, c[2], c[0])
		c[1], c[0] = madd2(v, x[12], c[1], t[12])
		c[2], t[11] = madd2(m, 3377892094264127808, c[2], c[0])
		c[1], c[0] = madd2(v, x[13], c[1], t[13])
		c[2], t[12] = madd2(m, 12018175841581922000, c[2], c[0])
		c[1], c[0] = madd2(v, x[14], c[1], t[14])
		c[2], t[13] = madd2(m, 7124523582219552620, c[2], c[0])
		c[1], c[0] = madd2(v, x[15], c[1], t[15])
		t[15], t[14] = madd3(m, 8808840814487893967, c[0], c[2], c[1])
	}
	{
		// round 6
		v := z[6]
		c[1], c[0] = madd1(v, x[0], t[0])
		m := c[0] * 6320096088022170847
		c[2] = madd0(m, 12261662321546035425, c[0])
		c[1], c[0] = madd2(v, x[1], c[1], t[1])
		c[2], t[0] = madd2(m, 13396937790620762833, c[2], c[0])
		c[1], c[0] = madd2(v, x[2], c[1], t[2])
		c[2], t[1] = madd2(m, 8309663745306966876, c[2], c[0])
		c[1], c[0] = madd2(v, x[3], c[1], t[3])
		c[2], t[2] = madd2(m, 7007646202199374189, c[2], c[0])
		c[1], c[0] = madd2(v, x[4], c[1], t[4])
		c[2], t[3] = madd2(m, 10440250624070677608, c[2], c[0])
		c[1], c[0] = madd2(v, x[5], c[1], t[5])
		c[2], t[4] = madd2(m, 16250487600803211366, c[2], c[0])
		c[1], c[0] = madd2(v, x[6], c[1], t[6])
		c[2], t[5] = madd2(m, 2743934072509086227, c[2], c[0])
		c[1], c[0] = madd2(v, x[7], c[1], t[7])
		c[2], t[6] = madd2(m, 7951817063319804812, c[2], c[0])
		c[1], c[0] = madd2(v, x[8], c[1], t[8])
		c[2], t[7] = madd2(m, 11824513320187351409, c[2], c[0])
		c[1], c[0] = madd2(v, x[9], c[1], t[9])
		c[2], t[8] = madd2(m, 14052882962215374979, c[2], c[0])
		c[1], c[0] = madd2(v, x[10], c[1], t[10])
		c[2], t[9] = madd2(m, 5187029754367492800, c[2], c[0])
		c[1], c[0] = madd2(v, x[11], c[1], t[11])
		c[2], t[10] = madd2(m, 8469403868525873005, c[2], c[0])
		c[1], c[0] = madd2(v, x[12], c[1], t[12])
		c[2], t[11] = madd2(m, 3377892094264127808, c[2], c[0])
		c[1], c[0] = madd2(v, x[13], c[1], t[13])
		c[2], t[12] = madd2(m, 12018175841581922000, c[2], c[0])
		c[1], c[0] = madd2(v, x[14], c[1], t[14])
		c[2], t[13] = madd2(m, 7124523582219552620, c[2], c[0])
		c[1], c[0] = madd2(v, x[15], c[1], t[15])
		t[15], t[14] = madd3(m, 8808840814487893967, c[0], c[2], c[1])
	}
	{
		// round 7
		v := z[7]
		c[1], c[0] = madd1(v, x[0], t[0])
		m := c[0] * 6320096088022170847
		c[2] = madd0(m, 12261662321546035425, c[0])
		c[1], c[0] = madd2(v, x[1], c[1], t[1])
		c[2], t[0] = madd2(m, 13396937790620762833, c[2], c[0])
		c[1], c[0] = madd2(v, x[2], c[1], t[2])
		c[2], t[1] = madd2(m, 8309663745306966876, c[2], c[0])
		c[1], c[0] = madd2(v, x[3], c[1], t[3])
		c[2], t[2] = madd2(m, 7007646202199374189, c[2], c[0])
		c[1], c[0] = madd2(v, x[4], c[1], t[4])
		c[2], t[3] = madd2(m, 10440250624070677608, c[2], c[0])
		c[1], c[0] = madd2(v, x[5], c[1], t[5])
		c[2], t[4] = madd2(m, 16250487600803211366, c[2], c[0])
		c[1], c[0] = madd2(v, x[6], c[1], t[6])
		c[2], t[5] = madd2(m, 2743934072509086227, c[2], c[0])
		c[1], c[0] = madd2(v, x[7], c[1], t[7])
		c[2], t[6] = madd2(m, 7951817063319804812, c[2], c[0])
		c[1], c[0] = madd2(v, x[8], c[1], t[8])
		c[2], t[7] = madd2(m, 11824513320187351409, c[2], c[0])
		c[1], c[0] = madd2(v, x[9], c[1], t[9])
		c[2], t[8] = madd2(m, 14052882962215374979, c[2], c[0])
		c[1], c[0] = madd2(v, x[10], c[1], t[10])
		c[2], t[9] = madd2(m, 5187029754367492800, c[2], c[0])
		c[1], c[0] = madd2(v, x[11], c[1], t[11])
		c[2], t[10] = madd2(m, 8469403868525873005, c[2], c[0])
		c[1], c[0] = madd2(v, x[12], c[1], t[12])
		c[2], t[11] = madd2(m, 3377892094264127808, c[2], c[0])
		c[1], c[0] = madd2(v, x[13], c[1], t[13])
		c[2], t[12] = madd2(m, 12018175841581922000, c[2], c[0])
		c[1], c[0] = madd2(v, x[14], c[1], t[14])
		c[2], t[13] = madd2(m, 7124523582219552620, c[2], c[0])
		c[1], c[0] = madd2(v, x[15], c[1], t[15])
		t[15], t[14] = madd3(m, 8808840814487893967, c[0], c[2], c[1])
	}
	{
		// round 8
		v := z[8]
		c[1], c[0] = madd1(v, x[0], t[0])
		m := c[0] * 6320096088022170847
		c[2] = madd0(m, 12261662321546035425, c[0])
		c[1], c[0] = madd2(v, x[1], c[1], t[1])
		c[2], t[0] = madd2(m, 13396937790620762833, c[2], c[0])
		c[1], c[0] = madd2(v, x[2], c[1], t[2])
		c[2], t[1] = madd2(m, 8309663745306966876, c[2], c[0])
		c[1], c[0] = madd2(v, x[3], c[1], t[3])
		c[2], t[2] = madd2(m, 7007646202199374189, c[2], c[0])
		c[1], c[0] = madd2(v, x[4], c[1], t[4])
		c[2], t[3] = madd2(m, 10440250624070677608, c[2], c[0])
		c[1], c[0] = madd2(v, x[5], c[1], t[5])
		c[2], t[4] = madd2(m, 16250487600803211366, c[2], c[0])
		c[1], c[0] = madd2(v, x[6], c[1], t[6])
		c[2], t[5] = madd2(m, 2743934072509086227, c[2], c[0])
		c[1], c[0] = madd2(v, x[7], c[1], t[7])
		c[2], t[6] = madd2(m, 7951817063319804812, c[2], c[0])
		c[1], c[0] = madd2(v, x[8], c[1], t[8])
		c[2], t[7] = madd2(m, 11824513320187351409, c[2], c[0])
		c[1], c[0] = madd2(v, x[9], c[1], t[9])
		c[2], t[8] = madd2(m, 14052882962215374979, c[2], c[0])
		c[1], c[0] = madd2(v, x[10], c[1], t[10])
		c[2], t[9] = madd2(m, 5187029754367492800, c[2], c[0])
		c[1], c[0] = madd2(v, x[11], c[1], t[11])
		c[2], t[10] = madd2(m, 8469403868525873005, c[2], c[0])
		c[1], c[0] = madd2(v, x[12], c[1], t[12])
		c[2], t[11] = madd2(m, 3377892094264127808, c[2], c[0])
		c[1], c[0] = madd2(v, x[13], c[1], t[13])
		c[2], t[12] = madd2(m, 12018175841581922000, c[2], c[0])
		c[1], c[0] = madd2(v, x[14], c[1], t[14])
		c[2], t[13] = madd2(m, 7124523582219552620, c[2], c[0])
		c[1], c[0] = madd2(v, x[15], c[1], t[15])
		t[15], t[14] = madd3(m, 8808840814487893967, c[0], c[2], c[1])
	}
	{
		// round 9
		v := z[9]
		c[1], c[0] = madd1(v, x[0], t[0])
		m := c[0] * 6320096088022170847
		c[2] = madd0(m, 12261662321546035425, c[0])
		c[1], c[0] = madd2(v, x[1], c[1], t[1])
		c[2], t[0] = madd2(m, 13396937790620762833, c[2], c[0])
		c[1], c[0] = madd2(v, x[2], c[1], t[2])
		c[2], t[1] = madd2(m, 8309663745306966876, c[2], c[0])
		c[1], c[0] = madd2(v, x[3], c[1], t[3])
		c[2], t[2] = madd2(m, 7007646202199374189, c[2], c[0])
		c[1], c[0] = madd2(v, x[4], c[1], t[4])
		c[2], t[3] = madd2(m, 10440250624070677608, c[2], c[0])
		c[1], c[0] = madd2(v, x[5], c[1], t[5])
		c[2], t[4] = madd2(m, 16250487600803211366, c[2], c[0])
		c[1], c[0] = madd2(v, x[6], c[1], t[6])
		c[2], t[5] = madd2(m, 2743934072509086227, c[2], c[0])
		c[1], c[0] = madd2(v, x[7], c[1], t[7])
		c[2], t[6] = madd2(m, 7951817063319804812, c[2], c[0])
		c[1], c[0] = madd2(v, x[8], c[1], t[8])
		c[2], t[7] = madd2(m, 11824513320187351409, c[2], c[0])
		c[1], c[0] = madd2(v, x[9], c[1], t[9])
		c[2], t[8] = madd2(m, 14052882962215374979, c[2], c[0])
		c[1], c[0] = madd2(v, x[10], c[1], t[10])
		c[2], t[9] = madd2(m, 5187029754367492800, c[2], c[0])
		c[1], c[0] = madd2(v, x[11], c[1], t[11])
		c[2], t[10] = madd2(m, 8469403868525873005, c[2], c[0])
		c[1], c[0] = madd2(v, x[12], c[1], t[12])
		c[2], t[11] = madd2(m, 3377892094264127808, c[2], c[0])
		c[1], c[0] = madd2(v, x[13], c[1], t[13])
		c[2], t[12] = madd2(m, 12018175841581922000, c[2], c[0])
		c[1], c[0] = madd2(v, x[14], c[1], t[14])
		c[2], t[13] = madd2(m, 7124523582219552620, c[2], c[0])
		c[1], c[0] = madd2(v, x[15], c[1], t[15])
		t[15], t[14] = madd3(m, 8808840814487893967, c[0], c[2], c[1])
	}
	{
		// round 10
		v := z[10]
		c[1], c[0] = madd1(v, x[0], t[0])
		m := c[0] * 6320096088022170847
		c[2] = madd0(m, 12261662321546035425, c[0])
		c[1], c[0] = madd2(v, x[1], c[1], t[1])
		c[2], t[0] = madd2(m, 13396937790620762833, c[2], c[0])
		c[1], c[0] = madd2(v, x[2], c[1], t[2])
		c[2], t[1] = madd2(m, 8309663745306966876, c[2], c[0])
		c[1], c[0] = madd2(v, x[3], c[1], t[3])
		c[2], t[2] = madd2(m, 7007646202199374189, c[2], c[0])
		c[1], c[0] = madd2(v, x[4], c[1], t[4])
		c[2], t[3] = madd2(m, 10440250624070677608, c[2], c[0])
		c[1], c[0] = madd2(v, x[5], c[1], t[5])
		c[2], t[4] = madd2(m, 16250487600803211366, c[2], c[0])
		c[1], c[0] = madd2(v, x[6], c[1], t[6])
		c[2], t[5] = madd2(m, 2743934072509086227, c[2], c[0])
		c[1], c[0] = madd2(v, x[7], c[1], t[7])
		c[2], t[6] = madd2(m, 7951817063319804812, c[2], c[0])
		c[1], c[0] = madd2(v, x[8], c[1], t[8])
		c[2], t[7] = madd2(m, 11824513320187351409, c[2], c[0])
		c[1], c[0] = madd2(v, x[9], c[1], t[9])
		c[2], t[8] = madd2(m, 14052882962215374979, c[2], c[0])
		c[1], c[0] = madd2(v, x[10], c[1], t[10])
		c[2], t[9] = madd2(m, 5187029754367492800, c[2], c[0])
		c[1], c[0] = madd2(v, x[11], c[1], t[11])
		c[2], t[10] = madd2(m, 8469403868525873005, c[2], c[0])
		c[1], c[0] = madd2(v, x[12], c[1], t[12])
		c[2], t[11] = madd2(m, 3377892094264127808, c[2], c[0])
		c[1], c[0] = madd2(v, x[13], c[1], t[13])
		c[2], t[12] = madd2(m, 12018175841581922000, c[2], c[0])
		c[1], c[0] = madd2(v, x[14], c[1], t[14])
		c[2], t[13] = madd2(m, 7124523582219552620, c[2], c[0])
		c[1], c[0] = madd2(v, x[15], c[1], t[15])
		t[15], t[14] = madd3(m, 8808840814487893967, c[0], c[2], c[1])
	}
	{
		// round 11
		v := z[11]
		c[1], c[0] = madd1(v, x[0], t[0])
		m := c[0] * 6320096088022170847
		c[2] = madd0(m, 12261662321546035425, c[0])
		c[1], c[0] = madd2(v, x[1], c[1], t[1])
		c[2], t[0] = madd2(m, 13396937790620762833, c[2], c[0])
		c[1], c[0] = madd2(v, x[2], c[1], t[2])
		c[2], t[1] = madd2(m, 8309663745306966876, c[2], c[0])
		c[1], c[0] = madd2(v, x[3], c[1], t[3])
		c[2], t[2] = madd2(m, 7007646202199374189, c[2], c[0])
		c[1], c[0] = madd2(v, x[4], c[1], t[4])
		c[2], t[3] = madd2(m, 10440250624070677608, c[2], c[0])
		c[1], c[0] = madd2(v, x[5], c[1], t[5])
		c[2], t[4] = madd2(m, 16250487600803211366, c[2], c[0])
		c[1], c[0] = madd2(v, x[6], c[1], t[6])
		c[2], t[5] = madd2(m, 2743934072509086227, c[2], c[0])
		c[1], c[0] = madd2(v, x[7], c[1], t[7])
		c[2], t[6] = madd2(m, 7951817063319804812, c[2], c[0])
		c[1], c[0] = madd2(v, x[8], c[1], t[8])
		c[2], t[7] = madd2(m, 11824513320187351409, c[2], c[0])
		c[1], c[0] = madd2(v, x[9], c[1], t[9])
		c[2], t[8] = madd2(m, 14052882962215374979, c[2], c[0])
		c[1], c[0] = madd2(v, x[10], c[1], t[10])
		c[2], t[9] = madd2(m, 5187029754367492800, c[2], c[0])
		c[1], c[0] = madd2(v, x[11], c[1], t[11])
		c[2], t[10] = madd2(m, 8469403868525873005, c[2], c[0])
		c[1], c[0] = madd2(v, x[12], c[1], t[12])
		c[2], t[11] = madd2(m, 3377892094264127808, c[2], c[0])
		c[1], c[0] = madd2(v, x[13], c[1], t[13])
		c[2], t[12] = madd2(m, 12018175841581922000, c[2], c[0])
		c[1], c[0] = madd2(v, x[14], c[1], t[14])
		c[2], t[13] = madd2(m, 7124523582219552620, c[2], c[0])
		c[1], c[0] = madd2(v, x[15], c[1], t[15])
		t[15], t[14] = madd3(m, 8808840814487893967, c[0], c[2], c[1])
	}
	{
		// round 12
		v := z[12]
		c[1], c[0] = madd1(v, x[0], t[0])
		m := c[0] * 6320096088022170847
		c[2] = madd0(m, 12261662321546035425, c[0])
		c[1], c[0] = madd2(v, x[1], c[1], t[1])
		c[2], t[0] = madd2(m, 13396937790620762833, c[2], c[0])
		c[1], c[0] = madd2(v, x[2], c[1], t[2])
		c[2], t[1] = madd2(m, 8309663745306966876, c[2], c[0])
		c[1], c[0] = madd2(v, x[3], c[1], t[3])
		c[2], t[2] = madd2(m, 7007646202199374189, c[2], c[0])
		c[1], c[0] = madd2(v, x[4], c[1], t[4])
		c[2], t[3] = madd2(m, 10440250624070677608, c[2], c[0])
		c[1], c[0] = madd2(v, x[5], c[1], t[5])
		c[2], t[4] = madd2(m, 16250487600803211366, c[2], c[0])
		c[1], c[0] = madd2(v, x[6], c[1], t[6])
		c[2], t[5] = madd2(m, 2743934072509086227, c[2], c[0])
		c[1], c[0] = madd2(v, x[7], c[1], t[7])
		c[2], t[6] = madd2(m, 7951817063319804812, c[2], c[0])
		c[1], c[0] = madd2(v, x[8], c[1], t[8])
		c[2], t[7] = madd2(m, 11824513320187351409, c[2], c[0])
		c[1], c[0] = madd2(v, x[9], c[1], t[9])
		c[2], t[8] = madd2(m, 14052882962215374979, c[2], c[0])
		c[1], c[0] = madd2(v, x[10], c[1], t[10])
		c[2], t[9] = madd2(m, 5187029754367492800, c[2], c[0])
		c[1], c[0] = madd2(v, x[11], c[1], t[11])
		c[2], t[10] = madd2(m, 8469403868525873005, c[2], c[0])
		c[1], c[0] = madd2(v, x[12], c[1], t[12])
		c[2], t[11] = madd2(m, 3377892094264127808, c[2], c[0])
		c[1], c[0] = madd2(v, x[13], c[1], t[13])
		c[2], t[12] = madd2(m, 12018175841581922000, c[2], c[0])
		c[1], c[0] = madd2(v, x[14], c[1], t[14])
		c[2], t[13] = madd2(m, 7124523582219552620, c[2], c[0])
		c[1], c[0] = madd2(v, x[15], c[1], t[15])
		t[15], t[14] = madd3(m, 8808840814487893967, c[0], c[2], c[1])
	}
	{
		// round 13
		v := z[13]
		c[1], c[0] = madd1(v, x[0], t[0])
		m := c[0] * 6320096088022170847
		c[2] = madd0(m, 12261662321546035425, c[0])
		c[1], c[0] = madd2(v, x[1], c[1], t[1])
		c[2], t[0] = madd2(m, 13396937790620762833, c[2], c[0])
		c[1], c[0] = madd2(v, x[2], c[1], t[2])
		c[2], t[1] = madd2(m, 8309663745306966876, c[2], c[0])
		c[1], c[0] = madd2(v, x[3], c[1], t[3])
		c[2], t[2] = madd2(m, 7007646202199374189, c[2], c[0])
		c[1], c[0] = madd2(v, x[4], c[1], t[4])
		c[2], t[3] = madd2(m, 10440250624070677608, c[2], c[0])
		c[1], c[0] = madd2(v, x[5], c[1], t[5])
		c[2], t[4] = madd2(m, 16250487600803211366, c[2], c[0])
		c[1], c[0] = madd2(v, x[6], c[1], t[6])
		c[2], t[5] = madd2(m, 2743934072509086227, c[2], c[0])
		c[1], c[0] = madd2(v, x[7], c[1], t[7])
		c[2], t[6] = madd2(m, 7951817063319804812, c[2], c[0])
		c[1], c[0] = madd2(v, x[8], c[1], t[8])
		c[2], t[7] = madd2(m, 11824513320187351409, c[2], c[0])
		c[1], c[0] = madd2(v, x[9], c[1], t[9])
		c[2], t[8] = madd2(m, 14052882962215374979, c[2], c[0])
		c[1], c[0] = madd2(v, x[10], c[1], t[10])
		c[2], t[9] = madd2(m, 5187029754367492800, c[2], c[0])
		c[1], c[0] = madd2(v, x[11], c[1], t[11])
		c[2], t[10] = madd2(m, 8469403868525873005, c[2], c[0])
		c[1], c[0] = madd2(v, x[12], c[1], t[12])
		c[2], t[11] = madd2(m, 3377892094264127808, c[2], c[0])
		c[1], c[0] = madd2(v, x[13], c[1], t[13])
		c[2], t[12] = madd2(m, 12018175841581922000, c[2], c[0])
		c[1], c[0] = madd2(v, x[14], c[1], t[14])
		c[2], t[13] = madd2(m, 7124523582219552620, c[2], c[0])
		c[1], c[0] = madd2(v, x[15], c[1], t[15])
		t[15], t[14] = madd3(m, 8808840814487893967, c[0], c[2], c[1])
	}
	{
		// round 14
		v := z[14]
		c[1], c[0] = madd1(v, x[0], t[0])
		m := c[0] * 6320096088022170847
		c[2] = madd0(m, 12261662321546035425, c[0])
		c[1], c[0] = madd2(v, x[1], c[1], t[1])
		c[2], t[0] = madd2(m, 13396937790620762833, c[2], c[0])
		c[1], c[0] = madd2(v, x[2], c[1], t[2])
		c[2], t[1] = madd2(m, 8309663745306966876, c[2], c[0])
		c[1], c[0] = madd2(v, x[3], c[1], t[3])
		c[2], t[2] = madd2(m, 7007646202199374189, c[2], c[0])
		c[1], c[0] = madd2(v, x[4], c[1], t[4])
		c[2], t[3] = madd2(m, 10440250624070677608, c[2], c[0])
		c[1], c[0] = madd2(v, x[5], c[1], t[5])
		c[2], t[4] = madd2(m, 16250487600803211366, c[2], c[0])
		c[1], c[0] = madd2(v, x[6], c[1], t[6])
		c[2], t[5] = madd2(m, 2743934072509086227, c[2], c[0])
		c[1], c[0] = madd2(v, x[7], c[1], t[7])
		c[2], t[6] = madd2(m, 7951817063319804812, c[2], c[0])
		c[1], c[0] = madd2(v, x[8], c[1], t[8])
		c[2], t[7] = madd2(m, 11824513320187351409, c[2], c[0])
		c[1], c[0] = madd2(v, x[9], c[1], t[9])
		c[2], t[8] = madd2(m, 14052882962215374979, c[2], c[0])
		c[1], c[0] = madd2(v, x[10], c[1], t[10])
		c[2], t[9] = madd2(m, 5187029754367492800, c[2], c[0])
		c[1], c[0] = madd2(v, x[11], c[1], t[11])
		c[2], t[10] = madd2(m, 8469403868525873005, c[2], c[0])
		c[1], c[0] = madd2(v, x[12], c[1], t[12])
		c[2], t[11] = madd2(m, 3377892094264127808, c[2], c[0])
		c[1], c[0] = madd2(v, x[13], c[1], t[13])
		c[2], t[12] = madd2(m, 12018175841581922000, c[2], c[0])
		c[1], c[0] = madd2(v, x[14], c[1], t[14])
		c[2], t[13] = madd2(m, 7124523582219552620, c[2], c[0])
		c[1], c[0] = madd2(v, x[15], c[1], t[15])
		t[15], t[14] = madd3(m, 8808840814487893967, c[0], c[2], c[1])
	}
	{
		// round 15
		v := z[15]
		c[1], c[0] = madd1(v, x[0], t[0])
		m := c[0] * 6320096088022170847
		c[2] = madd0(m, 12261662321546035425, c[0])
		c[1], c[0] = madd2(v, x[1], c[1], t[1])
		c[2], z[0] = madd2(m, 13396937790620762833, c[2], c[0])
		c[1], c[0] = madd2(v, x[2], c[1], t[2])
		c[2], z[1] = madd2(m, 8309663745306966876, c[2], c[0])
		c[1], c[0] = madd2(v, x[3], c[1], t[3])
		c[2], z[2] = madd2(m, 7007646202199374189, c[2], c[0])
		c[1], c[0] = madd2(v, x[4], c[1], t[4])
		c[2], z[3] = madd2(m, 10440250624070677608, c[2], c[0])
		c[1], c[0] = madd2(v, x[5], c[1], t[5])
		c[2], z[4] = madd2(m, 16250487600803211366, c[2], c[0])
		c[1], c[0] = madd2(v, x[6], c[1], t[6])
		c[2], z[5] = madd2(m, 2743934072509086227, c[2], c[0])
		c[1], c[0] = madd2(v, x[7], c[1], t[7])
		c[2], z[6] = madd2(m, 7951817063319804812, c[2], c[0])
		c[1], c[0] = madd2(v, x[8], c[1], t[8])
		c[2], z[7] = madd2(m, 11824513320187351409, c[2], c[0])
		c[1], c[0] = madd2(v, x[9], c[1], t[9])
		c[2], z[8] = madd2(m, 14052882962215374979, c[2], c[0])
		c[1], c[0] = madd2(v, x[10], c[1], t[10])
		c[2], z[9] = madd2(m, 5187029754367492800, c[2], c[0])
		c[1], c[0] = madd2(v, x[11], c[1], t[11])
		c[2], z[10] = madd2(m, 8469403868525873005, c[2], c[0])
		c[1], c[0] = madd2(v, x[12], c[1], t[12])
		c[2], z[11] = madd2(m, 3377892094264127808, c[2], c[0])
		c[1], c[0] = madd2(v, x[13], c[1], t[13])
		c[2], z[12] = madd2(m, 12018175841581922000, c[2], c[0])
		c[1], c[0] = madd2(v, x[14], c[1], t[14])
		c[2], z[13] = madd2(m, 7124523582219552620, c[2], c[0])
		c[1], c[0] = madd2(v, x[15], c[1], t[15])
		z[15], z[14] = madd3(m, 8808840814487893967, c[0], c[2], c[1])
	}

	// if z > q --> z -= q
	// note: this is NOT constant time
	if !(z[15] < 8808840814487893967 || (z[15] == 8808840814487893967 && (z[14] < 7124523582219552620 || (z[14] == 7124523582219552620 && (z[13] < 12018175841581922000 || (z[13] == 12018175841581922000 && (z[12] < 3377892094264127808 || (z[12] == 3377892094264127808 && (z[11] < 8469403868525873005 || (z[11] == 8469403868525873005 && (z[10] < 5187029754367492800 || (z[10] == 5187029754367492800 && (z[9] < 14052882962215374979 || (z[9] == 14052882962215374979 && (z[8] < 11824513320187351409 || (z[8] == 11824513320187351409 && (z[7] < 7951817063319804812 || (z[7] == 7951817063319804812 && (z[6] < 2743934072509086227 || (z[6] == 2743934072509086227 && (z[5] < 16250487600803211366 || (z[5] == 16250487600803211366 && (z[4] < 10440250624070677608 || (z[4] == 10440250624070677608 && (z[3] < 7007646202199374189 || (z[3] == 7007646202199374189 && (z[2] < 8309663745306966876 || (z[2] == 8309663745306966876 && (z[1] < 13396937790620762833 || (z[1] == 13396937790620762833 && (z[0] < 12261662321546035425))))))))))))))))))))))))))))))) {
		var b uint64
		z[0], b = bits.Sub64(z[0], 12261662321546035425, 0)
		z[1], b = bits.Sub64(z[1], 13396937790620762833, b)
		z[2], b = bits.Sub64(z[2], 8309663745306966876, b)
		z[3], b = bits.Sub64(z[3], 7007646202199374189, b)
		z[4], b = bits.Sub64(z[4], 10440250624070677608, b)
		z[5], b = bits.Sub64(z[5], 16250487600803211366, b)
		z[6], b = bits.Sub64(z[6], 2743934072509086227, b)
		z[7], b = bits.Sub64(z[7], 7951817063319804812, b)
		z[8], b = bits.Sub64(z[8], 11824513320187351409, b)
		z[9], b = bits.Sub64(z[9], 14052882962215374979, b)
		z[10], b = bits.Sub64(z[10], 5187029754367492800, b)
		z[11], b = bits.Sub64(z[11], 8469403868525873005, b)
		z[12], b = bits.Sub64(z[12], 3377892094264127808, b)
		z[13], b = bits.Sub64(z[13], 12018175841581922000, b)
		z[14], b = bits.Sub64(z[14], 7124523582219552620, b)
		z[15], _ = bits.Sub64(z[15], 8808840814487893967, b)
	}
	return z
}

func (z *Element16) mulFIPS(x *Element16) *Element16 {

	var p [16]uint64
	var t, u, v uint64
	u, v = bits.Mul64(z[0], x[0])
	p[0] = v * 6320096088022170847
	u, v, _ = madd(p[0], 12261662321546035425, 0, u, v)
	t, u, v = madd(z[0], x[1], 0, u, v)
	t, u, v = madd(p[0], 13396937790620762833, t, u, v)
	t, u, v = madd(z[1], x[0], t, u, v)
	p[1] = v * 6320096088022170847
	u, v, _ = madd(p[1], 12261662321546035425, t, u, v)
	t, u, v = madd(z[0], x[2], 0, u, v)
	t, u, v = madd(p[0], 8309663745306966876, t, u, v)
	t, u, v = madd(z[1], x[1], t, u, v)
	t, u, v = madd(p[1], 13396937790620762833, t, u, v)
	t, u, v = madd(z[2], x[0], t, u, v)
	p[2] = v * 6320096088022170847
	u, v, _ = madd(p[2], 12261662321546035425, t, u, v)
	t, u, v = madd(z[0], x[3], 0, u, v)
	t, u, v = madd(p[0], 7007646202199374189, t, u, v)
	t, u, v = madd(z[1], x[2], t, u, v)
	t, u, v = madd(p[1], 8309663745306966876, t, u, v)
	t, u, v = madd(z[2], x[1], t, u, v)
	t, u, v = madd(p[2], 13396937790620762833, t, u, v)
	t, u, v = madd(z[3], x[0], t, u, v)
	p[3] = v * 6320096088022170847
	u, v, _ = madd(p[3], 12261662321546035425, t, u, v)
	t, u, v = madd(z[0], x[4], 0, u, v)
	t, u, v = madd(p[0], 10440250624070677608, t, u, v)
	t, u, v = madd(z[1], x[3], t, u, v)
	t, u, v = madd(p[1], 7007646202199374189, t, u, v)
	t, u, v = madd(z[2], x[2], t, u, v)
	t, u, v = madd(p[2], 8309663745306966876, t, u, v)
	t, u, v = madd(z[3], x[1], t, u, v)
	t, u, v = madd(p[3], 13396937790620762833, t, u, v)
	t, u, v = madd(z[4], x[0], t, u, v)
	p[4] = v * 6320096088022170847
	u, v, _ = madd(p[4], 12261662321546035425, t, u, v)
	t, u, v = madd(z[0], x[5], 0, u, v)
	t, u, v = madd(p[0], 16250487600803211366, t, u, v)
	t, u, v = madd(z[1], x[4], t, u, v)
	t, u, v = madd(p[1], 10440250624070677608, t, u, v)
	t, u, v = madd(z[2], x[3], t, u, v)
	t, u, v = madd(p[2], 7007646202199374189, t, u, v)
	t, u, v = madd(z[3], x[2], t, u, v)
	t, u, v = madd(p[3], 8309663745306966876, t, u, v)
	t, u, v = madd(z[4], x[1], t, u, v)
	t, u, v = madd(p[4], 13396937790620762833, t, u, v)
	t, u, v = madd(z[5], x[0], t, u, v)
	p[5] = v * 6320096088022170847
	u, v, _ = madd(p[5], 12261662321546035425, t, u, v)
	t, u, v = madd(z[0], x[6], 0, u, v)
	t, u, v = madd(p[0], 2743934072509086227, t, u, v)
	t, u, v = madd(z[1], x[5], t, u, v)
	t, u, v = madd(p[1], 16250487600803211366, t, u, v)
	t, u, v = madd(z[2], x[4], t, u, v)
	t, u, v = madd(p[2], 10440250624070677608, t, u, v)
	t, u, v = madd(z[3], x[3], t, u, v)
	t, u, v = madd(p[3], 7007646202199374189, t, u, v)
	t, u, v = madd(z[4], x[2], t, u, v)
	t, u, v = madd(p[4], 8309663745306966876, t, u, v)
	t, u, v = madd(z[5], x[1], t, u, v)
	t, u, v = madd(p[5], 13396937790620762833, t, u, v)
	t, u, v = madd(z[6], x[0], t, u, v)
	p[6] = v * 6320096088022170847
	u, v, _ = madd(p[6], 12261662321546035425, t, u, v)
	t, u, v = madd(z[0], x[7], 0, u, v)
	t, u, v = madd(p[0], 7951817063319804812, t, u, v)
	t, u, v = madd(z[1], x[6], t, u, v)
	t, u, v = madd(p[1], 2743934072509086227, t, u, v)
	t, u, v = madd(z[2], x[5], t, u, v)
	t, u, v = madd(p[2], 16250487600803211366, t, u, v)
	t, u, v = madd(z[3], x[4], t, u, v)
	t, u, v = madd(p[3], 10440250624070677608, t, u, v)
	t, u, v = madd(z[4], x[3], t, u, v)
	t, u, v = madd(p[4], 7007646202199374189, t, u, v)
	t, u, v = madd(z[5], x[2], t, u, v)
	t, u, v = madd(p[5], 8309663745306966876, t, u, v)
	t, u, v = madd(z[6], x[1], t, u, v)
	t, u, v = madd(p[6], 13396937790620762833, t, u, v)
	t, u, v = madd(z[7], x[0], t, u, v)
	p[7] = v * 6320096088022170847
	u, v, _ = madd(p[7], 12261662321546035425, t, u, v)
	t, u, v = madd(z[0], x[8], 0, u, v)
	t, u, v = madd(p[0], 11824513320187351409, t, u, v)
	t, u, v = madd(z[1], x[7], t, u, v)
	t, u, v = madd(p[1], 7951817063319804812, t, u, v)
	t, u, v = madd(z[2], x[6], t, u, v)
	t, u, v = madd(p[2], 2743934072509086227, t, u, v)
	t, u, v = madd(z[3], x[5], t, u, v)
	t, u, v = madd(p[3], 16250487600803211366, t, u, v)
	t, u, v = madd(z[4], x[4], t, u, v)
	t, u, v = madd(p[4], 10440250624070677608, t, u, v)
	t, u, v = madd(z[5], x[3], t, u, v)
	t, u, v = madd(p[5], 7007646202199374189, t, u, v)
	t, u, v = madd(z[6], x[2], t, u, v)
	t, u, v = madd(p[6], 8309663745306966876, t, u, v)
	t, u, v = madd(z[7], x[1], t, u, v)
	t, u, v = madd(p[7], 13396937790620762833, t, u, v)
	t, u, v = madd(z[8], x[0], t, u, v)
	p[8] = v * 6320096088022170847
	u, v, _ = madd(p[8], 12261662321546035425, t, u, v)
	t, u, v = madd(z[0], x[9], 0, u, v)
	t, u, v = madd(p[0], 14052882962215374979, t, u, v)
	t, u, v = madd(z[1], x[8], t, u, v)
	t, u, v = madd(p[1], 11824513320187351409, t, u, v)
	t, u, v = madd(z[2], x[7], t, u, v)
	t, u, v = madd(p[2], 7951817063319804812, t, u, v)
	t, u, v = madd(z[3], x[6], t, u, v)
	t, u, v = madd(p[3], 2743934072509086227, t, u, v)
	t, u, v = madd(z[4], x[5], t, u, v)
	t, u, v = madd(p[4], 16250487600803211366, t, u, v)
	t, u, v = madd(z[5], x[4], t, u, v)
	t, u, v = madd(p[5], 10440250624070677608, t, u, v)
	t, u, v = madd(z[6], x[3], t, u, v)
	t, u, v = madd(p[6], 7007646202199374189, t, u, v)
	t, u, v = madd(z[7], x[2], t, u, v)
	t, u, v = madd(p[7], 8309663745306966876, t, u, v)
	t, u, v = madd(z[8], x[1], t, u, v)
	t, u, v = madd(p[8], 13396937790620762833, t, u, v)
	t, u, v = madd(z[9], x[0], t, u, v)
	p[9] = v * 6320096088022170847
	u, v, _ = madd(p[9], 12261662321546035425, t, u, v)
	t, u, v = madd(z[0], x[10], 0, u, v)
	t, u, v = madd(p[0], 5187029754367492800, t, u, v)
	t, u, v = madd(z[1], x[9], t, u, v)
	t, u, v = madd(p[1], 14052882962215374979, t, u, v)
	t, u, v = madd(z[2], x[8], t, u, v)
	t, u, v = madd(p[2], 11824513320187351409, t, u, v)
	t, u, v = madd(z[3], x[7], t, u, v)
	t, u, v = madd(p[3], 7951817063319804812, t, u, v)
	t, u, v = madd(z[4], x[6], t, u, v)
	t, u, v = madd(p[4], 2743934072509086227, t, u, v)
	t, u, v = madd(z[5], x[5], t, u, v)
	t, u, v = madd(p[5], 16250487600803211366, t, u, v)
	t, u, v = madd(z[6], x[4], t, u, v)
	t, u, v = madd(p[6], 10440250624070677608, t, u, v)
	t, u, v = madd(z[7], x[3], t, u, v)
	t, u, v = madd(p[7], 7007646202199374189, t, u, v)
	t, u, v = madd(z[8], x[2], t, u, v)
	t, u, v = madd(p[8], 8309663745306966876, t, u, v)
	t, u, v = madd(z[9], x[1], t, u, v)
	t, u, v = madd(p[9], 13396937790620762833, t, u, v)
	t, u, v = madd(z[10], x[0], t, u, v)
	p[10] = v * 6320096088022170847
	u, v, _ = madd(p[10], 12261662321546035425, t, u, v)
	t, u, v = madd(z[0], x[11], 0, u, v)
	t, u, v = madd(p[0], 8469403868525873005, t, u, v)
	t, u, v = madd(z[1], x[10], t, u, v)
	t, u, v = madd(p[1], 5187029754367492800, t, u, v)
	t, u, v = madd(z[2], x[9], t, u, v)
	t, u, v = madd(p[2], 14052882962215374979, t, u, v)
	t, u, v = madd(z[3], x[8], t, u, v)
	t, u, v = madd(p[3], 11824513320187351409, t, u, v)
	t, u, v = madd(z[4], x[7], t, u, v)
	t, u, v = madd(p[4], 7951817063319804812, t, u, v)
	t, u, v = madd(z[5], x[6], t, u, v)
	t, u, v = madd(p[5], 2743934072509086227, t, u, v)
	t, u, v = madd(z[6], x[5], t, u, v)
	t, u, v = madd(p[6], 16250487600803211366, t, u, v)
	t, u, v = madd(z[7], x[4], t, u, v)
	t, u, v = madd(p[7], 10440250624070677608, t, u, v)
	t, u, v = madd(z[8], x[3], t, u, v)
	t, u, v = madd(p[8], 7007646202199374189, t, u, v)
	t, u, v = madd(z[9], x[2], t, u, v)
	t, u, v = madd(p[9], 8309663745306966876, t, u, v)
	t, u, v = madd(z[10], x[1], t, u, v)
	t, u, v = madd(p[10], 13396937790620762833, t, u, v)
	t, u, v = madd(z[11], x[0], t, u, v)
	p[11] = v * 6320096088022170847
	u, v, _ = madd(p[11], 12261662321546035425, t, u, v)
	t, u, v = madd(z[0], x[12], 0, u, v)
	t, u, v = madd(p[0], 3377892094264127808, t, u, v)
	t, u, v = madd(z[1], x[11], t, u, v)
	t, u, v = madd(p[1], 8469403868525873005, t, u, v)
	t, u, v = madd(z[2], x[10], t, u, v)
	t, u, v = madd(p[2], 5187029754367492800, t, u, v)
	t, u, v = madd(z[3], x[9], t, u, v)
	t, u, v = madd(p[3], 14052882962215374979, t, u, v)
	t, u, v = madd(z[4], x[8], t, u, v)
	t, u, v = madd(p[4], 11824513320187351409, t, u, v)
	t, u, v = madd(z[5], x[7], t, u, v)
	t, u, v = madd(p[5], 7951817063319804812, t, u, v)
	t, u, v = madd(z[6], x[6], t, u, v)
	t, u, v = madd(p[6], 2743934072509086227, t, u, v)
	t, u, v = madd(z[7], x[5], t, u, v)
	t, u, v = madd(p[7], 16250487600803211366, t, u, v)
	t, u, v = madd(z[8], x[4], t, u, v)
	t, u, v = madd(p[8], 10440250624070677608, t, u, v)
	t, u, v = madd(z[9], x[3], t, u, v)
	t, u, v = madd(p[9], 7007646202199374189, t, u, v)
	t, u, v = madd(z[10], x[2], t, u, v)
	t, u, v = madd(p[10], 8309663745306966876, t, u, v)
	t, u, v = madd(z[11], x[1], t, u, v)
	t, u, v = madd(p[11], 13396937790620762833, t, u, v)
	t, u, v = madd(z[12], x[0], t, u, v)
	p[12] = v * 6320096088022170847
	u, v, _ = madd(p[12], 12261662321546035425, t, u, v)
	t, u, v = madd(z[0], x[13], 0, u, v)
	t, u, v = madd(p[0], 12018175841581922000, t, u, v)
	t, u, v = madd(z[1], x[12], t, u, v)
	t, u, v = madd(p[1], 3377892094264127808, t, u, v)
	t, u, v = madd(z[2], x[11], t, u, v)
	t, u, v = madd(p[2], 8469403868525873005, t, u, v)
	t, u, v = madd(z[3], x[10], t, u, v)
	t, u, v = madd(p[3], 5187029754367492800, t, u, v)
	t, u, v = madd(z[4], x[9], t, u, v)
	t, u, v = madd(p[4], 14052882962215374979, t, u, v)
	t, u, v = madd(z[5], x[8], t, u, v)
	t, u, v = madd(p[5], 11824513320187351409, t, u, v)
	t, u, v = madd(z[6], x[7], t, u, v)
	t, u, v = madd(p[6], 7951817063319804812, t, u, v)
	t, u, v = madd(z[7], x[6], t, u, v)
	t, u, v = madd(p[7], 2743934072509086227, t, u, v)
	t, u, v = madd(z[8], x[5], t, u, v)
	t, u, v = madd(p[8], 16250487600803211366, t, u, v)
	t, u, v = madd(z[9], x[4], t, u, v)
	t, u, v = madd(p[9], 10440250624070677608, t, u, v)
	t, u, v = madd(z[10], x[3], t, u, v)
	t, u, v = madd(p[10], 7007646202199374189, t, u, v)
	t, u, v = madd(z[11], x[2], t, u, v)
	t, u, v = madd(p[11], 8309663745306966876, t, u, v)
	t, u, v = madd(z[12], x[1], t, u, v)
	t, u, v = madd(p[12], 13396937790620762833, t, u, v)
	t, u, v = madd(z[13], x[0], t, u, v)
	p[13] = v * 6320096088022170847
	u, v, _ = madd(p[13], 12261662321546035425, t, u, v)
	t, u, v = madd(z[0], x[14], 0, u, v)
	t, u, v = madd(p[0], 7124523582219552620, t, u, v)
	t, u, v = madd(z[1], x[13], t, u, v)
	t, u, v = madd(p[1], 12018175841581922000, t, u, v)
	t, u, v = madd(z[2], x[12], t, u, v)
	t, u, v = madd(p[2], 3377892094264127808, t, u, v)
	t, u, v = madd(z[3], x[11], t, u, v)
	t, u, v = madd(p[3], 8469403868525873005, t, u, v)
	t, u, v = madd(z[4], x[10], t, u, v)
	t, u, v = madd(p[4], 5187029754367492800, t, u, v)
	t, u, v = madd(z[5], x[9], t, u, v)
	t, u, v = madd(p[5], 14052882962215374979, t, u, v)
	t, u, v = madd(z[6], x[8], t, u, v)
	t, u, v = madd(p[6], 11824513320187351409, t, u, v)
	t, u, v = madd(z[7], x[7], t, u, v)
	t, u, v = madd(p[7], 7951817063319804812, t, u, v)
	t, u, v = madd(z[8], x[6], t, u, v)
	t, u, v = madd(p[8], 2743934072509086227, t, u, v)
	t, u, v = madd(z[9], x[5], t, u, v)
	t, u, v = madd(p[9], 16250487600803211366, t, u, v)
	t, u, v = madd(z[10], x[4], t, u, v)
	t, u, v = madd(p[10], 10440250624070677608, t, u, v)
	t, u, v = madd(z[11], x[3], t, u, v)
	t, u, v = madd(p[11], 7007646202199374189, t, u, v)
	t, u, v = madd(z[12], x[2], t, u, v)
	t, u, v = madd(p[12], 8309663745306966876, t, u, v)
	t, u, v = madd(z[13], x[1], t, u, v)
	t, u, v = madd(p[13], 13396937790620762833, t, u, v)
	t, u, v = madd(z[14], x[0], t, u, v)
	p[14] = v * 6320096088022170847
	u, v, _ = madd(p[14], 12261662321546035425, t, u, v)
	t, u, v = madd(z[0], x[15], 0, u, v)
	t, u, v = madd(p[0], 8808840814487893967, t, u, v)
	t, u, v = madd(z[1], x[14], t, u, v)
	t, u, v = madd(p[1], 7124523582219552620, t, u, v)
	t, u, v = madd(z[2], x[13], t, u, v)
	t, u, v = madd(p[2], 12018175841581922000, t, u, v)
	t, u, v = madd(z[3], x[12], t, u, v)
	t, u, v = madd(p[3], 3377892094264127808, t, u, v)
	t, u, v = madd(z[4], x[11], t, u, v)
	t, u, v = madd(p[4], 8469403868525873005, t, u, v)
	t, u, v = madd(z[5], x[10], t, u, v)
	t, u, v = madd(p[5], 5187029754367492800, t, u, v)
	t, u, v = madd(z[6], x[9], t, u, v)
	t, u, v = madd(p[6], 14052882962215374979, t, u, v)
	t, u, v = madd(z[7], x[8], t, u, v)
	t, u, v = madd(p[7], 11824513320187351409, t, u, v)
	t, u, v = madd(z[8], x[7], t, u, v)
	t, u, v = madd(p[8], 7951817063319804812, t, u, v)
	t, u, v = madd(z[9], x[6], t, u, v)
	t, u, v = madd(p[9], 2743934072509086227, t, u, v)
	t, u, v = madd(z[10], x[5], t, u, v)
	t, u, v = madd(p[10], 16250487600803211366, t, u, v)
	t, u, v = madd(z[11], x[4], t, u, v)
	t, u, v = madd(p[11], 10440250624070677608, t, u, v)
	t, u, v = madd(z[12], x[3], t, u, v)
	t, u, v = madd(p[12], 7007646202199374189, t, u, v)
	t, u, v = madd(z[13], x[2], t, u, v)
	t, u, v = madd(p[13], 8309663745306966876, t, u, v)
	t, u, v = madd(z[14], x[1], t, u, v)
	t, u, v = madd(p[14], 13396937790620762833, t, u, v)
	t, u, v = madd(z[15], x[0], t, u, v)
	p[15] = v * 6320096088022170847
	u, v, _ = madd(p[15], 12261662321546035425, t, u, v)
	t, u, v = madd(z[1], x[15], 0, u, v)
	t, u, v = madd(p[1], 8808840814487893967, t, u, v)
	t, u, v = madd(z[2], x[14], t, u, v)
	t, u, v = madd(p[2], 7124523582219552620, t, u, v)
	t, u, v = madd(z[3], x[13], t, u, v)
	t, u, v = madd(p[3], 12018175841581922000, t, u, v)
	t, u, v = madd(z[4], x[12], t, u, v)
	t, u, v = madd(p[4], 3377892094264127808, t, u, v)
	t, u, v = madd(z[5], x[11], t, u, v)
	t, u, v = madd(p[5], 8469403868525873005, t, u, v)
	t, u, v = madd(z[6], x[10], t, u, v)
	t, u, v = madd(p[6], 5187029754367492800, t, u, v)
	t, u, v = madd(z[7], x[9], t, u, v)
	t, u, v = madd(p[7], 14052882962215374979, t, u, v)
	t, u, v = madd(z[8], x[8], t, u, v)
	t, u, v = madd(p[8], 11824513320187351409, t, u, v)
	t, u, v = madd(z[9], x[7], t, u, v)
	t, u, v = madd(p[9], 7951817063319804812, t, u, v)
	t, u, v = madd(z[10], x[6], t, u, v)
	t, u, v = madd(p[10], 2743934072509086227, t, u, v)
	t, u, v = madd(z[11], x[5], t, u, v)
	t, u, v = madd(p[11], 16250487600803211366, t, u, v)
	t, u, v = madd(z[12], x[4], t, u, v)
	t, u, v = madd(p[12], 10440250624070677608, t, u, v)
	t, u, v = madd(z[13], x[3], t, u, v)
	t, u, v = madd(p[13], 7007646202199374189, t, u, v)
	t, u, v = madd(z[14], x[2], t, u, v)
	t, u, v = madd(p[14], 8309663745306966876, t, u, v)
	t, u, v = madd(z[15], x[1], t, u, v)
	u, v, p[0] = madd(p[15], 13396937790620762833, t, u, v)
	t, u, v = madd(z[2], x[15], 0, u, v)
	t, u, v = madd(p[2], 8808840814487893967, t, u, v)
	t, u, v = madd(z[3], x[14], t, u, v)
	t, u, v = madd(p[3], 7124523582219552620, t, u, v)
	t, u, v = madd(z[4], x[13], t, u, v)
	t, u, v = madd(p[4], 12018175841581922000, t, u, v)
	t, u, v = madd(z[5], x[12], t, u, v)
	t, u, v = madd(p[5], 3377892094264127808, t, u, v)
	t, u, v = madd(z[6], x[11], t, u, v)
	t, u, v = madd(p[6], 8469403868525873005, t, u, v)
	t, u, v = madd(z[7], x[10], t, u, v)
	t, u, v = madd(p[7], 5187029754367492800, t, u, v)
	t, u, v = madd(z[8], x[9], t, u, v)
	t, u, v = madd(p[8], 14052882962215374979, t, u, v)
	t, u, v = madd(z[9], x[8], t, u, v)
	t, u, v = madd(p[9], 11824513320187351409, t, u, v)
	t, u, v = madd(z[10], x[7], t, u, v)
	t, u, v = madd(p[10], 7951817063319804812, t, u, v)
	t, u, v = madd(z[11], x[6], t, u, v)
	t, u, v = madd(p[11], 2743934072509086227, t, u, v)
	t, u, v = madd(z[12], x[5], t, u, v)
	t, u, v = madd(p[12], 16250487600803211366, t, u, v)
	t, u, v = madd(z[13], x[4], t, u, v)
	t, u, v = madd(p[13], 10440250624070677608, t, u, v)
	t, u, v = madd(z[14], x[3], t, u, v)
	t, u, v = madd(p[14], 7007646202199374189, t, u, v)
	t, u, v = madd(z[15], x[2], t, u, v)
	u, v, p[1] = madd(p[15], 8309663745306966876, t, u, v)
	t, u, v = madd(z[3], x[15], 0, u, v)
	t, u, v = madd(p[3], 8808840814487893967, t, u, v)
	t, u, v = madd(z[4], x[14], t, u, v)
	t, u, v = madd(p[4], 7124523582219552620, t, u, v)
	t, u, v = madd(z[5], x[13], t, u, v)
	t, u, v = madd(p[5], 12018175841581922000, t, u, v)
	t, u, v = madd(z[6], x[12], t, u, v)
	t, u, v = madd(p[6], 3377892094264127808, t, u, v)
	t, u, v = madd(z[7], x[11], t, u, v)
	t, u, v = madd(p[7], 8469403868525873005, t, u, v)
	t, u, v = madd(z[8], x[10], t, u, v)
	t, u, v = madd(p[8], 5187029754367492800, t, u, v)
	t, u, v = madd(z[9], x[9], t, u, v)
	t, u, v = madd(p[9], 14052882962215374979, t, u, v)
	t, u, v = madd(z[10], x[8], t, u, v)
	t, u, v = madd(p[10], 11824513320187351409, t, u, v)
	t, u, v = madd(z[11], x[7], t, u, v)
	t, u, v = madd(p[11], 7951817063319804812, t, u, v)
	t, u, v = madd(z[12], x[6], t, u, v)
	t, u, v = madd(p[12], 2743934072509086227, t, u, v)
	t, u, v = madd(z[13], x[5], t, u, v)
	t, u, v = madd(p[13], 16250487600803211366, t, u, v)
	t, u, v = madd(z[14], x[4], t, u, v)
	t, u, v = madd(p[14], 10440250624070677608, t, u, v)
	t, u, v = madd(z[15], x[3], t, u, v)
	u, v, p[2] = madd(p[15], 7007646202199374189, t, u, v)
	t, u, v = madd(z[4], x[15], 0, u, v)
	t, u, v = madd(p[4], 8808840814487893967, t, u, v)
	t, u, v = madd(z[5], x[14], t, u, v)
	t, u, v = madd(p[5], 7124523582219552620, t, u, v)
	t, u, v = madd(z[6], x[13], t, u, v)
	t, u, v = madd(p[6], 12018175841581922000, t, u, v)
	t, u, v = madd(z[7], x[12], t, u, v)
	t, u, v = madd(p[7], 3377892094264127808, t, u, v)
	t, u, v = madd(z[8], x[11], t, u, v)
	t, u, v = madd(p[8], 8469403868525873005, t, u, v)
	t, u, v = madd(z[9], x[10], t, u, v)
	t, u, v = madd(p[9], 5187029754367492800, t, u, v)
	t, u, v = madd(z[10], x[9], t, u, v)
	t, u, v = madd(p[10], 14052882962215374979, t, u, v)
	t, u, v = madd(z[11], x[8], t, u, v)
	t, u, v = madd(p[11], 11824513320187351409, t, u, v)
	t, u, v = madd(z[12], x[7], t, u, v)
	t, u, v = madd(p[12], 7951817063319804812, t, u, v)
	t, u, v = madd(z[13], x[6], t, u, v)
	t, u, v = madd(p[13], 2743934072509086227, t, u, v)
	t, u, v = madd(z[14], x[5], t, u, v)
	t, u, v = madd(p[14], 16250487600803211366, t, u, v)
	t, u, v = madd(z[15], x[4], t, u, v)
	u, v, p[3] = madd(p[15], 10440250624070677608, t, u, v)
	t, u, v = madd(z[5], x[15], 0, u, v)
	t, u, v = madd(p[5], 8808840814487893967, t, u, v)
	t, u, v = madd(z[6], x[14], t, u, v)
	t, u, v = madd(p[6], 7124523582219552620, t, u, v)
	t, u, v = madd(z[7], x[13], t, u, v)
	t, u, v = madd(p[7], 12018175841581922000, t, u, v)
	t, u, v = madd(z[8], x[12], t, u, v)
	t, u, v = madd(p[8], 3377892094264127808, t, u, v)
	t, u, v = madd(z[9], x[11], t, u, v)
	t, u, v = madd(p[9], 8469403868525873005, t, u, v)
	t, u, v = madd(z[10], x[10], t, u, v)
	t, u, v = madd(p[10], 5187029754367492800, t, u, v)
	t, u, v = madd(z[11], x[9], t, u, v)
	t, u, v = madd(p[11], 14052882962215374979, t, u, v)
	t, u, v = madd(z[12], x[8], t, u, v)
	t, u, v = madd(p[12], 11824513320187351409, t, u, v)
	t, u, v = madd(z[13], x[7], t, u, v)
	t, u, v = madd(p[13], 7951817063319804812, t, u, v)
	t, u, v = madd(z[14], x[6], t, u, v)
	t, u, v = madd(p[14], 2743934072509086227, t, u, v)
	t, u, v = madd(z[15], x[5], t, u, v)
	u, v, p[4] = madd(p[15], 16250487600803211366, t, u, v)
	t, u, v = madd(z[6], x[15], 0, u, v)
	t, u, v = madd(p[6], 8808840814487893967, t, u, v)
	t, u, v = madd(z[7], x[14], t, u, v)
	t, u, v = madd(p[7], 7124523582219552620, t, u, v)
	t, u, v = madd(z[8], x[13], t, u, v)
	t, u, v = madd(p[8], 12018175841581922000, t, u, v)
	t, u, v = madd(z[9], x[12], t, u, v)
	t, u, v = madd(p[9], 3377892094264127808, t, u, v)
	t, u, v = madd(z[10], x[11], t, u, v)
	t, u, v = madd(p[10], 8469403868525873005, t, u, v)
	t, u, v = madd(z[11], x[10], t, u, v)
	t, u, v = madd(p[11], 5187029754367492800, t, u, v)
	t, u, v = madd(z[12], x[9], t, u, v)
	t, u, v = madd(p[12], 14052882962215374979, t, u, v)
	t, u, v = madd(z[13], x[8], t, u, v)
	t, u, v = madd(p[13], 11824513320187351409, t, u, v)
	t, u, v = madd(z[14], x[7], t, u, v)
	t, u, v = madd(p[14], 7951817063319804812, t, u, v)
	t, u, v = madd(z[15], x[6], t, u, v)
	u, v, p[5] = madd(p[15], 2743934072509086227, t, u, v)
	t, u, v = madd(z[7], x[15], 0, u, v)
	t, u, v = madd(p[7], 8808840814487893967, t, u, v)
	t, u, v = madd(z[8], x[14], t, u, v)
	t, u, v = madd(p[8], 7124523582219552620, t, u, v)
	t, u, v = madd(z[9], x[13], t, u, v)
	t, u, v = madd(p[9], 12018175841581922000, t, u, v)
	t, u, v = madd(z[10], x[12], t, u, v)
	t, u, v = madd(p[10], 3377892094264127808, t, u, v)
	t, u, v = madd(z[11], x[11], t, u, v)
	t, u, v = madd(p[11], 8469403868525873005, t, u, v)
	t, u, v = madd(z[12], x[10], t, u, v)
	t, u, v = madd(p[12], 5187029754367492800, t, u, v)
	t, u, v = madd(z[13], x[9], t, u, v)
	t, u, v = madd(p[13], 14052882962215374979, t, u, v)
	t, u, v = madd(z[14], x[8], t, u, v)
	t, u, v = madd(p[14], 11824513320187351409, t, u, v)
	t, u, v = madd(z[15], x[7], t, u, v)
	u, v, p[6] = madd(p[15], 7951817063319804812, t, u, v)
	t, u, v = madd(z[8], x[15], 0, u, v)
	t, u, v = madd(p[8], 8808840814487893967, t, u, v)
	t, u, v = madd(z[9], x[14], t, u, v)
	t, u, v = madd(p[9], 7124523582219552620, t, u, v)
	t, u, v = madd(z[10], x[13], t, u, v)
	t, u, v = madd(p[10], 12018175841581922000, t, u, v)
	t, u, v = madd(z[11], x[12], t, u, v)
	t, u, v = madd(p[11], 3377892094264127808, t, u, v)
	t, u, v = madd(z[12], x[11], t, u, v)
	t, u, v = madd(p[12], 8469403868525873005, t, u, v)
	t, u, v = madd(z[13], x[10], t, u, v)
	t, u, v = madd(p[13], 5187029754367492800, t, u, v)
	t, u, v = madd(z[14], x[9], t, u, v)
	t, u, v = madd(p[14], 14052882962215374979, t, u, v)
	t, u, v = madd(z[15], x[8], t, u, v)
	u, v, p[7] = madd(p[15], 11824513320187351409, t, u, v)
	t, u, v = madd(z[9], x[15], 0, u, v)
	t, u, v = madd(p[9], 8808840814487893967, t, u, v)
	t, u, v = madd(z[10], x[14], t, u, v)
	t, u, v = madd(p[10], 7124523582219552620, t, u, v)
	t, u, v = madd(z[11], x[13], t, u, v)
	t, u, v = madd(p[11], 12018175841581922000, t, u, v)
	t, u, v = madd(z[12], x[12], t, u, v)
	t, u, v = madd(p[12], 3377892094264127808, t, u, v)
	t, u, v = madd(z[13], x[11], t, u, v)
	t, u, v = madd(p[13], 8469403868525873005, t, u, v)
	t, u, v = madd(z[14], x[10], t, u, v)
	t, u, v = madd(p[14], 5187029754367492800, t, u, v)
	t, u, v = madd(z[15], x[9], t, u, v)
	u, v, p[8] = madd(p[15], 14052882962215374979, t, u, v)
	t, u, v = madd(z[10], x[15], 0, u, v)
	t, u, v = madd(p[10], 8808840814487893967, t, u, v)
	t, u, v = madd(z[11], x[14], t, u, v)
	t, u, v = madd(p[11], 7124523582219552620, t, u, v)
	t, u, v = madd(z[12], x[13], t, u, v)
	t, u, v = madd(p[12], 12018175841581922000, t, u, v)
	t, u, v = madd(z[13], x[12], t, u, v)
	t, u, v = madd(p[13], 3377892094264127808, t, u, v)
	t, u, v = madd(z[14], x[11], t, u, v)
	t, u, v = madd(p[14], 8469403868525873005, t, u, v)
	t, u, v = madd(z[15], x[10], t, u, v)
	u, v, p[9] = madd(p[15], 5187029754367492800, t, u, v)
	t, u, v = madd(z[11], x[15], 0, u, v)
	t, u, v = madd(p[11], 8808840814487893967, t, u, v)
	t, u, v = madd(z[12], x[14], t, u, v)
	t, u, v = madd(p[12], 7124523582219552620, t, u, v)
	t, u, v = madd(z[13], x[13], t, u, v)
	t, u, v = madd(p[13], 12018175841581922000, t, u, v)
	t, u, v = madd(z[14], x[12], t, u, v)
	t, u, v = madd(p[14], 3377892094264127808, t, u, v)
	t, u, v = madd(z[15], x[11], t, u, v)
	u, v, p[10] = madd(p[15], 8469403868525873005, t, u, v)
	t, u, v = madd(z[12], x[15], 0, u, v)
	t, u, v = madd(p[12], 8808840814487893967, t, u, v)
	t, u, v = madd(z[13], x[14], t, u, v)
	t, u, v = madd(p[13], 7124523582219552620, t, u, v)
	t, u, v = madd(z[14], x[13], t, u, v)
	t, u, v = madd(p[14], 12018175841581922000, t, u, v)
	t, u, v = madd(z[15], x[12], t, u, v)
	u, v, p[11] = madd(p[15], 3377892094264127808, t, u, v)
	t, u, v = madd(z[13], x[15], 0, u, v)
	t, u, v = madd(p[13], 8808840814487893967, t, u, v)
	t, u, v = madd(z[14], x[14], t, u, v)
	t, u, v = madd(p[14], 7124523582219552620, t, u, v)
	t, u, v = madd(z[15], x[13], t, u, v)
	u, v, p[12] = madd(p[15], 12018175841581922000, t, u, v)
	t, u, v = madd(z[14], x[15], 0, u, v)
	t, u, v = madd(p[14], 8808840814487893967, t, u, v)
	t, u, v = madd(z[15], x[14], t, u, v)
	u, v, p[13] = madd(p[15], 7124523582219552620, t, u, v)
	t, u, v = madd(z[15], x[15], t, u, v)
	u, v, p[14] = madd(p[15], 8808840814487893967, t, u, v)

	p[15] = v
	z[15] = p[15]
	z[14] = p[14]
	z[13] = p[13]
	z[12] = p[12]
	z[11] = p[11]
	z[10] = p[10]
	z[9] = p[9]
	z[8] = p[8]
	z[7] = p[7]
	z[6] = p[6]
	z[5] = p[5]
	z[4] = p[4]
	z[3] = p[3]
	z[2] = p[2]
	z[1] = p[1]
	z[0] = p[0]
	// copy(z[:], p[:])

	// if z > q --> z -= q
	// note: this is NOT constant time
	if !(z[15] < 8808840814487893967 || (z[15] == 8808840814487893967 && (z[14] < 7124523582219552620 || (z[14] == 7124523582219552620 && (z[13] < 12018175841581922000 || (z[13] == 12018175841581922000 && (z[12] < 3377892094264127808 || (z[12] == 3377892094264127808 && (z[11] < 8469403868525873005 || (z[11] == 8469403868525873005 && (z[10] < 5187029754367492800 || (z[10] == 5187029754367492800 && (z[9] < 14052882962215374979 || (z[9] == 14052882962215374979 && (z[8] < 11824513320187351409 || (z[8] == 11824513320187351409 && (z[7] < 7951817063319804812 || (z[7] == 7951817063319804812 && (z[6] < 2743934072509086227 || (z[6] == 2743934072509086227 && (z[5] < 16250487600803211366 || (z[5] == 16250487600803211366 && (z[4] < 10440250624070677608 || (z[4] == 10440250624070677608 && (z[3] < 7007646202199374189 || (z[3] == 7007646202199374189 && (z[2] < 8309663745306966876 || (z[2] == 8309663745306966876 && (z[1] < 13396937790620762833 || (z[1] == 13396937790620762833 && (z[0] < 12261662321546035425))))))))))))))))))))))))))))))) {
		var b uint64
		z[0], b = bits.Sub64(z[0], 12261662321546035425, 0)
		z[1], b = bits.Sub64(z[1], 13396937790620762833, b)
		z[2], b = bits.Sub64(z[2], 8309663745306966876, b)
		z[3], b = bits.Sub64(z[3], 7007646202199374189, b)
		z[4], b = bits.Sub64(z[4], 10440250624070677608, b)
		z[5], b = bits.Sub64(z[5], 16250487600803211366, b)
		z[6], b = bits.Sub64(z[6], 2743934072509086227, b)
		z[7], b = bits.Sub64(z[7], 7951817063319804812, b)
		z[8], b = bits.Sub64(z[8], 11824513320187351409, b)
		z[9], b = bits.Sub64(z[9], 14052882962215374979, b)
		z[10], b = bits.Sub64(z[10], 5187029754367492800, b)
		z[11], b = bits.Sub64(z[11], 8469403868525873005, b)
		z[12], b = bits.Sub64(z[12], 3377892094264127808, b)
		z[13], b = bits.Sub64(z[13], 12018175841581922000, b)
		z[14], b = bits.Sub64(z[14], 7124523582219552620, b)
		z[15], _ = bits.Sub64(z[15], 8808840814487893967, b)
	}
	return z
}

func BenchmarkMulCIOSELEMENT16(b *testing.B) {
	x := Element16{
		8452067712471847352,
		1883068564734058565,
		8519413212565122908,
		888849372499526792,
		17233260186349718968,
		2674839780594575882,
		6331652046235113056,
		456656295101114164,
		4334751838819928478,
		16692699993954756105,
		9964487771654714340,
		7433462448299738628,
		797774406065236416,
		6816520182294048632,
		7673490596787198093,
		4650945872615123414,
	}
	benchResElement16.SetOne()
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		benchResElement16.mulCIOS(&x)
	}
}

func BenchmarkMulFIPSELEMENT16(b *testing.B) {
	x := Element16{
		8452067712471847352,
		1883068564734058565,
		8519413212565122908,
		888849372499526792,
		17233260186349718968,
		2674839780594575882,
		6331652046235113056,
		456656295101114164,
		4334751838819928478,
		16692699993954756105,
		9964487771654714340,
		7433462448299738628,
		797774406065236416,
		6816520182294048632,
		7673490596787198093,
		4650945872615123414,
	}
	benchResElement16.SetOne()
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		benchResElement16.mulFIPS(&x)
	}
}

func BenchmarkMulNoCarryELEMENT16(b *testing.B) {
	x := Element16{
		8452067712471847352,
		1883068564734058565,
		8519413212565122908,
		888849372499526792,
		17233260186349718968,
		2674839780594575882,
		6331652046235113056,
		456656295101114164,
		4334751838819928478,
		16692699993954756105,
		9964487771654714340,
		7433462448299738628,
		797774406065236416,
		6816520182294048632,
		7673490596787198093,
		4650945872615123414,
	}
	benchResElement16.SetOne()
	b.ResetTimer()
	for i := 0; i < b.N; i++ {
		benchResElement16.mulNoCarry(&x)
	}
}

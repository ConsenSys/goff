// Copyright 2020 ConsenSys AG
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// field modulus q =
//
// 17031549882518742086834365166408007783775716582451666136820134184940733893448282061767233881709378216268974992230570962294291359641268344807644277201581805998740268770353292171481898315175640805754895338469504804521015237654705665027051209261533499050272586907849720279449953767728325146447487365000633575251951408038236944886243840331460531750690119380185956363883787368732535075196763261643139826597911080196290270149490903991104373964092493551933317757233191036766535333041863787
// Code generated by goff DO NOT EDIT
// Element25 are assumed to be in Montgomery form in all methods

// /!\ WARNING /!\
// this code has not been audited and is provided as-is. In particular,
// there is no security guarantees such as constant time implementation
// or side-channel attack resistance
// /!\ WARNING /!\

// Package generated (generated by goff) contains field arithmetics operations
package generated

import (
	"crypto/rand"
	"encoding/binary"
	"io"
	"math/big"
	"math/bits"
	"sync"
	"unsafe"
)

// Element25 represents a field element stored on 25 words (uint64)
// Element25 are assumed to be in Montgomery form in all methods
type Element25 [25]uint64

// Element25Limbs number of 64 bits words needed to represent Element25
const Element25Limbs = 25

// Element25Bits number bits needed to represent Element25
const Element25Bits = 1599

// SetUint64 z = v, sets z LSB to v (non-Montgomery form) and convert z to Montgomery form
func (z *Element25) SetUint64(v uint64) *Element25 {
	z[0] = v
	z[1] = 0
	z[2] = 0
	z[3] = 0
	z[4] = 0
	z[5] = 0
	z[6] = 0
	z[7] = 0
	z[8] = 0
	z[9] = 0
	z[10] = 0
	z[11] = 0
	z[12] = 0
	z[13] = 0
	z[14] = 0
	z[15] = 0
	z[16] = 0
	z[17] = 0
	z[18] = 0
	z[19] = 0
	z[20] = 0
	z[21] = 0
	z[22] = 0
	z[23] = 0
	z[24] = 0
	return z.ToMont()
}

// Set z = x
func (z *Element25) Set(x *Element25) *Element25 {
	z[0] = x[0]
	z[1] = x[1]
	z[2] = x[2]
	z[3] = x[3]
	z[4] = x[4]
	z[5] = x[5]
	z[6] = x[6]
	z[7] = x[7]
	z[8] = x[8]
	z[9] = x[9]
	z[10] = x[10]
	z[11] = x[11]
	z[12] = x[12]
	z[13] = x[13]
	z[14] = x[14]
	z[15] = x[15]
	z[16] = x[16]
	z[17] = x[17]
	z[18] = x[18]
	z[19] = x[19]
	z[20] = x[20]
	z[21] = x[21]
	z[22] = x[22]
	z[23] = x[23]
	z[24] = x[24]
	return z
}

// SetZero z = 0
func (z *Element25) SetZero() *Element25 {
	z[0] = 0
	z[1] = 0
	z[2] = 0
	z[3] = 0
	z[4] = 0
	z[5] = 0
	z[6] = 0
	z[7] = 0
	z[8] = 0
	z[9] = 0
	z[10] = 0
	z[11] = 0
	z[12] = 0
	z[13] = 0
	z[14] = 0
	z[15] = 0
	z[16] = 0
	z[17] = 0
	z[18] = 0
	z[19] = 0
	z[20] = 0
	z[21] = 0
	z[22] = 0
	z[23] = 0
	z[24] = 0
	return z
}

// SetOne z = 1 (in Montgomery form)
func (z *Element25) SetOne() *Element25 {
	z[0] = 13219686579207014186
	z[1] = 4976707058118266663
	z[2] = 7321883394569790402
	z[3] = 18157123287541511096
	z[4] = 5486212472534663966
	z[5] = 1216360420907202463
	z[6] = 16565665225852193075
	z[7] = 8786347122910357902
	z[8] = 10083845431368204440
	z[9] = 5724650491699777920
	z[10] = 9957415777039831677
	z[11] = 17054346286293463784
	z[12] = 7144373476268110709
	z[13] = 2877383804461189265
	z[14] = 4562068339697798680
	z[15] = 9480856517441008084
	z[16] = 16361481737057190233
	z[17] = 5827178164125708125
	z[18] = 9529711748393982965
	z[19] = 9947969444461417921
	z[20] = 9763521184706989138
	z[21] = 15613797786728016669
	z[22] = 2229065222429085393
	z[23] = 11206088568625287715
	z[24] = 4314509851878744066
	return z
}

// Neg z = q - x
func (z *Element25) Neg(x *Element25) *Element25 {
	if x.IsZero() {
		return z.SetZero()
	}
	var borrow uint64
	z[0], borrow = bits.Sub64(2613528747251268715, x[0], 0)
	z[1], borrow = bits.Sub64(15958390544650418284, x[1], borrow)
	z[2], borrow = bits.Sub64(14785802376424656414, x[2], borrow)
	z[3], borrow = bits.Sub64(9368182429938796067, x[3], borrow)
	z[4], borrow = bits.Sub64(6480265800587443824, x[4], borrow)
	z[5], borrow = bits.Sub64(8615191826401174576, x[5], borrow)
	z[6], borrow = bits.Sub64(10163911460783455078, x[6], borrow)
	z[7], borrow = bits.Sub64(14053570512254372664, x[7], borrow)
	z[8], borrow = bits.Sub64(13404821358025449395, x[8], borrow)
	z[9], borrow = bits.Sub64(6361046791004886847, x[9], borrow)
	z[10], borrow = bits.Sub64(13468036185189635777, x[10], borrow)
	z[11], borrow = bits.Sub64(696198893708043915, x[11], borrow)
	z[12], borrow = bits.Sub64(5651185298720720453, x[12], borrow)
	z[13], borrow = bits.Sub64(17008052171478956983, x[13], borrow)
	z[14], borrow = bits.Sub64(16165709903860652275, x[14], borrow)
	z[15], borrow = bits.Sub64(4482943778134271765, x[15], borrow)
	z[16], borrow = bits.Sub64(1042631168326180691, x[16], borrow)
	z[17], borrow = bits.Sub64(6309782954791921745, x[17], borrow)
	z[18], borrow = bits.Sub64(4458516162657784325, x[18], borrow)
	z[19], borrow = bits.Sub64(13472759351478842655, x[19], borrow)
	z[20], borrow = bits.Sub64(4341611444501281238, x[20], borrow)
	z[21], borrow = bits.Sub64(1416473143490767473, x[21], borrow)
	z[22], borrow = bits.Sub64(8108839425640233111, x[22], borrow)
	z[23], borrow = bits.Sub64(12843699789396907758, x[23], borrow)
	z[24], _ = bits.Sub64(7066117110915403774, x[24], borrow)
	return z
}

// Div z = x*y^-1 mod q
func (z *Element25) Div(x, y *Element25) *Element25 {
	var yInv Element25
	yInv.Inverse(y)
	z.Mul(x, &yInv)
	return z
}

// Equal returns z == x
func (z *Element25) Equal(x *Element25) bool {
	return (z[24] == x[24]) && (z[23] == x[23]) && (z[22] == x[22]) && (z[21] == x[21]) && (z[20] == x[20]) && (z[19] == x[19]) && (z[18] == x[18]) && (z[17] == x[17]) && (z[16] == x[16]) && (z[15] == x[15]) && (z[14] == x[14]) && (z[13] == x[13]) && (z[12] == x[12]) && (z[11] == x[11]) && (z[10] == x[10]) && (z[9] == x[9]) && (z[8] == x[8]) && (z[7] == x[7]) && (z[6] == x[6]) && (z[5] == x[5]) && (z[4] == x[4]) && (z[3] == x[3]) && (z[2] == x[2]) && (z[1] == x[1]) && (z[0] == x[0])
}

// IsZero returns z == 0
func (z *Element25) IsZero() bool {
	return (z[24] | z[23] | z[22] | z[21] | z[20] | z[19] | z[18] | z[17] | z[16] | z[15] | z[14] | z[13] | z[12] | z[11] | z[10] | z[9] | z[8] | z[7] | z[6] | z[5] | z[4] | z[3] | z[2] | z[1] | z[0]) == 0
}

// field modulus stored as big.Int
var _element25ModulusBigInt big.Int
var onceelement25Modulus sync.Once

func element25ModulusBigInt() *big.Int {
	onceelement25Modulus.Do(func() {
		_element25ModulusBigInt.SetString("17031549882518742086834365166408007783775716582451666136820134184940733893448282061767233881709378216268974992230570962294291359641268344807644277201581805998740268770353292171481898315175640805754895338469504804521015237654705665027051209261533499050272586907849720279449953767728325146447487365000633575251951408038236944886243840331460531750690119380185956363883787368732535075196763261643139826597911080196290270149490903991104373964092493551933317757233191036766535333041863787", 10)
	})
	return &_element25ModulusBigInt
}

// Inverse z = x^-1 mod q
// note: allocates a big.Int (math/big)
func (z *Element25) Inverse(x *Element25) *Element25 {
	var _xNonMont big.Int
	x.ToBigIntRegular(&_xNonMont)
	_xNonMont.ModInverse(&_xNonMont, element25ModulusBigInt())
	z.SetBigInt(&_xNonMont)
	return z
}

// SetRandom sets z to a random element < q
func (z *Element25) SetRandom() *Element25 {
	bytes := make([]byte, 200)
	io.ReadFull(rand.Reader, bytes)
	z[0] = binary.BigEndian.Uint64(bytes[0:8])
	z[1] = binary.BigEndian.Uint64(bytes[8:16])
	z[2] = binary.BigEndian.Uint64(bytes[16:24])
	z[3] = binary.BigEndian.Uint64(bytes[24:32])
	z[4] = binary.BigEndian.Uint64(bytes[32:40])
	z[5] = binary.BigEndian.Uint64(bytes[40:48])
	z[6] = binary.BigEndian.Uint64(bytes[48:56])
	z[7] = binary.BigEndian.Uint64(bytes[56:64])
	z[8] = binary.BigEndian.Uint64(bytes[64:72])
	z[9] = binary.BigEndian.Uint64(bytes[72:80])
	z[10] = binary.BigEndian.Uint64(bytes[80:88])
	z[11] = binary.BigEndian.Uint64(bytes[88:96])
	z[12] = binary.BigEndian.Uint64(bytes[96:104])
	z[13] = binary.BigEndian.Uint64(bytes[104:112])
	z[14] = binary.BigEndian.Uint64(bytes[112:120])
	z[15] = binary.BigEndian.Uint64(bytes[120:128])
	z[16] = binary.BigEndian.Uint64(bytes[128:136])
	z[17] = binary.BigEndian.Uint64(bytes[136:144])
	z[18] = binary.BigEndian.Uint64(bytes[144:152])
	z[19] = binary.BigEndian.Uint64(bytes[152:160])
	z[20] = binary.BigEndian.Uint64(bytes[160:168])
	z[21] = binary.BigEndian.Uint64(bytes[168:176])
	z[22] = binary.BigEndian.Uint64(bytes[176:184])
	z[23] = binary.BigEndian.Uint64(bytes[184:192])
	z[24] = binary.BigEndian.Uint64(bytes[192:200])
	z[24] %= 7066117110915403774

	// if z > q --> z -= q
	// note: this is NOT constant time
	if !(z[24] < 7066117110915403774 || (z[24] == 7066117110915403774 && (z[23] < 12843699789396907758 || (z[23] == 12843699789396907758 && (z[22] < 8108839425640233111 || (z[22] == 8108839425640233111 && (z[21] < 1416473143490767473 || (z[21] == 1416473143490767473 && (z[20] < 4341611444501281238 || (z[20] == 4341611444501281238 && (z[19] < 13472759351478842655 || (z[19] == 13472759351478842655 && (z[18] < 4458516162657784325 || (z[18] == 4458516162657784325 && (z[17] < 6309782954791921745 || (z[17] == 6309782954791921745 && (z[16] < 1042631168326180691 || (z[16] == 1042631168326180691 && (z[15] < 4482943778134271765 || (z[15] == 4482943778134271765 && (z[14] < 16165709903860652275 || (z[14] == 16165709903860652275 && (z[13] < 17008052171478956983 || (z[13] == 17008052171478956983 && (z[12] < 5651185298720720453 || (z[12] == 5651185298720720453 && (z[11] < 696198893708043915 || (z[11] == 696198893708043915 && (z[10] < 13468036185189635777 || (z[10] == 13468036185189635777 && (z[9] < 6361046791004886847 || (z[9] == 6361046791004886847 && (z[8] < 13404821358025449395 || (z[8] == 13404821358025449395 && (z[7] < 14053570512254372664 || (z[7] == 14053570512254372664 && (z[6] < 10163911460783455078 || (z[6] == 10163911460783455078 && (z[5] < 8615191826401174576 || (z[5] == 8615191826401174576 && (z[4] < 6480265800587443824 || (z[4] == 6480265800587443824 && (z[3] < 9368182429938796067 || (z[3] == 9368182429938796067 && (z[2] < 14785802376424656414 || (z[2] == 14785802376424656414 && (z[1] < 15958390544650418284 || (z[1] == 15958390544650418284 && (z[0] < 2613528747251268715))))))))))))))))))))))))))))))))))))))))))))))))) {
		var b uint64
		z[0], b = bits.Sub64(z[0], 2613528747251268715, 0)
		z[1], b = bits.Sub64(z[1], 15958390544650418284, b)
		z[2], b = bits.Sub64(z[2], 14785802376424656414, b)
		z[3], b = bits.Sub64(z[3], 9368182429938796067, b)
		z[4], b = bits.Sub64(z[4], 6480265800587443824, b)
		z[5], b = bits.Sub64(z[5], 8615191826401174576, b)
		z[6], b = bits.Sub64(z[6], 10163911460783455078, b)
		z[7], b = bits.Sub64(z[7], 14053570512254372664, b)
		z[8], b = bits.Sub64(z[8], 13404821358025449395, b)
		z[9], b = bits.Sub64(z[9], 6361046791004886847, b)
		z[10], b = bits.Sub64(z[10], 13468036185189635777, b)
		z[11], b = bits.Sub64(z[11], 696198893708043915, b)
		z[12], b = bits.Sub64(z[12], 5651185298720720453, b)
		z[13], b = bits.Sub64(z[13], 17008052171478956983, b)
		z[14], b = bits.Sub64(z[14], 16165709903860652275, b)
		z[15], b = bits.Sub64(z[15], 4482943778134271765, b)
		z[16], b = bits.Sub64(z[16], 1042631168326180691, b)
		z[17], b = bits.Sub64(z[17], 6309782954791921745, b)
		z[18], b = bits.Sub64(z[18], 4458516162657784325, b)
		z[19], b = bits.Sub64(z[19], 13472759351478842655, b)
		z[20], b = bits.Sub64(z[20], 4341611444501281238, b)
		z[21], b = bits.Sub64(z[21], 1416473143490767473, b)
		z[22], b = bits.Sub64(z[22], 8108839425640233111, b)
		z[23], b = bits.Sub64(z[23], 12843699789396907758, b)
		z[24], _ = bits.Sub64(z[24], 7066117110915403774, b)
	}

	return z
}

// Add z = x + y mod q
func (z *Element25) Add(x, y *Element25) *Element25 {
	var carry uint64

	z[0], carry = bits.Add64(x[0], y[0], 0)
	z[1], carry = bits.Add64(x[1], y[1], carry)
	z[2], carry = bits.Add64(x[2], y[2], carry)
	z[3], carry = bits.Add64(x[3], y[3], carry)
	z[4], carry = bits.Add64(x[4], y[4], carry)
	z[5], carry = bits.Add64(x[5], y[5], carry)
	z[6], carry = bits.Add64(x[6], y[6], carry)
	z[7], carry = bits.Add64(x[7], y[7], carry)
	z[8], carry = bits.Add64(x[8], y[8], carry)
	z[9], carry = bits.Add64(x[9], y[9], carry)
	z[10], carry = bits.Add64(x[10], y[10], carry)
	z[11], carry = bits.Add64(x[11], y[11], carry)
	z[12], carry = bits.Add64(x[12], y[12], carry)
	z[13], carry = bits.Add64(x[13], y[13], carry)
	z[14], carry = bits.Add64(x[14], y[14], carry)
	z[15], carry = bits.Add64(x[15], y[15], carry)
	z[16], carry = bits.Add64(x[16], y[16], carry)
	z[17], carry = bits.Add64(x[17], y[17], carry)
	z[18], carry = bits.Add64(x[18], y[18], carry)
	z[19], carry = bits.Add64(x[19], y[19], carry)
	z[20], carry = bits.Add64(x[20], y[20], carry)
	z[21], carry = bits.Add64(x[21], y[21], carry)
	z[22], carry = bits.Add64(x[22], y[22], carry)
	z[23], carry = bits.Add64(x[23], y[23], carry)
	z[24], carry = bits.Add64(x[24], y[24], carry)
	// if we overflowed the last addition, z >= q
	// if z >= q, z = z - q
	if carry != 0 {
		// we overflowed, so z >= q
		z[0], carry = bits.Sub64(z[0], 2613528747251268715, 0)
		z[1], carry = bits.Sub64(z[1], 15958390544650418284, carry)
		z[2], carry = bits.Sub64(z[2], 14785802376424656414, carry)
		z[3], carry = bits.Sub64(z[3], 9368182429938796067, carry)
		z[4], carry = bits.Sub64(z[4], 6480265800587443824, carry)
		z[5], carry = bits.Sub64(z[5], 8615191826401174576, carry)
		z[6], carry = bits.Sub64(z[6], 10163911460783455078, carry)
		z[7], carry = bits.Sub64(z[7], 14053570512254372664, carry)
		z[8], carry = bits.Sub64(z[8], 13404821358025449395, carry)
		z[9], carry = bits.Sub64(z[9], 6361046791004886847, carry)
		z[10], carry = bits.Sub64(z[10], 13468036185189635777, carry)
		z[11], carry = bits.Sub64(z[11], 696198893708043915, carry)
		z[12], carry = bits.Sub64(z[12], 5651185298720720453, carry)
		z[13], carry = bits.Sub64(z[13], 17008052171478956983, carry)
		z[14], carry = bits.Sub64(z[14], 16165709903860652275, carry)
		z[15], carry = bits.Sub64(z[15], 4482943778134271765, carry)
		z[16], carry = bits.Sub64(z[16], 1042631168326180691, carry)
		z[17], carry = bits.Sub64(z[17], 6309782954791921745, carry)
		z[18], carry = bits.Sub64(z[18], 4458516162657784325, carry)
		z[19], carry = bits.Sub64(z[19], 13472759351478842655, carry)
		z[20], carry = bits.Sub64(z[20], 4341611444501281238, carry)
		z[21], carry = bits.Sub64(z[21], 1416473143490767473, carry)
		z[22], carry = bits.Sub64(z[22], 8108839425640233111, carry)
		z[23], carry = bits.Sub64(z[23], 12843699789396907758, carry)
		z[24], carry = bits.Sub64(z[24], 7066117110915403774, carry)
		return z
	}

	// if z > q --> z -= q
	// note: this is NOT constant time
	if !(z[24] < 7066117110915403774 || (z[24] == 7066117110915403774 && (z[23] < 12843699789396907758 || (z[23] == 12843699789396907758 && (z[22] < 8108839425640233111 || (z[22] == 8108839425640233111 && (z[21] < 1416473143490767473 || (z[21] == 1416473143490767473 && (z[20] < 4341611444501281238 || (z[20] == 4341611444501281238 && (z[19] < 13472759351478842655 || (z[19] == 13472759351478842655 && (z[18] < 4458516162657784325 || (z[18] == 4458516162657784325 && (z[17] < 6309782954791921745 || (z[17] == 6309782954791921745 && (z[16] < 1042631168326180691 || (z[16] == 1042631168326180691 && (z[15] < 4482943778134271765 || (z[15] == 4482943778134271765 && (z[14] < 16165709903860652275 || (z[14] == 16165709903860652275 && (z[13] < 17008052171478956983 || (z[13] == 17008052171478956983 && (z[12] < 5651185298720720453 || (z[12] == 5651185298720720453 && (z[11] < 696198893708043915 || (z[11] == 696198893708043915 && (z[10] < 13468036185189635777 || (z[10] == 13468036185189635777 && (z[9] < 6361046791004886847 || (z[9] == 6361046791004886847 && (z[8] < 13404821358025449395 || (z[8] == 13404821358025449395 && (z[7] < 14053570512254372664 || (z[7] == 14053570512254372664 && (z[6] < 10163911460783455078 || (z[6] == 10163911460783455078 && (z[5] < 8615191826401174576 || (z[5] == 8615191826401174576 && (z[4] < 6480265800587443824 || (z[4] == 6480265800587443824 && (z[3] < 9368182429938796067 || (z[3] == 9368182429938796067 && (z[2] < 14785802376424656414 || (z[2] == 14785802376424656414 && (z[1] < 15958390544650418284 || (z[1] == 15958390544650418284 && (z[0] < 2613528747251268715))))))))))))))))))))))))))))))))))))))))))))))))) {
		var b uint64
		z[0], b = bits.Sub64(z[0], 2613528747251268715, 0)
		z[1], b = bits.Sub64(z[1], 15958390544650418284, b)
		z[2], b = bits.Sub64(z[2], 14785802376424656414, b)
		z[3], b = bits.Sub64(z[3], 9368182429938796067, b)
		z[4], b = bits.Sub64(z[4], 6480265800587443824, b)
		z[5], b = bits.Sub64(z[5], 8615191826401174576, b)
		z[6], b = bits.Sub64(z[6], 10163911460783455078, b)
		z[7], b = bits.Sub64(z[7], 14053570512254372664, b)
		z[8], b = bits.Sub64(z[8], 13404821358025449395, b)
		z[9], b = bits.Sub64(z[9], 6361046791004886847, b)
		z[10], b = bits.Sub64(z[10], 13468036185189635777, b)
		z[11], b = bits.Sub64(z[11], 696198893708043915, b)
		z[12], b = bits.Sub64(z[12], 5651185298720720453, b)
		z[13], b = bits.Sub64(z[13], 17008052171478956983, b)
		z[14], b = bits.Sub64(z[14], 16165709903860652275, b)
		z[15], b = bits.Sub64(z[15], 4482943778134271765, b)
		z[16], b = bits.Sub64(z[16], 1042631168326180691, b)
		z[17], b = bits.Sub64(z[17], 6309782954791921745, b)
		z[18], b = bits.Sub64(z[18], 4458516162657784325, b)
		z[19], b = bits.Sub64(z[19], 13472759351478842655, b)
		z[20], b = bits.Sub64(z[20], 4341611444501281238, b)
		z[21], b = bits.Sub64(z[21], 1416473143490767473, b)
		z[22], b = bits.Sub64(z[22], 8108839425640233111, b)
		z[23], b = bits.Sub64(z[23], 12843699789396907758, b)
		z[24], _ = bits.Sub64(z[24], 7066117110915403774, b)
	}
	return z
}

// AddAssign z = z + x mod q
func (z *Element25) AddAssign(x *Element25) *Element25 {
	var carry uint64

	z[0], carry = bits.Add64(z[0], x[0], 0)
	z[1], carry = bits.Add64(z[1], x[1], carry)
	z[2], carry = bits.Add64(z[2], x[2], carry)
	z[3], carry = bits.Add64(z[3], x[3], carry)
	z[4], carry = bits.Add64(z[4], x[4], carry)
	z[5], carry = bits.Add64(z[5], x[5], carry)
	z[6], carry = bits.Add64(z[6], x[6], carry)
	z[7], carry = bits.Add64(z[7], x[7], carry)
	z[8], carry = bits.Add64(z[8], x[8], carry)
	z[9], carry = bits.Add64(z[9], x[9], carry)
	z[10], carry = bits.Add64(z[10], x[10], carry)
	z[11], carry = bits.Add64(z[11], x[11], carry)
	z[12], carry = bits.Add64(z[12], x[12], carry)
	z[13], carry = bits.Add64(z[13], x[13], carry)
	z[14], carry = bits.Add64(z[14], x[14], carry)
	z[15], carry = bits.Add64(z[15], x[15], carry)
	z[16], carry = bits.Add64(z[16], x[16], carry)
	z[17], carry = bits.Add64(z[17], x[17], carry)
	z[18], carry = bits.Add64(z[18], x[18], carry)
	z[19], carry = bits.Add64(z[19], x[19], carry)
	z[20], carry = bits.Add64(z[20], x[20], carry)
	z[21], carry = bits.Add64(z[21], x[21], carry)
	z[22], carry = bits.Add64(z[22], x[22], carry)
	z[23], carry = bits.Add64(z[23], x[23], carry)
	z[24], carry = bits.Add64(z[24], x[24], carry)
	// if we overflowed the last addition, z >= q
	// if z >= q, z = z - q
	if carry != 0 {
		// we overflowed, so z >= q
		z[0], carry = bits.Sub64(z[0], 2613528747251268715, 0)
		z[1], carry = bits.Sub64(z[1], 15958390544650418284, carry)
		z[2], carry = bits.Sub64(z[2], 14785802376424656414, carry)
		z[3], carry = bits.Sub64(z[3], 9368182429938796067, carry)
		z[4], carry = bits.Sub64(z[4], 6480265800587443824, carry)
		z[5], carry = bits.Sub64(z[5], 8615191826401174576, carry)
		z[6], carry = bits.Sub64(z[6], 10163911460783455078, carry)
		z[7], carry = bits.Sub64(z[7], 14053570512254372664, carry)
		z[8], carry = bits.Sub64(z[8], 13404821358025449395, carry)
		z[9], carry = bits.Sub64(z[9], 6361046791004886847, carry)
		z[10], carry = bits.Sub64(z[10], 13468036185189635777, carry)
		z[11], carry = bits.Sub64(z[11], 696198893708043915, carry)
		z[12], carry = bits.Sub64(z[12], 5651185298720720453, carry)
		z[13], carry = bits.Sub64(z[13], 17008052171478956983, carry)
		z[14], carry = bits.Sub64(z[14], 16165709903860652275, carry)
		z[15], carry = bits.Sub64(z[15], 4482943778134271765, carry)
		z[16], carry = bits.Sub64(z[16], 1042631168326180691, carry)
		z[17], carry = bits.Sub64(z[17], 6309782954791921745, carry)
		z[18], carry = bits.Sub64(z[18], 4458516162657784325, carry)
		z[19], carry = bits.Sub64(z[19], 13472759351478842655, carry)
		z[20], carry = bits.Sub64(z[20], 4341611444501281238, carry)
		z[21], carry = bits.Sub64(z[21], 1416473143490767473, carry)
		z[22], carry = bits.Sub64(z[22], 8108839425640233111, carry)
		z[23], carry = bits.Sub64(z[23], 12843699789396907758, carry)
		z[24], carry = bits.Sub64(z[24], 7066117110915403774, carry)
		return z
	}

	// if z > q --> z -= q
	// note: this is NOT constant time
	if !(z[24] < 7066117110915403774 || (z[24] == 7066117110915403774 && (z[23] < 12843699789396907758 || (z[23] == 12843699789396907758 && (z[22] < 8108839425640233111 || (z[22] == 8108839425640233111 && (z[21] < 1416473143490767473 || (z[21] == 1416473143490767473 && (z[20] < 4341611444501281238 || (z[20] == 4341611444501281238 && (z[19] < 13472759351478842655 || (z[19] == 13472759351478842655 && (z[18] < 4458516162657784325 || (z[18] == 4458516162657784325 && (z[17] < 6309782954791921745 || (z[17] == 6309782954791921745 && (z[16] < 1042631168326180691 || (z[16] == 1042631168326180691 && (z[15] < 4482943778134271765 || (z[15] == 4482943778134271765 && (z[14] < 16165709903860652275 || (z[14] == 16165709903860652275 && (z[13] < 17008052171478956983 || (z[13] == 17008052171478956983 && (z[12] < 5651185298720720453 || (z[12] == 5651185298720720453 && (z[11] < 696198893708043915 || (z[11] == 696198893708043915 && (z[10] < 13468036185189635777 || (z[10] == 13468036185189635777 && (z[9] < 6361046791004886847 || (z[9] == 6361046791004886847 && (z[8] < 13404821358025449395 || (z[8] == 13404821358025449395 && (z[7] < 14053570512254372664 || (z[7] == 14053570512254372664 && (z[6] < 10163911460783455078 || (z[6] == 10163911460783455078 && (z[5] < 8615191826401174576 || (z[5] == 8615191826401174576 && (z[4] < 6480265800587443824 || (z[4] == 6480265800587443824 && (z[3] < 9368182429938796067 || (z[3] == 9368182429938796067 && (z[2] < 14785802376424656414 || (z[2] == 14785802376424656414 && (z[1] < 15958390544650418284 || (z[1] == 15958390544650418284 && (z[0] < 2613528747251268715))))))))))))))))))))))))))))))))))))))))))))))))) {
		var b uint64
		z[0], b = bits.Sub64(z[0], 2613528747251268715, 0)
		z[1], b = bits.Sub64(z[1], 15958390544650418284, b)
		z[2], b = bits.Sub64(z[2], 14785802376424656414, b)
		z[3], b = bits.Sub64(z[3], 9368182429938796067, b)
		z[4], b = bits.Sub64(z[4], 6480265800587443824, b)
		z[5], b = bits.Sub64(z[5], 8615191826401174576, b)
		z[6], b = bits.Sub64(z[6], 10163911460783455078, b)
		z[7], b = bits.Sub64(z[7], 14053570512254372664, b)
		z[8], b = bits.Sub64(z[8], 13404821358025449395, b)
		z[9], b = bits.Sub64(z[9], 6361046791004886847, b)
		z[10], b = bits.Sub64(z[10], 13468036185189635777, b)
		z[11], b = bits.Sub64(z[11], 696198893708043915, b)
		z[12], b = bits.Sub64(z[12], 5651185298720720453, b)
		z[13], b = bits.Sub64(z[13], 17008052171478956983, b)
		z[14], b = bits.Sub64(z[14], 16165709903860652275, b)
		z[15], b = bits.Sub64(z[15], 4482943778134271765, b)
		z[16], b = bits.Sub64(z[16], 1042631168326180691, b)
		z[17], b = bits.Sub64(z[17], 6309782954791921745, b)
		z[18], b = bits.Sub64(z[18], 4458516162657784325, b)
		z[19], b = bits.Sub64(z[19], 13472759351478842655, b)
		z[20], b = bits.Sub64(z[20], 4341611444501281238, b)
		z[21], b = bits.Sub64(z[21], 1416473143490767473, b)
		z[22], b = bits.Sub64(z[22], 8108839425640233111, b)
		z[23], b = bits.Sub64(z[23], 12843699789396907758, b)
		z[24], _ = bits.Sub64(z[24], 7066117110915403774, b)
	}
	return z
}

// Double z = x + x mod q, aka Lsh 1
func (z *Element25) Double(x *Element25) *Element25 {
	var carry uint64

	z[0], carry = bits.Add64(x[0], x[0], 0)
	z[1], carry = bits.Add64(x[1], x[1], carry)
	z[2], carry = bits.Add64(x[2], x[2], carry)
	z[3], carry = bits.Add64(x[3], x[3], carry)
	z[4], carry = bits.Add64(x[4], x[4], carry)
	z[5], carry = bits.Add64(x[5], x[5], carry)
	z[6], carry = bits.Add64(x[6], x[6], carry)
	z[7], carry = bits.Add64(x[7], x[7], carry)
	z[8], carry = bits.Add64(x[8], x[8], carry)
	z[9], carry = bits.Add64(x[9], x[9], carry)
	z[10], carry = bits.Add64(x[10], x[10], carry)
	z[11], carry = bits.Add64(x[11], x[11], carry)
	z[12], carry = bits.Add64(x[12], x[12], carry)
	z[13], carry = bits.Add64(x[13], x[13], carry)
	z[14], carry = bits.Add64(x[14], x[14], carry)
	z[15], carry = bits.Add64(x[15], x[15], carry)
	z[16], carry = bits.Add64(x[16], x[16], carry)
	z[17], carry = bits.Add64(x[17], x[17], carry)
	z[18], carry = bits.Add64(x[18], x[18], carry)
	z[19], carry = bits.Add64(x[19], x[19], carry)
	z[20], carry = bits.Add64(x[20], x[20], carry)
	z[21], carry = bits.Add64(x[21], x[21], carry)
	z[22], carry = bits.Add64(x[22], x[22], carry)
	z[23], carry = bits.Add64(x[23], x[23], carry)
	z[24], carry = bits.Add64(x[24], x[24], carry)
	// if we overflowed the last addition, z >= q
	// if z >= q, z = z - q
	if carry != 0 {
		// we overflowed, so z >= q
		z[0], carry = bits.Sub64(z[0], 2613528747251268715, 0)
		z[1], carry = bits.Sub64(z[1], 15958390544650418284, carry)
		z[2], carry = bits.Sub64(z[2], 14785802376424656414, carry)
		z[3], carry = bits.Sub64(z[3], 9368182429938796067, carry)
		z[4], carry = bits.Sub64(z[4], 6480265800587443824, carry)
		z[5], carry = bits.Sub64(z[5], 8615191826401174576, carry)
		z[6], carry = bits.Sub64(z[6], 10163911460783455078, carry)
		z[7], carry = bits.Sub64(z[7], 14053570512254372664, carry)
		z[8], carry = bits.Sub64(z[8], 13404821358025449395, carry)
		z[9], carry = bits.Sub64(z[9], 6361046791004886847, carry)
		z[10], carry = bits.Sub64(z[10], 13468036185189635777, carry)
		z[11], carry = bits.Sub64(z[11], 696198893708043915, carry)
		z[12], carry = bits.Sub64(z[12], 5651185298720720453, carry)
		z[13], carry = bits.Sub64(z[13], 17008052171478956983, carry)
		z[14], carry = bits.Sub64(z[14], 16165709903860652275, carry)
		z[15], carry = bits.Sub64(z[15], 4482943778134271765, carry)
		z[16], carry = bits.Sub64(z[16], 1042631168326180691, carry)
		z[17], carry = bits.Sub64(z[17], 6309782954791921745, carry)
		z[18], carry = bits.Sub64(z[18], 4458516162657784325, carry)
		z[19], carry = bits.Sub64(z[19], 13472759351478842655, carry)
		z[20], carry = bits.Sub64(z[20], 4341611444501281238, carry)
		z[21], carry = bits.Sub64(z[21], 1416473143490767473, carry)
		z[22], carry = bits.Sub64(z[22], 8108839425640233111, carry)
		z[23], carry = bits.Sub64(z[23], 12843699789396907758, carry)
		z[24], carry = bits.Sub64(z[24], 7066117110915403774, carry)
		return z
	}

	// if z > q --> z -= q
	// note: this is NOT constant time
	if !(z[24] < 7066117110915403774 || (z[24] == 7066117110915403774 && (z[23] < 12843699789396907758 || (z[23] == 12843699789396907758 && (z[22] < 8108839425640233111 || (z[22] == 8108839425640233111 && (z[21] < 1416473143490767473 || (z[21] == 1416473143490767473 && (z[20] < 4341611444501281238 || (z[20] == 4341611444501281238 && (z[19] < 13472759351478842655 || (z[19] == 13472759351478842655 && (z[18] < 4458516162657784325 || (z[18] == 4458516162657784325 && (z[17] < 6309782954791921745 || (z[17] == 6309782954791921745 && (z[16] < 1042631168326180691 || (z[16] == 1042631168326180691 && (z[15] < 4482943778134271765 || (z[15] == 4482943778134271765 && (z[14] < 16165709903860652275 || (z[14] == 16165709903860652275 && (z[13] < 17008052171478956983 || (z[13] == 17008052171478956983 && (z[12] < 5651185298720720453 || (z[12] == 5651185298720720453 && (z[11] < 696198893708043915 || (z[11] == 696198893708043915 && (z[10] < 13468036185189635777 || (z[10] == 13468036185189635777 && (z[9] < 6361046791004886847 || (z[9] == 6361046791004886847 && (z[8] < 13404821358025449395 || (z[8] == 13404821358025449395 && (z[7] < 14053570512254372664 || (z[7] == 14053570512254372664 && (z[6] < 10163911460783455078 || (z[6] == 10163911460783455078 && (z[5] < 8615191826401174576 || (z[5] == 8615191826401174576 && (z[4] < 6480265800587443824 || (z[4] == 6480265800587443824 && (z[3] < 9368182429938796067 || (z[3] == 9368182429938796067 && (z[2] < 14785802376424656414 || (z[2] == 14785802376424656414 && (z[1] < 15958390544650418284 || (z[1] == 15958390544650418284 && (z[0] < 2613528747251268715))))))))))))))))))))))))))))))))))))))))))))))))) {
		var b uint64
		z[0], b = bits.Sub64(z[0], 2613528747251268715, 0)
		z[1], b = bits.Sub64(z[1], 15958390544650418284, b)
		z[2], b = bits.Sub64(z[2], 14785802376424656414, b)
		z[3], b = bits.Sub64(z[3], 9368182429938796067, b)
		z[4], b = bits.Sub64(z[4], 6480265800587443824, b)
		z[5], b = bits.Sub64(z[5], 8615191826401174576, b)
		z[6], b = bits.Sub64(z[6], 10163911460783455078, b)
		z[7], b = bits.Sub64(z[7], 14053570512254372664, b)
		z[8], b = bits.Sub64(z[8], 13404821358025449395, b)
		z[9], b = bits.Sub64(z[9], 6361046791004886847, b)
		z[10], b = bits.Sub64(z[10], 13468036185189635777, b)
		z[11], b = bits.Sub64(z[11], 696198893708043915, b)
		z[12], b = bits.Sub64(z[12], 5651185298720720453, b)
		z[13], b = bits.Sub64(z[13], 17008052171478956983, b)
		z[14], b = bits.Sub64(z[14], 16165709903860652275, b)
		z[15], b = bits.Sub64(z[15], 4482943778134271765, b)
		z[16], b = bits.Sub64(z[16], 1042631168326180691, b)
		z[17], b = bits.Sub64(z[17], 6309782954791921745, b)
		z[18], b = bits.Sub64(z[18], 4458516162657784325, b)
		z[19], b = bits.Sub64(z[19], 13472759351478842655, b)
		z[20], b = bits.Sub64(z[20], 4341611444501281238, b)
		z[21], b = bits.Sub64(z[21], 1416473143490767473, b)
		z[22], b = bits.Sub64(z[22], 8108839425640233111, b)
		z[23], b = bits.Sub64(z[23], 12843699789396907758, b)
		z[24], _ = bits.Sub64(z[24], 7066117110915403774, b)
	}
	return z
}

// Sub  z = x - y mod q
func (z *Element25) Sub(x, y *Element25) *Element25 {
	var b uint64
	z[0], b = bits.Sub64(x[0], y[0], 0)
	z[1], b = bits.Sub64(x[1], y[1], b)
	z[2], b = bits.Sub64(x[2], y[2], b)
	z[3], b = bits.Sub64(x[3], y[3], b)
	z[4], b = bits.Sub64(x[4], y[4], b)
	z[5], b = bits.Sub64(x[5], y[5], b)
	z[6], b = bits.Sub64(x[6], y[6], b)
	z[7], b = bits.Sub64(x[7], y[7], b)
	z[8], b = bits.Sub64(x[8], y[8], b)
	z[9], b = bits.Sub64(x[9], y[9], b)
	z[10], b = bits.Sub64(x[10], y[10], b)
	z[11], b = bits.Sub64(x[11], y[11], b)
	z[12], b = bits.Sub64(x[12], y[12], b)
	z[13], b = bits.Sub64(x[13], y[13], b)
	z[14], b = bits.Sub64(x[14], y[14], b)
	z[15], b = bits.Sub64(x[15], y[15], b)
	z[16], b = bits.Sub64(x[16], y[16], b)
	z[17], b = bits.Sub64(x[17], y[17], b)
	z[18], b = bits.Sub64(x[18], y[18], b)
	z[19], b = bits.Sub64(x[19], y[19], b)
	z[20], b = bits.Sub64(x[20], y[20], b)
	z[21], b = bits.Sub64(x[21], y[21], b)
	z[22], b = bits.Sub64(x[22], y[22], b)
	z[23], b = bits.Sub64(x[23], y[23], b)
	z[24], b = bits.Sub64(x[24], y[24], b)
	if b != 0 {
		var c uint64
		z[0], c = bits.Add64(z[0], 2613528747251268715, 0)
		z[1], c = bits.Add64(z[1], 15958390544650418284, c)
		z[2], c = bits.Add64(z[2], 14785802376424656414, c)
		z[3], c = bits.Add64(z[3], 9368182429938796067, c)
		z[4], c = bits.Add64(z[4], 6480265800587443824, c)
		z[5], c = bits.Add64(z[5], 8615191826401174576, c)
		z[6], c = bits.Add64(z[6], 10163911460783455078, c)
		z[7], c = bits.Add64(z[7], 14053570512254372664, c)
		z[8], c = bits.Add64(z[8], 13404821358025449395, c)
		z[9], c = bits.Add64(z[9], 6361046791004886847, c)
		z[10], c = bits.Add64(z[10], 13468036185189635777, c)
		z[11], c = bits.Add64(z[11], 696198893708043915, c)
		z[12], c = bits.Add64(z[12], 5651185298720720453, c)
		z[13], c = bits.Add64(z[13], 17008052171478956983, c)
		z[14], c = bits.Add64(z[14], 16165709903860652275, c)
		z[15], c = bits.Add64(z[15], 4482943778134271765, c)
		z[16], c = bits.Add64(z[16], 1042631168326180691, c)
		z[17], c = bits.Add64(z[17], 6309782954791921745, c)
		z[18], c = bits.Add64(z[18], 4458516162657784325, c)
		z[19], c = bits.Add64(z[19], 13472759351478842655, c)
		z[20], c = bits.Add64(z[20], 4341611444501281238, c)
		z[21], c = bits.Add64(z[21], 1416473143490767473, c)
		z[22], c = bits.Add64(z[22], 8108839425640233111, c)
		z[23], c = bits.Add64(z[23], 12843699789396907758, c)
		z[24], _ = bits.Add64(z[24], 7066117110915403774, c)
	}
	return z
}

// SubAssign  z = z - x mod q
func (z *Element25) SubAssign(x *Element25) *Element25 {
	var b uint64
	z[0], b = bits.Sub64(z[0], x[0], 0)
	z[1], b = bits.Sub64(z[1], x[1], b)
	z[2], b = bits.Sub64(z[2], x[2], b)
	z[3], b = bits.Sub64(z[3], x[3], b)
	z[4], b = bits.Sub64(z[4], x[4], b)
	z[5], b = bits.Sub64(z[5], x[5], b)
	z[6], b = bits.Sub64(z[6], x[6], b)
	z[7], b = bits.Sub64(z[7], x[7], b)
	z[8], b = bits.Sub64(z[8], x[8], b)
	z[9], b = bits.Sub64(z[9], x[9], b)
	z[10], b = bits.Sub64(z[10], x[10], b)
	z[11], b = bits.Sub64(z[11], x[11], b)
	z[12], b = bits.Sub64(z[12], x[12], b)
	z[13], b = bits.Sub64(z[13], x[13], b)
	z[14], b = bits.Sub64(z[14], x[14], b)
	z[15], b = bits.Sub64(z[15], x[15], b)
	z[16], b = bits.Sub64(z[16], x[16], b)
	z[17], b = bits.Sub64(z[17], x[17], b)
	z[18], b = bits.Sub64(z[18], x[18], b)
	z[19], b = bits.Sub64(z[19], x[19], b)
	z[20], b = bits.Sub64(z[20], x[20], b)
	z[21], b = bits.Sub64(z[21], x[21], b)
	z[22], b = bits.Sub64(z[22], x[22], b)
	z[23], b = bits.Sub64(z[23], x[23], b)
	z[24], b = bits.Sub64(z[24], x[24], b)
	if b != 0 {
		var c uint64
		z[0], c = bits.Add64(z[0], 2613528747251268715, 0)
		z[1], c = bits.Add64(z[1], 15958390544650418284, c)
		z[2], c = bits.Add64(z[2], 14785802376424656414, c)
		z[3], c = bits.Add64(z[3], 9368182429938796067, c)
		z[4], c = bits.Add64(z[4], 6480265800587443824, c)
		z[5], c = bits.Add64(z[5], 8615191826401174576, c)
		z[6], c = bits.Add64(z[6], 10163911460783455078, c)
		z[7], c = bits.Add64(z[7], 14053570512254372664, c)
		z[8], c = bits.Add64(z[8], 13404821358025449395, c)
		z[9], c = bits.Add64(z[9], 6361046791004886847, c)
		z[10], c = bits.Add64(z[10], 13468036185189635777, c)
		z[11], c = bits.Add64(z[11], 696198893708043915, c)
		z[12], c = bits.Add64(z[12], 5651185298720720453, c)
		z[13], c = bits.Add64(z[13], 17008052171478956983, c)
		z[14], c = bits.Add64(z[14], 16165709903860652275, c)
		z[15], c = bits.Add64(z[15], 4482943778134271765, c)
		z[16], c = bits.Add64(z[16], 1042631168326180691, c)
		z[17], c = bits.Add64(z[17], 6309782954791921745, c)
		z[18], c = bits.Add64(z[18], 4458516162657784325, c)
		z[19], c = bits.Add64(z[19], 13472759351478842655, c)
		z[20], c = bits.Add64(z[20], 4341611444501281238, c)
		z[21], c = bits.Add64(z[21], 1416473143490767473, c)
		z[22], c = bits.Add64(z[22], 8108839425640233111, c)
		z[23], c = bits.Add64(z[23], 12843699789396907758, c)
		z[24], _ = bits.Add64(z[24], 7066117110915403774, c)
	}
	return z
}

// Exp z = x^exponent mod q
// (not optimized)
// exponent (non-montgomery form) is ordered from least significant word to most significant word
func (z *Element25) Exp(x Element25, exponent ...uint64) *Element25 {
	r := 0
	msb := 0
	for i := len(exponent) - 1; i >= 0; i-- {
		if exponent[i] == 0 {
			r++
		} else {
			msb = (i * 64) + bits.Len64(exponent[i])
			break
		}
	}
	exponent = exponent[:len(exponent)-r]
	if len(exponent) == 0 {
		return z.SetOne()
	}

	z.Set(&x)

	l := msb - 2
	for i := l; i >= 0; i-- {
		z.Square(z)
		if exponent[i/64]&(1<<uint(i%64)) != 0 {
			z.MulAssign(&x)
		}
	}
	return z
}

// FromMont converts z in place (i.e. mutates) from Montgomery to regular representation
// sets and returns z = z * 1
func (z *Element25) FromMont() *Element25 {

	// the following lines implement z = z * 1
	// with a modified CIOS montgomery multiplication
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 17091796358385905597
		C := madd0(m, 2613528747251268715, z[0])
		C, z[0] = madd2(m, 15958390544650418284, z[1], C)
		C, z[1] = madd2(m, 14785802376424656414, z[2], C)
		C, z[2] = madd2(m, 9368182429938796067, z[3], C)
		C, z[3] = madd2(m, 6480265800587443824, z[4], C)
		C, z[4] = madd2(m, 8615191826401174576, z[5], C)
		C, z[5] = madd2(m, 10163911460783455078, z[6], C)
		C, z[6] = madd2(m, 14053570512254372664, z[7], C)
		C, z[7] = madd2(m, 13404821358025449395, z[8], C)
		C, z[8] = madd2(m, 6361046791004886847, z[9], C)
		C, z[9] = madd2(m, 13468036185189635777, z[10], C)
		C, z[10] = madd2(m, 696198893708043915, z[11], C)
		C, z[11] = madd2(m, 5651185298720720453, z[12], C)
		C, z[12] = madd2(m, 17008052171478956983, z[13], C)
		C, z[13] = madd2(m, 16165709903860652275, z[14], C)
		C, z[14] = madd2(m, 4482943778134271765, z[15], C)
		C, z[15] = madd2(m, 1042631168326180691, z[16], C)
		C, z[16] = madd2(m, 6309782954791921745, z[17], C)
		C, z[17] = madd2(m, 4458516162657784325, z[18], C)
		C, z[18] = madd2(m, 13472759351478842655, z[19], C)
		C, z[19] = madd2(m, 4341611444501281238, z[20], C)
		C, z[20] = madd2(m, 1416473143490767473, z[21], C)
		C, z[21] = madd2(m, 8108839425640233111, z[22], C)
		C, z[22] = madd2(m, 12843699789396907758, z[23], C)
		C, z[23] = madd2(m, 7066117110915403774, z[24], C)
		z[24] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 17091796358385905597
		C := madd0(m, 2613528747251268715, z[0])
		C, z[0] = madd2(m, 15958390544650418284, z[1], C)
		C, z[1] = madd2(m, 14785802376424656414, z[2], C)
		C, z[2] = madd2(m, 9368182429938796067, z[3], C)
		C, z[3] = madd2(m, 6480265800587443824, z[4], C)
		C, z[4] = madd2(m, 8615191826401174576, z[5], C)
		C, z[5] = madd2(m, 10163911460783455078, z[6], C)
		C, z[6] = madd2(m, 14053570512254372664, z[7], C)
		C, z[7] = madd2(m, 13404821358025449395, z[8], C)
		C, z[8] = madd2(m, 6361046791004886847, z[9], C)
		C, z[9] = madd2(m, 13468036185189635777, z[10], C)
		C, z[10] = madd2(m, 696198893708043915, z[11], C)
		C, z[11] = madd2(m, 5651185298720720453, z[12], C)
		C, z[12] = madd2(m, 17008052171478956983, z[13], C)
		C, z[13] = madd2(m, 16165709903860652275, z[14], C)
		C, z[14] = madd2(m, 4482943778134271765, z[15], C)
		C, z[15] = madd2(m, 1042631168326180691, z[16], C)
		C, z[16] = madd2(m, 6309782954791921745, z[17], C)
		C, z[17] = madd2(m, 4458516162657784325, z[18], C)
		C, z[18] = madd2(m, 13472759351478842655, z[19], C)
		C, z[19] = madd2(m, 4341611444501281238, z[20], C)
		C, z[20] = madd2(m, 1416473143490767473, z[21], C)
		C, z[21] = madd2(m, 8108839425640233111, z[22], C)
		C, z[22] = madd2(m, 12843699789396907758, z[23], C)
		C, z[23] = madd2(m, 7066117110915403774, z[24], C)
		z[24] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 17091796358385905597
		C := madd0(m, 2613528747251268715, z[0])
		C, z[0] = madd2(m, 15958390544650418284, z[1], C)
		C, z[1] = madd2(m, 14785802376424656414, z[2], C)
		C, z[2] = madd2(m, 9368182429938796067, z[3], C)
		C, z[3] = madd2(m, 6480265800587443824, z[4], C)
		C, z[4] = madd2(m, 8615191826401174576, z[5], C)
		C, z[5] = madd2(m, 10163911460783455078, z[6], C)
		C, z[6] = madd2(m, 14053570512254372664, z[7], C)
		C, z[7] = madd2(m, 13404821358025449395, z[8], C)
		C, z[8] = madd2(m, 6361046791004886847, z[9], C)
		C, z[9] = madd2(m, 13468036185189635777, z[10], C)
		C, z[10] = madd2(m, 696198893708043915, z[11], C)
		C, z[11] = madd2(m, 5651185298720720453, z[12], C)
		C, z[12] = madd2(m, 17008052171478956983, z[13], C)
		C, z[13] = madd2(m, 16165709903860652275, z[14], C)
		C, z[14] = madd2(m, 4482943778134271765, z[15], C)
		C, z[15] = madd2(m, 1042631168326180691, z[16], C)
		C, z[16] = madd2(m, 6309782954791921745, z[17], C)
		C, z[17] = madd2(m, 4458516162657784325, z[18], C)
		C, z[18] = madd2(m, 13472759351478842655, z[19], C)
		C, z[19] = madd2(m, 4341611444501281238, z[20], C)
		C, z[20] = madd2(m, 1416473143490767473, z[21], C)
		C, z[21] = madd2(m, 8108839425640233111, z[22], C)
		C, z[22] = madd2(m, 12843699789396907758, z[23], C)
		C, z[23] = madd2(m, 7066117110915403774, z[24], C)
		z[24] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 17091796358385905597
		C := madd0(m, 2613528747251268715, z[0])
		C, z[0] = madd2(m, 15958390544650418284, z[1], C)
		C, z[1] = madd2(m, 14785802376424656414, z[2], C)
		C, z[2] = madd2(m, 9368182429938796067, z[3], C)
		C, z[3] = madd2(m, 6480265800587443824, z[4], C)
		C, z[4] = madd2(m, 8615191826401174576, z[5], C)
		C, z[5] = madd2(m, 10163911460783455078, z[6], C)
		C, z[6] = madd2(m, 14053570512254372664, z[7], C)
		C, z[7] = madd2(m, 13404821358025449395, z[8], C)
		C, z[8] = madd2(m, 6361046791004886847, z[9], C)
		C, z[9] = madd2(m, 13468036185189635777, z[10], C)
		C, z[10] = madd2(m, 696198893708043915, z[11], C)
		C, z[11] = madd2(m, 5651185298720720453, z[12], C)
		C, z[12] = madd2(m, 17008052171478956983, z[13], C)
		C, z[13] = madd2(m, 16165709903860652275, z[14], C)
		C, z[14] = madd2(m, 4482943778134271765, z[15], C)
		C, z[15] = madd2(m, 1042631168326180691, z[16], C)
		C, z[16] = madd2(m, 6309782954791921745, z[17], C)
		C, z[17] = madd2(m, 4458516162657784325, z[18], C)
		C, z[18] = madd2(m, 13472759351478842655, z[19], C)
		C, z[19] = madd2(m, 4341611444501281238, z[20], C)
		C, z[20] = madd2(m, 1416473143490767473, z[21], C)
		C, z[21] = madd2(m, 8108839425640233111, z[22], C)
		C, z[22] = madd2(m, 12843699789396907758, z[23], C)
		C, z[23] = madd2(m, 7066117110915403774, z[24], C)
		z[24] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 17091796358385905597
		C := madd0(m, 2613528747251268715, z[0])
		C, z[0] = madd2(m, 15958390544650418284, z[1], C)
		C, z[1] = madd2(m, 14785802376424656414, z[2], C)
		C, z[2] = madd2(m, 9368182429938796067, z[3], C)
		C, z[3] = madd2(m, 6480265800587443824, z[4], C)
		C, z[4] = madd2(m, 8615191826401174576, z[5], C)
		C, z[5] = madd2(m, 10163911460783455078, z[6], C)
		C, z[6] = madd2(m, 14053570512254372664, z[7], C)
		C, z[7] = madd2(m, 13404821358025449395, z[8], C)
		C, z[8] = madd2(m, 6361046791004886847, z[9], C)
		C, z[9] = madd2(m, 13468036185189635777, z[10], C)
		C, z[10] = madd2(m, 696198893708043915, z[11], C)
		C, z[11] = madd2(m, 5651185298720720453, z[12], C)
		C, z[12] = madd2(m, 17008052171478956983, z[13], C)
		C, z[13] = madd2(m, 16165709903860652275, z[14], C)
		C, z[14] = madd2(m, 4482943778134271765, z[15], C)
		C, z[15] = madd2(m, 1042631168326180691, z[16], C)
		C, z[16] = madd2(m, 6309782954791921745, z[17], C)
		C, z[17] = madd2(m, 4458516162657784325, z[18], C)
		C, z[18] = madd2(m, 13472759351478842655, z[19], C)
		C, z[19] = madd2(m, 4341611444501281238, z[20], C)
		C, z[20] = madd2(m, 1416473143490767473, z[21], C)
		C, z[21] = madd2(m, 8108839425640233111, z[22], C)
		C, z[22] = madd2(m, 12843699789396907758, z[23], C)
		C, z[23] = madd2(m, 7066117110915403774, z[24], C)
		z[24] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 17091796358385905597
		C := madd0(m, 2613528747251268715, z[0])
		C, z[0] = madd2(m, 15958390544650418284, z[1], C)
		C, z[1] = madd2(m, 14785802376424656414, z[2], C)
		C, z[2] = madd2(m, 9368182429938796067, z[3], C)
		C, z[3] = madd2(m, 6480265800587443824, z[4], C)
		C, z[4] = madd2(m, 8615191826401174576, z[5], C)
		C, z[5] = madd2(m, 10163911460783455078, z[6], C)
		C, z[6] = madd2(m, 14053570512254372664, z[7], C)
		C, z[7] = madd2(m, 13404821358025449395, z[8], C)
		C, z[8] = madd2(m, 6361046791004886847, z[9], C)
		C, z[9] = madd2(m, 13468036185189635777, z[10], C)
		C, z[10] = madd2(m, 696198893708043915, z[11], C)
		C, z[11] = madd2(m, 5651185298720720453, z[12], C)
		C, z[12] = madd2(m, 17008052171478956983, z[13], C)
		C, z[13] = madd2(m, 16165709903860652275, z[14], C)
		C, z[14] = madd2(m, 4482943778134271765, z[15], C)
		C, z[15] = madd2(m, 1042631168326180691, z[16], C)
		C, z[16] = madd2(m, 6309782954791921745, z[17], C)
		C, z[17] = madd2(m, 4458516162657784325, z[18], C)
		C, z[18] = madd2(m, 13472759351478842655, z[19], C)
		C, z[19] = madd2(m, 4341611444501281238, z[20], C)
		C, z[20] = madd2(m, 1416473143490767473, z[21], C)
		C, z[21] = madd2(m, 8108839425640233111, z[22], C)
		C, z[22] = madd2(m, 12843699789396907758, z[23], C)
		C, z[23] = madd2(m, 7066117110915403774, z[24], C)
		z[24] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 17091796358385905597
		C := madd0(m, 2613528747251268715, z[0])
		C, z[0] = madd2(m, 15958390544650418284, z[1], C)
		C, z[1] = madd2(m, 14785802376424656414, z[2], C)
		C, z[2] = madd2(m, 9368182429938796067, z[3], C)
		C, z[3] = madd2(m, 6480265800587443824, z[4], C)
		C, z[4] = madd2(m, 8615191826401174576, z[5], C)
		C, z[5] = madd2(m, 10163911460783455078, z[6], C)
		C, z[6] = madd2(m, 14053570512254372664, z[7], C)
		C, z[7] = madd2(m, 13404821358025449395, z[8], C)
		C, z[8] = madd2(m, 6361046791004886847, z[9], C)
		C, z[9] = madd2(m, 13468036185189635777, z[10], C)
		C, z[10] = madd2(m, 696198893708043915, z[11], C)
		C, z[11] = madd2(m, 5651185298720720453, z[12], C)
		C, z[12] = madd2(m, 17008052171478956983, z[13], C)
		C, z[13] = madd2(m, 16165709903860652275, z[14], C)
		C, z[14] = madd2(m, 4482943778134271765, z[15], C)
		C, z[15] = madd2(m, 1042631168326180691, z[16], C)
		C, z[16] = madd2(m, 6309782954791921745, z[17], C)
		C, z[17] = madd2(m, 4458516162657784325, z[18], C)
		C, z[18] = madd2(m, 13472759351478842655, z[19], C)
		C, z[19] = madd2(m, 4341611444501281238, z[20], C)
		C, z[20] = madd2(m, 1416473143490767473, z[21], C)
		C, z[21] = madd2(m, 8108839425640233111, z[22], C)
		C, z[22] = madd2(m, 12843699789396907758, z[23], C)
		C, z[23] = madd2(m, 7066117110915403774, z[24], C)
		z[24] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 17091796358385905597
		C := madd0(m, 2613528747251268715, z[0])
		C, z[0] = madd2(m, 15958390544650418284, z[1], C)
		C, z[1] = madd2(m, 14785802376424656414, z[2], C)
		C, z[2] = madd2(m, 9368182429938796067, z[3], C)
		C, z[3] = madd2(m, 6480265800587443824, z[4], C)
		C, z[4] = madd2(m, 8615191826401174576, z[5], C)
		C, z[5] = madd2(m, 10163911460783455078, z[6], C)
		C, z[6] = madd2(m, 14053570512254372664, z[7], C)
		C, z[7] = madd2(m, 13404821358025449395, z[8], C)
		C, z[8] = madd2(m, 6361046791004886847, z[9], C)
		C, z[9] = madd2(m, 13468036185189635777, z[10], C)
		C, z[10] = madd2(m, 696198893708043915, z[11], C)
		C, z[11] = madd2(m, 5651185298720720453, z[12], C)
		C, z[12] = madd2(m, 17008052171478956983, z[13], C)
		C, z[13] = madd2(m, 16165709903860652275, z[14], C)
		C, z[14] = madd2(m, 4482943778134271765, z[15], C)
		C, z[15] = madd2(m, 1042631168326180691, z[16], C)
		C, z[16] = madd2(m, 6309782954791921745, z[17], C)
		C, z[17] = madd2(m, 4458516162657784325, z[18], C)
		C, z[18] = madd2(m, 13472759351478842655, z[19], C)
		C, z[19] = madd2(m, 4341611444501281238, z[20], C)
		C, z[20] = madd2(m, 1416473143490767473, z[21], C)
		C, z[21] = madd2(m, 8108839425640233111, z[22], C)
		C, z[22] = madd2(m, 12843699789396907758, z[23], C)
		C, z[23] = madd2(m, 7066117110915403774, z[24], C)
		z[24] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 17091796358385905597
		C := madd0(m, 2613528747251268715, z[0])
		C, z[0] = madd2(m, 15958390544650418284, z[1], C)
		C, z[1] = madd2(m, 14785802376424656414, z[2], C)
		C, z[2] = madd2(m, 9368182429938796067, z[3], C)
		C, z[3] = madd2(m, 6480265800587443824, z[4], C)
		C, z[4] = madd2(m, 8615191826401174576, z[5], C)
		C, z[5] = madd2(m, 10163911460783455078, z[6], C)
		C, z[6] = madd2(m, 14053570512254372664, z[7], C)
		C, z[7] = madd2(m, 13404821358025449395, z[8], C)
		C, z[8] = madd2(m, 6361046791004886847, z[9], C)
		C, z[9] = madd2(m, 13468036185189635777, z[10], C)
		C, z[10] = madd2(m, 696198893708043915, z[11], C)
		C, z[11] = madd2(m, 5651185298720720453, z[12], C)
		C, z[12] = madd2(m, 17008052171478956983, z[13], C)
		C, z[13] = madd2(m, 16165709903860652275, z[14], C)
		C, z[14] = madd2(m, 4482943778134271765, z[15], C)
		C, z[15] = madd2(m, 1042631168326180691, z[16], C)
		C, z[16] = madd2(m, 6309782954791921745, z[17], C)
		C, z[17] = madd2(m, 4458516162657784325, z[18], C)
		C, z[18] = madd2(m, 13472759351478842655, z[19], C)
		C, z[19] = madd2(m, 4341611444501281238, z[20], C)
		C, z[20] = madd2(m, 1416473143490767473, z[21], C)
		C, z[21] = madd2(m, 8108839425640233111, z[22], C)
		C, z[22] = madd2(m, 12843699789396907758, z[23], C)
		C, z[23] = madd2(m, 7066117110915403774, z[24], C)
		z[24] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 17091796358385905597
		C := madd0(m, 2613528747251268715, z[0])
		C, z[0] = madd2(m, 15958390544650418284, z[1], C)
		C, z[1] = madd2(m, 14785802376424656414, z[2], C)
		C, z[2] = madd2(m, 9368182429938796067, z[3], C)
		C, z[3] = madd2(m, 6480265800587443824, z[4], C)
		C, z[4] = madd2(m, 8615191826401174576, z[5], C)
		C, z[5] = madd2(m, 10163911460783455078, z[6], C)
		C, z[6] = madd2(m, 14053570512254372664, z[7], C)
		C, z[7] = madd2(m, 13404821358025449395, z[8], C)
		C, z[8] = madd2(m, 6361046791004886847, z[9], C)
		C, z[9] = madd2(m, 13468036185189635777, z[10], C)
		C, z[10] = madd2(m, 696198893708043915, z[11], C)
		C, z[11] = madd2(m, 5651185298720720453, z[12], C)
		C, z[12] = madd2(m, 17008052171478956983, z[13], C)
		C, z[13] = madd2(m, 16165709903860652275, z[14], C)
		C, z[14] = madd2(m, 4482943778134271765, z[15], C)
		C, z[15] = madd2(m, 1042631168326180691, z[16], C)
		C, z[16] = madd2(m, 6309782954791921745, z[17], C)
		C, z[17] = madd2(m, 4458516162657784325, z[18], C)
		C, z[18] = madd2(m, 13472759351478842655, z[19], C)
		C, z[19] = madd2(m, 4341611444501281238, z[20], C)
		C, z[20] = madd2(m, 1416473143490767473, z[21], C)
		C, z[21] = madd2(m, 8108839425640233111, z[22], C)
		C, z[22] = madd2(m, 12843699789396907758, z[23], C)
		C, z[23] = madd2(m, 7066117110915403774, z[24], C)
		z[24] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 17091796358385905597
		C := madd0(m, 2613528747251268715, z[0])
		C, z[0] = madd2(m, 15958390544650418284, z[1], C)
		C, z[1] = madd2(m, 14785802376424656414, z[2], C)
		C, z[2] = madd2(m, 9368182429938796067, z[3], C)
		C, z[3] = madd2(m, 6480265800587443824, z[4], C)
		C, z[4] = madd2(m, 8615191826401174576, z[5], C)
		C, z[5] = madd2(m, 10163911460783455078, z[6], C)
		C, z[6] = madd2(m, 14053570512254372664, z[7], C)
		C, z[7] = madd2(m, 13404821358025449395, z[8], C)
		C, z[8] = madd2(m, 6361046791004886847, z[9], C)
		C, z[9] = madd2(m, 13468036185189635777, z[10], C)
		C, z[10] = madd2(m, 696198893708043915, z[11], C)
		C, z[11] = madd2(m, 5651185298720720453, z[12], C)
		C, z[12] = madd2(m, 17008052171478956983, z[13], C)
		C, z[13] = madd2(m, 16165709903860652275, z[14], C)
		C, z[14] = madd2(m, 4482943778134271765, z[15], C)
		C, z[15] = madd2(m, 1042631168326180691, z[16], C)
		C, z[16] = madd2(m, 6309782954791921745, z[17], C)
		C, z[17] = madd2(m, 4458516162657784325, z[18], C)
		C, z[18] = madd2(m, 13472759351478842655, z[19], C)
		C, z[19] = madd2(m, 4341611444501281238, z[20], C)
		C, z[20] = madd2(m, 1416473143490767473, z[21], C)
		C, z[21] = madd2(m, 8108839425640233111, z[22], C)
		C, z[22] = madd2(m, 12843699789396907758, z[23], C)
		C, z[23] = madd2(m, 7066117110915403774, z[24], C)
		z[24] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 17091796358385905597
		C := madd0(m, 2613528747251268715, z[0])
		C, z[0] = madd2(m, 15958390544650418284, z[1], C)
		C, z[1] = madd2(m, 14785802376424656414, z[2], C)
		C, z[2] = madd2(m, 9368182429938796067, z[3], C)
		C, z[3] = madd2(m, 6480265800587443824, z[4], C)
		C, z[4] = madd2(m, 8615191826401174576, z[5], C)
		C, z[5] = madd2(m, 10163911460783455078, z[6], C)
		C, z[6] = madd2(m, 14053570512254372664, z[7], C)
		C, z[7] = madd2(m, 13404821358025449395, z[8], C)
		C, z[8] = madd2(m, 6361046791004886847, z[9], C)
		C, z[9] = madd2(m, 13468036185189635777, z[10], C)
		C, z[10] = madd2(m, 696198893708043915, z[11], C)
		C, z[11] = madd2(m, 5651185298720720453, z[12], C)
		C, z[12] = madd2(m, 17008052171478956983, z[13], C)
		C, z[13] = madd2(m, 16165709903860652275, z[14], C)
		C, z[14] = madd2(m, 4482943778134271765, z[15], C)
		C, z[15] = madd2(m, 1042631168326180691, z[16], C)
		C, z[16] = madd2(m, 6309782954791921745, z[17], C)
		C, z[17] = madd2(m, 4458516162657784325, z[18], C)
		C, z[18] = madd2(m, 13472759351478842655, z[19], C)
		C, z[19] = madd2(m, 4341611444501281238, z[20], C)
		C, z[20] = madd2(m, 1416473143490767473, z[21], C)
		C, z[21] = madd2(m, 8108839425640233111, z[22], C)
		C, z[22] = madd2(m, 12843699789396907758, z[23], C)
		C, z[23] = madd2(m, 7066117110915403774, z[24], C)
		z[24] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 17091796358385905597
		C := madd0(m, 2613528747251268715, z[0])
		C, z[0] = madd2(m, 15958390544650418284, z[1], C)
		C, z[1] = madd2(m, 14785802376424656414, z[2], C)
		C, z[2] = madd2(m, 9368182429938796067, z[3], C)
		C, z[3] = madd2(m, 6480265800587443824, z[4], C)
		C, z[4] = madd2(m, 8615191826401174576, z[5], C)
		C, z[5] = madd2(m, 10163911460783455078, z[6], C)
		C, z[6] = madd2(m, 14053570512254372664, z[7], C)
		C, z[7] = madd2(m, 13404821358025449395, z[8], C)
		C, z[8] = madd2(m, 6361046791004886847, z[9], C)
		C, z[9] = madd2(m, 13468036185189635777, z[10], C)
		C, z[10] = madd2(m, 696198893708043915, z[11], C)
		C, z[11] = madd2(m, 5651185298720720453, z[12], C)
		C, z[12] = madd2(m, 17008052171478956983, z[13], C)
		C, z[13] = madd2(m, 16165709903860652275, z[14], C)
		C, z[14] = madd2(m, 4482943778134271765, z[15], C)
		C, z[15] = madd2(m, 1042631168326180691, z[16], C)
		C, z[16] = madd2(m, 6309782954791921745, z[17], C)
		C, z[17] = madd2(m, 4458516162657784325, z[18], C)
		C, z[18] = madd2(m, 13472759351478842655, z[19], C)
		C, z[19] = madd2(m, 4341611444501281238, z[20], C)
		C, z[20] = madd2(m, 1416473143490767473, z[21], C)
		C, z[21] = madd2(m, 8108839425640233111, z[22], C)
		C, z[22] = madd2(m, 12843699789396907758, z[23], C)
		C, z[23] = madd2(m, 7066117110915403774, z[24], C)
		z[24] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 17091796358385905597
		C := madd0(m, 2613528747251268715, z[0])
		C, z[0] = madd2(m, 15958390544650418284, z[1], C)
		C, z[1] = madd2(m, 14785802376424656414, z[2], C)
		C, z[2] = madd2(m, 9368182429938796067, z[3], C)
		C, z[3] = madd2(m, 6480265800587443824, z[4], C)
		C, z[4] = madd2(m, 8615191826401174576, z[5], C)
		C, z[5] = madd2(m, 10163911460783455078, z[6], C)
		C, z[6] = madd2(m, 14053570512254372664, z[7], C)
		C, z[7] = madd2(m, 13404821358025449395, z[8], C)
		C, z[8] = madd2(m, 6361046791004886847, z[9], C)
		C, z[9] = madd2(m, 13468036185189635777, z[10], C)
		C, z[10] = madd2(m, 696198893708043915, z[11], C)
		C, z[11] = madd2(m, 5651185298720720453, z[12], C)
		C, z[12] = madd2(m, 17008052171478956983, z[13], C)
		C, z[13] = madd2(m, 16165709903860652275, z[14], C)
		C, z[14] = madd2(m, 4482943778134271765, z[15], C)
		C, z[15] = madd2(m, 1042631168326180691, z[16], C)
		C, z[16] = madd2(m, 6309782954791921745, z[17], C)
		C, z[17] = madd2(m, 4458516162657784325, z[18], C)
		C, z[18] = madd2(m, 13472759351478842655, z[19], C)
		C, z[19] = madd2(m, 4341611444501281238, z[20], C)
		C, z[20] = madd2(m, 1416473143490767473, z[21], C)
		C, z[21] = madd2(m, 8108839425640233111, z[22], C)
		C, z[22] = madd2(m, 12843699789396907758, z[23], C)
		C, z[23] = madd2(m, 7066117110915403774, z[24], C)
		z[24] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 17091796358385905597
		C := madd0(m, 2613528747251268715, z[0])
		C, z[0] = madd2(m, 15958390544650418284, z[1], C)
		C, z[1] = madd2(m, 14785802376424656414, z[2], C)
		C, z[2] = madd2(m, 9368182429938796067, z[3], C)
		C, z[3] = madd2(m, 6480265800587443824, z[4], C)
		C, z[4] = madd2(m, 8615191826401174576, z[5], C)
		C, z[5] = madd2(m, 10163911460783455078, z[6], C)
		C, z[6] = madd2(m, 14053570512254372664, z[7], C)
		C, z[7] = madd2(m, 13404821358025449395, z[8], C)
		C, z[8] = madd2(m, 6361046791004886847, z[9], C)
		C, z[9] = madd2(m, 13468036185189635777, z[10], C)
		C, z[10] = madd2(m, 696198893708043915, z[11], C)
		C, z[11] = madd2(m, 5651185298720720453, z[12], C)
		C, z[12] = madd2(m, 17008052171478956983, z[13], C)
		C, z[13] = madd2(m, 16165709903860652275, z[14], C)
		C, z[14] = madd2(m, 4482943778134271765, z[15], C)
		C, z[15] = madd2(m, 1042631168326180691, z[16], C)
		C, z[16] = madd2(m, 6309782954791921745, z[17], C)
		C, z[17] = madd2(m, 4458516162657784325, z[18], C)
		C, z[18] = madd2(m, 13472759351478842655, z[19], C)
		C, z[19] = madd2(m, 4341611444501281238, z[20], C)
		C, z[20] = madd2(m, 1416473143490767473, z[21], C)
		C, z[21] = madd2(m, 8108839425640233111, z[22], C)
		C, z[22] = madd2(m, 12843699789396907758, z[23], C)
		C, z[23] = madd2(m, 7066117110915403774, z[24], C)
		z[24] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 17091796358385905597
		C := madd0(m, 2613528747251268715, z[0])
		C, z[0] = madd2(m, 15958390544650418284, z[1], C)
		C, z[1] = madd2(m, 14785802376424656414, z[2], C)
		C, z[2] = madd2(m, 9368182429938796067, z[3], C)
		C, z[3] = madd2(m, 6480265800587443824, z[4], C)
		C, z[4] = madd2(m, 8615191826401174576, z[5], C)
		C, z[5] = madd2(m, 10163911460783455078, z[6], C)
		C, z[6] = madd2(m, 14053570512254372664, z[7], C)
		C, z[7] = madd2(m, 13404821358025449395, z[8], C)
		C, z[8] = madd2(m, 6361046791004886847, z[9], C)
		C, z[9] = madd2(m, 13468036185189635777, z[10], C)
		C, z[10] = madd2(m, 696198893708043915, z[11], C)
		C, z[11] = madd2(m, 5651185298720720453, z[12], C)
		C, z[12] = madd2(m, 17008052171478956983, z[13], C)
		C, z[13] = madd2(m, 16165709903860652275, z[14], C)
		C, z[14] = madd2(m, 4482943778134271765, z[15], C)
		C, z[15] = madd2(m, 1042631168326180691, z[16], C)
		C, z[16] = madd2(m, 6309782954791921745, z[17], C)
		C, z[17] = madd2(m, 4458516162657784325, z[18], C)
		C, z[18] = madd2(m, 13472759351478842655, z[19], C)
		C, z[19] = madd2(m, 4341611444501281238, z[20], C)
		C, z[20] = madd2(m, 1416473143490767473, z[21], C)
		C, z[21] = madd2(m, 8108839425640233111, z[22], C)
		C, z[22] = madd2(m, 12843699789396907758, z[23], C)
		C, z[23] = madd2(m, 7066117110915403774, z[24], C)
		z[24] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 17091796358385905597
		C := madd0(m, 2613528747251268715, z[0])
		C, z[0] = madd2(m, 15958390544650418284, z[1], C)
		C, z[1] = madd2(m, 14785802376424656414, z[2], C)
		C, z[2] = madd2(m, 9368182429938796067, z[3], C)
		C, z[3] = madd2(m, 6480265800587443824, z[4], C)
		C, z[4] = madd2(m, 8615191826401174576, z[5], C)
		C, z[5] = madd2(m, 10163911460783455078, z[6], C)
		C, z[6] = madd2(m, 14053570512254372664, z[7], C)
		C, z[7] = madd2(m, 13404821358025449395, z[8], C)
		C, z[8] = madd2(m, 6361046791004886847, z[9], C)
		C, z[9] = madd2(m, 13468036185189635777, z[10], C)
		C, z[10] = madd2(m, 696198893708043915, z[11], C)
		C, z[11] = madd2(m, 5651185298720720453, z[12], C)
		C, z[12] = madd2(m, 17008052171478956983, z[13], C)
		C, z[13] = madd2(m, 16165709903860652275, z[14], C)
		C, z[14] = madd2(m, 4482943778134271765, z[15], C)
		C, z[15] = madd2(m, 1042631168326180691, z[16], C)
		C, z[16] = madd2(m, 6309782954791921745, z[17], C)
		C, z[17] = madd2(m, 4458516162657784325, z[18], C)
		C, z[18] = madd2(m, 13472759351478842655, z[19], C)
		C, z[19] = madd2(m, 4341611444501281238, z[20], C)
		C, z[20] = madd2(m, 1416473143490767473, z[21], C)
		C, z[21] = madd2(m, 8108839425640233111, z[22], C)
		C, z[22] = madd2(m, 12843699789396907758, z[23], C)
		C, z[23] = madd2(m, 7066117110915403774, z[24], C)
		z[24] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 17091796358385905597
		C := madd0(m, 2613528747251268715, z[0])
		C, z[0] = madd2(m, 15958390544650418284, z[1], C)
		C, z[1] = madd2(m, 14785802376424656414, z[2], C)
		C, z[2] = madd2(m, 9368182429938796067, z[3], C)
		C, z[3] = madd2(m, 6480265800587443824, z[4], C)
		C, z[4] = madd2(m, 8615191826401174576, z[5], C)
		C, z[5] = madd2(m, 10163911460783455078, z[6], C)
		C, z[6] = madd2(m, 14053570512254372664, z[7], C)
		C, z[7] = madd2(m, 13404821358025449395, z[8], C)
		C, z[8] = madd2(m, 6361046791004886847, z[9], C)
		C, z[9] = madd2(m, 13468036185189635777, z[10], C)
		C, z[10] = madd2(m, 696198893708043915, z[11], C)
		C, z[11] = madd2(m, 5651185298720720453, z[12], C)
		C, z[12] = madd2(m, 17008052171478956983, z[13], C)
		C, z[13] = madd2(m, 16165709903860652275, z[14], C)
		C, z[14] = madd2(m, 4482943778134271765, z[15], C)
		C, z[15] = madd2(m, 1042631168326180691, z[16], C)
		C, z[16] = madd2(m, 6309782954791921745, z[17], C)
		C, z[17] = madd2(m, 4458516162657784325, z[18], C)
		C, z[18] = madd2(m, 13472759351478842655, z[19], C)
		C, z[19] = madd2(m, 4341611444501281238, z[20], C)
		C, z[20] = madd2(m, 1416473143490767473, z[21], C)
		C, z[21] = madd2(m, 8108839425640233111, z[22], C)
		C, z[22] = madd2(m, 12843699789396907758, z[23], C)
		C, z[23] = madd2(m, 7066117110915403774, z[24], C)
		z[24] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 17091796358385905597
		C := madd0(m, 2613528747251268715, z[0])
		C, z[0] = madd2(m, 15958390544650418284, z[1], C)
		C, z[1] = madd2(m, 14785802376424656414, z[2], C)
		C, z[2] = madd2(m, 9368182429938796067, z[3], C)
		C, z[3] = madd2(m, 6480265800587443824, z[4], C)
		C, z[4] = madd2(m, 8615191826401174576, z[5], C)
		C, z[5] = madd2(m, 10163911460783455078, z[6], C)
		C, z[6] = madd2(m, 14053570512254372664, z[7], C)
		C, z[7] = madd2(m, 13404821358025449395, z[8], C)
		C, z[8] = madd2(m, 6361046791004886847, z[9], C)
		C, z[9] = madd2(m, 13468036185189635777, z[10], C)
		C, z[10] = madd2(m, 696198893708043915, z[11], C)
		C, z[11] = madd2(m, 5651185298720720453, z[12], C)
		C, z[12] = madd2(m, 17008052171478956983, z[13], C)
		C, z[13] = madd2(m, 16165709903860652275, z[14], C)
		C, z[14] = madd2(m, 4482943778134271765, z[15], C)
		C, z[15] = madd2(m, 1042631168326180691, z[16], C)
		C, z[16] = madd2(m, 6309782954791921745, z[17], C)
		C, z[17] = madd2(m, 4458516162657784325, z[18], C)
		C, z[18] = madd2(m, 13472759351478842655, z[19], C)
		C, z[19] = madd2(m, 4341611444501281238, z[20], C)
		C, z[20] = madd2(m, 1416473143490767473, z[21], C)
		C, z[21] = madd2(m, 8108839425640233111, z[22], C)
		C, z[22] = madd2(m, 12843699789396907758, z[23], C)
		C, z[23] = madd2(m, 7066117110915403774, z[24], C)
		z[24] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 17091796358385905597
		C := madd0(m, 2613528747251268715, z[0])
		C, z[0] = madd2(m, 15958390544650418284, z[1], C)
		C, z[1] = madd2(m, 14785802376424656414, z[2], C)
		C, z[2] = madd2(m, 9368182429938796067, z[3], C)
		C, z[3] = madd2(m, 6480265800587443824, z[4], C)
		C, z[4] = madd2(m, 8615191826401174576, z[5], C)
		C, z[5] = madd2(m, 10163911460783455078, z[6], C)
		C, z[6] = madd2(m, 14053570512254372664, z[7], C)
		C, z[7] = madd2(m, 13404821358025449395, z[8], C)
		C, z[8] = madd2(m, 6361046791004886847, z[9], C)
		C, z[9] = madd2(m, 13468036185189635777, z[10], C)
		C, z[10] = madd2(m, 696198893708043915, z[11], C)
		C, z[11] = madd2(m, 5651185298720720453, z[12], C)
		C, z[12] = madd2(m, 17008052171478956983, z[13], C)
		C, z[13] = madd2(m, 16165709903860652275, z[14], C)
		C, z[14] = madd2(m, 4482943778134271765, z[15], C)
		C, z[15] = madd2(m, 1042631168326180691, z[16], C)
		C, z[16] = madd2(m, 6309782954791921745, z[17], C)
		C, z[17] = madd2(m, 4458516162657784325, z[18], C)
		C, z[18] = madd2(m, 13472759351478842655, z[19], C)
		C, z[19] = madd2(m, 4341611444501281238, z[20], C)
		C, z[20] = madd2(m, 1416473143490767473, z[21], C)
		C, z[21] = madd2(m, 8108839425640233111, z[22], C)
		C, z[22] = madd2(m, 12843699789396907758, z[23], C)
		C, z[23] = madd2(m, 7066117110915403774, z[24], C)
		z[24] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 17091796358385905597
		C := madd0(m, 2613528747251268715, z[0])
		C, z[0] = madd2(m, 15958390544650418284, z[1], C)
		C, z[1] = madd2(m, 14785802376424656414, z[2], C)
		C, z[2] = madd2(m, 9368182429938796067, z[3], C)
		C, z[3] = madd2(m, 6480265800587443824, z[4], C)
		C, z[4] = madd2(m, 8615191826401174576, z[5], C)
		C, z[5] = madd2(m, 10163911460783455078, z[6], C)
		C, z[6] = madd2(m, 14053570512254372664, z[7], C)
		C, z[7] = madd2(m, 13404821358025449395, z[8], C)
		C, z[8] = madd2(m, 6361046791004886847, z[9], C)
		C, z[9] = madd2(m, 13468036185189635777, z[10], C)
		C, z[10] = madd2(m, 696198893708043915, z[11], C)
		C, z[11] = madd2(m, 5651185298720720453, z[12], C)
		C, z[12] = madd2(m, 17008052171478956983, z[13], C)
		C, z[13] = madd2(m, 16165709903860652275, z[14], C)
		C, z[14] = madd2(m, 4482943778134271765, z[15], C)
		C, z[15] = madd2(m, 1042631168326180691, z[16], C)
		C, z[16] = madd2(m, 6309782954791921745, z[17], C)
		C, z[17] = madd2(m, 4458516162657784325, z[18], C)
		C, z[18] = madd2(m, 13472759351478842655, z[19], C)
		C, z[19] = madd2(m, 4341611444501281238, z[20], C)
		C, z[20] = madd2(m, 1416473143490767473, z[21], C)
		C, z[21] = madd2(m, 8108839425640233111, z[22], C)
		C, z[22] = madd2(m, 12843699789396907758, z[23], C)
		C, z[23] = madd2(m, 7066117110915403774, z[24], C)
		z[24] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 17091796358385905597
		C := madd0(m, 2613528747251268715, z[0])
		C, z[0] = madd2(m, 15958390544650418284, z[1], C)
		C, z[1] = madd2(m, 14785802376424656414, z[2], C)
		C, z[2] = madd2(m, 9368182429938796067, z[3], C)
		C, z[3] = madd2(m, 6480265800587443824, z[4], C)
		C, z[4] = madd2(m, 8615191826401174576, z[5], C)
		C, z[5] = madd2(m, 10163911460783455078, z[6], C)
		C, z[6] = madd2(m, 14053570512254372664, z[7], C)
		C, z[7] = madd2(m, 13404821358025449395, z[8], C)
		C, z[8] = madd2(m, 6361046791004886847, z[9], C)
		C, z[9] = madd2(m, 13468036185189635777, z[10], C)
		C, z[10] = madd2(m, 696198893708043915, z[11], C)
		C, z[11] = madd2(m, 5651185298720720453, z[12], C)
		C, z[12] = madd2(m, 17008052171478956983, z[13], C)
		C, z[13] = madd2(m, 16165709903860652275, z[14], C)
		C, z[14] = madd2(m, 4482943778134271765, z[15], C)
		C, z[15] = madd2(m, 1042631168326180691, z[16], C)
		C, z[16] = madd2(m, 6309782954791921745, z[17], C)
		C, z[17] = madd2(m, 4458516162657784325, z[18], C)
		C, z[18] = madd2(m, 13472759351478842655, z[19], C)
		C, z[19] = madd2(m, 4341611444501281238, z[20], C)
		C, z[20] = madd2(m, 1416473143490767473, z[21], C)
		C, z[21] = madd2(m, 8108839425640233111, z[22], C)
		C, z[22] = madd2(m, 12843699789396907758, z[23], C)
		C, z[23] = madd2(m, 7066117110915403774, z[24], C)
		z[24] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 17091796358385905597
		C := madd0(m, 2613528747251268715, z[0])
		C, z[0] = madd2(m, 15958390544650418284, z[1], C)
		C, z[1] = madd2(m, 14785802376424656414, z[2], C)
		C, z[2] = madd2(m, 9368182429938796067, z[3], C)
		C, z[3] = madd2(m, 6480265800587443824, z[4], C)
		C, z[4] = madd2(m, 8615191826401174576, z[5], C)
		C, z[5] = madd2(m, 10163911460783455078, z[6], C)
		C, z[6] = madd2(m, 14053570512254372664, z[7], C)
		C, z[7] = madd2(m, 13404821358025449395, z[8], C)
		C, z[8] = madd2(m, 6361046791004886847, z[9], C)
		C, z[9] = madd2(m, 13468036185189635777, z[10], C)
		C, z[10] = madd2(m, 696198893708043915, z[11], C)
		C, z[11] = madd2(m, 5651185298720720453, z[12], C)
		C, z[12] = madd2(m, 17008052171478956983, z[13], C)
		C, z[13] = madd2(m, 16165709903860652275, z[14], C)
		C, z[14] = madd2(m, 4482943778134271765, z[15], C)
		C, z[15] = madd2(m, 1042631168326180691, z[16], C)
		C, z[16] = madd2(m, 6309782954791921745, z[17], C)
		C, z[17] = madd2(m, 4458516162657784325, z[18], C)
		C, z[18] = madd2(m, 13472759351478842655, z[19], C)
		C, z[19] = madd2(m, 4341611444501281238, z[20], C)
		C, z[20] = madd2(m, 1416473143490767473, z[21], C)
		C, z[21] = madd2(m, 8108839425640233111, z[22], C)
		C, z[22] = madd2(m, 12843699789396907758, z[23], C)
		C, z[23] = madd2(m, 7066117110915403774, z[24], C)
		z[24] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 17091796358385905597
		C := madd0(m, 2613528747251268715, z[0])
		C, z[0] = madd2(m, 15958390544650418284, z[1], C)
		C, z[1] = madd2(m, 14785802376424656414, z[2], C)
		C, z[2] = madd2(m, 9368182429938796067, z[3], C)
		C, z[3] = madd2(m, 6480265800587443824, z[4], C)
		C, z[4] = madd2(m, 8615191826401174576, z[5], C)
		C, z[5] = madd2(m, 10163911460783455078, z[6], C)
		C, z[6] = madd2(m, 14053570512254372664, z[7], C)
		C, z[7] = madd2(m, 13404821358025449395, z[8], C)
		C, z[8] = madd2(m, 6361046791004886847, z[9], C)
		C, z[9] = madd2(m, 13468036185189635777, z[10], C)
		C, z[10] = madd2(m, 696198893708043915, z[11], C)
		C, z[11] = madd2(m, 5651185298720720453, z[12], C)
		C, z[12] = madd2(m, 17008052171478956983, z[13], C)
		C, z[13] = madd2(m, 16165709903860652275, z[14], C)
		C, z[14] = madd2(m, 4482943778134271765, z[15], C)
		C, z[15] = madd2(m, 1042631168326180691, z[16], C)
		C, z[16] = madd2(m, 6309782954791921745, z[17], C)
		C, z[17] = madd2(m, 4458516162657784325, z[18], C)
		C, z[18] = madd2(m, 13472759351478842655, z[19], C)
		C, z[19] = madd2(m, 4341611444501281238, z[20], C)
		C, z[20] = madd2(m, 1416473143490767473, z[21], C)
		C, z[21] = madd2(m, 8108839425640233111, z[22], C)
		C, z[22] = madd2(m, 12843699789396907758, z[23], C)
		C, z[23] = madd2(m, 7066117110915403774, z[24], C)
		z[24] = C
	}
	{
		// m = z[0]n'[0] mod W
		m := z[0] * 17091796358385905597
		C := madd0(m, 2613528747251268715, z[0])
		C, z[0] = madd2(m, 15958390544650418284, z[1], C)
		C, z[1] = madd2(m, 14785802376424656414, z[2], C)
		C, z[2] = madd2(m, 9368182429938796067, z[3], C)
		C, z[3] = madd2(m, 6480265800587443824, z[4], C)
		C, z[4] = madd2(m, 8615191826401174576, z[5], C)
		C, z[5] = madd2(m, 10163911460783455078, z[6], C)
		C, z[6] = madd2(m, 14053570512254372664, z[7], C)
		C, z[7] = madd2(m, 13404821358025449395, z[8], C)
		C, z[8] = madd2(m, 6361046791004886847, z[9], C)
		C, z[9] = madd2(m, 13468036185189635777, z[10], C)
		C, z[10] = madd2(m, 696198893708043915, z[11], C)
		C, z[11] = madd2(m, 5651185298720720453, z[12], C)
		C, z[12] = madd2(m, 17008052171478956983, z[13], C)
		C, z[13] = madd2(m, 16165709903860652275, z[14], C)
		C, z[14] = madd2(m, 4482943778134271765, z[15], C)
		C, z[15] = madd2(m, 1042631168326180691, z[16], C)
		C, z[16] = madd2(m, 6309782954791921745, z[17], C)
		C, z[17] = madd2(m, 4458516162657784325, z[18], C)
		C, z[18] = madd2(m, 13472759351478842655, z[19], C)
		C, z[19] = madd2(m, 4341611444501281238, z[20], C)
		C, z[20] = madd2(m, 1416473143490767473, z[21], C)
		C, z[21] = madd2(m, 8108839425640233111, z[22], C)
		C, z[22] = madd2(m, 12843699789396907758, z[23], C)
		C, z[23] = madd2(m, 7066117110915403774, z[24], C)
		z[24] = C
	}

	// if z > q --> z -= q
	// note: this is NOT constant time
	if !(z[24] < 7066117110915403774 || (z[24] == 7066117110915403774 && (z[23] < 12843699789396907758 || (z[23] == 12843699789396907758 && (z[22] < 8108839425640233111 || (z[22] == 8108839425640233111 && (z[21] < 1416473143490767473 || (z[21] == 1416473143490767473 && (z[20] < 4341611444501281238 || (z[20] == 4341611444501281238 && (z[19] < 13472759351478842655 || (z[19] == 13472759351478842655 && (z[18] < 4458516162657784325 || (z[18] == 4458516162657784325 && (z[17] < 6309782954791921745 || (z[17] == 6309782954791921745 && (z[16] < 1042631168326180691 || (z[16] == 1042631168326180691 && (z[15] < 4482943778134271765 || (z[15] == 4482943778134271765 && (z[14] < 16165709903860652275 || (z[14] == 16165709903860652275 && (z[13] < 17008052171478956983 || (z[13] == 17008052171478956983 && (z[12] < 5651185298720720453 || (z[12] == 5651185298720720453 && (z[11] < 696198893708043915 || (z[11] == 696198893708043915 && (z[10] < 13468036185189635777 || (z[10] == 13468036185189635777 && (z[9] < 6361046791004886847 || (z[9] == 6361046791004886847 && (z[8] < 13404821358025449395 || (z[8] == 13404821358025449395 && (z[7] < 14053570512254372664 || (z[7] == 14053570512254372664 && (z[6] < 10163911460783455078 || (z[6] == 10163911460783455078 && (z[5] < 8615191826401174576 || (z[5] == 8615191826401174576 && (z[4] < 6480265800587443824 || (z[4] == 6480265800587443824 && (z[3] < 9368182429938796067 || (z[3] == 9368182429938796067 && (z[2] < 14785802376424656414 || (z[2] == 14785802376424656414 && (z[1] < 15958390544650418284 || (z[1] == 15958390544650418284 && (z[0] < 2613528747251268715))))))))))))))))))))))))))))))))))))))))))))))))) {
		var b uint64
		z[0], b = bits.Sub64(z[0], 2613528747251268715, 0)
		z[1], b = bits.Sub64(z[1], 15958390544650418284, b)
		z[2], b = bits.Sub64(z[2], 14785802376424656414, b)
		z[3], b = bits.Sub64(z[3], 9368182429938796067, b)
		z[4], b = bits.Sub64(z[4], 6480265800587443824, b)
		z[5], b = bits.Sub64(z[5], 8615191826401174576, b)
		z[6], b = bits.Sub64(z[6], 10163911460783455078, b)
		z[7], b = bits.Sub64(z[7], 14053570512254372664, b)
		z[8], b = bits.Sub64(z[8], 13404821358025449395, b)
		z[9], b = bits.Sub64(z[9], 6361046791004886847, b)
		z[10], b = bits.Sub64(z[10], 13468036185189635777, b)
		z[11], b = bits.Sub64(z[11], 696198893708043915, b)
		z[12], b = bits.Sub64(z[12], 5651185298720720453, b)
		z[13], b = bits.Sub64(z[13], 17008052171478956983, b)
		z[14], b = bits.Sub64(z[14], 16165709903860652275, b)
		z[15], b = bits.Sub64(z[15], 4482943778134271765, b)
		z[16], b = bits.Sub64(z[16], 1042631168326180691, b)
		z[17], b = bits.Sub64(z[17], 6309782954791921745, b)
		z[18], b = bits.Sub64(z[18], 4458516162657784325, b)
		z[19], b = bits.Sub64(z[19], 13472759351478842655, b)
		z[20], b = bits.Sub64(z[20], 4341611444501281238, b)
		z[21], b = bits.Sub64(z[21], 1416473143490767473, b)
		z[22], b = bits.Sub64(z[22], 8108839425640233111, b)
		z[23], b = bits.Sub64(z[23], 12843699789396907758, b)
		z[24], _ = bits.Sub64(z[24], 7066117110915403774, b)
	}
	return z
}

// ToMont converts z to Montgomery form
// sets and returns z = z * r^2
func (z *Element25) ToMont() *Element25 {
	var rSquare = Element25{
		2743938532293871562,
		13442543118741598153,
		563147931980698678,
		11829375966111435923,
		16767277590905083601,
		8677189375556232299,
		7869407634254664549,
		13360228450696317467,
		6330992324080735778,
		929555968419913180,
		8743315890838511748,
		15424453315500344308,
		11688688582963424232,
		14637886281800347659,
		13586729282512449175,
		10832024111824997435,
		5248207059917278080,
		9063483057986071357,
		6481935221808457945,
		2787080232573345875,
		11996594626505860733,
		6040369008010817859,
		17295454085354213681,
		16400058447406102854,
		790164987586921333,
	}
	return z.MulAssign(&rSquare)
}

// ToRegular returns z in regular form (doesn't mutate z)
func (z Element25) ToRegular() Element25 {
	return *z.FromMont()
}

// String returns the string form of an Element25 in Montgomery form
func (z *Element25) String() string {
	var _z big.Int
	return z.ToBigIntRegular(&_z).String()
}

// ToBigInt returns z as a big.Int in Montgomery form
func (z *Element25) ToBigInt(res *big.Int) *big.Int {
	bits := (*[25]big.Word)(unsafe.Pointer(z))
	return res.SetBits(bits[:])
}

// ToBigIntRegular returns z as a big.Int in regular form
func (z Element25) ToBigIntRegular(res *big.Int) *big.Int {
	z.FromMont()
	bits := (*[25]big.Word)(unsafe.Pointer(&z))
	return res.SetBits(bits[:])
}

// SetBigInt sets z to v (regular form) and returns z in Montgomery form
func (z *Element25) SetBigInt(v *big.Int) *Element25 {
	z.SetZero()

	zero := big.NewInt(0)
	q := element25ModulusBigInt()

	// copy input
	vv := new(big.Int).Set(v)

	// while v < 0, v+=q
	for vv.Cmp(zero) == -1 {
		vv.Add(vv, q)
	}
	// while v > q, v-=q
	for vv.Cmp(q) == 1 {
		vv.Sub(vv, q)
	}
	// if v == q, return 0
	if vv.Cmp(q) == 0 {
		return z
	}
	// v should
	vBits := vv.Bits()
	for i := 0; i < len(vBits); i++ {
		z[i] = uint64(vBits[i])
	}
	return z.ToMont()
}

// SetString creates a big.Int with s (in base 10) and calls SetBigInt on z
func (z *Element25) SetString(s string) *Element25 {
	x, ok := new(big.Int).SetString(s, 10)
	if !ok {
		panic("Element25.SetString failed -> can't parse number in base10 into a big.Int")
	}
	return z.SetBigInt(x)
}

// Mul z = x * y mod q
func (z *Element25) Mul(x, y *Element25) *Element25 {

	var t [26]uint64
	var D uint64
	var m, C uint64
	// -----------------------------------
	// First loop

	C, t[0] = bits.Mul64(y[0], x[0])
	C, t[1] = madd1(y[0], x[1], C)
	C, t[2] = madd1(y[0], x[2], C)
	C, t[3] = madd1(y[0], x[3], C)
	C, t[4] = madd1(y[0], x[4], C)
	C, t[5] = madd1(y[0], x[5], C)
	C, t[6] = madd1(y[0], x[6], C)
	C, t[7] = madd1(y[0], x[7], C)
	C, t[8] = madd1(y[0], x[8], C)
	C, t[9] = madd1(y[0], x[9], C)
	C, t[10] = madd1(y[0], x[10], C)
	C, t[11] = madd1(y[0], x[11], C)
	C, t[12] = madd1(y[0], x[12], C)
	C, t[13] = madd1(y[0], x[13], C)
	C, t[14] = madd1(y[0], x[14], C)
	C, t[15] = madd1(y[0], x[15], C)
	C, t[16] = madd1(y[0], x[16], C)
	C, t[17] = madd1(y[0], x[17], C)
	C, t[18] = madd1(y[0], x[18], C)
	C, t[19] = madd1(y[0], x[19], C)
	C, t[20] = madd1(y[0], x[20], C)
	C, t[21] = madd1(y[0], x[21], C)
	C, t[22] = madd1(y[0], x[22], C)
	C, t[23] = madd1(y[0], x[23], C)
	C, t[24] = madd1(y[0], x[24], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17091796358385905597

	// -----------------------------------
	// Second loop
	C = madd0(m, 2613528747251268715, t[0])

	C, t[0] = madd2(m, 15958390544650418284, t[1], C)

	C, t[1] = madd2(m, 14785802376424656414, t[2], C)

	C, t[2] = madd2(m, 9368182429938796067, t[3], C)

	C, t[3] = madd2(m, 6480265800587443824, t[4], C)

	C, t[4] = madd2(m, 8615191826401174576, t[5], C)

	C, t[5] = madd2(m, 10163911460783455078, t[6], C)

	C, t[6] = madd2(m, 14053570512254372664, t[7], C)

	C, t[7] = madd2(m, 13404821358025449395, t[8], C)

	C, t[8] = madd2(m, 6361046791004886847, t[9], C)

	C, t[9] = madd2(m, 13468036185189635777, t[10], C)

	C, t[10] = madd2(m, 696198893708043915, t[11], C)

	C, t[11] = madd2(m, 5651185298720720453, t[12], C)

	C, t[12] = madd2(m, 17008052171478956983, t[13], C)

	C, t[13] = madd2(m, 16165709903860652275, t[14], C)

	C, t[14] = madd2(m, 4482943778134271765, t[15], C)

	C, t[15] = madd2(m, 1042631168326180691, t[16], C)

	C, t[16] = madd2(m, 6309782954791921745, t[17], C)

	C, t[17] = madd2(m, 4458516162657784325, t[18], C)

	C, t[18] = madd2(m, 13472759351478842655, t[19], C)

	C, t[19] = madd2(m, 4341611444501281238, t[20], C)

	C, t[20] = madd2(m, 1416473143490767473, t[21], C)

	C, t[21] = madd2(m, 8108839425640233111, t[22], C)

	C, t[22] = madd2(m, 12843699789396907758, t[23], C)

	C, t[23] = madd3(m, 7066117110915403774, t[24], C, t[25])

	t[24], t[25] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[1], x[0], t[0])
	C, t[1] = madd2(y[1], x[1], t[1], C)
	C, t[2] = madd2(y[1], x[2], t[2], C)
	C, t[3] = madd2(y[1], x[3], t[3], C)
	C, t[4] = madd2(y[1], x[4], t[4], C)
	C, t[5] = madd2(y[1], x[5], t[5], C)
	C, t[6] = madd2(y[1], x[6], t[6], C)
	C, t[7] = madd2(y[1], x[7], t[7], C)
	C, t[8] = madd2(y[1], x[8], t[8], C)
	C, t[9] = madd2(y[1], x[9], t[9], C)
	C, t[10] = madd2(y[1], x[10], t[10], C)
	C, t[11] = madd2(y[1], x[11], t[11], C)
	C, t[12] = madd2(y[1], x[12], t[12], C)
	C, t[13] = madd2(y[1], x[13], t[13], C)
	C, t[14] = madd2(y[1], x[14], t[14], C)
	C, t[15] = madd2(y[1], x[15], t[15], C)
	C, t[16] = madd2(y[1], x[16], t[16], C)
	C, t[17] = madd2(y[1], x[17], t[17], C)
	C, t[18] = madd2(y[1], x[18], t[18], C)
	C, t[19] = madd2(y[1], x[19], t[19], C)
	C, t[20] = madd2(y[1], x[20], t[20], C)
	C, t[21] = madd2(y[1], x[21], t[21], C)
	C, t[22] = madd2(y[1], x[22], t[22], C)
	C, t[23] = madd2(y[1], x[23], t[23], C)
	C, t[24] = madd2(y[1], x[24], t[24], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17091796358385905597

	// -----------------------------------
	// Second loop
	C = madd0(m, 2613528747251268715, t[0])

	C, t[0] = madd2(m, 15958390544650418284, t[1], C)

	C, t[1] = madd2(m, 14785802376424656414, t[2], C)

	C, t[2] = madd2(m, 9368182429938796067, t[3], C)

	C, t[3] = madd2(m, 6480265800587443824, t[4], C)

	C, t[4] = madd2(m, 8615191826401174576, t[5], C)

	C, t[5] = madd2(m, 10163911460783455078, t[6], C)

	C, t[6] = madd2(m, 14053570512254372664, t[7], C)

	C, t[7] = madd2(m, 13404821358025449395, t[8], C)

	C, t[8] = madd2(m, 6361046791004886847, t[9], C)

	C, t[9] = madd2(m, 13468036185189635777, t[10], C)

	C, t[10] = madd2(m, 696198893708043915, t[11], C)

	C, t[11] = madd2(m, 5651185298720720453, t[12], C)

	C, t[12] = madd2(m, 17008052171478956983, t[13], C)

	C, t[13] = madd2(m, 16165709903860652275, t[14], C)

	C, t[14] = madd2(m, 4482943778134271765, t[15], C)

	C, t[15] = madd2(m, 1042631168326180691, t[16], C)

	C, t[16] = madd2(m, 6309782954791921745, t[17], C)

	C, t[17] = madd2(m, 4458516162657784325, t[18], C)

	C, t[18] = madd2(m, 13472759351478842655, t[19], C)

	C, t[19] = madd2(m, 4341611444501281238, t[20], C)

	C, t[20] = madd2(m, 1416473143490767473, t[21], C)

	C, t[21] = madd2(m, 8108839425640233111, t[22], C)

	C, t[22] = madd2(m, 12843699789396907758, t[23], C)

	C, t[23] = madd3(m, 7066117110915403774, t[24], C, t[25])

	t[24], t[25] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[2], x[0], t[0])
	C, t[1] = madd2(y[2], x[1], t[1], C)
	C, t[2] = madd2(y[2], x[2], t[2], C)
	C, t[3] = madd2(y[2], x[3], t[3], C)
	C, t[4] = madd2(y[2], x[4], t[4], C)
	C, t[5] = madd2(y[2], x[5], t[5], C)
	C, t[6] = madd2(y[2], x[6], t[6], C)
	C, t[7] = madd2(y[2], x[7], t[7], C)
	C, t[8] = madd2(y[2], x[8], t[8], C)
	C, t[9] = madd2(y[2], x[9], t[9], C)
	C, t[10] = madd2(y[2], x[10], t[10], C)
	C, t[11] = madd2(y[2], x[11], t[11], C)
	C, t[12] = madd2(y[2], x[12], t[12], C)
	C, t[13] = madd2(y[2], x[13], t[13], C)
	C, t[14] = madd2(y[2], x[14], t[14], C)
	C, t[15] = madd2(y[2], x[15], t[15], C)
	C, t[16] = madd2(y[2], x[16], t[16], C)
	C, t[17] = madd2(y[2], x[17], t[17], C)
	C, t[18] = madd2(y[2], x[18], t[18], C)
	C, t[19] = madd2(y[2], x[19], t[19], C)
	C, t[20] = madd2(y[2], x[20], t[20], C)
	C, t[21] = madd2(y[2], x[21], t[21], C)
	C, t[22] = madd2(y[2], x[22], t[22], C)
	C, t[23] = madd2(y[2], x[23], t[23], C)
	C, t[24] = madd2(y[2], x[24], t[24], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17091796358385905597

	// -----------------------------------
	// Second loop
	C = madd0(m, 2613528747251268715, t[0])

	C, t[0] = madd2(m, 15958390544650418284, t[1], C)

	C, t[1] = madd2(m, 14785802376424656414, t[2], C)

	C, t[2] = madd2(m, 9368182429938796067, t[3], C)

	C, t[3] = madd2(m, 6480265800587443824, t[4], C)

	C, t[4] = madd2(m, 8615191826401174576, t[5], C)

	C, t[5] = madd2(m, 10163911460783455078, t[6], C)

	C, t[6] = madd2(m, 14053570512254372664, t[7], C)

	C, t[7] = madd2(m, 13404821358025449395, t[8], C)

	C, t[8] = madd2(m, 6361046791004886847, t[9], C)

	C, t[9] = madd2(m, 13468036185189635777, t[10], C)

	C, t[10] = madd2(m, 696198893708043915, t[11], C)

	C, t[11] = madd2(m, 5651185298720720453, t[12], C)

	C, t[12] = madd2(m, 17008052171478956983, t[13], C)

	C, t[13] = madd2(m, 16165709903860652275, t[14], C)

	C, t[14] = madd2(m, 4482943778134271765, t[15], C)

	C, t[15] = madd2(m, 1042631168326180691, t[16], C)

	C, t[16] = madd2(m, 6309782954791921745, t[17], C)

	C, t[17] = madd2(m, 4458516162657784325, t[18], C)

	C, t[18] = madd2(m, 13472759351478842655, t[19], C)

	C, t[19] = madd2(m, 4341611444501281238, t[20], C)

	C, t[20] = madd2(m, 1416473143490767473, t[21], C)

	C, t[21] = madd2(m, 8108839425640233111, t[22], C)

	C, t[22] = madd2(m, 12843699789396907758, t[23], C)

	C, t[23] = madd3(m, 7066117110915403774, t[24], C, t[25])

	t[24], t[25] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[3], x[0], t[0])
	C, t[1] = madd2(y[3], x[1], t[1], C)
	C, t[2] = madd2(y[3], x[2], t[2], C)
	C, t[3] = madd2(y[3], x[3], t[3], C)
	C, t[4] = madd2(y[3], x[4], t[4], C)
	C, t[5] = madd2(y[3], x[5], t[5], C)
	C, t[6] = madd2(y[3], x[6], t[6], C)
	C, t[7] = madd2(y[3], x[7], t[7], C)
	C, t[8] = madd2(y[3], x[8], t[8], C)
	C, t[9] = madd2(y[3], x[9], t[9], C)
	C, t[10] = madd2(y[3], x[10], t[10], C)
	C, t[11] = madd2(y[3], x[11], t[11], C)
	C, t[12] = madd2(y[3], x[12], t[12], C)
	C, t[13] = madd2(y[3], x[13], t[13], C)
	C, t[14] = madd2(y[3], x[14], t[14], C)
	C, t[15] = madd2(y[3], x[15], t[15], C)
	C, t[16] = madd2(y[3], x[16], t[16], C)
	C, t[17] = madd2(y[3], x[17], t[17], C)
	C, t[18] = madd2(y[3], x[18], t[18], C)
	C, t[19] = madd2(y[3], x[19], t[19], C)
	C, t[20] = madd2(y[3], x[20], t[20], C)
	C, t[21] = madd2(y[3], x[21], t[21], C)
	C, t[22] = madd2(y[3], x[22], t[22], C)
	C, t[23] = madd2(y[3], x[23], t[23], C)
	C, t[24] = madd2(y[3], x[24], t[24], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17091796358385905597

	// -----------------------------------
	// Second loop
	C = madd0(m, 2613528747251268715, t[0])

	C, t[0] = madd2(m, 15958390544650418284, t[1], C)

	C, t[1] = madd2(m, 14785802376424656414, t[2], C)

	C, t[2] = madd2(m, 9368182429938796067, t[3], C)

	C, t[3] = madd2(m, 6480265800587443824, t[4], C)

	C, t[4] = madd2(m, 8615191826401174576, t[5], C)

	C, t[5] = madd2(m, 10163911460783455078, t[6], C)

	C, t[6] = madd2(m, 14053570512254372664, t[7], C)

	C, t[7] = madd2(m, 13404821358025449395, t[8], C)

	C, t[8] = madd2(m, 6361046791004886847, t[9], C)

	C, t[9] = madd2(m, 13468036185189635777, t[10], C)

	C, t[10] = madd2(m, 696198893708043915, t[11], C)

	C, t[11] = madd2(m, 5651185298720720453, t[12], C)

	C, t[12] = madd2(m, 17008052171478956983, t[13], C)

	C, t[13] = madd2(m, 16165709903860652275, t[14], C)

	C, t[14] = madd2(m, 4482943778134271765, t[15], C)

	C, t[15] = madd2(m, 1042631168326180691, t[16], C)

	C, t[16] = madd2(m, 6309782954791921745, t[17], C)

	C, t[17] = madd2(m, 4458516162657784325, t[18], C)

	C, t[18] = madd2(m, 13472759351478842655, t[19], C)

	C, t[19] = madd2(m, 4341611444501281238, t[20], C)

	C, t[20] = madd2(m, 1416473143490767473, t[21], C)

	C, t[21] = madd2(m, 8108839425640233111, t[22], C)

	C, t[22] = madd2(m, 12843699789396907758, t[23], C)

	C, t[23] = madd3(m, 7066117110915403774, t[24], C, t[25])

	t[24], t[25] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[4], x[0], t[0])
	C, t[1] = madd2(y[4], x[1], t[1], C)
	C, t[2] = madd2(y[4], x[2], t[2], C)
	C, t[3] = madd2(y[4], x[3], t[3], C)
	C, t[4] = madd2(y[4], x[4], t[4], C)
	C, t[5] = madd2(y[4], x[5], t[5], C)
	C, t[6] = madd2(y[4], x[6], t[6], C)
	C, t[7] = madd2(y[4], x[7], t[7], C)
	C, t[8] = madd2(y[4], x[8], t[8], C)
	C, t[9] = madd2(y[4], x[9], t[9], C)
	C, t[10] = madd2(y[4], x[10], t[10], C)
	C, t[11] = madd2(y[4], x[11], t[11], C)
	C, t[12] = madd2(y[4], x[12], t[12], C)
	C, t[13] = madd2(y[4], x[13], t[13], C)
	C, t[14] = madd2(y[4], x[14], t[14], C)
	C, t[15] = madd2(y[4], x[15], t[15], C)
	C, t[16] = madd2(y[4], x[16], t[16], C)
	C, t[17] = madd2(y[4], x[17], t[17], C)
	C, t[18] = madd2(y[4], x[18], t[18], C)
	C, t[19] = madd2(y[4], x[19], t[19], C)
	C, t[20] = madd2(y[4], x[20], t[20], C)
	C, t[21] = madd2(y[4], x[21], t[21], C)
	C, t[22] = madd2(y[4], x[22], t[22], C)
	C, t[23] = madd2(y[4], x[23], t[23], C)
	C, t[24] = madd2(y[4], x[24], t[24], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17091796358385905597

	// -----------------------------------
	// Second loop
	C = madd0(m, 2613528747251268715, t[0])

	C, t[0] = madd2(m, 15958390544650418284, t[1], C)

	C, t[1] = madd2(m, 14785802376424656414, t[2], C)

	C, t[2] = madd2(m, 9368182429938796067, t[3], C)

	C, t[3] = madd2(m, 6480265800587443824, t[4], C)

	C, t[4] = madd2(m, 8615191826401174576, t[5], C)

	C, t[5] = madd2(m, 10163911460783455078, t[6], C)

	C, t[6] = madd2(m, 14053570512254372664, t[7], C)

	C, t[7] = madd2(m, 13404821358025449395, t[8], C)

	C, t[8] = madd2(m, 6361046791004886847, t[9], C)

	C, t[9] = madd2(m, 13468036185189635777, t[10], C)

	C, t[10] = madd2(m, 696198893708043915, t[11], C)

	C, t[11] = madd2(m, 5651185298720720453, t[12], C)

	C, t[12] = madd2(m, 17008052171478956983, t[13], C)

	C, t[13] = madd2(m, 16165709903860652275, t[14], C)

	C, t[14] = madd2(m, 4482943778134271765, t[15], C)

	C, t[15] = madd2(m, 1042631168326180691, t[16], C)

	C, t[16] = madd2(m, 6309782954791921745, t[17], C)

	C, t[17] = madd2(m, 4458516162657784325, t[18], C)

	C, t[18] = madd2(m, 13472759351478842655, t[19], C)

	C, t[19] = madd2(m, 4341611444501281238, t[20], C)

	C, t[20] = madd2(m, 1416473143490767473, t[21], C)

	C, t[21] = madd2(m, 8108839425640233111, t[22], C)

	C, t[22] = madd2(m, 12843699789396907758, t[23], C)

	C, t[23] = madd3(m, 7066117110915403774, t[24], C, t[25])

	t[24], t[25] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[5], x[0], t[0])
	C, t[1] = madd2(y[5], x[1], t[1], C)
	C, t[2] = madd2(y[5], x[2], t[2], C)
	C, t[3] = madd2(y[5], x[3], t[3], C)
	C, t[4] = madd2(y[5], x[4], t[4], C)
	C, t[5] = madd2(y[5], x[5], t[5], C)
	C, t[6] = madd2(y[5], x[6], t[6], C)
	C, t[7] = madd2(y[5], x[7], t[7], C)
	C, t[8] = madd2(y[5], x[8], t[8], C)
	C, t[9] = madd2(y[5], x[9], t[9], C)
	C, t[10] = madd2(y[5], x[10], t[10], C)
	C, t[11] = madd2(y[5], x[11], t[11], C)
	C, t[12] = madd2(y[5], x[12], t[12], C)
	C, t[13] = madd2(y[5], x[13], t[13], C)
	C, t[14] = madd2(y[5], x[14], t[14], C)
	C, t[15] = madd2(y[5], x[15], t[15], C)
	C, t[16] = madd2(y[5], x[16], t[16], C)
	C, t[17] = madd2(y[5], x[17], t[17], C)
	C, t[18] = madd2(y[5], x[18], t[18], C)
	C, t[19] = madd2(y[5], x[19], t[19], C)
	C, t[20] = madd2(y[5], x[20], t[20], C)
	C, t[21] = madd2(y[5], x[21], t[21], C)
	C, t[22] = madd2(y[5], x[22], t[22], C)
	C, t[23] = madd2(y[5], x[23], t[23], C)
	C, t[24] = madd2(y[5], x[24], t[24], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17091796358385905597

	// -----------------------------------
	// Second loop
	C = madd0(m, 2613528747251268715, t[0])

	C, t[0] = madd2(m, 15958390544650418284, t[1], C)

	C, t[1] = madd2(m, 14785802376424656414, t[2], C)

	C, t[2] = madd2(m, 9368182429938796067, t[3], C)

	C, t[3] = madd2(m, 6480265800587443824, t[4], C)

	C, t[4] = madd2(m, 8615191826401174576, t[5], C)

	C, t[5] = madd2(m, 10163911460783455078, t[6], C)

	C, t[6] = madd2(m, 14053570512254372664, t[7], C)

	C, t[7] = madd2(m, 13404821358025449395, t[8], C)

	C, t[8] = madd2(m, 6361046791004886847, t[9], C)

	C, t[9] = madd2(m, 13468036185189635777, t[10], C)

	C, t[10] = madd2(m, 696198893708043915, t[11], C)

	C, t[11] = madd2(m, 5651185298720720453, t[12], C)

	C, t[12] = madd2(m, 17008052171478956983, t[13], C)

	C, t[13] = madd2(m, 16165709903860652275, t[14], C)

	C, t[14] = madd2(m, 4482943778134271765, t[15], C)

	C, t[15] = madd2(m, 1042631168326180691, t[16], C)

	C, t[16] = madd2(m, 6309782954791921745, t[17], C)

	C, t[17] = madd2(m, 4458516162657784325, t[18], C)

	C, t[18] = madd2(m, 13472759351478842655, t[19], C)

	C, t[19] = madd2(m, 4341611444501281238, t[20], C)

	C, t[20] = madd2(m, 1416473143490767473, t[21], C)

	C, t[21] = madd2(m, 8108839425640233111, t[22], C)

	C, t[22] = madd2(m, 12843699789396907758, t[23], C)

	C, t[23] = madd3(m, 7066117110915403774, t[24], C, t[25])

	t[24], t[25] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[6], x[0], t[0])
	C, t[1] = madd2(y[6], x[1], t[1], C)
	C, t[2] = madd2(y[6], x[2], t[2], C)
	C, t[3] = madd2(y[6], x[3], t[3], C)
	C, t[4] = madd2(y[6], x[4], t[4], C)
	C, t[5] = madd2(y[6], x[5], t[5], C)
	C, t[6] = madd2(y[6], x[6], t[6], C)
	C, t[7] = madd2(y[6], x[7], t[7], C)
	C, t[8] = madd2(y[6], x[8], t[8], C)
	C, t[9] = madd2(y[6], x[9], t[9], C)
	C, t[10] = madd2(y[6], x[10], t[10], C)
	C, t[11] = madd2(y[6], x[11], t[11], C)
	C, t[12] = madd2(y[6], x[12], t[12], C)
	C, t[13] = madd2(y[6], x[13], t[13], C)
	C, t[14] = madd2(y[6], x[14], t[14], C)
	C, t[15] = madd2(y[6], x[15], t[15], C)
	C, t[16] = madd2(y[6], x[16], t[16], C)
	C, t[17] = madd2(y[6], x[17], t[17], C)
	C, t[18] = madd2(y[6], x[18], t[18], C)
	C, t[19] = madd2(y[6], x[19], t[19], C)
	C, t[20] = madd2(y[6], x[20], t[20], C)
	C, t[21] = madd2(y[6], x[21], t[21], C)
	C, t[22] = madd2(y[6], x[22], t[22], C)
	C, t[23] = madd2(y[6], x[23], t[23], C)
	C, t[24] = madd2(y[6], x[24], t[24], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17091796358385905597

	// -----------------------------------
	// Second loop
	C = madd0(m, 2613528747251268715, t[0])

	C, t[0] = madd2(m, 15958390544650418284, t[1], C)

	C, t[1] = madd2(m, 14785802376424656414, t[2], C)

	C, t[2] = madd2(m, 9368182429938796067, t[3], C)

	C, t[3] = madd2(m, 6480265800587443824, t[4], C)

	C, t[4] = madd2(m, 8615191826401174576, t[5], C)

	C, t[5] = madd2(m, 10163911460783455078, t[6], C)

	C, t[6] = madd2(m, 14053570512254372664, t[7], C)

	C, t[7] = madd2(m, 13404821358025449395, t[8], C)

	C, t[8] = madd2(m, 6361046791004886847, t[9], C)

	C, t[9] = madd2(m, 13468036185189635777, t[10], C)

	C, t[10] = madd2(m, 696198893708043915, t[11], C)

	C, t[11] = madd2(m, 5651185298720720453, t[12], C)

	C, t[12] = madd2(m, 17008052171478956983, t[13], C)

	C, t[13] = madd2(m, 16165709903860652275, t[14], C)

	C, t[14] = madd2(m, 4482943778134271765, t[15], C)

	C, t[15] = madd2(m, 1042631168326180691, t[16], C)

	C, t[16] = madd2(m, 6309782954791921745, t[17], C)

	C, t[17] = madd2(m, 4458516162657784325, t[18], C)

	C, t[18] = madd2(m, 13472759351478842655, t[19], C)

	C, t[19] = madd2(m, 4341611444501281238, t[20], C)

	C, t[20] = madd2(m, 1416473143490767473, t[21], C)

	C, t[21] = madd2(m, 8108839425640233111, t[22], C)

	C, t[22] = madd2(m, 12843699789396907758, t[23], C)

	C, t[23] = madd3(m, 7066117110915403774, t[24], C, t[25])

	t[24], t[25] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[7], x[0], t[0])
	C, t[1] = madd2(y[7], x[1], t[1], C)
	C, t[2] = madd2(y[7], x[2], t[2], C)
	C, t[3] = madd2(y[7], x[3], t[3], C)
	C, t[4] = madd2(y[7], x[4], t[4], C)
	C, t[5] = madd2(y[7], x[5], t[5], C)
	C, t[6] = madd2(y[7], x[6], t[6], C)
	C, t[7] = madd2(y[7], x[7], t[7], C)
	C, t[8] = madd2(y[7], x[8], t[8], C)
	C, t[9] = madd2(y[7], x[9], t[9], C)
	C, t[10] = madd2(y[7], x[10], t[10], C)
	C, t[11] = madd2(y[7], x[11], t[11], C)
	C, t[12] = madd2(y[7], x[12], t[12], C)
	C, t[13] = madd2(y[7], x[13], t[13], C)
	C, t[14] = madd2(y[7], x[14], t[14], C)
	C, t[15] = madd2(y[7], x[15], t[15], C)
	C, t[16] = madd2(y[7], x[16], t[16], C)
	C, t[17] = madd2(y[7], x[17], t[17], C)
	C, t[18] = madd2(y[7], x[18], t[18], C)
	C, t[19] = madd2(y[7], x[19], t[19], C)
	C, t[20] = madd2(y[7], x[20], t[20], C)
	C, t[21] = madd2(y[7], x[21], t[21], C)
	C, t[22] = madd2(y[7], x[22], t[22], C)
	C, t[23] = madd2(y[7], x[23], t[23], C)
	C, t[24] = madd2(y[7], x[24], t[24], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17091796358385905597

	// -----------------------------------
	// Second loop
	C = madd0(m, 2613528747251268715, t[0])

	C, t[0] = madd2(m, 15958390544650418284, t[1], C)

	C, t[1] = madd2(m, 14785802376424656414, t[2], C)

	C, t[2] = madd2(m, 9368182429938796067, t[3], C)

	C, t[3] = madd2(m, 6480265800587443824, t[4], C)

	C, t[4] = madd2(m, 8615191826401174576, t[5], C)

	C, t[5] = madd2(m, 10163911460783455078, t[6], C)

	C, t[6] = madd2(m, 14053570512254372664, t[7], C)

	C, t[7] = madd2(m, 13404821358025449395, t[8], C)

	C, t[8] = madd2(m, 6361046791004886847, t[9], C)

	C, t[9] = madd2(m, 13468036185189635777, t[10], C)

	C, t[10] = madd2(m, 696198893708043915, t[11], C)

	C, t[11] = madd2(m, 5651185298720720453, t[12], C)

	C, t[12] = madd2(m, 17008052171478956983, t[13], C)

	C, t[13] = madd2(m, 16165709903860652275, t[14], C)

	C, t[14] = madd2(m, 4482943778134271765, t[15], C)

	C, t[15] = madd2(m, 1042631168326180691, t[16], C)

	C, t[16] = madd2(m, 6309782954791921745, t[17], C)

	C, t[17] = madd2(m, 4458516162657784325, t[18], C)

	C, t[18] = madd2(m, 13472759351478842655, t[19], C)

	C, t[19] = madd2(m, 4341611444501281238, t[20], C)

	C, t[20] = madd2(m, 1416473143490767473, t[21], C)

	C, t[21] = madd2(m, 8108839425640233111, t[22], C)

	C, t[22] = madd2(m, 12843699789396907758, t[23], C)

	C, t[23] = madd3(m, 7066117110915403774, t[24], C, t[25])

	t[24], t[25] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[8], x[0], t[0])
	C, t[1] = madd2(y[8], x[1], t[1], C)
	C, t[2] = madd2(y[8], x[2], t[2], C)
	C, t[3] = madd2(y[8], x[3], t[3], C)
	C, t[4] = madd2(y[8], x[4], t[4], C)
	C, t[5] = madd2(y[8], x[5], t[5], C)
	C, t[6] = madd2(y[8], x[6], t[6], C)
	C, t[7] = madd2(y[8], x[7], t[7], C)
	C, t[8] = madd2(y[8], x[8], t[8], C)
	C, t[9] = madd2(y[8], x[9], t[9], C)
	C, t[10] = madd2(y[8], x[10], t[10], C)
	C, t[11] = madd2(y[8], x[11], t[11], C)
	C, t[12] = madd2(y[8], x[12], t[12], C)
	C, t[13] = madd2(y[8], x[13], t[13], C)
	C, t[14] = madd2(y[8], x[14], t[14], C)
	C, t[15] = madd2(y[8], x[15], t[15], C)
	C, t[16] = madd2(y[8], x[16], t[16], C)
	C, t[17] = madd2(y[8], x[17], t[17], C)
	C, t[18] = madd2(y[8], x[18], t[18], C)
	C, t[19] = madd2(y[8], x[19], t[19], C)
	C, t[20] = madd2(y[8], x[20], t[20], C)
	C, t[21] = madd2(y[8], x[21], t[21], C)
	C, t[22] = madd2(y[8], x[22], t[22], C)
	C, t[23] = madd2(y[8], x[23], t[23], C)
	C, t[24] = madd2(y[8], x[24], t[24], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17091796358385905597

	// -----------------------------------
	// Second loop
	C = madd0(m, 2613528747251268715, t[0])

	C, t[0] = madd2(m, 15958390544650418284, t[1], C)

	C, t[1] = madd2(m, 14785802376424656414, t[2], C)

	C, t[2] = madd2(m, 9368182429938796067, t[3], C)

	C, t[3] = madd2(m, 6480265800587443824, t[4], C)

	C, t[4] = madd2(m, 8615191826401174576, t[5], C)

	C, t[5] = madd2(m, 10163911460783455078, t[6], C)

	C, t[6] = madd2(m, 14053570512254372664, t[7], C)

	C, t[7] = madd2(m, 13404821358025449395, t[8], C)

	C, t[8] = madd2(m, 6361046791004886847, t[9], C)

	C, t[9] = madd2(m, 13468036185189635777, t[10], C)

	C, t[10] = madd2(m, 696198893708043915, t[11], C)

	C, t[11] = madd2(m, 5651185298720720453, t[12], C)

	C, t[12] = madd2(m, 17008052171478956983, t[13], C)

	C, t[13] = madd2(m, 16165709903860652275, t[14], C)

	C, t[14] = madd2(m, 4482943778134271765, t[15], C)

	C, t[15] = madd2(m, 1042631168326180691, t[16], C)

	C, t[16] = madd2(m, 6309782954791921745, t[17], C)

	C, t[17] = madd2(m, 4458516162657784325, t[18], C)

	C, t[18] = madd2(m, 13472759351478842655, t[19], C)

	C, t[19] = madd2(m, 4341611444501281238, t[20], C)

	C, t[20] = madd2(m, 1416473143490767473, t[21], C)

	C, t[21] = madd2(m, 8108839425640233111, t[22], C)

	C, t[22] = madd2(m, 12843699789396907758, t[23], C)

	C, t[23] = madd3(m, 7066117110915403774, t[24], C, t[25])

	t[24], t[25] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[9], x[0], t[0])
	C, t[1] = madd2(y[9], x[1], t[1], C)
	C, t[2] = madd2(y[9], x[2], t[2], C)
	C, t[3] = madd2(y[9], x[3], t[3], C)
	C, t[4] = madd2(y[9], x[4], t[4], C)
	C, t[5] = madd2(y[9], x[5], t[5], C)
	C, t[6] = madd2(y[9], x[6], t[6], C)
	C, t[7] = madd2(y[9], x[7], t[7], C)
	C, t[8] = madd2(y[9], x[8], t[8], C)
	C, t[9] = madd2(y[9], x[9], t[9], C)
	C, t[10] = madd2(y[9], x[10], t[10], C)
	C, t[11] = madd2(y[9], x[11], t[11], C)
	C, t[12] = madd2(y[9], x[12], t[12], C)
	C, t[13] = madd2(y[9], x[13], t[13], C)
	C, t[14] = madd2(y[9], x[14], t[14], C)
	C, t[15] = madd2(y[9], x[15], t[15], C)
	C, t[16] = madd2(y[9], x[16], t[16], C)
	C, t[17] = madd2(y[9], x[17], t[17], C)
	C, t[18] = madd2(y[9], x[18], t[18], C)
	C, t[19] = madd2(y[9], x[19], t[19], C)
	C, t[20] = madd2(y[9], x[20], t[20], C)
	C, t[21] = madd2(y[9], x[21], t[21], C)
	C, t[22] = madd2(y[9], x[22], t[22], C)
	C, t[23] = madd2(y[9], x[23], t[23], C)
	C, t[24] = madd2(y[9], x[24], t[24], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17091796358385905597

	// -----------------------------------
	// Second loop
	C = madd0(m, 2613528747251268715, t[0])

	C, t[0] = madd2(m, 15958390544650418284, t[1], C)

	C, t[1] = madd2(m, 14785802376424656414, t[2], C)

	C, t[2] = madd2(m, 9368182429938796067, t[3], C)

	C, t[3] = madd2(m, 6480265800587443824, t[4], C)

	C, t[4] = madd2(m, 8615191826401174576, t[5], C)

	C, t[5] = madd2(m, 10163911460783455078, t[6], C)

	C, t[6] = madd2(m, 14053570512254372664, t[7], C)

	C, t[7] = madd2(m, 13404821358025449395, t[8], C)

	C, t[8] = madd2(m, 6361046791004886847, t[9], C)

	C, t[9] = madd2(m, 13468036185189635777, t[10], C)

	C, t[10] = madd2(m, 696198893708043915, t[11], C)

	C, t[11] = madd2(m, 5651185298720720453, t[12], C)

	C, t[12] = madd2(m, 17008052171478956983, t[13], C)

	C, t[13] = madd2(m, 16165709903860652275, t[14], C)

	C, t[14] = madd2(m, 4482943778134271765, t[15], C)

	C, t[15] = madd2(m, 1042631168326180691, t[16], C)

	C, t[16] = madd2(m, 6309782954791921745, t[17], C)

	C, t[17] = madd2(m, 4458516162657784325, t[18], C)

	C, t[18] = madd2(m, 13472759351478842655, t[19], C)

	C, t[19] = madd2(m, 4341611444501281238, t[20], C)

	C, t[20] = madd2(m, 1416473143490767473, t[21], C)

	C, t[21] = madd2(m, 8108839425640233111, t[22], C)

	C, t[22] = madd2(m, 12843699789396907758, t[23], C)

	C, t[23] = madd3(m, 7066117110915403774, t[24], C, t[25])

	t[24], t[25] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[10], x[0], t[0])
	C, t[1] = madd2(y[10], x[1], t[1], C)
	C, t[2] = madd2(y[10], x[2], t[2], C)
	C, t[3] = madd2(y[10], x[3], t[3], C)
	C, t[4] = madd2(y[10], x[4], t[4], C)
	C, t[5] = madd2(y[10], x[5], t[5], C)
	C, t[6] = madd2(y[10], x[6], t[6], C)
	C, t[7] = madd2(y[10], x[7], t[7], C)
	C, t[8] = madd2(y[10], x[8], t[8], C)
	C, t[9] = madd2(y[10], x[9], t[9], C)
	C, t[10] = madd2(y[10], x[10], t[10], C)
	C, t[11] = madd2(y[10], x[11], t[11], C)
	C, t[12] = madd2(y[10], x[12], t[12], C)
	C, t[13] = madd2(y[10], x[13], t[13], C)
	C, t[14] = madd2(y[10], x[14], t[14], C)
	C, t[15] = madd2(y[10], x[15], t[15], C)
	C, t[16] = madd2(y[10], x[16], t[16], C)
	C, t[17] = madd2(y[10], x[17], t[17], C)
	C, t[18] = madd2(y[10], x[18], t[18], C)
	C, t[19] = madd2(y[10], x[19], t[19], C)
	C, t[20] = madd2(y[10], x[20], t[20], C)
	C, t[21] = madd2(y[10], x[21], t[21], C)
	C, t[22] = madd2(y[10], x[22], t[22], C)
	C, t[23] = madd2(y[10], x[23], t[23], C)
	C, t[24] = madd2(y[10], x[24], t[24], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17091796358385905597

	// -----------------------------------
	// Second loop
	C = madd0(m, 2613528747251268715, t[0])

	C, t[0] = madd2(m, 15958390544650418284, t[1], C)

	C, t[1] = madd2(m, 14785802376424656414, t[2], C)

	C, t[2] = madd2(m, 9368182429938796067, t[3], C)

	C, t[3] = madd2(m, 6480265800587443824, t[4], C)

	C, t[4] = madd2(m, 8615191826401174576, t[5], C)

	C, t[5] = madd2(m, 10163911460783455078, t[6], C)

	C, t[6] = madd2(m, 14053570512254372664, t[7], C)

	C, t[7] = madd2(m, 13404821358025449395, t[8], C)

	C, t[8] = madd2(m, 6361046791004886847, t[9], C)

	C, t[9] = madd2(m, 13468036185189635777, t[10], C)

	C, t[10] = madd2(m, 696198893708043915, t[11], C)

	C, t[11] = madd2(m, 5651185298720720453, t[12], C)

	C, t[12] = madd2(m, 17008052171478956983, t[13], C)

	C, t[13] = madd2(m, 16165709903860652275, t[14], C)

	C, t[14] = madd2(m, 4482943778134271765, t[15], C)

	C, t[15] = madd2(m, 1042631168326180691, t[16], C)

	C, t[16] = madd2(m, 6309782954791921745, t[17], C)

	C, t[17] = madd2(m, 4458516162657784325, t[18], C)

	C, t[18] = madd2(m, 13472759351478842655, t[19], C)

	C, t[19] = madd2(m, 4341611444501281238, t[20], C)

	C, t[20] = madd2(m, 1416473143490767473, t[21], C)

	C, t[21] = madd2(m, 8108839425640233111, t[22], C)

	C, t[22] = madd2(m, 12843699789396907758, t[23], C)

	C, t[23] = madd3(m, 7066117110915403774, t[24], C, t[25])

	t[24], t[25] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[11], x[0], t[0])
	C, t[1] = madd2(y[11], x[1], t[1], C)
	C, t[2] = madd2(y[11], x[2], t[2], C)
	C, t[3] = madd2(y[11], x[3], t[3], C)
	C, t[4] = madd2(y[11], x[4], t[4], C)
	C, t[5] = madd2(y[11], x[5], t[5], C)
	C, t[6] = madd2(y[11], x[6], t[6], C)
	C, t[7] = madd2(y[11], x[7], t[7], C)
	C, t[8] = madd2(y[11], x[8], t[8], C)
	C, t[9] = madd2(y[11], x[9], t[9], C)
	C, t[10] = madd2(y[11], x[10], t[10], C)
	C, t[11] = madd2(y[11], x[11], t[11], C)
	C, t[12] = madd2(y[11], x[12], t[12], C)
	C, t[13] = madd2(y[11], x[13], t[13], C)
	C, t[14] = madd2(y[11], x[14], t[14], C)
	C, t[15] = madd2(y[11], x[15], t[15], C)
	C, t[16] = madd2(y[11], x[16], t[16], C)
	C, t[17] = madd2(y[11], x[17], t[17], C)
	C, t[18] = madd2(y[11], x[18], t[18], C)
	C, t[19] = madd2(y[11], x[19], t[19], C)
	C, t[20] = madd2(y[11], x[20], t[20], C)
	C, t[21] = madd2(y[11], x[21], t[21], C)
	C, t[22] = madd2(y[11], x[22], t[22], C)
	C, t[23] = madd2(y[11], x[23], t[23], C)
	C, t[24] = madd2(y[11], x[24], t[24], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17091796358385905597

	// -----------------------------------
	// Second loop
	C = madd0(m, 2613528747251268715, t[0])

	C, t[0] = madd2(m, 15958390544650418284, t[1], C)

	C, t[1] = madd2(m, 14785802376424656414, t[2], C)

	C, t[2] = madd2(m, 9368182429938796067, t[3], C)

	C, t[3] = madd2(m, 6480265800587443824, t[4], C)

	C, t[4] = madd2(m, 8615191826401174576, t[5], C)

	C, t[5] = madd2(m, 10163911460783455078, t[6], C)

	C, t[6] = madd2(m, 14053570512254372664, t[7], C)

	C, t[7] = madd2(m, 13404821358025449395, t[8], C)

	C, t[8] = madd2(m, 6361046791004886847, t[9], C)

	C, t[9] = madd2(m, 13468036185189635777, t[10], C)

	C, t[10] = madd2(m, 696198893708043915, t[11], C)

	C, t[11] = madd2(m, 5651185298720720453, t[12], C)

	C, t[12] = madd2(m, 17008052171478956983, t[13], C)

	C, t[13] = madd2(m, 16165709903860652275, t[14], C)

	C, t[14] = madd2(m, 4482943778134271765, t[15], C)

	C, t[15] = madd2(m, 1042631168326180691, t[16], C)

	C, t[16] = madd2(m, 6309782954791921745, t[17], C)

	C, t[17] = madd2(m, 4458516162657784325, t[18], C)

	C, t[18] = madd2(m, 13472759351478842655, t[19], C)

	C, t[19] = madd2(m, 4341611444501281238, t[20], C)

	C, t[20] = madd2(m, 1416473143490767473, t[21], C)

	C, t[21] = madd2(m, 8108839425640233111, t[22], C)

	C, t[22] = madd2(m, 12843699789396907758, t[23], C)

	C, t[23] = madd3(m, 7066117110915403774, t[24], C, t[25])

	t[24], t[25] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[12], x[0], t[0])
	C, t[1] = madd2(y[12], x[1], t[1], C)
	C, t[2] = madd2(y[12], x[2], t[2], C)
	C, t[3] = madd2(y[12], x[3], t[3], C)
	C, t[4] = madd2(y[12], x[4], t[4], C)
	C, t[5] = madd2(y[12], x[5], t[5], C)
	C, t[6] = madd2(y[12], x[6], t[6], C)
	C, t[7] = madd2(y[12], x[7], t[7], C)
	C, t[8] = madd2(y[12], x[8], t[8], C)
	C, t[9] = madd2(y[12], x[9], t[9], C)
	C, t[10] = madd2(y[12], x[10], t[10], C)
	C, t[11] = madd2(y[12], x[11], t[11], C)
	C, t[12] = madd2(y[12], x[12], t[12], C)
	C, t[13] = madd2(y[12], x[13], t[13], C)
	C, t[14] = madd2(y[12], x[14], t[14], C)
	C, t[15] = madd2(y[12], x[15], t[15], C)
	C, t[16] = madd2(y[12], x[16], t[16], C)
	C, t[17] = madd2(y[12], x[17], t[17], C)
	C, t[18] = madd2(y[12], x[18], t[18], C)
	C, t[19] = madd2(y[12], x[19], t[19], C)
	C, t[20] = madd2(y[12], x[20], t[20], C)
	C, t[21] = madd2(y[12], x[21], t[21], C)
	C, t[22] = madd2(y[12], x[22], t[22], C)
	C, t[23] = madd2(y[12], x[23], t[23], C)
	C, t[24] = madd2(y[12], x[24], t[24], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17091796358385905597

	// -----------------------------------
	// Second loop
	C = madd0(m, 2613528747251268715, t[0])

	C, t[0] = madd2(m, 15958390544650418284, t[1], C)

	C, t[1] = madd2(m, 14785802376424656414, t[2], C)

	C, t[2] = madd2(m, 9368182429938796067, t[3], C)

	C, t[3] = madd2(m, 6480265800587443824, t[4], C)

	C, t[4] = madd2(m, 8615191826401174576, t[5], C)

	C, t[5] = madd2(m, 10163911460783455078, t[6], C)

	C, t[6] = madd2(m, 14053570512254372664, t[7], C)

	C, t[7] = madd2(m, 13404821358025449395, t[8], C)

	C, t[8] = madd2(m, 6361046791004886847, t[9], C)

	C, t[9] = madd2(m, 13468036185189635777, t[10], C)

	C, t[10] = madd2(m, 696198893708043915, t[11], C)

	C, t[11] = madd2(m, 5651185298720720453, t[12], C)

	C, t[12] = madd2(m, 17008052171478956983, t[13], C)

	C, t[13] = madd2(m, 16165709903860652275, t[14], C)

	C, t[14] = madd2(m, 4482943778134271765, t[15], C)

	C, t[15] = madd2(m, 1042631168326180691, t[16], C)

	C, t[16] = madd2(m, 6309782954791921745, t[17], C)

	C, t[17] = madd2(m, 4458516162657784325, t[18], C)

	C, t[18] = madd2(m, 13472759351478842655, t[19], C)

	C, t[19] = madd2(m, 4341611444501281238, t[20], C)

	C, t[20] = madd2(m, 1416473143490767473, t[21], C)

	C, t[21] = madd2(m, 8108839425640233111, t[22], C)

	C, t[22] = madd2(m, 12843699789396907758, t[23], C)

	C, t[23] = madd3(m, 7066117110915403774, t[24], C, t[25])

	t[24], t[25] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[13], x[0], t[0])
	C, t[1] = madd2(y[13], x[1], t[1], C)
	C, t[2] = madd2(y[13], x[2], t[2], C)
	C, t[3] = madd2(y[13], x[3], t[3], C)
	C, t[4] = madd2(y[13], x[4], t[4], C)
	C, t[5] = madd2(y[13], x[5], t[5], C)
	C, t[6] = madd2(y[13], x[6], t[6], C)
	C, t[7] = madd2(y[13], x[7], t[7], C)
	C, t[8] = madd2(y[13], x[8], t[8], C)
	C, t[9] = madd2(y[13], x[9], t[9], C)
	C, t[10] = madd2(y[13], x[10], t[10], C)
	C, t[11] = madd2(y[13], x[11], t[11], C)
	C, t[12] = madd2(y[13], x[12], t[12], C)
	C, t[13] = madd2(y[13], x[13], t[13], C)
	C, t[14] = madd2(y[13], x[14], t[14], C)
	C, t[15] = madd2(y[13], x[15], t[15], C)
	C, t[16] = madd2(y[13], x[16], t[16], C)
	C, t[17] = madd2(y[13], x[17], t[17], C)
	C, t[18] = madd2(y[13], x[18], t[18], C)
	C, t[19] = madd2(y[13], x[19], t[19], C)
	C, t[20] = madd2(y[13], x[20], t[20], C)
	C, t[21] = madd2(y[13], x[21], t[21], C)
	C, t[22] = madd2(y[13], x[22], t[22], C)
	C, t[23] = madd2(y[13], x[23], t[23], C)
	C, t[24] = madd2(y[13], x[24], t[24], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17091796358385905597

	// -----------------------------------
	// Second loop
	C = madd0(m, 2613528747251268715, t[0])

	C, t[0] = madd2(m, 15958390544650418284, t[1], C)

	C, t[1] = madd2(m, 14785802376424656414, t[2], C)

	C, t[2] = madd2(m, 9368182429938796067, t[3], C)

	C, t[3] = madd2(m, 6480265800587443824, t[4], C)

	C, t[4] = madd2(m, 8615191826401174576, t[5], C)

	C, t[5] = madd2(m, 10163911460783455078, t[6], C)

	C, t[6] = madd2(m, 14053570512254372664, t[7], C)

	C, t[7] = madd2(m, 13404821358025449395, t[8], C)

	C, t[8] = madd2(m, 6361046791004886847, t[9], C)

	C, t[9] = madd2(m, 13468036185189635777, t[10], C)

	C, t[10] = madd2(m, 696198893708043915, t[11], C)

	C, t[11] = madd2(m, 5651185298720720453, t[12], C)

	C, t[12] = madd2(m, 17008052171478956983, t[13], C)

	C, t[13] = madd2(m, 16165709903860652275, t[14], C)

	C, t[14] = madd2(m, 4482943778134271765, t[15], C)

	C, t[15] = madd2(m, 1042631168326180691, t[16], C)

	C, t[16] = madd2(m, 6309782954791921745, t[17], C)

	C, t[17] = madd2(m, 4458516162657784325, t[18], C)

	C, t[18] = madd2(m, 13472759351478842655, t[19], C)

	C, t[19] = madd2(m, 4341611444501281238, t[20], C)

	C, t[20] = madd2(m, 1416473143490767473, t[21], C)

	C, t[21] = madd2(m, 8108839425640233111, t[22], C)

	C, t[22] = madd2(m, 12843699789396907758, t[23], C)

	C, t[23] = madd3(m, 7066117110915403774, t[24], C, t[25])

	t[24], t[25] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[14], x[0], t[0])
	C, t[1] = madd2(y[14], x[1], t[1], C)
	C, t[2] = madd2(y[14], x[2], t[2], C)
	C, t[3] = madd2(y[14], x[3], t[3], C)
	C, t[4] = madd2(y[14], x[4], t[4], C)
	C, t[5] = madd2(y[14], x[5], t[5], C)
	C, t[6] = madd2(y[14], x[6], t[6], C)
	C, t[7] = madd2(y[14], x[7], t[7], C)
	C, t[8] = madd2(y[14], x[8], t[8], C)
	C, t[9] = madd2(y[14], x[9], t[9], C)
	C, t[10] = madd2(y[14], x[10], t[10], C)
	C, t[11] = madd2(y[14], x[11], t[11], C)
	C, t[12] = madd2(y[14], x[12], t[12], C)
	C, t[13] = madd2(y[14], x[13], t[13], C)
	C, t[14] = madd2(y[14], x[14], t[14], C)
	C, t[15] = madd2(y[14], x[15], t[15], C)
	C, t[16] = madd2(y[14], x[16], t[16], C)
	C, t[17] = madd2(y[14], x[17], t[17], C)
	C, t[18] = madd2(y[14], x[18], t[18], C)
	C, t[19] = madd2(y[14], x[19], t[19], C)
	C, t[20] = madd2(y[14], x[20], t[20], C)
	C, t[21] = madd2(y[14], x[21], t[21], C)
	C, t[22] = madd2(y[14], x[22], t[22], C)
	C, t[23] = madd2(y[14], x[23], t[23], C)
	C, t[24] = madd2(y[14], x[24], t[24], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17091796358385905597

	// -----------------------------------
	// Second loop
	C = madd0(m, 2613528747251268715, t[0])

	C, t[0] = madd2(m, 15958390544650418284, t[1], C)

	C, t[1] = madd2(m, 14785802376424656414, t[2], C)

	C, t[2] = madd2(m, 9368182429938796067, t[3], C)

	C, t[3] = madd2(m, 6480265800587443824, t[4], C)

	C, t[4] = madd2(m, 8615191826401174576, t[5], C)

	C, t[5] = madd2(m, 10163911460783455078, t[6], C)

	C, t[6] = madd2(m, 14053570512254372664, t[7], C)

	C, t[7] = madd2(m, 13404821358025449395, t[8], C)

	C, t[8] = madd2(m, 6361046791004886847, t[9], C)

	C, t[9] = madd2(m, 13468036185189635777, t[10], C)

	C, t[10] = madd2(m, 696198893708043915, t[11], C)

	C, t[11] = madd2(m, 5651185298720720453, t[12], C)

	C, t[12] = madd2(m, 17008052171478956983, t[13], C)

	C, t[13] = madd2(m, 16165709903860652275, t[14], C)

	C, t[14] = madd2(m, 4482943778134271765, t[15], C)

	C, t[15] = madd2(m, 1042631168326180691, t[16], C)

	C, t[16] = madd2(m, 6309782954791921745, t[17], C)

	C, t[17] = madd2(m, 4458516162657784325, t[18], C)

	C, t[18] = madd2(m, 13472759351478842655, t[19], C)

	C, t[19] = madd2(m, 4341611444501281238, t[20], C)

	C, t[20] = madd2(m, 1416473143490767473, t[21], C)

	C, t[21] = madd2(m, 8108839425640233111, t[22], C)

	C, t[22] = madd2(m, 12843699789396907758, t[23], C)

	C, t[23] = madd3(m, 7066117110915403774, t[24], C, t[25])

	t[24], t[25] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[15], x[0], t[0])
	C, t[1] = madd2(y[15], x[1], t[1], C)
	C, t[2] = madd2(y[15], x[2], t[2], C)
	C, t[3] = madd2(y[15], x[3], t[3], C)
	C, t[4] = madd2(y[15], x[4], t[4], C)
	C, t[5] = madd2(y[15], x[5], t[5], C)
	C, t[6] = madd2(y[15], x[6], t[6], C)
	C, t[7] = madd2(y[15], x[7], t[7], C)
	C, t[8] = madd2(y[15], x[8], t[8], C)
	C, t[9] = madd2(y[15], x[9], t[9], C)
	C, t[10] = madd2(y[15], x[10], t[10], C)
	C, t[11] = madd2(y[15], x[11], t[11], C)
	C, t[12] = madd2(y[15], x[12], t[12], C)
	C, t[13] = madd2(y[15], x[13], t[13], C)
	C, t[14] = madd2(y[15], x[14], t[14], C)
	C, t[15] = madd2(y[15], x[15], t[15], C)
	C, t[16] = madd2(y[15], x[16], t[16], C)
	C, t[17] = madd2(y[15], x[17], t[17], C)
	C, t[18] = madd2(y[15], x[18], t[18], C)
	C, t[19] = madd2(y[15], x[19], t[19], C)
	C, t[20] = madd2(y[15], x[20], t[20], C)
	C, t[21] = madd2(y[15], x[21], t[21], C)
	C, t[22] = madd2(y[15], x[22], t[22], C)
	C, t[23] = madd2(y[15], x[23], t[23], C)
	C, t[24] = madd2(y[15], x[24], t[24], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17091796358385905597

	// -----------------------------------
	// Second loop
	C = madd0(m, 2613528747251268715, t[0])

	C, t[0] = madd2(m, 15958390544650418284, t[1], C)

	C, t[1] = madd2(m, 14785802376424656414, t[2], C)

	C, t[2] = madd2(m, 9368182429938796067, t[3], C)

	C, t[3] = madd2(m, 6480265800587443824, t[4], C)

	C, t[4] = madd2(m, 8615191826401174576, t[5], C)

	C, t[5] = madd2(m, 10163911460783455078, t[6], C)

	C, t[6] = madd2(m, 14053570512254372664, t[7], C)

	C, t[7] = madd2(m, 13404821358025449395, t[8], C)

	C, t[8] = madd2(m, 6361046791004886847, t[9], C)

	C, t[9] = madd2(m, 13468036185189635777, t[10], C)

	C, t[10] = madd2(m, 696198893708043915, t[11], C)

	C, t[11] = madd2(m, 5651185298720720453, t[12], C)

	C, t[12] = madd2(m, 17008052171478956983, t[13], C)

	C, t[13] = madd2(m, 16165709903860652275, t[14], C)

	C, t[14] = madd2(m, 4482943778134271765, t[15], C)

	C, t[15] = madd2(m, 1042631168326180691, t[16], C)

	C, t[16] = madd2(m, 6309782954791921745, t[17], C)

	C, t[17] = madd2(m, 4458516162657784325, t[18], C)

	C, t[18] = madd2(m, 13472759351478842655, t[19], C)

	C, t[19] = madd2(m, 4341611444501281238, t[20], C)

	C, t[20] = madd2(m, 1416473143490767473, t[21], C)

	C, t[21] = madd2(m, 8108839425640233111, t[22], C)

	C, t[22] = madd2(m, 12843699789396907758, t[23], C)

	C, t[23] = madd3(m, 7066117110915403774, t[24], C, t[25])

	t[24], t[25] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[16], x[0], t[0])
	C, t[1] = madd2(y[16], x[1], t[1], C)
	C, t[2] = madd2(y[16], x[2], t[2], C)
	C, t[3] = madd2(y[16], x[3], t[3], C)
	C, t[4] = madd2(y[16], x[4], t[4], C)
	C, t[5] = madd2(y[16], x[5], t[5], C)
	C, t[6] = madd2(y[16], x[6], t[6], C)
	C, t[7] = madd2(y[16], x[7], t[7], C)
	C, t[8] = madd2(y[16], x[8], t[8], C)
	C, t[9] = madd2(y[16], x[9], t[9], C)
	C, t[10] = madd2(y[16], x[10], t[10], C)
	C, t[11] = madd2(y[16], x[11], t[11], C)
	C, t[12] = madd2(y[16], x[12], t[12], C)
	C, t[13] = madd2(y[16], x[13], t[13], C)
	C, t[14] = madd2(y[16], x[14], t[14], C)
	C, t[15] = madd2(y[16], x[15], t[15], C)
	C, t[16] = madd2(y[16], x[16], t[16], C)
	C, t[17] = madd2(y[16], x[17], t[17], C)
	C, t[18] = madd2(y[16], x[18], t[18], C)
	C, t[19] = madd2(y[16], x[19], t[19], C)
	C, t[20] = madd2(y[16], x[20], t[20], C)
	C, t[21] = madd2(y[16], x[21], t[21], C)
	C, t[22] = madd2(y[16], x[22], t[22], C)
	C, t[23] = madd2(y[16], x[23], t[23], C)
	C, t[24] = madd2(y[16], x[24], t[24], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17091796358385905597

	// -----------------------------------
	// Second loop
	C = madd0(m, 2613528747251268715, t[0])

	C, t[0] = madd2(m, 15958390544650418284, t[1], C)

	C, t[1] = madd2(m, 14785802376424656414, t[2], C)

	C, t[2] = madd2(m, 9368182429938796067, t[3], C)

	C, t[3] = madd2(m, 6480265800587443824, t[4], C)

	C, t[4] = madd2(m, 8615191826401174576, t[5], C)

	C, t[5] = madd2(m, 10163911460783455078, t[6], C)

	C, t[6] = madd2(m, 14053570512254372664, t[7], C)

	C, t[7] = madd2(m, 13404821358025449395, t[8], C)

	C, t[8] = madd2(m, 6361046791004886847, t[9], C)

	C, t[9] = madd2(m, 13468036185189635777, t[10], C)

	C, t[10] = madd2(m, 696198893708043915, t[11], C)

	C, t[11] = madd2(m, 5651185298720720453, t[12], C)

	C, t[12] = madd2(m, 17008052171478956983, t[13], C)

	C, t[13] = madd2(m, 16165709903860652275, t[14], C)

	C, t[14] = madd2(m, 4482943778134271765, t[15], C)

	C, t[15] = madd2(m, 1042631168326180691, t[16], C)

	C, t[16] = madd2(m, 6309782954791921745, t[17], C)

	C, t[17] = madd2(m, 4458516162657784325, t[18], C)

	C, t[18] = madd2(m, 13472759351478842655, t[19], C)

	C, t[19] = madd2(m, 4341611444501281238, t[20], C)

	C, t[20] = madd2(m, 1416473143490767473, t[21], C)

	C, t[21] = madd2(m, 8108839425640233111, t[22], C)

	C, t[22] = madd2(m, 12843699789396907758, t[23], C)

	C, t[23] = madd3(m, 7066117110915403774, t[24], C, t[25])

	t[24], t[25] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[17], x[0], t[0])
	C, t[1] = madd2(y[17], x[1], t[1], C)
	C, t[2] = madd2(y[17], x[2], t[2], C)
	C, t[3] = madd2(y[17], x[3], t[3], C)
	C, t[4] = madd2(y[17], x[4], t[4], C)
	C, t[5] = madd2(y[17], x[5], t[5], C)
	C, t[6] = madd2(y[17], x[6], t[6], C)
	C, t[7] = madd2(y[17], x[7], t[7], C)
	C, t[8] = madd2(y[17], x[8], t[8], C)
	C, t[9] = madd2(y[17], x[9], t[9], C)
	C, t[10] = madd2(y[17], x[10], t[10], C)
	C, t[11] = madd2(y[17], x[11], t[11], C)
	C, t[12] = madd2(y[17], x[12], t[12], C)
	C, t[13] = madd2(y[17], x[13], t[13], C)
	C, t[14] = madd2(y[17], x[14], t[14], C)
	C, t[15] = madd2(y[17], x[15], t[15], C)
	C, t[16] = madd2(y[17], x[16], t[16], C)
	C, t[17] = madd2(y[17], x[17], t[17], C)
	C, t[18] = madd2(y[17], x[18], t[18], C)
	C, t[19] = madd2(y[17], x[19], t[19], C)
	C, t[20] = madd2(y[17], x[20], t[20], C)
	C, t[21] = madd2(y[17], x[21], t[21], C)
	C, t[22] = madd2(y[17], x[22], t[22], C)
	C, t[23] = madd2(y[17], x[23], t[23], C)
	C, t[24] = madd2(y[17], x[24], t[24], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17091796358385905597

	// -----------------------------------
	// Second loop
	C = madd0(m, 2613528747251268715, t[0])

	C, t[0] = madd2(m, 15958390544650418284, t[1], C)

	C, t[1] = madd2(m, 14785802376424656414, t[2], C)

	C, t[2] = madd2(m, 9368182429938796067, t[3], C)

	C, t[3] = madd2(m, 6480265800587443824, t[4], C)

	C, t[4] = madd2(m, 8615191826401174576, t[5], C)

	C, t[5] = madd2(m, 10163911460783455078, t[6], C)

	C, t[6] = madd2(m, 14053570512254372664, t[7], C)

	C, t[7] = madd2(m, 13404821358025449395, t[8], C)

	C, t[8] = madd2(m, 6361046791004886847, t[9], C)

	C, t[9] = madd2(m, 13468036185189635777, t[10], C)

	C, t[10] = madd2(m, 696198893708043915, t[11], C)

	C, t[11] = madd2(m, 5651185298720720453, t[12], C)

	C, t[12] = madd2(m, 17008052171478956983, t[13], C)

	C, t[13] = madd2(m, 16165709903860652275, t[14], C)

	C, t[14] = madd2(m, 4482943778134271765, t[15], C)

	C, t[15] = madd2(m, 1042631168326180691, t[16], C)

	C, t[16] = madd2(m, 6309782954791921745, t[17], C)

	C, t[17] = madd2(m, 4458516162657784325, t[18], C)

	C, t[18] = madd2(m, 13472759351478842655, t[19], C)

	C, t[19] = madd2(m, 4341611444501281238, t[20], C)

	C, t[20] = madd2(m, 1416473143490767473, t[21], C)

	C, t[21] = madd2(m, 8108839425640233111, t[22], C)

	C, t[22] = madd2(m, 12843699789396907758, t[23], C)

	C, t[23] = madd3(m, 7066117110915403774, t[24], C, t[25])

	t[24], t[25] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[18], x[0], t[0])
	C, t[1] = madd2(y[18], x[1], t[1], C)
	C, t[2] = madd2(y[18], x[2], t[2], C)
	C, t[3] = madd2(y[18], x[3], t[3], C)
	C, t[4] = madd2(y[18], x[4], t[4], C)
	C, t[5] = madd2(y[18], x[5], t[5], C)
	C, t[6] = madd2(y[18], x[6], t[6], C)
	C, t[7] = madd2(y[18], x[7], t[7], C)
	C, t[8] = madd2(y[18], x[8], t[8], C)
	C, t[9] = madd2(y[18], x[9], t[9], C)
	C, t[10] = madd2(y[18], x[10], t[10], C)
	C, t[11] = madd2(y[18], x[11], t[11], C)
	C, t[12] = madd2(y[18], x[12], t[12], C)
	C, t[13] = madd2(y[18], x[13], t[13], C)
	C, t[14] = madd2(y[18], x[14], t[14], C)
	C, t[15] = madd2(y[18], x[15], t[15], C)
	C, t[16] = madd2(y[18], x[16], t[16], C)
	C, t[17] = madd2(y[18], x[17], t[17], C)
	C, t[18] = madd2(y[18], x[18], t[18], C)
	C, t[19] = madd2(y[18], x[19], t[19], C)
	C, t[20] = madd2(y[18], x[20], t[20], C)
	C, t[21] = madd2(y[18], x[21], t[21], C)
	C, t[22] = madd2(y[18], x[22], t[22], C)
	C, t[23] = madd2(y[18], x[23], t[23], C)
	C, t[24] = madd2(y[18], x[24], t[24], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17091796358385905597

	// -----------------------------------
	// Second loop
	C = madd0(m, 2613528747251268715, t[0])

	C, t[0] = madd2(m, 15958390544650418284, t[1], C)

	C, t[1] = madd2(m, 14785802376424656414, t[2], C)

	C, t[2] = madd2(m, 9368182429938796067, t[3], C)

	C, t[3] = madd2(m, 6480265800587443824, t[4], C)

	C, t[4] = madd2(m, 8615191826401174576, t[5], C)

	C, t[5] = madd2(m, 10163911460783455078, t[6], C)

	C, t[6] = madd2(m, 14053570512254372664, t[7], C)

	C, t[7] = madd2(m, 13404821358025449395, t[8], C)

	C, t[8] = madd2(m, 6361046791004886847, t[9], C)

	C, t[9] = madd2(m, 13468036185189635777, t[10], C)

	C, t[10] = madd2(m, 696198893708043915, t[11], C)

	C, t[11] = madd2(m, 5651185298720720453, t[12], C)

	C, t[12] = madd2(m, 17008052171478956983, t[13], C)

	C, t[13] = madd2(m, 16165709903860652275, t[14], C)

	C, t[14] = madd2(m, 4482943778134271765, t[15], C)

	C, t[15] = madd2(m, 1042631168326180691, t[16], C)

	C, t[16] = madd2(m, 6309782954791921745, t[17], C)

	C, t[17] = madd2(m, 4458516162657784325, t[18], C)

	C, t[18] = madd2(m, 13472759351478842655, t[19], C)

	C, t[19] = madd2(m, 4341611444501281238, t[20], C)

	C, t[20] = madd2(m, 1416473143490767473, t[21], C)

	C, t[21] = madd2(m, 8108839425640233111, t[22], C)

	C, t[22] = madd2(m, 12843699789396907758, t[23], C)

	C, t[23] = madd3(m, 7066117110915403774, t[24], C, t[25])

	t[24], t[25] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[19], x[0], t[0])
	C, t[1] = madd2(y[19], x[1], t[1], C)
	C, t[2] = madd2(y[19], x[2], t[2], C)
	C, t[3] = madd2(y[19], x[3], t[3], C)
	C, t[4] = madd2(y[19], x[4], t[4], C)
	C, t[5] = madd2(y[19], x[5], t[5], C)
	C, t[6] = madd2(y[19], x[6], t[6], C)
	C, t[7] = madd2(y[19], x[7], t[7], C)
	C, t[8] = madd2(y[19], x[8], t[8], C)
	C, t[9] = madd2(y[19], x[9], t[9], C)
	C, t[10] = madd2(y[19], x[10], t[10], C)
	C, t[11] = madd2(y[19], x[11], t[11], C)
	C, t[12] = madd2(y[19], x[12], t[12], C)
	C, t[13] = madd2(y[19], x[13], t[13], C)
	C, t[14] = madd2(y[19], x[14], t[14], C)
	C, t[15] = madd2(y[19], x[15], t[15], C)
	C, t[16] = madd2(y[19], x[16], t[16], C)
	C, t[17] = madd2(y[19], x[17], t[17], C)
	C, t[18] = madd2(y[19], x[18], t[18], C)
	C, t[19] = madd2(y[19], x[19], t[19], C)
	C, t[20] = madd2(y[19], x[20], t[20], C)
	C, t[21] = madd2(y[19], x[21], t[21], C)
	C, t[22] = madd2(y[19], x[22], t[22], C)
	C, t[23] = madd2(y[19], x[23], t[23], C)
	C, t[24] = madd2(y[19], x[24], t[24], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17091796358385905597

	// -----------------------------------
	// Second loop
	C = madd0(m, 2613528747251268715, t[0])

	C, t[0] = madd2(m, 15958390544650418284, t[1], C)

	C, t[1] = madd2(m, 14785802376424656414, t[2], C)

	C, t[2] = madd2(m, 9368182429938796067, t[3], C)

	C, t[3] = madd2(m, 6480265800587443824, t[4], C)

	C, t[4] = madd2(m, 8615191826401174576, t[5], C)

	C, t[5] = madd2(m, 10163911460783455078, t[6], C)

	C, t[6] = madd2(m, 14053570512254372664, t[7], C)

	C, t[7] = madd2(m, 13404821358025449395, t[8], C)

	C, t[8] = madd2(m, 6361046791004886847, t[9], C)

	C, t[9] = madd2(m, 13468036185189635777, t[10], C)

	C, t[10] = madd2(m, 696198893708043915, t[11], C)

	C, t[11] = madd2(m, 5651185298720720453, t[12], C)

	C, t[12] = madd2(m, 17008052171478956983, t[13], C)

	C, t[13] = madd2(m, 16165709903860652275, t[14], C)

	C, t[14] = madd2(m, 4482943778134271765, t[15], C)

	C, t[15] = madd2(m, 1042631168326180691, t[16], C)

	C, t[16] = madd2(m, 6309782954791921745, t[17], C)

	C, t[17] = madd2(m, 4458516162657784325, t[18], C)

	C, t[18] = madd2(m, 13472759351478842655, t[19], C)

	C, t[19] = madd2(m, 4341611444501281238, t[20], C)

	C, t[20] = madd2(m, 1416473143490767473, t[21], C)

	C, t[21] = madd2(m, 8108839425640233111, t[22], C)

	C, t[22] = madd2(m, 12843699789396907758, t[23], C)

	C, t[23] = madd3(m, 7066117110915403774, t[24], C, t[25])

	t[24], t[25] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[20], x[0], t[0])
	C, t[1] = madd2(y[20], x[1], t[1], C)
	C, t[2] = madd2(y[20], x[2], t[2], C)
	C, t[3] = madd2(y[20], x[3], t[3], C)
	C, t[4] = madd2(y[20], x[4], t[4], C)
	C, t[5] = madd2(y[20], x[5], t[5], C)
	C, t[6] = madd2(y[20], x[6], t[6], C)
	C, t[7] = madd2(y[20], x[7], t[7], C)
	C, t[8] = madd2(y[20], x[8], t[8], C)
	C, t[9] = madd2(y[20], x[9], t[9], C)
	C, t[10] = madd2(y[20], x[10], t[10], C)
	C, t[11] = madd2(y[20], x[11], t[11], C)
	C, t[12] = madd2(y[20], x[12], t[12], C)
	C, t[13] = madd2(y[20], x[13], t[13], C)
	C, t[14] = madd2(y[20], x[14], t[14], C)
	C, t[15] = madd2(y[20], x[15], t[15], C)
	C, t[16] = madd2(y[20], x[16], t[16], C)
	C, t[17] = madd2(y[20], x[17], t[17], C)
	C, t[18] = madd2(y[20], x[18], t[18], C)
	C, t[19] = madd2(y[20], x[19], t[19], C)
	C, t[20] = madd2(y[20], x[20], t[20], C)
	C, t[21] = madd2(y[20], x[21], t[21], C)
	C, t[22] = madd2(y[20], x[22], t[22], C)
	C, t[23] = madd2(y[20], x[23], t[23], C)
	C, t[24] = madd2(y[20], x[24], t[24], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17091796358385905597

	// -----------------------------------
	// Second loop
	C = madd0(m, 2613528747251268715, t[0])

	C, t[0] = madd2(m, 15958390544650418284, t[1], C)

	C, t[1] = madd2(m, 14785802376424656414, t[2], C)

	C, t[2] = madd2(m, 9368182429938796067, t[3], C)

	C, t[3] = madd2(m, 6480265800587443824, t[4], C)

	C, t[4] = madd2(m, 8615191826401174576, t[5], C)

	C, t[5] = madd2(m, 10163911460783455078, t[6], C)

	C, t[6] = madd2(m, 14053570512254372664, t[7], C)

	C, t[7] = madd2(m, 13404821358025449395, t[8], C)

	C, t[8] = madd2(m, 6361046791004886847, t[9], C)

	C, t[9] = madd2(m, 13468036185189635777, t[10], C)

	C, t[10] = madd2(m, 696198893708043915, t[11], C)

	C, t[11] = madd2(m, 5651185298720720453, t[12], C)

	C, t[12] = madd2(m, 17008052171478956983, t[13], C)

	C, t[13] = madd2(m, 16165709903860652275, t[14], C)

	C, t[14] = madd2(m, 4482943778134271765, t[15], C)

	C, t[15] = madd2(m, 1042631168326180691, t[16], C)

	C, t[16] = madd2(m, 6309782954791921745, t[17], C)

	C, t[17] = madd2(m, 4458516162657784325, t[18], C)

	C, t[18] = madd2(m, 13472759351478842655, t[19], C)

	C, t[19] = madd2(m, 4341611444501281238, t[20], C)

	C, t[20] = madd2(m, 1416473143490767473, t[21], C)

	C, t[21] = madd2(m, 8108839425640233111, t[22], C)

	C, t[22] = madd2(m, 12843699789396907758, t[23], C)

	C, t[23] = madd3(m, 7066117110915403774, t[24], C, t[25])

	t[24], t[25] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[21], x[0], t[0])
	C, t[1] = madd2(y[21], x[1], t[1], C)
	C, t[2] = madd2(y[21], x[2], t[2], C)
	C, t[3] = madd2(y[21], x[3], t[3], C)
	C, t[4] = madd2(y[21], x[4], t[4], C)
	C, t[5] = madd2(y[21], x[5], t[5], C)
	C, t[6] = madd2(y[21], x[6], t[6], C)
	C, t[7] = madd2(y[21], x[7], t[7], C)
	C, t[8] = madd2(y[21], x[8], t[8], C)
	C, t[9] = madd2(y[21], x[9], t[9], C)
	C, t[10] = madd2(y[21], x[10], t[10], C)
	C, t[11] = madd2(y[21], x[11], t[11], C)
	C, t[12] = madd2(y[21], x[12], t[12], C)
	C, t[13] = madd2(y[21], x[13], t[13], C)
	C, t[14] = madd2(y[21], x[14], t[14], C)
	C, t[15] = madd2(y[21], x[15], t[15], C)
	C, t[16] = madd2(y[21], x[16], t[16], C)
	C, t[17] = madd2(y[21], x[17], t[17], C)
	C, t[18] = madd2(y[21], x[18], t[18], C)
	C, t[19] = madd2(y[21], x[19], t[19], C)
	C, t[20] = madd2(y[21], x[20], t[20], C)
	C, t[21] = madd2(y[21], x[21], t[21], C)
	C, t[22] = madd2(y[21], x[22], t[22], C)
	C, t[23] = madd2(y[21], x[23], t[23], C)
	C, t[24] = madd2(y[21], x[24], t[24], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17091796358385905597

	// -----------------------------------
	// Second loop
	C = madd0(m, 2613528747251268715, t[0])

	C, t[0] = madd2(m, 15958390544650418284, t[1], C)

	C, t[1] = madd2(m, 14785802376424656414, t[2], C)

	C, t[2] = madd2(m, 9368182429938796067, t[3], C)

	C, t[3] = madd2(m, 6480265800587443824, t[4], C)

	C, t[4] = madd2(m, 8615191826401174576, t[5], C)

	C, t[5] = madd2(m, 10163911460783455078, t[6], C)

	C, t[6] = madd2(m, 14053570512254372664, t[7], C)

	C, t[7] = madd2(m, 13404821358025449395, t[8], C)

	C, t[8] = madd2(m, 6361046791004886847, t[9], C)

	C, t[9] = madd2(m, 13468036185189635777, t[10], C)

	C, t[10] = madd2(m, 696198893708043915, t[11], C)

	C, t[11] = madd2(m, 5651185298720720453, t[12], C)

	C, t[12] = madd2(m, 17008052171478956983, t[13], C)

	C, t[13] = madd2(m, 16165709903860652275, t[14], C)

	C, t[14] = madd2(m, 4482943778134271765, t[15], C)

	C, t[15] = madd2(m, 1042631168326180691, t[16], C)

	C, t[16] = madd2(m, 6309782954791921745, t[17], C)

	C, t[17] = madd2(m, 4458516162657784325, t[18], C)

	C, t[18] = madd2(m, 13472759351478842655, t[19], C)

	C, t[19] = madd2(m, 4341611444501281238, t[20], C)

	C, t[20] = madd2(m, 1416473143490767473, t[21], C)

	C, t[21] = madd2(m, 8108839425640233111, t[22], C)

	C, t[22] = madd2(m, 12843699789396907758, t[23], C)

	C, t[23] = madd3(m, 7066117110915403774, t[24], C, t[25])

	t[24], t[25] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[22], x[0], t[0])
	C, t[1] = madd2(y[22], x[1], t[1], C)
	C, t[2] = madd2(y[22], x[2], t[2], C)
	C, t[3] = madd2(y[22], x[3], t[3], C)
	C, t[4] = madd2(y[22], x[4], t[4], C)
	C, t[5] = madd2(y[22], x[5], t[5], C)
	C, t[6] = madd2(y[22], x[6], t[6], C)
	C, t[7] = madd2(y[22], x[7], t[7], C)
	C, t[8] = madd2(y[22], x[8], t[8], C)
	C, t[9] = madd2(y[22], x[9], t[9], C)
	C, t[10] = madd2(y[22], x[10], t[10], C)
	C, t[11] = madd2(y[22], x[11], t[11], C)
	C, t[12] = madd2(y[22], x[12], t[12], C)
	C, t[13] = madd2(y[22], x[13], t[13], C)
	C, t[14] = madd2(y[22], x[14], t[14], C)
	C, t[15] = madd2(y[22], x[15], t[15], C)
	C, t[16] = madd2(y[22], x[16], t[16], C)
	C, t[17] = madd2(y[22], x[17], t[17], C)
	C, t[18] = madd2(y[22], x[18], t[18], C)
	C, t[19] = madd2(y[22], x[19], t[19], C)
	C, t[20] = madd2(y[22], x[20], t[20], C)
	C, t[21] = madd2(y[22], x[21], t[21], C)
	C, t[22] = madd2(y[22], x[22], t[22], C)
	C, t[23] = madd2(y[22], x[23], t[23], C)
	C, t[24] = madd2(y[22], x[24], t[24], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17091796358385905597

	// -----------------------------------
	// Second loop
	C = madd0(m, 2613528747251268715, t[0])

	C, t[0] = madd2(m, 15958390544650418284, t[1], C)

	C, t[1] = madd2(m, 14785802376424656414, t[2], C)

	C, t[2] = madd2(m, 9368182429938796067, t[3], C)

	C, t[3] = madd2(m, 6480265800587443824, t[4], C)

	C, t[4] = madd2(m, 8615191826401174576, t[5], C)

	C, t[5] = madd2(m, 10163911460783455078, t[6], C)

	C, t[6] = madd2(m, 14053570512254372664, t[7], C)

	C, t[7] = madd2(m, 13404821358025449395, t[8], C)

	C, t[8] = madd2(m, 6361046791004886847, t[9], C)

	C, t[9] = madd2(m, 13468036185189635777, t[10], C)

	C, t[10] = madd2(m, 696198893708043915, t[11], C)

	C, t[11] = madd2(m, 5651185298720720453, t[12], C)

	C, t[12] = madd2(m, 17008052171478956983, t[13], C)

	C, t[13] = madd2(m, 16165709903860652275, t[14], C)

	C, t[14] = madd2(m, 4482943778134271765, t[15], C)

	C, t[15] = madd2(m, 1042631168326180691, t[16], C)

	C, t[16] = madd2(m, 6309782954791921745, t[17], C)

	C, t[17] = madd2(m, 4458516162657784325, t[18], C)

	C, t[18] = madd2(m, 13472759351478842655, t[19], C)

	C, t[19] = madd2(m, 4341611444501281238, t[20], C)

	C, t[20] = madd2(m, 1416473143490767473, t[21], C)

	C, t[21] = madd2(m, 8108839425640233111, t[22], C)

	C, t[22] = madd2(m, 12843699789396907758, t[23], C)

	C, t[23] = madd3(m, 7066117110915403774, t[24], C, t[25])

	t[24], t[25] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[23], x[0], t[0])
	C, t[1] = madd2(y[23], x[1], t[1], C)
	C, t[2] = madd2(y[23], x[2], t[2], C)
	C, t[3] = madd2(y[23], x[3], t[3], C)
	C, t[4] = madd2(y[23], x[4], t[4], C)
	C, t[5] = madd2(y[23], x[5], t[5], C)
	C, t[6] = madd2(y[23], x[6], t[6], C)
	C, t[7] = madd2(y[23], x[7], t[7], C)
	C, t[8] = madd2(y[23], x[8], t[8], C)
	C, t[9] = madd2(y[23], x[9], t[9], C)
	C, t[10] = madd2(y[23], x[10], t[10], C)
	C, t[11] = madd2(y[23], x[11], t[11], C)
	C, t[12] = madd2(y[23], x[12], t[12], C)
	C, t[13] = madd2(y[23], x[13], t[13], C)
	C, t[14] = madd2(y[23], x[14], t[14], C)
	C, t[15] = madd2(y[23], x[15], t[15], C)
	C, t[16] = madd2(y[23], x[16], t[16], C)
	C, t[17] = madd2(y[23], x[17], t[17], C)
	C, t[18] = madd2(y[23], x[18], t[18], C)
	C, t[19] = madd2(y[23], x[19], t[19], C)
	C, t[20] = madd2(y[23], x[20], t[20], C)
	C, t[21] = madd2(y[23], x[21], t[21], C)
	C, t[22] = madd2(y[23], x[22], t[22], C)
	C, t[23] = madd2(y[23], x[23], t[23], C)
	C, t[24] = madd2(y[23], x[24], t[24], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17091796358385905597

	// -----------------------------------
	// Second loop
	C = madd0(m, 2613528747251268715, t[0])

	C, t[0] = madd2(m, 15958390544650418284, t[1], C)

	C, t[1] = madd2(m, 14785802376424656414, t[2], C)

	C, t[2] = madd2(m, 9368182429938796067, t[3], C)

	C, t[3] = madd2(m, 6480265800587443824, t[4], C)

	C, t[4] = madd2(m, 8615191826401174576, t[5], C)

	C, t[5] = madd2(m, 10163911460783455078, t[6], C)

	C, t[6] = madd2(m, 14053570512254372664, t[7], C)

	C, t[7] = madd2(m, 13404821358025449395, t[8], C)

	C, t[8] = madd2(m, 6361046791004886847, t[9], C)

	C, t[9] = madd2(m, 13468036185189635777, t[10], C)

	C, t[10] = madd2(m, 696198893708043915, t[11], C)

	C, t[11] = madd2(m, 5651185298720720453, t[12], C)

	C, t[12] = madd2(m, 17008052171478956983, t[13], C)

	C, t[13] = madd2(m, 16165709903860652275, t[14], C)

	C, t[14] = madd2(m, 4482943778134271765, t[15], C)

	C, t[15] = madd2(m, 1042631168326180691, t[16], C)

	C, t[16] = madd2(m, 6309782954791921745, t[17], C)

	C, t[17] = madd2(m, 4458516162657784325, t[18], C)

	C, t[18] = madd2(m, 13472759351478842655, t[19], C)

	C, t[19] = madd2(m, 4341611444501281238, t[20], C)

	C, t[20] = madd2(m, 1416473143490767473, t[21], C)

	C, t[21] = madd2(m, 8108839425640233111, t[22], C)

	C, t[22] = madd2(m, 12843699789396907758, t[23], C)

	C, t[23] = madd3(m, 7066117110915403774, t[24], C, t[25])

	t[24], t[25] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(y[24], x[0], t[0])
	C, t[1] = madd2(y[24], x[1], t[1], C)
	C, t[2] = madd2(y[24], x[2], t[2], C)
	C, t[3] = madd2(y[24], x[3], t[3], C)
	C, t[4] = madd2(y[24], x[4], t[4], C)
	C, t[5] = madd2(y[24], x[5], t[5], C)
	C, t[6] = madd2(y[24], x[6], t[6], C)
	C, t[7] = madd2(y[24], x[7], t[7], C)
	C, t[8] = madd2(y[24], x[8], t[8], C)
	C, t[9] = madd2(y[24], x[9], t[9], C)
	C, t[10] = madd2(y[24], x[10], t[10], C)
	C, t[11] = madd2(y[24], x[11], t[11], C)
	C, t[12] = madd2(y[24], x[12], t[12], C)
	C, t[13] = madd2(y[24], x[13], t[13], C)
	C, t[14] = madd2(y[24], x[14], t[14], C)
	C, t[15] = madd2(y[24], x[15], t[15], C)
	C, t[16] = madd2(y[24], x[16], t[16], C)
	C, t[17] = madd2(y[24], x[17], t[17], C)
	C, t[18] = madd2(y[24], x[18], t[18], C)
	C, t[19] = madd2(y[24], x[19], t[19], C)
	C, t[20] = madd2(y[24], x[20], t[20], C)
	C, t[21] = madd2(y[24], x[21], t[21], C)
	C, t[22] = madd2(y[24], x[22], t[22], C)
	C, t[23] = madd2(y[24], x[23], t[23], C)
	C, t[24] = madd2(y[24], x[24], t[24], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17091796358385905597

	// -----------------------------------
	// Second loop
	C = madd0(m, 2613528747251268715, t[0])

	C, t[0] = madd2(m, 15958390544650418284, t[1], C)

	C, t[1] = madd2(m, 14785802376424656414, t[2], C)

	C, t[2] = madd2(m, 9368182429938796067, t[3], C)

	C, t[3] = madd2(m, 6480265800587443824, t[4], C)

	C, t[4] = madd2(m, 8615191826401174576, t[5], C)

	C, t[5] = madd2(m, 10163911460783455078, t[6], C)

	C, t[6] = madd2(m, 14053570512254372664, t[7], C)

	C, t[7] = madd2(m, 13404821358025449395, t[8], C)

	C, t[8] = madd2(m, 6361046791004886847, t[9], C)

	C, t[9] = madd2(m, 13468036185189635777, t[10], C)

	C, t[10] = madd2(m, 696198893708043915, t[11], C)

	C, t[11] = madd2(m, 5651185298720720453, t[12], C)

	C, t[12] = madd2(m, 17008052171478956983, t[13], C)

	C, t[13] = madd2(m, 16165709903860652275, t[14], C)

	C, t[14] = madd2(m, 4482943778134271765, t[15], C)

	C, t[15] = madd2(m, 1042631168326180691, t[16], C)

	C, t[16] = madd2(m, 6309782954791921745, t[17], C)

	C, t[17] = madd2(m, 4458516162657784325, t[18], C)

	C, t[18] = madd2(m, 13472759351478842655, t[19], C)

	C, t[19] = madd2(m, 4341611444501281238, t[20], C)

	C, t[20] = madd2(m, 1416473143490767473, t[21], C)

	C, t[21] = madd2(m, 8108839425640233111, t[22], C)

	C, t[22] = madd2(m, 12843699789396907758, t[23], C)

	C, t[23] = madd3(m, 7066117110915403774, t[24], C, t[25])

	t[24], t[25] = bits.Add64(D, C, 0)

	if t[25] != 0 {
		// we need to reduce, we have a result on 26 words
		var b uint64
		z[0], b = bits.Sub64(t[0], 2613528747251268715, 0)
		z[1], b = bits.Sub64(t[1], 15958390544650418284, b)
		z[2], b = bits.Sub64(t[2], 14785802376424656414, b)
		z[3], b = bits.Sub64(t[3], 9368182429938796067, b)
		z[4], b = bits.Sub64(t[4], 6480265800587443824, b)
		z[5], b = bits.Sub64(t[5], 8615191826401174576, b)
		z[6], b = bits.Sub64(t[6], 10163911460783455078, b)
		z[7], b = bits.Sub64(t[7], 14053570512254372664, b)
		z[8], b = bits.Sub64(t[8], 13404821358025449395, b)
		z[9], b = bits.Sub64(t[9], 6361046791004886847, b)
		z[10], b = bits.Sub64(t[10], 13468036185189635777, b)
		z[11], b = bits.Sub64(t[11], 696198893708043915, b)
		z[12], b = bits.Sub64(t[12], 5651185298720720453, b)
		z[13], b = bits.Sub64(t[13], 17008052171478956983, b)
		z[14], b = bits.Sub64(t[14], 16165709903860652275, b)
		z[15], b = bits.Sub64(t[15], 4482943778134271765, b)
		z[16], b = bits.Sub64(t[16], 1042631168326180691, b)
		z[17], b = bits.Sub64(t[17], 6309782954791921745, b)
		z[18], b = bits.Sub64(t[18], 4458516162657784325, b)
		z[19], b = bits.Sub64(t[19], 13472759351478842655, b)
		z[20], b = bits.Sub64(t[20], 4341611444501281238, b)
		z[21], b = bits.Sub64(t[21], 1416473143490767473, b)
		z[22], b = bits.Sub64(t[22], 8108839425640233111, b)
		z[23], b = bits.Sub64(t[23], 12843699789396907758, b)
		z[24], _ = bits.Sub64(t[24], 7066117110915403774, b)
		return z
	}

	// copy t into z
	z[0] = t[0]
	z[1] = t[1]
	z[2] = t[2]
	z[3] = t[3]
	z[4] = t[4]
	z[5] = t[5]
	z[6] = t[6]
	z[7] = t[7]
	z[8] = t[8]
	z[9] = t[9]
	z[10] = t[10]
	z[11] = t[11]
	z[12] = t[12]
	z[13] = t[13]
	z[14] = t[14]
	z[15] = t[15]
	z[16] = t[16]
	z[17] = t[17]
	z[18] = t[18]
	z[19] = t[19]
	z[20] = t[20]
	z[21] = t[21]
	z[22] = t[22]
	z[23] = t[23]
	z[24] = t[24]

	// if z > q --> z -= q
	// note: this is NOT constant time
	if !(z[24] < 7066117110915403774 || (z[24] == 7066117110915403774 && (z[23] < 12843699789396907758 || (z[23] == 12843699789396907758 && (z[22] < 8108839425640233111 || (z[22] == 8108839425640233111 && (z[21] < 1416473143490767473 || (z[21] == 1416473143490767473 && (z[20] < 4341611444501281238 || (z[20] == 4341611444501281238 && (z[19] < 13472759351478842655 || (z[19] == 13472759351478842655 && (z[18] < 4458516162657784325 || (z[18] == 4458516162657784325 && (z[17] < 6309782954791921745 || (z[17] == 6309782954791921745 && (z[16] < 1042631168326180691 || (z[16] == 1042631168326180691 && (z[15] < 4482943778134271765 || (z[15] == 4482943778134271765 && (z[14] < 16165709903860652275 || (z[14] == 16165709903860652275 && (z[13] < 17008052171478956983 || (z[13] == 17008052171478956983 && (z[12] < 5651185298720720453 || (z[12] == 5651185298720720453 && (z[11] < 696198893708043915 || (z[11] == 696198893708043915 && (z[10] < 13468036185189635777 || (z[10] == 13468036185189635777 && (z[9] < 6361046791004886847 || (z[9] == 6361046791004886847 && (z[8] < 13404821358025449395 || (z[8] == 13404821358025449395 && (z[7] < 14053570512254372664 || (z[7] == 14053570512254372664 && (z[6] < 10163911460783455078 || (z[6] == 10163911460783455078 && (z[5] < 8615191826401174576 || (z[5] == 8615191826401174576 && (z[4] < 6480265800587443824 || (z[4] == 6480265800587443824 && (z[3] < 9368182429938796067 || (z[3] == 9368182429938796067 && (z[2] < 14785802376424656414 || (z[2] == 14785802376424656414 && (z[1] < 15958390544650418284 || (z[1] == 15958390544650418284 && (z[0] < 2613528747251268715))))))))))))))))))))))))))))))))))))))))))))))))) {
		var b uint64
		z[0], b = bits.Sub64(z[0], 2613528747251268715, 0)
		z[1], b = bits.Sub64(z[1], 15958390544650418284, b)
		z[2], b = bits.Sub64(z[2], 14785802376424656414, b)
		z[3], b = bits.Sub64(z[3], 9368182429938796067, b)
		z[4], b = bits.Sub64(z[4], 6480265800587443824, b)
		z[5], b = bits.Sub64(z[5], 8615191826401174576, b)
		z[6], b = bits.Sub64(z[6], 10163911460783455078, b)
		z[7], b = bits.Sub64(z[7], 14053570512254372664, b)
		z[8], b = bits.Sub64(z[8], 13404821358025449395, b)
		z[9], b = bits.Sub64(z[9], 6361046791004886847, b)
		z[10], b = bits.Sub64(z[10], 13468036185189635777, b)
		z[11], b = bits.Sub64(z[11], 696198893708043915, b)
		z[12], b = bits.Sub64(z[12], 5651185298720720453, b)
		z[13], b = bits.Sub64(z[13], 17008052171478956983, b)
		z[14], b = bits.Sub64(z[14], 16165709903860652275, b)
		z[15], b = bits.Sub64(z[15], 4482943778134271765, b)
		z[16], b = bits.Sub64(z[16], 1042631168326180691, b)
		z[17], b = bits.Sub64(z[17], 6309782954791921745, b)
		z[18], b = bits.Sub64(z[18], 4458516162657784325, b)
		z[19], b = bits.Sub64(z[19], 13472759351478842655, b)
		z[20], b = bits.Sub64(z[20], 4341611444501281238, b)
		z[21], b = bits.Sub64(z[21], 1416473143490767473, b)
		z[22], b = bits.Sub64(z[22], 8108839425640233111, b)
		z[23], b = bits.Sub64(z[23], 12843699789396907758, b)
		z[24], _ = bits.Sub64(z[24], 7066117110915403774, b)
	}
	return z
}

// MulAssign z = z * x mod q
func (z *Element25) MulAssign(x *Element25) *Element25 {

	var t [26]uint64
	var D uint64
	var m, C uint64
	// -----------------------------------
	// First loop

	C, t[0] = bits.Mul64(x[0], z[0])
	C, t[1] = madd1(x[0], z[1], C)
	C, t[2] = madd1(x[0], z[2], C)
	C, t[3] = madd1(x[0], z[3], C)
	C, t[4] = madd1(x[0], z[4], C)
	C, t[5] = madd1(x[0], z[5], C)
	C, t[6] = madd1(x[0], z[6], C)
	C, t[7] = madd1(x[0], z[7], C)
	C, t[8] = madd1(x[0], z[8], C)
	C, t[9] = madd1(x[0], z[9], C)
	C, t[10] = madd1(x[0], z[10], C)
	C, t[11] = madd1(x[0], z[11], C)
	C, t[12] = madd1(x[0], z[12], C)
	C, t[13] = madd1(x[0], z[13], C)
	C, t[14] = madd1(x[0], z[14], C)
	C, t[15] = madd1(x[0], z[15], C)
	C, t[16] = madd1(x[0], z[16], C)
	C, t[17] = madd1(x[0], z[17], C)
	C, t[18] = madd1(x[0], z[18], C)
	C, t[19] = madd1(x[0], z[19], C)
	C, t[20] = madd1(x[0], z[20], C)
	C, t[21] = madd1(x[0], z[21], C)
	C, t[22] = madd1(x[0], z[22], C)
	C, t[23] = madd1(x[0], z[23], C)
	C, t[24] = madd1(x[0], z[24], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17091796358385905597

	// -----------------------------------
	// Second loop
	C = madd0(m, 2613528747251268715, t[0])

	C, t[0] = madd2(m, 15958390544650418284, t[1], C)

	C, t[1] = madd2(m, 14785802376424656414, t[2], C)

	C, t[2] = madd2(m, 9368182429938796067, t[3], C)

	C, t[3] = madd2(m, 6480265800587443824, t[4], C)

	C, t[4] = madd2(m, 8615191826401174576, t[5], C)

	C, t[5] = madd2(m, 10163911460783455078, t[6], C)

	C, t[6] = madd2(m, 14053570512254372664, t[7], C)

	C, t[7] = madd2(m, 13404821358025449395, t[8], C)

	C, t[8] = madd2(m, 6361046791004886847, t[9], C)

	C, t[9] = madd2(m, 13468036185189635777, t[10], C)

	C, t[10] = madd2(m, 696198893708043915, t[11], C)

	C, t[11] = madd2(m, 5651185298720720453, t[12], C)

	C, t[12] = madd2(m, 17008052171478956983, t[13], C)

	C, t[13] = madd2(m, 16165709903860652275, t[14], C)

	C, t[14] = madd2(m, 4482943778134271765, t[15], C)

	C, t[15] = madd2(m, 1042631168326180691, t[16], C)

	C, t[16] = madd2(m, 6309782954791921745, t[17], C)

	C, t[17] = madd2(m, 4458516162657784325, t[18], C)

	C, t[18] = madd2(m, 13472759351478842655, t[19], C)

	C, t[19] = madd2(m, 4341611444501281238, t[20], C)

	C, t[20] = madd2(m, 1416473143490767473, t[21], C)

	C, t[21] = madd2(m, 8108839425640233111, t[22], C)

	C, t[22] = madd2(m, 12843699789396907758, t[23], C)

	C, t[23] = madd3(m, 7066117110915403774, t[24], C, t[25])

	t[24], t[25] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[1], z[0], t[0])
	C, t[1] = madd2(x[1], z[1], t[1], C)
	C, t[2] = madd2(x[1], z[2], t[2], C)
	C, t[3] = madd2(x[1], z[3], t[3], C)
	C, t[4] = madd2(x[1], z[4], t[4], C)
	C, t[5] = madd2(x[1], z[5], t[5], C)
	C, t[6] = madd2(x[1], z[6], t[6], C)
	C, t[7] = madd2(x[1], z[7], t[7], C)
	C, t[8] = madd2(x[1], z[8], t[8], C)
	C, t[9] = madd2(x[1], z[9], t[9], C)
	C, t[10] = madd2(x[1], z[10], t[10], C)
	C, t[11] = madd2(x[1], z[11], t[11], C)
	C, t[12] = madd2(x[1], z[12], t[12], C)
	C, t[13] = madd2(x[1], z[13], t[13], C)
	C, t[14] = madd2(x[1], z[14], t[14], C)
	C, t[15] = madd2(x[1], z[15], t[15], C)
	C, t[16] = madd2(x[1], z[16], t[16], C)
	C, t[17] = madd2(x[1], z[17], t[17], C)
	C, t[18] = madd2(x[1], z[18], t[18], C)
	C, t[19] = madd2(x[1], z[19], t[19], C)
	C, t[20] = madd2(x[1], z[20], t[20], C)
	C, t[21] = madd2(x[1], z[21], t[21], C)
	C, t[22] = madd2(x[1], z[22], t[22], C)
	C, t[23] = madd2(x[1], z[23], t[23], C)
	C, t[24] = madd2(x[1], z[24], t[24], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17091796358385905597

	// -----------------------------------
	// Second loop
	C = madd0(m, 2613528747251268715, t[0])

	C, t[0] = madd2(m, 15958390544650418284, t[1], C)

	C, t[1] = madd2(m, 14785802376424656414, t[2], C)

	C, t[2] = madd2(m, 9368182429938796067, t[3], C)

	C, t[3] = madd2(m, 6480265800587443824, t[4], C)

	C, t[4] = madd2(m, 8615191826401174576, t[5], C)

	C, t[5] = madd2(m, 10163911460783455078, t[6], C)

	C, t[6] = madd2(m, 14053570512254372664, t[7], C)

	C, t[7] = madd2(m, 13404821358025449395, t[8], C)

	C, t[8] = madd2(m, 6361046791004886847, t[9], C)

	C, t[9] = madd2(m, 13468036185189635777, t[10], C)

	C, t[10] = madd2(m, 696198893708043915, t[11], C)

	C, t[11] = madd2(m, 5651185298720720453, t[12], C)

	C, t[12] = madd2(m, 17008052171478956983, t[13], C)

	C, t[13] = madd2(m, 16165709903860652275, t[14], C)

	C, t[14] = madd2(m, 4482943778134271765, t[15], C)

	C, t[15] = madd2(m, 1042631168326180691, t[16], C)

	C, t[16] = madd2(m, 6309782954791921745, t[17], C)

	C, t[17] = madd2(m, 4458516162657784325, t[18], C)

	C, t[18] = madd2(m, 13472759351478842655, t[19], C)

	C, t[19] = madd2(m, 4341611444501281238, t[20], C)

	C, t[20] = madd2(m, 1416473143490767473, t[21], C)

	C, t[21] = madd2(m, 8108839425640233111, t[22], C)

	C, t[22] = madd2(m, 12843699789396907758, t[23], C)

	C, t[23] = madd3(m, 7066117110915403774, t[24], C, t[25])

	t[24], t[25] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[2], z[0], t[0])
	C, t[1] = madd2(x[2], z[1], t[1], C)
	C, t[2] = madd2(x[2], z[2], t[2], C)
	C, t[3] = madd2(x[2], z[3], t[3], C)
	C, t[4] = madd2(x[2], z[4], t[4], C)
	C, t[5] = madd2(x[2], z[5], t[5], C)
	C, t[6] = madd2(x[2], z[6], t[6], C)
	C, t[7] = madd2(x[2], z[7], t[7], C)
	C, t[8] = madd2(x[2], z[8], t[8], C)
	C, t[9] = madd2(x[2], z[9], t[9], C)
	C, t[10] = madd2(x[2], z[10], t[10], C)
	C, t[11] = madd2(x[2], z[11], t[11], C)
	C, t[12] = madd2(x[2], z[12], t[12], C)
	C, t[13] = madd2(x[2], z[13], t[13], C)
	C, t[14] = madd2(x[2], z[14], t[14], C)
	C, t[15] = madd2(x[2], z[15], t[15], C)
	C, t[16] = madd2(x[2], z[16], t[16], C)
	C, t[17] = madd2(x[2], z[17], t[17], C)
	C, t[18] = madd2(x[2], z[18], t[18], C)
	C, t[19] = madd2(x[2], z[19], t[19], C)
	C, t[20] = madd2(x[2], z[20], t[20], C)
	C, t[21] = madd2(x[2], z[21], t[21], C)
	C, t[22] = madd2(x[2], z[22], t[22], C)
	C, t[23] = madd2(x[2], z[23], t[23], C)
	C, t[24] = madd2(x[2], z[24], t[24], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17091796358385905597

	// -----------------------------------
	// Second loop
	C = madd0(m, 2613528747251268715, t[0])

	C, t[0] = madd2(m, 15958390544650418284, t[1], C)

	C, t[1] = madd2(m, 14785802376424656414, t[2], C)

	C, t[2] = madd2(m, 9368182429938796067, t[3], C)

	C, t[3] = madd2(m, 6480265800587443824, t[4], C)

	C, t[4] = madd2(m, 8615191826401174576, t[5], C)

	C, t[5] = madd2(m, 10163911460783455078, t[6], C)

	C, t[6] = madd2(m, 14053570512254372664, t[7], C)

	C, t[7] = madd2(m, 13404821358025449395, t[8], C)

	C, t[8] = madd2(m, 6361046791004886847, t[9], C)

	C, t[9] = madd2(m, 13468036185189635777, t[10], C)

	C, t[10] = madd2(m, 696198893708043915, t[11], C)

	C, t[11] = madd2(m, 5651185298720720453, t[12], C)

	C, t[12] = madd2(m, 17008052171478956983, t[13], C)

	C, t[13] = madd2(m, 16165709903860652275, t[14], C)

	C, t[14] = madd2(m, 4482943778134271765, t[15], C)

	C, t[15] = madd2(m, 1042631168326180691, t[16], C)

	C, t[16] = madd2(m, 6309782954791921745, t[17], C)

	C, t[17] = madd2(m, 4458516162657784325, t[18], C)

	C, t[18] = madd2(m, 13472759351478842655, t[19], C)

	C, t[19] = madd2(m, 4341611444501281238, t[20], C)

	C, t[20] = madd2(m, 1416473143490767473, t[21], C)

	C, t[21] = madd2(m, 8108839425640233111, t[22], C)

	C, t[22] = madd2(m, 12843699789396907758, t[23], C)

	C, t[23] = madd3(m, 7066117110915403774, t[24], C, t[25])

	t[24], t[25] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[3], z[0], t[0])
	C, t[1] = madd2(x[3], z[1], t[1], C)
	C, t[2] = madd2(x[3], z[2], t[2], C)
	C, t[3] = madd2(x[3], z[3], t[3], C)
	C, t[4] = madd2(x[3], z[4], t[4], C)
	C, t[5] = madd2(x[3], z[5], t[5], C)
	C, t[6] = madd2(x[3], z[6], t[6], C)
	C, t[7] = madd2(x[3], z[7], t[7], C)
	C, t[8] = madd2(x[3], z[8], t[8], C)
	C, t[9] = madd2(x[3], z[9], t[9], C)
	C, t[10] = madd2(x[3], z[10], t[10], C)
	C, t[11] = madd2(x[3], z[11], t[11], C)
	C, t[12] = madd2(x[3], z[12], t[12], C)
	C, t[13] = madd2(x[3], z[13], t[13], C)
	C, t[14] = madd2(x[3], z[14], t[14], C)
	C, t[15] = madd2(x[3], z[15], t[15], C)
	C, t[16] = madd2(x[3], z[16], t[16], C)
	C, t[17] = madd2(x[3], z[17], t[17], C)
	C, t[18] = madd2(x[3], z[18], t[18], C)
	C, t[19] = madd2(x[3], z[19], t[19], C)
	C, t[20] = madd2(x[3], z[20], t[20], C)
	C, t[21] = madd2(x[3], z[21], t[21], C)
	C, t[22] = madd2(x[3], z[22], t[22], C)
	C, t[23] = madd2(x[3], z[23], t[23], C)
	C, t[24] = madd2(x[3], z[24], t[24], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17091796358385905597

	// -----------------------------------
	// Second loop
	C = madd0(m, 2613528747251268715, t[0])

	C, t[0] = madd2(m, 15958390544650418284, t[1], C)

	C, t[1] = madd2(m, 14785802376424656414, t[2], C)

	C, t[2] = madd2(m, 9368182429938796067, t[3], C)

	C, t[3] = madd2(m, 6480265800587443824, t[4], C)

	C, t[4] = madd2(m, 8615191826401174576, t[5], C)

	C, t[5] = madd2(m, 10163911460783455078, t[6], C)

	C, t[6] = madd2(m, 14053570512254372664, t[7], C)

	C, t[7] = madd2(m, 13404821358025449395, t[8], C)

	C, t[8] = madd2(m, 6361046791004886847, t[9], C)

	C, t[9] = madd2(m, 13468036185189635777, t[10], C)

	C, t[10] = madd2(m, 696198893708043915, t[11], C)

	C, t[11] = madd2(m, 5651185298720720453, t[12], C)

	C, t[12] = madd2(m, 17008052171478956983, t[13], C)

	C, t[13] = madd2(m, 16165709903860652275, t[14], C)

	C, t[14] = madd2(m, 4482943778134271765, t[15], C)

	C, t[15] = madd2(m, 1042631168326180691, t[16], C)

	C, t[16] = madd2(m, 6309782954791921745, t[17], C)

	C, t[17] = madd2(m, 4458516162657784325, t[18], C)

	C, t[18] = madd2(m, 13472759351478842655, t[19], C)

	C, t[19] = madd2(m, 4341611444501281238, t[20], C)

	C, t[20] = madd2(m, 1416473143490767473, t[21], C)

	C, t[21] = madd2(m, 8108839425640233111, t[22], C)

	C, t[22] = madd2(m, 12843699789396907758, t[23], C)

	C, t[23] = madd3(m, 7066117110915403774, t[24], C, t[25])

	t[24], t[25] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[4], z[0], t[0])
	C, t[1] = madd2(x[4], z[1], t[1], C)
	C, t[2] = madd2(x[4], z[2], t[2], C)
	C, t[3] = madd2(x[4], z[3], t[3], C)
	C, t[4] = madd2(x[4], z[4], t[4], C)
	C, t[5] = madd2(x[4], z[5], t[5], C)
	C, t[6] = madd2(x[4], z[6], t[6], C)
	C, t[7] = madd2(x[4], z[7], t[7], C)
	C, t[8] = madd2(x[4], z[8], t[8], C)
	C, t[9] = madd2(x[4], z[9], t[9], C)
	C, t[10] = madd2(x[4], z[10], t[10], C)
	C, t[11] = madd2(x[4], z[11], t[11], C)
	C, t[12] = madd2(x[4], z[12], t[12], C)
	C, t[13] = madd2(x[4], z[13], t[13], C)
	C, t[14] = madd2(x[4], z[14], t[14], C)
	C, t[15] = madd2(x[4], z[15], t[15], C)
	C, t[16] = madd2(x[4], z[16], t[16], C)
	C, t[17] = madd2(x[4], z[17], t[17], C)
	C, t[18] = madd2(x[4], z[18], t[18], C)
	C, t[19] = madd2(x[4], z[19], t[19], C)
	C, t[20] = madd2(x[4], z[20], t[20], C)
	C, t[21] = madd2(x[4], z[21], t[21], C)
	C, t[22] = madd2(x[4], z[22], t[22], C)
	C, t[23] = madd2(x[4], z[23], t[23], C)
	C, t[24] = madd2(x[4], z[24], t[24], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17091796358385905597

	// -----------------------------------
	// Second loop
	C = madd0(m, 2613528747251268715, t[0])

	C, t[0] = madd2(m, 15958390544650418284, t[1], C)

	C, t[1] = madd2(m, 14785802376424656414, t[2], C)

	C, t[2] = madd2(m, 9368182429938796067, t[3], C)

	C, t[3] = madd2(m, 6480265800587443824, t[4], C)

	C, t[4] = madd2(m, 8615191826401174576, t[5], C)

	C, t[5] = madd2(m, 10163911460783455078, t[6], C)

	C, t[6] = madd2(m, 14053570512254372664, t[7], C)

	C, t[7] = madd2(m, 13404821358025449395, t[8], C)

	C, t[8] = madd2(m, 6361046791004886847, t[9], C)

	C, t[9] = madd2(m, 13468036185189635777, t[10], C)

	C, t[10] = madd2(m, 696198893708043915, t[11], C)

	C, t[11] = madd2(m, 5651185298720720453, t[12], C)

	C, t[12] = madd2(m, 17008052171478956983, t[13], C)

	C, t[13] = madd2(m, 16165709903860652275, t[14], C)

	C, t[14] = madd2(m, 4482943778134271765, t[15], C)

	C, t[15] = madd2(m, 1042631168326180691, t[16], C)

	C, t[16] = madd2(m, 6309782954791921745, t[17], C)

	C, t[17] = madd2(m, 4458516162657784325, t[18], C)

	C, t[18] = madd2(m, 13472759351478842655, t[19], C)

	C, t[19] = madd2(m, 4341611444501281238, t[20], C)

	C, t[20] = madd2(m, 1416473143490767473, t[21], C)

	C, t[21] = madd2(m, 8108839425640233111, t[22], C)

	C, t[22] = madd2(m, 12843699789396907758, t[23], C)

	C, t[23] = madd3(m, 7066117110915403774, t[24], C, t[25])

	t[24], t[25] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[5], z[0], t[0])
	C, t[1] = madd2(x[5], z[1], t[1], C)
	C, t[2] = madd2(x[5], z[2], t[2], C)
	C, t[3] = madd2(x[5], z[3], t[3], C)
	C, t[4] = madd2(x[5], z[4], t[4], C)
	C, t[5] = madd2(x[5], z[5], t[5], C)
	C, t[6] = madd2(x[5], z[6], t[6], C)
	C, t[7] = madd2(x[5], z[7], t[7], C)
	C, t[8] = madd2(x[5], z[8], t[8], C)
	C, t[9] = madd2(x[5], z[9], t[9], C)
	C, t[10] = madd2(x[5], z[10], t[10], C)
	C, t[11] = madd2(x[5], z[11], t[11], C)
	C, t[12] = madd2(x[5], z[12], t[12], C)
	C, t[13] = madd2(x[5], z[13], t[13], C)
	C, t[14] = madd2(x[5], z[14], t[14], C)
	C, t[15] = madd2(x[5], z[15], t[15], C)
	C, t[16] = madd2(x[5], z[16], t[16], C)
	C, t[17] = madd2(x[5], z[17], t[17], C)
	C, t[18] = madd2(x[5], z[18], t[18], C)
	C, t[19] = madd2(x[5], z[19], t[19], C)
	C, t[20] = madd2(x[5], z[20], t[20], C)
	C, t[21] = madd2(x[5], z[21], t[21], C)
	C, t[22] = madd2(x[5], z[22], t[22], C)
	C, t[23] = madd2(x[5], z[23], t[23], C)
	C, t[24] = madd2(x[5], z[24], t[24], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17091796358385905597

	// -----------------------------------
	// Second loop
	C = madd0(m, 2613528747251268715, t[0])

	C, t[0] = madd2(m, 15958390544650418284, t[1], C)

	C, t[1] = madd2(m, 14785802376424656414, t[2], C)

	C, t[2] = madd2(m, 9368182429938796067, t[3], C)

	C, t[3] = madd2(m, 6480265800587443824, t[4], C)

	C, t[4] = madd2(m, 8615191826401174576, t[5], C)

	C, t[5] = madd2(m, 10163911460783455078, t[6], C)

	C, t[6] = madd2(m, 14053570512254372664, t[7], C)

	C, t[7] = madd2(m, 13404821358025449395, t[8], C)

	C, t[8] = madd2(m, 6361046791004886847, t[9], C)

	C, t[9] = madd2(m, 13468036185189635777, t[10], C)

	C, t[10] = madd2(m, 696198893708043915, t[11], C)

	C, t[11] = madd2(m, 5651185298720720453, t[12], C)

	C, t[12] = madd2(m, 17008052171478956983, t[13], C)

	C, t[13] = madd2(m, 16165709903860652275, t[14], C)

	C, t[14] = madd2(m, 4482943778134271765, t[15], C)

	C, t[15] = madd2(m, 1042631168326180691, t[16], C)

	C, t[16] = madd2(m, 6309782954791921745, t[17], C)

	C, t[17] = madd2(m, 4458516162657784325, t[18], C)

	C, t[18] = madd2(m, 13472759351478842655, t[19], C)

	C, t[19] = madd2(m, 4341611444501281238, t[20], C)

	C, t[20] = madd2(m, 1416473143490767473, t[21], C)

	C, t[21] = madd2(m, 8108839425640233111, t[22], C)

	C, t[22] = madd2(m, 12843699789396907758, t[23], C)

	C, t[23] = madd3(m, 7066117110915403774, t[24], C, t[25])

	t[24], t[25] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[6], z[0], t[0])
	C, t[1] = madd2(x[6], z[1], t[1], C)
	C, t[2] = madd2(x[6], z[2], t[2], C)
	C, t[3] = madd2(x[6], z[3], t[3], C)
	C, t[4] = madd2(x[6], z[4], t[4], C)
	C, t[5] = madd2(x[6], z[5], t[5], C)
	C, t[6] = madd2(x[6], z[6], t[6], C)
	C, t[7] = madd2(x[6], z[7], t[7], C)
	C, t[8] = madd2(x[6], z[8], t[8], C)
	C, t[9] = madd2(x[6], z[9], t[9], C)
	C, t[10] = madd2(x[6], z[10], t[10], C)
	C, t[11] = madd2(x[6], z[11], t[11], C)
	C, t[12] = madd2(x[6], z[12], t[12], C)
	C, t[13] = madd2(x[6], z[13], t[13], C)
	C, t[14] = madd2(x[6], z[14], t[14], C)
	C, t[15] = madd2(x[6], z[15], t[15], C)
	C, t[16] = madd2(x[6], z[16], t[16], C)
	C, t[17] = madd2(x[6], z[17], t[17], C)
	C, t[18] = madd2(x[6], z[18], t[18], C)
	C, t[19] = madd2(x[6], z[19], t[19], C)
	C, t[20] = madd2(x[6], z[20], t[20], C)
	C, t[21] = madd2(x[6], z[21], t[21], C)
	C, t[22] = madd2(x[6], z[22], t[22], C)
	C, t[23] = madd2(x[6], z[23], t[23], C)
	C, t[24] = madd2(x[6], z[24], t[24], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17091796358385905597

	// -----------------------------------
	// Second loop
	C = madd0(m, 2613528747251268715, t[0])

	C, t[0] = madd2(m, 15958390544650418284, t[1], C)

	C, t[1] = madd2(m, 14785802376424656414, t[2], C)

	C, t[2] = madd2(m, 9368182429938796067, t[3], C)

	C, t[3] = madd2(m, 6480265800587443824, t[4], C)

	C, t[4] = madd2(m, 8615191826401174576, t[5], C)

	C, t[5] = madd2(m, 10163911460783455078, t[6], C)

	C, t[6] = madd2(m, 14053570512254372664, t[7], C)

	C, t[7] = madd2(m, 13404821358025449395, t[8], C)

	C, t[8] = madd2(m, 6361046791004886847, t[9], C)

	C, t[9] = madd2(m, 13468036185189635777, t[10], C)

	C, t[10] = madd2(m, 696198893708043915, t[11], C)

	C, t[11] = madd2(m, 5651185298720720453, t[12], C)

	C, t[12] = madd2(m, 17008052171478956983, t[13], C)

	C, t[13] = madd2(m, 16165709903860652275, t[14], C)

	C, t[14] = madd2(m, 4482943778134271765, t[15], C)

	C, t[15] = madd2(m, 1042631168326180691, t[16], C)

	C, t[16] = madd2(m, 6309782954791921745, t[17], C)

	C, t[17] = madd2(m, 4458516162657784325, t[18], C)

	C, t[18] = madd2(m, 13472759351478842655, t[19], C)

	C, t[19] = madd2(m, 4341611444501281238, t[20], C)

	C, t[20] = madd2(m, 1416473143490767473, t[21], C)

	C, t[21] = madd2(m, 8108839425640233111, t[22], C)

	C, t[22] = madd2(m, 12843699789396907758, t[23], C)

	C, t[23] = madd3(m, 7066117110915403774, t[24], C, t[25])

	t[24], t[25] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[7], z[0], t[0])
	C, t[1] = madd2(x[7], z[1], t[1], C)
	C, t[2] = madd2(x[7], z[2], t[2], C)
	C, t[3] = madd2(x[7], z[3], t[3], C)
	C, t[4] = madd2(x[7], z[4], t[4], C)
	C, t[5] = madd2(x[7], z[5], t[5], C)
	C, t[6] = madd2(x[7], z[6], t[6], C)
	C, t[7] = madd2(x[7], z[7], t[7], C)
	C, t[8] = madd2(x[7], z[8], t[8], C)
	C, t[9] = madd2(x[7], z[9], t[9], C)
	C, t[10] = madd2(x[7], z[10], t[10], C)
	C, t[11] = madd2(x[7], z[11], t[11], C)
	C, t[12] = madd2(x[7], z[12], t[12], C)
	C, t[13] = madd2(x[7], z[13], t[13], C)
	C, t[14] = madd2(x[7], z[14], t[14], C)
	C, t[15] = madd2(x[7], z[15], t[15], C)
	C, t[16] = madd2(x[7], z[16], t[16], C)
	C, t[17] = madd2(x[7], z[17], t[17], C)
	C, t[18] = madd2(x[7], z[18], t[18], C)
	C, t[19] = madd2(x[7], z[19], t[19], C)
	C, t[20] = madd2(x[7], z[20], t[20], C)
	C, t[21] = madd2(x[7], z[21], t[21], C)
	C, t[22] = madd2(x[7], z[22], t[22], C)
	C, t[23] = madd2(x[7], z[23], t[23], C)
	C, t[24] = madd2(x[7], z[24], t[24], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17091796358385905597

	// -----------------------------------
	// Second loop
	C = madd0(m, 2613528747251268715, t[0])

	C, t[0] = madd2(m, 15958390544650418284, t[1], C)

	C, t[1] = madd2(m, 14785802376424656414, t[2], C)

	C, t[2] = madd2(m, 9368182429938796067, t[3], C)

	C, t[3] = madd2(m, 6480265800587443824, t[4], C)

	C, t[4] = madd2(m, 8615191826401174576, t[5], C)

	C, t[5] = madd2(m, 10163911460783455078, t[6], C)

	C, t[6] = madd2(m, 14053570512254372664, t[7], C)

	C, t[7] = madd2(m, 13404821358025449395, t[8], C)

	C, t[8] = madd2(m, 6361046791004886847, t[9], C)

	C, t[9] = madd2(m, 13468036185189635777, t[10], C)

	C, t[10] = madd2(m, 696198893708043915, t[11], C)

	C, t[11] = madd2(m, 5651185298720720453, t[12], C)

	C, t[12] = madd2(m, 17008052171478956983, t[13], C)

	C, t[13] = madd2(m, 16165709903860652275, t[14], C)

	C, t[14] = madd2(m, 4482943778134271765, t[15], C)

	C, t[15] = madd2(m, 1042631168326180691, t[16], C)

	C, t[16] = madd2(m, 6309782954791921745, t[17], C)

	C, t[17] = madd2(m, 4458516162657784325, t[18], C)

	C, t[18] = madd2(m, 13472759351478842655, t[19], C)

	C, t[19] = madd2(m, 4341611444501281238, t[20], C)

	C, t[20] = madd2(m, 1416473143490767473, t[21], C)

	C, t[21] = madd2(m, 8108839425640233111, t[22], C)

	C, t[22] = madd2(m, 12843699789396907758, t[23], C)

	C, t[23] = madd3(m, 7066117110915403774, t[24], C, t[25])

	t[24], t[25] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[8], z[0], t[0])
	C, t[1] = madd2(x[8], z[1], t[1], C)
	C, t[2] = madd2(x[8], z[2], t[2], C)
	C, t[3] = madd2(x[8], z[3], t[3], C)
	C, t[4] = madd2(x[8], z[4], t[4], C)
	C, t[5] = madd2(x[8], z[5], t[5], C)
	C, t[6] = madd2(x[8], z[6], t[6], C)
	C, t[7] = madd2(x[8], z[7], t[7], C)
	C, t[8] = madd2(x[8], z[8], t[8], C)
	C, t[9] = madd2(x[8], z[9], t[9], C)
	C, t[10] = madd2(x[8], z[10], t[10], C)
	C, t[11] = madd2(x[8], z[11], t[11], C)
	C, t[12] = madd2(x[8], z[12], t[12], C)
	C, t[13] = madd2(x[8], z[13], t[13], C)
	C, t[14] = madd2(x[8], z[14], t[14], C)
	C, t[15] = madd2(x[8], z[15], t[15], C)
	C, t[16] = madd2(x[8], z[16], t[16], C)
	C, t[17] = madd2(x[8], z[17], t[17], C)
	C, t[18] = madd2(x[8], z[18], t[18], C)
	C, t[19] = madd2(x[8], z[19], t[19], C)
	C, t[20] = madd2(x[8], z[20], t[20], C)
	C, t[21] = madd2(x[8], z[21], t[21], C)
	C, t[22] = madd2(x[8], z[22], t[22], C)
	C, t[23] = madd2(x[8], z[23], t[23], C)
	C, t[24] = madd2(x[8], z[24], t[24], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17091796358385905597

	// -----------------------------------
	// Second loop
	C = madd0(m, 2613528747251268715, t[0])

	C, t[0] = madd2(m, 15958390544650418284, t[1], C)

	C, t[1] = madd2(m, 14785802376424656414, t[2], C)

	C, t[2] = madd2(m, 9368182429938796067, t[3], C)

	C, t[3] = madd2(m, 6480265800587443824, t[4], C)

	C, t[4] = madd2(m, 8615191826401174576, t[5], C)

	C, t[5] = madd2(m, 10163911460783455078, t[6], C)

	C, t[6] = madd2(m, 14053570512254372664, t[7], C)

	C, t[7] = madd2(m, 13404821358025449395, t[8], C)

	C, t[8] = madd2(m, 6361046791004886847, t[9], C)

	C, t[9] = madd2(m, 13468036185189635777, t[10], C)

	C, t[10] = madd2(m, 696198893708043915, t[11], C)

	C, t[11] = madd2(m, 5651185298720720453, t[12], C)

	C, t[12] = madd2(m, 17008052171478956983, t[13], C)

	C, t[13] = madd2(m, 16165709903860652275, t[14], C)

	C, t[14] = madd2(m, 4482943778134271765, t[15], C)

	C, t[15] = madd2(m, 1042631168326180691, t[16], C)

	C, t[16] = madd2(m, 6309782954791921745, t[17], C)

	C, t[17] = madd2(m, 4458516162657784325, t[18], C)

	C, t[18] = madd2(m, 13472759351478842655, t[19], C)

	C, t[19] = madd2(m, 4341611444501281238, t[20], C)

	C, t[20] = madd2(m, 1416473143490767473, t[21], C)

	C, t[21] = madd2(m, 8108839425640233111, t[22], C)

	C, t[22] = madd2(m, 12843699789396907758, t[23], C)

	C, t[23] = madd3(m, 7066117110915403774, t[24], C, t[25])

	t[24], t[25] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[9], z[0], t[0])
	C, t[1] = madd2(x[9], z[1], t[1], C)
	C, t[2] = madd2(x[9], z[2], t[2], C)
	C, t[3] = madd2(x[9], z[3], t[3], C)
	C, t[4] = madd2(x[9], z[4], t[4], C)
	C, t[5] = madd2(x[9], z[5], t[5], C)
	C, t[6] = madd2(x[9], z[6], t[6], C)
	C, t[7] = madd2(x[9], z[7], t[7], C)
	C, t[8] = madd2(x[9], z[8], t[8], C)
	C, t[9] = madd2(x[9], z[9], t[9], C)
	C, t[10] = madd2(x[9], z[10], t[10], C)
	C, t[11] = madd2(x[9], z[11], t[11], C)
	C, t[12] = madd2(x[9], z[12], t[12], C)
	C, t[13] = madd2(x[9], z[13], t[13], C)
	C, t[14] = madd2(x[9], z[14], t[14], C)
	C, t[15] = madd2(x[9], z[15], t[15], C)
	C, t[16] = madd2(x[9], z[16], t[16], C)
	C, t[17] = madd2(x[9], z[17], t[17], C)
	C, t[18] = madd2(x[9], z[18], t[18], C)
	C, t[19] = madd2(x[9], z[19], t[19], C)
	C, t[20] = madd2(x[9], z[20], t[20], C)
	C, t[21] = madd2(x[9], z[21], t[21], C)
	C, t[22] = madd2(x[9], z[22], t[22], C)
	C, t[23] = madd2(x[9], z[23], t[23], C)
	C, t[24] = madd2(x[9], z[24], t[24], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17091796358385905597

	// -----------------------------------
	// Second loop
	C = madd0(m, 2613528747251268715, t[0])

	C, t[0] = madd2(m, 15958390544650418284, t[1], C)

	C, t[1] = madd2(m, 14785802376424656414, t[2], C)

	C, t[2] = madd2(m, 9368182429938796067, t[3], C)

	C, t[3] = madd2(m, 6480265800587443824, t[4], C)

	C, t[4] = madd2(m, 8615191826401174576, t[5], C)

	C, t[5] = madd2(m, 10163911460783455078, t[6], C)

	C, t[6] = madd2(m, 14053570512254372664, t[7], C)

	C, t[7] = madd2(m, 13404821358025449395, t[8], C)

	C, t[8] = madd2(m, 6361046791004886847, t[9], C)

	C, t[9] = madd2(m, 13468036185189635777, t[10], C)

	C, t[10] = madd2(m, 696198893708043915, t[11], C)

	C, t[11] = madd2(m, 5651185298720720453, t[12], C)

	C, t[12] = madd2(m, 17008052171478956983, t[13], C)

	C, t[13] = madd2(m, 16165709903860652275, t[14], C)

	C, t[14] = madd2(m, 4482943778134271765, t[15], C)

	C, t[15] = madd2(m, 1042631168326180691, t[16], C)

	C, t[16] = madd2(m, 6309782954791921745, t[17], C)

	C, t[17] = madd2(m, 4458516162657784325, t[18], C)

	C, t[18] = madd2(m, 13472759351478842655, t[19], C)

	C, t[19] = madd2(m, 4341611444501281238, t[20], C)

	C, t[20] = madd2(m, 1416473143490767473, t[21], C)

	C, t[21] = madd2(m, 8108839425640233111, t[22], C)

	C, t[22] = madd2(m, 12843699789396907758, t[23], C)

	C, t[23] = madd3(m, 7066117110915403774, t[24], C, t[25])

	t[24], t[25] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[10], z[0], t[0])
	C, t[1] = madd2(x[10], z[1], t[1], C)
	C, t[2] = madd2(x[10], z[2], t[2], C)
	C, t[3] = madd2(x[10], z[3], t[3], C)
	C, t[4] = madd2(x[10], z[4], t[4], C)
	C, t[5] = madd2(x[10], z[5], t[5], C)
	C, t[6] = madd2(x[10], z[6], t[6], C)
	C, t[7] = madd2(x[10], z[7], t[7], C)
	C, t[8] = madd2(x[10], z[8], t[8], C)
	C, t[9] = madd2(x[10], z[9], t[9], C)
	C, t[10] = madd2(x[10], z[10], t[10], C)
	C, t[11] = madd2(x[10], z[11], t[11], C)
	C, t[12] = madd2(x[10], z[12], t[12], C)
	C, t[13] = madd2(x[10], z[13], t[13], C)
	C, t[14] = madd2(x[10], z[14], t[14], C)
	C, t[15] = madd2(x[10], z[15], t[15], C)
	C, t[16] = madd2(x[10], z[16], t[16], C)
	C, t[17] = madd2(x[10], z[17], t[17], C)
	C, t[18] = madd2(x[10], z[18], t[18], C)
	C, t[19] = madd2(x[10], z[19], t[19], C)
	C, t[20] = madd2(x[10], z[20], t[20], C)
	C, t[21] = madd2(x[10], z[21], t[21], C)
	C, t[22] = madd2(x[10], z[22], t[22], C)
	C, t[23] = madd2(x[10], z[23], t[23], C)
	C, t[24] = madd2(x[10], z[24], t[24], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17091796358385905597

	// -----------------------------------
	// Second loop
	C = madd0(m, 2613528747251268715, t[0])

	C, t[0] = madd2(m, 15958390544650418284, t[1], C)

	C, t[1] = madd2(m, 14785802376424656414, t[2], C)

	C, t[2] = madd2(m, 9368182429938796067, t[3], C)

	C, t[3] = madd2(m, 6480265800587443824, t[4], C)

	C, t[4] = madd2(m, 8615191826401174576, t[5], C)

	C, t[5] = madd2(m, 10163911460783455078, t[6], C)

	C, t[6] = madd2(m, 14053570512254372664, t[7], C)

	C, t[7] = madd2(m, 13404821358025449395, t[8], C)

	C, t[8] = madd2(m, 6361046791004886847, t[9], C)

	C, t[9] = madd2(m, 13468036185189635777, t[10], C)

	C, t[10] = madd2(m, 696198893708043915, t[11], C)

	C, t[11] = madd2(m, 5651185298720720453, t[12], C)

	C, t[12] = madd2(m, 17008052171478956983, t[13], C)

	C, t[13] = madd2(m, 16165709903860652275, t[14], C)

	C, t[14] = madd2(m, 4482943778134271765, t[15], C)

	C, t[15] = madd2(m, 1042631168326180691, t[16], C)

	C, t[16] = madd2(m, 6309782954791921745, t[17], C)

	C, t[17] = madd2(m, 4458516162657784325, t[18], C)

	C, t[18] = madd2(m, 13472759351478842655, t[19], C)

	C, t[19] = madd2(m, 4341611444501281238, t[20], C)

	C, t[20] = madd2(m, 1416473143490767473, t[21], C)

	C, t[21] = madd2(m, 8108839425640233111, t[22], C)

	C, t[22] = madd2(m, 12843699789396907758, t[23], C)

	C, t[23] = madd3(m, 7066117110915403774, t[24], C, t[25])

	t[24], t[25] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[11], z[0], t[0])
	C, t[1] = madd2(x[11], z[1], t[1], C)
	C, t[2] = madd2(x[11], z[2], t[2], C)
	C, t[3] = madd2(x[11], z[3], t[3], C)
	C, t[4] = madd2(x[11], z[4], t[4], C)
	C, t[5] = madd2(x[11], z[5], t[5], C)
	C, t[6] = madd2(x[11], z[6], t[6], C)
	C, t[7] = madd2(x[11], z[7], t[7], C)
	C, t[8] = madd2(x[11], z[8], t[8], C)
	C, t[9] = madd2(x[11], z[9], t[9], C)
	C, t[10] = madd2(x[11], z[10], t[10], C)
	C, t[11] = madd2(x[11], z[11], t[11], C)
	C, t[12] = madd2(x[11], z[12], t[12], C)
	C, t[13] = madd2(x[11], z[13], t[13], C)
	C, t[14] = madd2(x[11], z[14], t[14], C)
	C, t[15] = madd2(x[11], z[15], t[15], C)
	C, t[16] = madd2(x[11], z[16], t[16], C)
	C, t[17] = madd2(x[11], z[17], t[17], C)
	C, t[18] = madd2(x[11], z[18], t[18], C)
	C, t[19] = madd2(x[11], z[19], t[19], C)
	C, t[20] = madd2(x[11], z[20], t[20], C)
	C, t[21] = madd2(x[11], z[21], t[21], C)
	C, t[22] = madd2(x[11], z[22], t[22], C)
	C, t[23] = madd2(x[11], z[23], t[23], C)
	C, t[24] = madd2(x[11], z[24], t[24], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17091796358385905597

	// -----------------------------------
	// Second loop
	C = madd0(m, 2613528747251268715, t[0])

	C, t[0] = madd2(m, 15958390544650418284, t[1], C)

	C, t[1] = madd2(m, 14785802376424656414, t[2], C)

	C, t[2] = madd2(m, 9368182429938796067, t[3], C)

	C, t[3] = madd2(m, 6480265800587443824, t[4], C)

	C, t[4] = madd2(m, 8615191826401174576, t[5], C)

	C, t[5] = madd2(m, 10163911460783455078, t[6], C)

	C, t[6] = madd2(m, 14053570512254372664, t[7], C)

	C, t[7] = madd2(m, 13404821358025449395, t[8], C)

	C, t[8] = madd2(m, 6361046791004886847, t[9], C)

	C, t[9] = madd2(m, 13468036185189635777, t[10], C)

	C, t[10] = madd2(m, 696198893708043915, t[11], C)

	C, t[11] = madd2(m, 5651185298720720453, t[12], C)

	C, t[12] = madd2(m, 17008052171478956983, t[13], C)

	C, t[13] = madd2(m, 16165709903860652275, t[14], C)

	C, t[14] = madd2(m, 4482943778134271765, t[15], C)

	C, t[15] = madd2(m, 1042631168326180691, t[16], C)

	C, t[16] = madd2(m, 6309782954791921745, t[17], C)

	C, t[17] = madd2(m, 4458516162657784325, t[18], C)

	C, t[18] = madd2(m, 13472759351478842655, t[19], C)

	C, t[19] = madd2(m, 4341611444501281238, t[20], C)

	C, t[20] = madd2(m, 1416473143490767473, t[21], C)

	C, t[21] = madd2(m, 8108839425640233111, t[22], C)

	C, t[22] = madd2(m, 12843699789396907758, t[23], C)

	C, t[23] = madd3(m, 7066117110915403774, t[24], C, t[25])

	t[24], t[25] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[12], z[0], t[0])
	C, t[1] = madd2(x[12], z[1], t[1], C)
	C, t[2] = madd2(x[12], z[2], t[2], C)
	C, t[3] = madd2(x[12], z[3], t[3], C)
	C, t[4] = madd2(x[12], z[4], t[4], C)
	C, t[5] = madd2(x[12], z[5], t[5], C)
	C, t[6] = madd2(x[12], z[6], t[6], C)
	C, t[7] = madd2(x[12], z[7], t[7], C)
	C, t[8] = madd2(x[12], z[8], t[8], C)
	C, t[9] = madd2(x[12], z[9], t[9], C)
	C, t[10] = madd2(x[12], z[10], t[10], C)
	C, t[11] = madd2(x[12], z[11], t[11], C)
	C, t[12] = madd2(x[12], z[12], t[12], C)
	C, t[13] = madd2(x[12], z[13], t[13], C)
	C, t[14] = madd2(x[12], z[14], t[14], C)
	C, t[15] = madd2(x[12], z[15], t[15], C)
	C, t[16] = madd2(x[12], z[16], t[16], C)
	C, t[17] = madd2(x[12], z[17], t[17], C)
	C, t[18] = madd2(x[12], z[18], t[18], C)
	C, t[19] = madd2(x[12], z[19], t[19], C)
	C, t[20] = madd2(x[12], z[20], t[20], C)
	C, t[21] = madd2(x[12], z[21], t[21], C)
	C, t[22] = madd2(x[12], z[22], t[22], C)
	C, t[23] = madd2(x[12], z[23], t[23], C)
	C, t[24] = madd2(x[12], z[24], t[24], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17091796358385905597

	// -----------------------------------
	// Second loop
	C = madd0(m, 2613528747251268715, t[0])

	C, t[0] = madd2(m, 15958390544650418284, t[1], C)

	C, t[1] = madd2(m, 14785802376424656414, t[2], C)

	C, t[2] = madd2(m, 9368182429938796067, t[3], C)

	C, t[3] = madd2(m, 6480265800587443824, t[4], C)

	C, t[4] = madd2(m, 8615191826401174576, t[5], C)

	C, t[5] = madd2(m, 10163911460783455078, t[6], C)

	C, t[6] = madd2(m, 14053570512254372664, t[7], C)

	C, t[7] = madd2(m, 13404821358025449395, t[8], C)

	C, t[8] = madd2(m, 6361046791004886847, t[9], C)

	C, t[9] = madd2(m, 13468036185189635777, t[10], C)

	C, t[10] = madd2(m, 696198893708043915, t[11], C)

	C, t[11] = madd2(m, 5651185298720720453, t[12], C)

	C, t[12] = madd2(m, 17008052171478956983, t[13], C)

	C, t[13] = madd2(m, 16165709903860652275, t[14], C)

	C, t[14] = madd2(m, 4482943778134271765, t[15], C)

	C, t[15] = madd2(m, 1042631168326180691, t[16], C)

	C, t[16] = madd2(m, 6309782954791921745, t[17], C)

	C, t[17] = madd2(m, 4458516162657784325, t[18], C)

	C, t[18] = madd2(m, 13472759351478842655, t[19], C)

	C, t[19] = madd2(m, 4341611444501281238, t[20], C)

	C, t[20] = madd2(m, 1416473143490767473, t[21], C)

	C, t[21] = madd2(m, 8108839425640233111, t[22], C)

	C, t[22] = madd2(m, 12843699789396907758, t[23], C)

	C, t[23] = madd3(m, 7066117110915403774, t[24], C, t[25])

	t[24], t[25] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[13], z[0], t[0])
	C, t[1] = madd2(x[13], z[1], t[1], C)
	C, t[2] = madd2(x[13], z[2], t[2], C)
	C, t[3] = madd2(x[13], z[3], t[3], C)
	C, t[4] = madd2(x[13], z[4], t[4], C)
	C, t[5] = madd2(x[13], z[5], t[5], C)
	C, t[6] = madd2(x[13], z[6], t[6], C)
	C, t[7] = madd2(x[13], z[7], t[7], C)
	C, t[8] = madd2(x[13], z[8], t[8], C)
	C, t[9] = madd2(x[13], z[9], t[9], C)
	C, t[10] = madd2(x[13], z[10], t[10], C)
	C, t[11] = madd2(x[13], z[11], t[11], C)
	C, t[12] = madd2(x[13], z[12], t[12], C)
	C, t[13] = madd2(x[13], z[13], t[13], C)
	C, t[14] = madd2(x[13], z[14], t[14], C)
	C, t[15] = madd2(x[13], z[15], t[15], C)
	C, t[16] = madd2(x[13], z[16], t[16], C)
	C, t[17] = madd2(x[13], z[17], t[17], C)
	C, t[18] = madd2(x[13], z[18], t[18], C)
	C, t[19] = madd2(x[13], z[19], t[19], C)
	C, t[20] = madd2(x[13], z[20], t[20], C)
	C, t[21] = madd2(x[13], z[21], t[21], C)
	C, t[22] = madd2(x[13], z[22], t[22], C)
	C, t[23] = madd2(x[13], z[23], t[23], C)
	C, t[24] = madd2(x[13], z[24], t[24], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17091796358385905597

	// -----------------------------------
	// Second loop
	C = madd0(m, 2613528747251268715, t[0])

	C, t[0] = madd2(m, 15958390544650418284, t[1], C)

	C, t[1] = madd2(m, 14785802376424656414, t[2], C)

	C, t[2] = madd2(m, 9368182429938796067, t[3], C)

	C, t[3] = madd2(m, 6480265800587443824, t[4], C)

	C, t[4] = madd2(m, 8615191826401174576, t[5], C)

	C, t[5] = madd2(m, 10163911460783455078, t[6], C)

	C, t[6] = madd2(m, 14053570512254372664, t[7], C)

	C, t[7] = madd2(m, 13404821358025449395, t[8], C)

	C, t[8] = madd2(m, 6361046791004886847, t[9], C)

	C, t[9] = madd2(m, 13468036185189635777, t[10], C)

	C, t[10] = madd2(m, 696198893708043915, t[11], C)

	C, t[11] = madd2(m, 5651185298720720453, t[12], C)

	C, t[12] = madd2(m, 17008052171478956983, t[13], C)

	C, t[13] = madd2(m, 16165709903860652275, t[14], C)

	C, t[14] = madd2(m, 4482943778134271765, t[15], C)

	C, t[15] = madd2(m, 1042631168326180691, t[16], C)

	C, t[16] = madd2(m, 6309782954791921745, t[17], C)

	C, t[17] = madd2(m, 4458516162657784325, t[18], C)

	C, t[18] = madd2(m, 13472759351478842655, t[19], C)

	C, t[19] = madd2(m, 4341611444501281238, t[20], C)

	C, t[20] = madd2(m, 1416473143490767473, t[21], C)

	C, t[21] = madd2(m, 8108839425640233111, t[22], C)

	C, t[22] = madd2(m, 12843699789396907758, t[23], C)

	C, t[23] = madd3(m, 7066117110915403774, t[24], C, t[25])

	t[24], t[25] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[14], z[0], t[0])
	C, t[1] = madd2(x[14], z[1], t[1], C)
	C, t[2] = madd2(x[14], z[2], t[2], C)
	C, t[3] = madd2(x[14], z[3], t[3], C)
	C, t[4] = madd2(x[14], z[4], t[4], C)
	C, t[5] = madd2(x[14], z[5], t[5], C)
	C, t[6] = madd2(x[14], z[6], t[6], C)
	C, t[7] = madd2(x[14], z[7], t[7], C)
	C, t[8] = madd2(x[14], z[8], t[8], C)
	C, t[9] = madd2(x[14], z[9], t[9], C)
	C, t[10] = madd2(x[14], z[10], t[10], C)
	C, t[11] = madd2(x[14], z[11], t[11], C)
	C, t[12] = madd2(x[14], z[12], t[12], C)
	C, t[13] = madd2(x[14], z[13], t[13], C)
	C, t[14] = madd2(x[14], z[14], t[14], C)
	C, t[15] = madd2(x[14], z[15], t[15], C)
	C, t[16] = madd2(x[14], z[16], t[16], C)
	C, t[17] = madd2(x[14], z[17], t[17], C)
	C, t[18] = madd2(x[14], z[18], t[18], C)
	C, t[19] = madd2(x[14], z[19], t[19], C)
	C, t[20] = madd2(x[14], z[20], t[20], C)
	C, t[21] = madd2(x[14], z[21], t[21], C)
	C, t[22] = madd2(x[14], z[22], t[22], C)
	C, t[23] = madd2(x[14], z[23], t[23], C)
	C, t[24] = madd2(x[14], z[24], t[24], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17091796358385905597

	// -----------------------------------
	// Second loop
	C = madd0(m, 2613528747251268715, t[0])

	C, t[0] = madd2(m, 15958390544650418284, t[1], C)

	C, t[1] = madd2(m, 14785802376424656414, t[2], C)

	C, t[2] = madd2(m, 9368182429938796067, t[3], C)

	C, t[3] = madd2(m, 6480265800587443824, t[4], C)

	C, t[4] = madd2(m, 8615191826401174576, t[5], C)

	C, t[5] = madd2(m, 10163911460783455078, t[6], C)

	C, t[6] = madd2(m, 14053570512254372664, t[7], C)

	C, t[7] = madd2(m, 13404821358025449395, t[8], C)

	C, t[8] = madd2(m, 6361046791004886847, t[9], C)

	C, t[9] = madd2(m, 13468036185189635777, t[10], C)

	C, t[10] = madd2(m, 696198893708043915, t[11], C)

	C, t[11] = madd2(m, 5651185298720720453, t[12], C)

	C, t[12] = madd2(m, 17008052171478956983, t[13], C)

	C, t[13] = madd2(m, 16165709903860652275, t[14], C)

	C, t[14] = madd2(m, 4482943778134271765, t[15], C)

	C, t[15] = madd2(m, 1042631168326180691, t[16], C)

	C, t[16] = madd2(m, 6309782954791921745, t[17], C)

	C, t[17] = madd2(m, 4458516162657784325, t[18], C)

	C, t[18] = madd2(m, 13472759351478842655, t[19], C)

	C, t[19] = madd2(m, 4341611444501281238, t[20], C)

	C, t[20] = madd2(m, 1416473143490767473, t[21], C)

	C, t[21] = madd2(m, 8108839425640233111, t[22], C)

	C, t[22] = madd2(m, 12843699789396907758, t[23], C)

	C, t[23] = madd3(m, 7066117110915403774, t[24], C, t[25])

	t[24], t[25] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[15], z[0], t[0])
	C, t[1] = madd2(x[15], z[1], t[1], C)
	C, t[2] = madd2(x[15], z[2], t[2], C)
	C, t[3] = madd2(x[15], z[3], t[3], C)
	C, t[4] = madd2(x[15], z[4], t[4], C)
	C, t[5] = madd2(x[15], z[5], t[5], C)
	C, t[6] = madd2(x[15], z[6], t[6], C)
	C, t[7] = madd2(x[15], z[7], t[7], C)
	C, t[8] = madd2(x[15], z[8], t[8], C)
	C, t[9] = madd2(x[15], z[9], t[9], C)
	C, t[10] = madd2(x[15], z[10], t[10], C)
	C, t[11] = madd2(x[15], z[11], t[11], C)
	C, t[12] = madd2(x[15], z[12], t[12], C)
	C, t[13] = madd2(x[15], z[13], t[13], C)
	C, t[14] = madd2(x[15], z[14], t[14], C)
	C, t[15] = madd2(x[15], z[15], t[15], C)
	C, t[16] = madd2(x[15], z[16], t[16], C)
	C, t[17] = madd2(x[15], z[17], t[17], C)
	C, t[18] = madd2(x[15], z[18], t[18], C)
	C, t[19] = madd2(x[15], z[19], t[19], C)
	C, t[20] = madd2(x[15], z[20], t[20], C)
	C, t[21] = madd2(x[15], z[21], t[21], C)
	C, t[22] = madd2(x[15], z[22], t[22], C)
	C, t[23] = madd2(x[15], z[23], t[23], C)
	C, t[24] = madd2(x[15], z[24], t[24], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17091796358385905597

	// -----------------------------------
	// Second loop
	C = madd0(m, 2613528747251268715, t[0])

	C, t[0] = madd2(m, 15958390544650418284, t[1], C)

	C, t[1] = madd2(m, 14785802376424656414, t[2], C)

	C, t[2] = madd2(m, 9368182429938796067, t[3], C)

	C, t[3] = madd2(m, 6480265800587443824, t[4], C)

	C, t[4] = madd2(m, 8615191826401174576, t[5], C)

	C, t[5] = madd2(m, 10163911460783455078, t[6], C)

	C, t[6] = madd2(m, 14053570512254372664, t[7], C)

	C, t[7] = madd2(m, 13404821358025449395, t[8], C)

	C, t[8] = madd2(m, 6361046791004886847, t[9], C)

	C, t[9] = madd2(m, 13468036185189635777, t[10], C)

	C, t[10] = madd2(m, 696198893708043915, t[11], C)

	C, t[11] = madd2(m, 5651185298720720453, t[12], C)

	C, t[12] = madd2(m, 17008052171478956983, t[13], C)

	C, t[13] = madd2(m, 16165709903860652275, t[14], C)

	C, t[14] = madd2(m, 4482943778134271765, t[15], C)

	C, t[15] = madd2(m, 1042631168326180691, t[16], C)

	C, t[16] = madd2(m, 6309782954791921745, t[17], C)

	C, t[17] = madd2(m, 4458516162657784325, t[18], C)

	C, t[18] = madd2(m, 13472759351478842655, t[19], C)

	C, t[19] = madd2(m, 4341611444501281238, t[20], C)

	C, t[20] = madd2(m, 1416473143490767473, t[21], C)

	C, t[21] = madd2(m, 8108839425640233111, t[22], C)

	C, t[22] = madd2(m, 12843699789396907758, t[23], C)

	C, t[23] = madd3(m, 7066117110915403774, t[24], C, t[25])

	t[24], t[25] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[16], z[0], t[0])
	C, t[1] = madd2(x[16], z[1], t[1], C)
	C, t[2] = madd2(x[16], z[2], t[2], C)
	C, t[3] = madd2(x[16], z[3], t[3], C)
	C, t[4] = madd2(x[16], z[4], t[4], C)
	C, t[5] = madd2(x[16], z[5], t[5], C)
	C, t[6] = madd2(x[16], z[6], t[6], C)
	C, t[7] = madd2(x[16], z[7], t[7], C)
	C, t[8] = madd2(x[16], z[8], t[8], C)
	C, t[9] = madd2(x[16], z[9], t[9], C)
	C, t[10] = madd2(x[16], z[10], t[10], C)
	C, t[11] = madd2(x[16], z[11], t[11], C)
	C, t[12] = madd2(x[16], z[12], t[12], C)
	C, t[13] = madd2(x[16], z[13], t[13], C)
	C, t[14] = madd2(x[16], z[14], t[14], C)
	C, t[15] = madd2(x[16], z[15], t[15], C)
	C, t[16] = madd2(x[16], z[16], t[16], C)
	C, t[17] = madd2(x[16], z[17], t[17], C)
	C, t[18] = madd2(x[16], z[18], t[18], C)
	C, t[19] = madd2(x[16], z[19], t[19], C)
	C, t[20] = madd2(x[16], z[20], t[20], C)
	C, t[21] = madd2(x[16], z[21], t[21], C)
	C, t[22] = madd2(x[16], z[22], t[22], C)
	C, t[23] = madd2(x[16], z[23], t[23], C)
	C, t[24] = madd2(x[16], z[24], t[24], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17091796358385905597

	// -----------------------------------
	// Second loop
	C = madd0(m, 2613528747251268715, t[0])

	C, t[0] = madd2(m, 15958390544650418284, t[1], C)

	C, t[1] = madd2(m, 14785802376424656414, t[2], C)

	C, t[2] = madd2(m, 9368182429938796067, t[3], C)

	C, t[3] = madd2(m, 6480265800587443824, t[4], C)

	C, t[4] = madd2(m, 8615191826401174576, t[5], C)

	C, t[5] = madd2(m, 10163911460783455078, t[6], C)

	C, t[6] = madd2(m, 14053570512254372664, t[7], C)

	C, t[7] = madd2(m, 13404821358025449395, t[8], C)

	C, t[8] = madd2(m, 6361046791004886847, t[9], C)

	C, t[9] = madd2(m, 13468036185189635777, t[10], C)

	C, t[10] = madd2(m, 696198893708043915, t[11], C)

	C, t[11] = madd2(m, 5651185298720720453, t[12], C)

	C, t[12] = madd2(m, 17008052171478956983, t[13], C)

	C, t[13] = madd2(m, 16165709903860652275, t[14], C)

	C, t[14] = madd2(m, 4482943778134271765, t[15], C)

	C, t[15] = madd2(m, 1042631168326180691, t[16], C)

	C, t[16] = madd2(m, 6309782954791921745, t[17], C)

	C, t[17] = madd2(m, 4458516162657784325, t[18], C)

	C, t[18] = madd2(m, 13472759351478842655, t[19], C)

	C, t[19] = madd2(m, 4341611444501281238, t[20], C)

	C, t[20] = madd2(m, 1416473143490767473, t[21], C)

	C, t[21] = madd2(m, 8108839425640233111, t[22], C)

	C, t[22] = madd2(m, 12843699789396907758, t[23], C)

	C, t[23] = madd3(m, 7066117110915403774, t[24], C, t[25])

	t[24], t[25] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[17], z[0], t[0])
	C, t[1] = madd2(x[17], z[1], t[1], C)
	C, t[2] = madd2(x[17], z[2], t[2], C)
	C, t[3] = madd2(x[17], z[3], t[3], C)
	C, t[4] = madd2(x[17], z[4], t[4], C)
	C, t[5] = madd2(x[17], z[5], t[5], C)
	C, t[6] = madd2(x[17], z[6], t[6], C)
	C, t[7] = madd2(x[17], z[7], t[7], C)
	C, t[8] = madd2(x[17], z[8], t[8], C)
	C, t[9] = madd2(x[17], z[9], t[9], C)
	C, t[10] = madd2(x[17], z[10], t[10], C)
	C, t[11] = madd2(x[17], z[11], t[11], C)
	C, t[12] = madd2(x[17], z[12], t[12], C)
	C, t[13] = madd2(x[17], z[13], t[13], C)
	C, t[14] = madd2(x[17], z[14], t[14], C)
	C, t[15] = madd2(x[17], z[15], t[15], C)
	C, t[16] = madd2(x[17], z[16], t[16], C)
	C, t[17] = madd2(x[17], z[17], t[17], C)
	C, t[18] = madd2(x[17], z[18], t[18], C)
	C, t[19] = madd2(x[17], z[19], t[19], C)
	C, t[20] = madd2(x[17], z[20], t[20], C)
	C, t[21] = madd2(x[17], z[21], t[21], C)
	C, t[22] = madd2(x[17], z[22], t[22], C)
	C, t[23] = madd2(x[17], z[23], t[23], C)
	C, t[24] = madd2(x[17], z[24], t[24], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17091796358385905597

	// -----------------------------------
	// Second loop
	C = madd0(m, 2613528747251268715, t[0])

	C, t[0] = madd2(m, 15958390544650418284, t[1], C)

	C, t[1] = madd2(m, 14785802376424656414, t[2], C)

	C, t[2] = madd2(m, 9368182429938796067, t[3], C)

	C, t[3] = madd2(m, 6480265800587443824, t[4], C)

	C, t[4] = madd2(m, 8615191826401174576, t[5], C)

	C, t[5] = madd2(m, 10163911460783455078, t[6], C)

	C, t[6] = madd2(m, 14053570512254372664, t[7], C)

	C, t[7] = madd2(m, 13404821358025449395, t[8], C)

	C, t[8] = madd2(m, 6361046791004886847, t[9], C)

	C, t[9] = madd2(m, 13468036185189635777, t[10], C)

	C, t[10] = madd2(m, 696198893708043915, t[11], C)

	C, t[11] = madd2(m, 5651185298720720453, t[12], C)

	C, t[12] = madd2(m, 17008052171478956983, t[13], C)

	C, t[13] = madd2(m, 16165709903860652275, t[14], C)

	C, t[14] = madd2(m, 4482943778134271765, t[15], C)

	C, t[15] = madd2(m, 1042631168326180691, t[16], C)

	C, t[16] = madd2(m, 6309782954791921745, t[17], C)

	C, t[17] = madd2(m, 4458516162657784325, t[18], C)

	C, t[18] = madd2(m, 13472759351478842655, t[19], C)

	C, t[19] = madd2(m, 4341611444501281238, t[20], C)

	C, t[20] = madd2(m, 1416473143490767473, t[21], C)

	C, t[21] = madd2(m, 8108839425640233111, t[22], C)

	C, t[22] = madd2(m, 12843699789396907758, t[23], C)

	C, t[23] = madd3(m, 7066117110915403774, t[24], C, t[25])

	t[24], t[25] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[18], z[0], t[0])
	C, t[1] = madd2(x[18], z[1], t[1], C)
	C, t[2] = madd2(x[18], z[2], t[2], C)
	C, t[3] = madd2(x[18], z[3], t[3], C)
	C, t[4] = madd2(x[18], z[4], t[4], C)
	C, t[5] = madd2(x[18], z[5], t[5], C)
	C, t[6] = madd2(x[18], z[6], t[6], C)
	C, t[7] = madd2(x[18], z[7], t[7], C)
	C, t[8] = madd2(x[18], z[8], t[8], C)
	C, t[9] = madd2(x[18], z[9], t[9], C)
	C, t[10] = madd2(x[18], z[10], t[10], C)
	C, t[11] = madd2(x[18], z[11], t[11], C)
	C, t[12] = madd2(x[18], z[12], t[12], C)
	C, t[13] = madd2(x[18], z[13], t[13], C)
	C, t[14] = madd2(x[18], z[14], t[14], C)
	C, t[15] = madd2(x[18], z[15], t[15], C)
	C, t[16] = madd2(x[18], z[16], t[16], C)
	C, t[17] = madd2(x[18], z[17], t[17], C)
	C, t[18] = madd2(x[18], z[18], t[18], C)
	C, t[19] = madd2(x[18], z[19], t[19], C)
	C, t[20] = madd2(x[18], z[20], t[20], C)
	C, t[21] = madd2(x[18], z[21], t[21], C)
	C, t[22] = madd2(x[18], z[22], t[22], C)
	C, t[23] = madd2(x[18], z[23], t[23], C)
	C, t[24] = madd2(x[18], z[24], t[24], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17091796358385905597

	// -----------------------------------
	// Second loop
	C = madd0(m, 2613528747251268715, t[0])

	C, t[0] = madd2(m, 15958390544650418284, t[1], C)

	C, t[1] = madd2(m, 14785802376424656414, t[2], C)

	C, t[2] = madd2(m, 9368182429938796067, t[3], C)

	C, t[3] = madd2(m, 6480265800587443824, t[4], C)

	C, t[4] = madd2(m, 8615191826401174576, t[5], C)

	C, t[5] = madd2(m, 10163911460783455078, t[6], C)

	C, t[6] = madd2(m, 14053570512254372664, t[7], C)

	C, t[7] = madd2(m, 13404821358025449395, t[8], C)

	C, t[8] = madd2(m, 6361046791004886847, t[9], C)

	C, t[9] = madd2(m, 13468036185189635777, t[10], C)

	C, t[10] = madd2(m, 696198893708043915, t[11], C)

	C, t[11] = madd2(m, 5651185298720720453, t[12], C)

	C, t[12] = madd2(m, 17008052171478956983, t[13], C)

	C, t[13] = madd2(m, 16165709903860652275, t[14], C)

	C, t[14] = madd2(m, 4482943778134271765, t[15], C)

	C, t[15] = madd2(m, 1042631168326180691, t[16], C)

	C, t[16] = madd2(m, 6309782954791921745, t[17], C)

	C, t[17] = madd2(m, 4458516162657784325, t[18], C)

	C, t[18] = madd2(m, 13472759351478842655, t[19], C)

	C, t[19] = madd2(m, 4341611444501281238, t[20], C)

	C, t[20] = madd2(m, 1416473143490767473, t[21], C)

	C, t[21] = madd2(m, 8108839425640233111, t[22], C)

	C, t[22] = madd2(m, 12843699789396907758, t[23], C)

	C, t[23] = madd3(m, 7066117110915403774, t[24], C, t[25])

	t[24], t[25] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[19], z[0], t[0])
	C, t[1] = madd2(x[19], z[1], t[1], C)
	C, t[2] = madd2(x[19], z[2], t[2], C)
	C, t[3] = madd2(x[19], z[3], t[3], C)
	C, t[4] = madd2(x[19], z[4], t[4], C)
	C, t[5] = madd2(x[19], z[5], t[5], C)
	C, t[6] = madd2(x[19], z[6], t[6], C)
	C, t[7] = madd2(x[19], z[7], t[7], C)
	C, t[8] = madd2(x[19], z[8], t[8], C)
	C, t[9] = madd2(x[19], z[9], t[9], C)
	C, t[10] = madd2(x[19], z[10], t[10], C)
	C, t[11] = madd2(x[19], z[11], t[11], C)
	C, t[12] = madd2(x[19], z[12], t[12], C)
	C, t[13] = madd2(x[19], z[13], t[13], C)
	C, t[14] = madd2(x[19], z[14], t[14], C)
	C, t[15] = madd2(x[19], z[15], t[15], C)
	C, t[16] = madd2(x[19], z[16], t[16], C)
	C, t[17] = madd2(x[19], z[17], t[17], C)
	C, t[18] = madd2(x[19], z[18], t[18], C)
	C, t[19] = madd2(x[19], z[19], t[19], C)
	C, t[20] = madd2(x[19], z[20], t[20], C)
	C, t[21] = madd2(x[19], z[21], t[21], C)
	C, t[22] = madd2(x[19], z[22], t[22], C)
	C, t[23] = madd2(x[19], z[23], t[23], C)
	C, t[24] = madd2(x[19], z[24], t[24], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17091796358385905597

	// -----------------------------------
	// Second loop
	C = madd0(m, 2613528747251268715, t[0])

	C, t[0] = madd2(m, 15958390544650418284, t[1], C)

	C, t[1] = madd2(m, 14785802376424656414, t[2], C)

	C, t[2] = madd2(m, 9368182429938796067, t[3], C)

	C, t[3] = madd2(m, 6480265800587443824, t[4], C)

	C, t[4] = madd2(m, 8615191826401174576, t[5], C)

	C, t[5] = madd2(m, 10163911460783455078, t[6], C)

	C, t[6] = madd2(m, 14053570512254372664, t[7], C)

	C, t[7] = madd2(m, 13404821358025449395, t[8], C)

	C, t[8] = madd2(m, 6361046791004886847, t[9], C)

	C, t[9] = madd2(m, 13468036185189635777, t[10], C)

	C, t[10] = madd2(m, 696198893708043915, t[11], C)

	C, t[11] = madd2(m, 5651185298720720453, t[12], C)

	C, t[12] = madd2(m, 17008052171478956983, t[13], C)

	C, t[13] = madd2(m, 16165709903860652275, t[14], C)

	C, t[14] = madd2(m, 4482943778134271765, t[15], C)

	C, t[15] = madd2(m, 1042631168326180691, t[16], C)

	C, t[16] = madd2(m, 6309782954791921745, t[17], C)

	C, t[17] = madd2(m, 4458516162657784325, t[18], C)

	C, t[18] = madd2(m, 13472759351478842655, t[19], C)

	C, t[19] = madd2(m, 4341611444501281238, t[20], C)

	C, t[20] = madd2(m, 1416473143490767473, t[21], C)

	C, t[21] = madd2(m, 8108839425640233111, t[22], C)

	C, t[22] = madd2(m, 12843699789396907758, t[23], C)

	C, t[23] = madd3(m, 7066117110915403774, t[24], C, t[25])

	t[24], t[25] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[20], z[0], t[0])
	C, t[1] = madd2(x[20], z[1], t[1], C)
	C, t[2] = madd2(x[20], z[2], t[2], C)
	C, t[3] = madd2(x[20], z[3], t[3], C)
	C, t[4] = madd2(x[20], z[4], t[4], C)
	C, t[5] = madd2(x[20], z[5], t[5], C)
	C, t[6] = madd2(x[20], z[6], t[6], C)
	C, t[7] = madd2(x[20], z[7], t[7], C)
	C, t[8] = madd2(x[20], z[8], t[8], C)
	C, t[9] = madd2(x[20], z[9], t[9], C)
	C, t[10] = madd2(x[20], z[10], t[10], C)
	C, t[11] = madd2(x[20], z[11], t[11], C)
	C, t[12] = madd2(x[20], z[12], t[12], C)
	C, t[13] = madd2(x[20], z[13], t[13], C)
	C, t[14] = madd2(x[20], z[14], t[14], C)
	C, t[15] = madd2(x[20], z[15], t[15], C)
	C, t[16] = madd2(x[20], z[16], t[16], C)
	C, t[17] = madd2(x[20], z[17], t[17], C)
	C, t[18] = madd2(x[20], z[18], t[18], C)
	C, t[19] = madd2(x[20], z[19], t[19], C)
	C, t[20] = madd2(x[20], z[20], t[20], C)
	C, t[21] = madd2(x[20], z[21], t[21], C)
	C, t[22] = madd2(x[20], z[22], t[22], C)
	C, t[23] = madd2(x[20], z[23], t[23], C)
	C, t[24] = madd2(x[20], z[24], t[24], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17091796358385905597

	// -----------------------------------
	// Second loop
	C = madd0(m, 2613528747251268715, t[0])

	C, t[0] = madd2(m, 15958390544650418284, t[1], C)

	C, t[1] = madd2(m, 14785802376424656414, t[2], C)

	C, t[2] = madd2(m, 9368182429938796067, t[3], C)

	C, t[3] = madd2(m, 6480265800587443824, t[4], C)

	C, t[4] = madd2(m, 8615191826401174576, t[5], C)

	C, t[5] = madd2(m, 10163911460783455078, t[6], C)

	C, t[6] = madd2(m, 14053570512254372664, t[7], C)

	C, t[7] = madd2(m, 13404821358025449395, t[8], C)

	C, t[8] = madd2(m, 6361046791004886847, t[9], C)

	C, t[9] = madd2(m, 13468036185189635777, t[10], C)

	C, t[10] = madd2(m, 696198893708043915, t[11], C)

	C, t[11] = madd2(m, 5651185298720720453, t[12], C)

	C, t[12] = madd2(m, 17008052171478956983, t[13], C)

	C, t[13] = madd2(m, 16165709903860652275, t[14], C)

	C, t[14] = madd2(m, 4482943778134271765, t[15], C)

	C, t[15] = madd2(m, 1042631168326180691, t[16], C)

	C, t[16] = madd2(m, 6309782954791921745, t[17], C)

	C, t[17] = madd2(m, 4458516162657784325, t[18], C)

	C, t[18] = madd2(m, 13472759351478842655, t[19], C)

	C, t[19] = madd2(m, 4341611444501281238, t[20], C)

	C, t[20] = madd2(m, 1416473143490767473, t[21], C)

	C, t[21] = madd2(m, 8108839425640233111, t[22], C)

	C, t[22] = madd2(m, 12843699789396907758, t[23], C)

	C, t[23] = madd3(m, 7066117110915403774, t[24], C, t[25])

	t[24], t[25] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[21], z[0], t[0])
	C, t[1] = madd2(x[21], z[1], t[1], C)
	C, t[2] = madd2(x[21], z[2], t[2], C)
	C, t[3] = madd2(x[21], z[3], t[3], C)
	C, t[4] = madd2(x[21], z[4], t[4], C)
	C, t[5] = madd2(x[21], z[5], t[5], C)
	C, t[6] = madd2(x[21], z[6], t[6], C)
	C, t[7] = madd2(x[21], z[7], t[7], C)
	C, t[8] = madd2(x[21], z[8], t[8], C)
	C, t[9] = madd2(x[21], z[9], t[9], C)
	C, t[10] = madd2(x[21], z[10], t[10], C)
	C, t[11] = madd2(x[21], z[11], t[11], C)
	C, t[12] = madd2(x[21], z[12], t[12], C)
	C, t[13] = madd2(x[21], z[13], t[13], C)
	C, t[14] = madd2(x[21], z[14], t[14], C)
	C, t[15] = madd2(x[21], z[15], t[15], C)
	C, t[16] = madd2(x[21], z[16], t[16], C)
	C, t[17] = madd2(x[21], z[17], t[17], C)
	C, t[18] = madd2(x[21], z[18], t[18], C)
	C, t[19] = madd2(x[21], z[19], t[19], C)
	C, t[20] = madd2(x[21], z[20], t[20], C)
	C, t[21] = madd2(x[21], z[21], t[21], C)
	C, t[22] = madd2(x[21], z[22], t[22], C)
	C, t[23] = madd2(x[21], z[23], t[23], C)
	C, t[24] = madd2(x[21], z[24], t[24], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17091796358385905597

	// -----------------------------------
	// Second loop
	C = madd0(m, 2613528747251268715, t[0])

	C, t[0] = madd2(m, 15958390544650418284, t[1], C)

	C, t[1] = madd2(m, 14785802376424656414, t[2], C)

	C, t[2] = madd2(m, 9368182429938796067, t[3], C)

	C, t[3] = madd2(m, 6480265800587443824, t[4], C)

	C, t[4] = madd2(m, 8615191826401174576, t[5], C)

	C, t[5] = madd2(m, 10163911460783455078, t[6], C)

	C, t[6] = madd2(m, 14053570512254372664, t[7], C)

	C, t[7] = madd2(m, 13404821358025449395, t[8], C)

	C, t[8] = madd2(m, 6361046791004886847, t[9], C)

	C, t[9] = madd2(m, 13468036185189635777, t[10], C)

	C, t[10] = madd2(m, 696198893708043915, t[11], C)

	C, t[11] = madd2(m, 5651185298720720453, t[12], C)

	C, t[12] = madd2(m, 17008052171478956983, t[13], C)

	C, t[13] = madd2(m, 16165709903860652275, t[14], C)

	C, t[14] = madd2(m, 4482943778134271765, t[15], C)

	C, t[15] = madd2(m, 1042631168326180691, t[16], C)

	C, t[16] = madd2(m, 6309782954791921745, t[17], C)

	C, t[17] = madd2(m, 4458516162657784325, t[18], C)

	C, t[18] = madd2(m, 13472759351478842655, t[19], C)

	C, t[19] = madd2(m, 4341611444501281238, t[20], C)

	C, t[20] = madd2(m, 1416473143490767473, t[21], C)

	C, t[21] = madd2(m, 8108839425640233111, t[22], C)

	C, t[22] = madd2(m, 12843699789396907758, t[23], C)

	C, t[23] = madd3(m, 7066117110915403774, t[24], C, t[25])

	t[24], t[25] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[22], z[0], t[0])
	C, t[1] = madd2(x[22], z[1], t[1], C)
	C, t[2] = madd2(x[22], z[2], t[2], C)
	C, t[3] = madd2(x[22], z[3], t[3], C)
	C, t[4] = madd2(x[22], z[4], t[4], C)
	C, t[5] = madd2(x[22], z[5], t[5], C)
	C, t[6] = madd2(x[22], z[6], t[6], C)
	C, t[7] = madd2(x[22], z[7], t[7], C)
	C, t[8] = madd2(x[22], z[8], t[8], C)
	C, t[9] = madd2(x[22], z[9], t[9], C)
	C, t[10] = madd2(x[22], z[10], t[10], C)
	C, t[11] = madd2(x[22], z[11], t[11], C)
	C, t[12] = madd2(x[22], z[12], t[12], C)
	C, t[13] = madd2(x[22], z[13], t[13], C)
	C, t[14] = madd2(x[22], z[14], t[14], C)
	C, t[15] = madd2(x[22], z[15], t[15], C)
	C, t[16] = madd2(x[22], z[16], t[16], C)
	C, t[17] = madd2(x[22], z[17], t[17], C)
	C, t[18] = madd2(x[22], z[18], t[18], C)
	C, t[19] = madd2(x[22], z[19], t[19], C)
	C, t[20] = madd2(x[22], z[20], t[20], C)
	C, t[21] = madd2(x[22], z[21], t[21], C)
	C, t[22] = madd2(x[22], z[22], t[22], C)
	C, t[23] = madd2(x[22], z[23], t[23], C)
	C, t[24] = madd2(x[22], z[24], t[24], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17091796358385905597

	// -----------------------------------
	// Second loop
	C = madd0(m, 2613528747251268715, t[0])

	C, t[0] = madd2(m, 15958390544650418284, t[1], C)

	C, t[1] = madd2(m, 14785802376424656414, t[2], C)

	C, t[2] = madd2(m, 9368182429938796067, t[3], C)

	C, t[3] = madd2(m, 6480265800587443824, t[4], C)

	C, t[4] = madd2(m, 8615191826401174576, t[5], C)

	C, t[5] = madd2(m, 10163911460783455078, t[6], C)

	C, t[6] = madd2(m, 14053570512254372664, t[7], C)

	C, t[7] = madd2(m, 13404821358025449395, t[8], C)

	C, t[8] = madd2(m, 6361046791004886847, t[9], C)

	C, t[9] = madd2(m, 13468036185189635777, t[10], C)

	C, t[10] = madd2(m, 696198893708043915, t[11], C)

	C, t[11] = madd2(m, 5651185298720720453, t[12], C)

	C, t[12] = madd2(m, 17008052171478956983, t[13], C)

	C, t[13] = madd2(m, 16165709903860652275, t[14], C)

	C, t[14] = madd2(m, 4482943778134271765, t[15], C)

	C, t[15] = madd2(m, 1042631168326180691, t[16], C)

	C, t[16] = madd2(m, 6309782954791921745, t[17], C)

	C, t[17] = madd2(m, 4458516162657784325, t[18], C)

	C, t[18] = madd2(m, 13472759351478842655, t[19], C)

	C, t[19] = madd2(m, 4341611444501281238, t[20], C)

	C, t[20] = madd2(m, 1416473143490767473, t[21], C)

	C, t[21] = madd2(m, 8108839425640233111, t[22], C)

	C, t[22] = madd2(m, 12843699789396907758, t[23], C)

	C, t[23] = madd3(m, 7066117110915403774, t[24], C, t[25])

	t[24], t[25] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[23], z[0], t[0])
	C, t[1] = madd2(x[23], z[1], t[1], C)
	C, t[2] = madd2(x[23], z[2], t[2], C)
	C, t[3] = madd2(x[23], z[3], t[3], C)
	C, t[4] = madd2(x[23], z[4], t[4], C)
	C, t[5] = madd2(x[23], z[5], t[5], C)
	C, t[6] = madd2(x[23], z[6], t[6], C)
	C, t[7] = madd2(x[23], z[7], t[7], C)
	C, t[8] = madd2(x[23], z[8], t[8], C)
	C, t[9] = madd2(x[23], z[9], t[9], C)
	C, t[10] = madd2(x[23], z[10], t[10], C)
	C, t[11] = madd2(x[23], z[11], t[11], C)
	C, t[12] = madd2(x[23], z[12], t[12], C)
	C, t[13] = madd2(x[23], z[13], t[13], C)
	C, t[14] = madd2(x[23], z[14], t[14], C)
	C, t[15] = madd2(x[23], z[15], t[15], C)
	C, t[16] = madd2(x[23], z[16], t[16], C)
	C, t[17] = madd2(x[23], z[17], t[17], C)
	C, t[18] = madd2(x[23], z[18], t[18], C)
	C, t[19] = madd2(x[23], z[19], t[19], C)
	C, t[20] = madd2(x[23], z[20], t[20], C)
	C, t[21] = madd2(x[23], z[21], t[21], C)
	C, t[22] = madd2(x[23], z[22], t[22], C)
	C, t[23] = madd2(x[23], z[23], t[23], C)
	C, t[24] = madd2(x[23], z[24], t[24], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17091796358385905597

	// -----------------------------------
	// Second loop
	C = madd0(m, 2613528747251268715, t[0])

	C, t[0] = madd2(m, 15958390544650418284, t[1], C)

	C, t[1] = madd2(m, 14785802376424656414, t[2], C)

	C, t[2] = madd2(m, 9368182429938796067, t[3], C)

	C, t[3] = madd2(m, 6480265800587443824, t[4], C)

	C, t[4] = madd2(m, 8615191826401174576, t[5], C)

	C, t[5] = madd2(m, 10163911460783455078, t[6], C)

	C, t[6] = madd2(m, 14053570512254372664, t[7], C)

	C, t[7] = madd2(m, 13404821358025449395, t[8], C)

	C, t[8] = madd2(m, 6361046791004886847, t[9], C)

	C, t[9] = madd2(m, 13468036185189635777, t[10], C)

	C, t[10] = madd2(m, 696198893708043915, t[11], C)

	C, t[11] = madd2(m, 5651185298720720453, t[12], C)

	C, t[12] = madd2(m, 17008052171478956983, t[13], C)

	C, t[13] = madd2(m, 16165709903860652275, t[14], C)

	C, t[14] = madd2(m, 4482943778134271765, t[15], C)

	C, t[15] = madd2(m, 1042631168326180691, t[16], C)

	C, t[16] = madd2(m, 6309782954791921745, t[17], C)

	C, t[17] = madd2(m, 4458516162657784325, t[18], C)

	C, t[18] = madd2(m, 13472759351478842655, t[19], C)

	C, t[19] = madd2(m, 4341611444501281238, t[20], C)

	C, t[20] = madd2(m, 1416473143490767473, t[21], C)

	C, t[21] = madd2(m, 8108839425640233111, t[22], C)

	C, t[22] = madd2(m, 12843699789396907758, t[23], C)

	C, t[23] = madd3(m, 7066117110915403774, t[24], C, t[25])

	t[24], t[25] = bits.Add64(D, C, 0)
	// -----------------------------------
	// First loop

	C, t[0] = madd1(x[24], z[0], t[0])
	C, t[1] = madd2(x[24], z[1], t[1], C)
	C, t[2] = madd2(x[24], z[2], t[2], C)
	C, t[3] = madd2(x[24], z[3], t[3], C)
	C, t[4] = madd2(x[24], z[4], t[4], C)
	C, t[5] = madd2(x[24], z[5], t[5], C)
	C, t[6] = madd2(x[24], z[6], t[6], C)
	C, t[7] = madd2(x[24], z[7], t[7], C)
	C, t[8] = madd2(x[24], z[8], t[8], C)
	C, t[9] = madd2(x[24], z[9], t[9], C)
	C, t[10] = madd2(x[24], z[10], t[10], C)
	C, t[11] = madd2(x[24], z[11], t[11], C)
	C, t[12] = madd2(x[24], z[12], t[12], C)
	C, t[13] = madd2(x[24], z[13], t[13], C)
	C, t[14] = madd2(x[24], z[14], t[14], C)
	C, t[15] = madd2(x[24], z[15], t[15], C)
	C, t[16] = madd2(x[24], z[16], t[16], C)
	C, t[17] = madd2(x[24], z[17], t[17], C)
	C, t[18] = madd2(x[24], z[18], t[18], C)
	C, t[19] = madd2(x[24], z[19], t[19], C)
	C, t[20] = madd2(x[24], z[20], t[20], C)
	C, t[21] = madd2(x[24], z[21], t[21], C)
	C, t[22] = madd2(x[24], z[22], t[22], C)
	C, t[23] = madd2(x[24], z[23], t[23], C)
	C, t[24] = madd2(x[24], z[24], t[24], C)

	D = C

	// m = t[0]n'[0] mod W
	m = t[0] * 17091796358385905597

	// -----------------------------------
	// Second loop
	C = madd0(m, 2613528747251268715, t[0])

	C, t[0] = madd2(m, 15958390544650418284, t[1], C)

	C, t[1] = madd2(m, 14785802376424656414, t[2], C)

	C, t[2] = madd2(m, 9368182429938796067, t[3], C)

	C, t[3] = madd2(m, 6480265800587443824, t[4], C)

	C, t[4] = madd2(m, 8615191826401174576, t[5], C)

	C, t[5] = madd2(m, 10163911460783455078, t[6], C)

	C, t[6] = madd2(m, 14053570512254372664, t[7], C)

	C, t[7] = madd2(m, 13404821358025449395, t[8], C)

	C, t[8] = madd2(m, 6361046791004886847, t[9], C)

	C, t[9] = madd2(m, 13468036185189635777, t[10], C)

	C, t[10] = madd2(m, 696198893708043915, t[11], C)

	C, t[11] = madd2(m, 5651185298720720453, t[12], C)

	C, t[12] = madd2(m, 17008052171478956983, t[13], C)

	C, t[13] = madd2(m, 16165709903860652275, t[14], C)

	C, t[14] = madd2(m, 4482943778134271765, t[15], C)

	C, t[15] = madd2(m, 1042631168326180691, t[16], C)

	C, t[16] = madd2(m, 6309782954791921745, t[17], C)

	C, t[17] = madd2(m, 4458516162657784325, t[18], C)

	C, t[18] = madd2(m, 13472759351478842655, t[19], C)

	C, t[19] = madd2(m, 4341611444501281238, t[20], C)

	C, t[20] = madd2(m, 1416473143490767473, t[21], C)

	C, t[21] = madd2(m, 8108839425640233111, t[22], C)

	C, t[22] = madd2(m, 12843699789396907758, t[23], C)

	C, t[23] = madd3(m, 7066117110915403774, t[24], C, t[25])

	t[24], t[25] = bits.Add64(D, C, 0)

	if t[25] != 0 {
		// we need to reduce, we have a result on 26 words
		var b uint64
		z[0], b = bits.Sub64(t[0], 2613528747251268715, 0)
		z[1], b = bits.Sub64(t[1], 15958390544650418284, b)
		z[2], b = bits.Sub64(t[2], 14785802376424656414, b)
		z[3], b = bits.Sub64(t[3], 9368182429938796067, b)
		z[4], b = bits.Sub64(t[4], 6480265800587443824, b)
		z[5], b = bits.Sub64(t[5], 8615191826401174576, b)
		z[6], b = bits.Sub64(t[6], 10163911460783455078, b)
		z[7], b = bits.Sub64(t[7], 14053570512254372664, b)
		z[8], b = bits.Sub64(t[8], 13404821358025449395, b)
		z[9], b = bits.Sub64(t[9], 6361046791004886847, b)
		z[10], b = bits.Sub64(t[10], 13468036185189635777, b)
		z[11], b = bits.Sub64(t[11], 696198893708043915, b)
		z[12], b = bits.Sub64(t[12], 5651185298720720453, b)
		z[13], b = bits.Sub64(t[13], 17008052171478956983, b)
		z[14], b = bits.Sub64(t[14], 16165709903860652275, b)
		z[15], b = bits.Sub64(t[15], 4482943778134271765, b)
		z[16], b = bits.Sub64(t[16], 1042631168326180691, b)
		z[17], b = bits.Sub64(t[17], 6309782954791921745, b)
		z[18], b = bits.Sub64(t[18], 4458516162657784325, b)
		z[19], b = bits.Sub64(t[19], 13472759351478842655, b)
		z[20], b = bits.Sub64(t[20], 4341611444501281238, b)
		z[21], b = bits.Sub64(t[21], 1416473143490767473, b)
		z[22], b = bits.Sub64(t[22], 8108839425640233111, b)
		z[23], b = bits.Sub64(t[23], 12843699789396907758, b)
		z[24], _ = bits.Sub64(t[24], 7066117110915403774, b)
		return z
	}

	// copy t into z
	z[0] = t[0]
	z[1] = t[1]
	z[2] = t[2]
	z[3] = t[3]
	z[4] = t[4]
	z[5] = t[5]
	z[6] = t[6]
	z[7] = t[7]
	z[8] = t[8]
	z[9] = t[9]
	z[10] = t[10]
	z[11] = t[11]
	z[12] = t[12]
	z[13] = t[13]
	z[14] = t[14]
	z[15] = t[15]
	z[16] = t[16]
	z[17] = t[17]
	z[18] = t[18]
	z[19] = t[19]
	z[20] = t[20]
	z[21] = t[21]
	z[22] = t[22]
	z[23] = t[23]
	z[24] = t[24]

	// if z > q --> z -= q
	// note: this is NOT constant time
	if !(z[24] < 7066117110915403774 || (z[24] == 7066117110915403774 && (z[23] < 12843699789396907758 || (z[23] == 12843699789396907758 && (z[22] < 8108839425640233111 || (z[22] == 8108839425640233111 && (z[21] < 1416473143490767473 || (z[21] == 1416473143490767473 && (z[20] < 4341611444501281238 || (z[20] == 4341611444501281238 && (z[19] < 13472759351478842655 || (z[19] == 13472759351478842655 && (z[18] < 4458516162657784325 || (z[18] == 4458516162657784325 && (z[17] < 6309782954791921745 || (z[17] == 6309782954791921745 && (z[16] < 1042631168326180691 || (z[16] == 1042631168326180691 && (z[15] < 4482943778134271765 || (z[15] == 4482943778134271765 && (z[14] < 16165709903860652275 || (z[14] == 16165709903860652275 && (z[13] < 17008052171478956983 || (z[13] == 17008052171478956983 && (z[12] < 5651185298720720453 || (z[12] == 5651185298720720453 && (z[11] < 696198893708043915 || (z[11] == 696198893708043915 && (z[10] < 13468036185189635777 || (z[10] == 13468036185189635777 && (z[9] < 6361046791004886847 || (z[9] == 6361046791004886847 && (z[8] < 13404821358025449395 || (z[8] == 13404821358025449395 && (z[7] < 14053570512254372664 || (z[7] == 14053570512254372664 && (z[6] < 10163911460783455078 || (z[6] == 10163911460783455078 && (z[5] < 8615191826401174576 || (z[5] == 8615191826401174576 && (z[4] < 6480265800587443824 || (z[4] == 6480265800587443824 && (z[3] < 9368182429938796067 || (z[3] == 9368182429938796067 && (z[2] < 14785802376424656414 || (z[2] == 14785802376424656414 && (z[1] < 15958390544650418284 || (z[1] == 15958390544650418284 && (z[0] < 2613528747251268715))))))))))))))))))))))))))))))))))))))))))))))))) {
		var b uint64
		z[0], b = bits.Sub64(z[0], 2613528747251268715, 0)
		z[1], b = bits.Sub64(z[1], 15958390544650418284, b)
		z[2], b = bits.Sub64(z[2], 14785802376424656414, b)
		z[3], b = bits.Sub64(z[3], 9368182429938796067, b)
		z[4], b = bits.Sub64(z[4], 6480265800587443824, b)
		z[5], b = bits.Sub64(z[5], 8615191826401174576, b)
		z[6], b = bits.Sub64(z[6], 10163911460783455078, b)
		z[7], b = bits.Sub64(z[7], 14053570512254372664, b)
		z[8], b = bits.Sub64(z[8], 13404821358025449395, b)
		z[9], b = bits.Sub64(z[9], 6361046791004886847, b)
		z[10], b = bits.Sub64(z[10], 13468036185189635777, b)
		z[11], b = bits.Sub64(z[11], 696198893708043915, b)
		z[12], b = bits.Sub64(z[12], 5651185298720720453, b)
		z[13], b = bits.Sub64(z[13], 17008052171478956983, b)
		z[14], b = bits.Sub64(z[14], 16165709903860652275, b)
		z[15], b = bits.Sub64(z[15], 4482943778134271765, b)
		z[16], b = bits.Sub64(z[16], 1042631168326180691, b)
		z[17], b = bits.Sub64(z[17], 6309782954791921745, b)
		z[18], b = bits.Sub64(z[18], 4458516162657784325, b)
		z[19], b = bits.Sub64(z[19], 13472759351478842655, b)
		z[20], b = bits.Sub64(z[20], 4341611444501281238, b)
		z[21], b = bits.Sub64(z[21], 1416473143490767473, b)
		z[22], b = bits.Sub64(z[22], 8108839425640233111, b)
		z[23], b = bits.Sub64(z[23], 12843699789396907758, b)
		z[24], _ = bits.Sub64(z[24], 7066117110915403774, b)
	}
	return z
}

func (z *Element25) Legendre() int {
	var l Element25
	// z^((p-1)/2)
	l.Exp(*z,
		1306764373625634357,
		7979195272325209142,
		16616273225067104015,
		4684091214969398033,
		3240132900293721912,
		4307595913200587288,
		5081955730391727539,
		16250157292981962140,
		15925782715867500505,
		12403895432357219231,
		15957390129449593696,
		9571471483708797765,
		12048964686215136034,
		17727398122594254299,
		17306226988785101945,
		11464843925921911690,
		9744687621017866153,
		12378263514250736680,
		11452630118183667970,
		6736379675739421327,
		11394177759105416427,
		9931608608600159544,
		4054419712820116555,
		6421849894698453879,
		3533058555457701887,
	)

	if l.IsZero() {
		return 0
	}

	// if l == 1
	if (l[24] == 4314509851878744066) && (l[23] == 11206088568625287715) && (l[22] == 2229065222429085393) && (l[21] == 15613797786728016669) && (l[20] == 9763521184706989138) && (l[19] == 9947969444461417921) && (l[18] == 9529711748393982965) && (l[17] == 5827178164125708125) && (l[16] == 16361481737057190233) && (l[15] == 9480856517441008084) && (l[14] == 4562068339697798680) && (l[13] == 2877383804461189265) && (l[12] == 7144373476268110709) && (l[11] == 17054346286293463784) && (l[10] == 9957415777039831677) && (l[9] == 5724650491699777920) && (l[8] == 10083845431368204440) && (l[7] == 8786347122910357902) && (l[6] == 16565665225852193075) && (l[5] == 1216360420907202463) && (l[4] == 5486212472534663966) && (l[3] == 18157123287541511096) && (l[2] == 7321883394569790402) && (l[1] == 4976707058118266663) && (l[0] == 13219686579207014186) {
		return 1
	}
	return -1
}

// Sqrt z = √x mod q
// if the square root doesn't exist (x is not a square mod q)
// Sqrt leaves z unchanged and returns nil
func (z *Element25) Sqrt(x *Element25) *Element25 {
	switch x.Legendre() {
	case -1:
		return nil
	case 0:
		return z.SetZero()
	case 1:
		break
	}
	// q ≡ 3 (mod 4)
	// using  z ≡ ± x^((p+1)/4) (mod q)
	return z.Exp(*x,
		653382186812817179,
		13212969673017380379,
		17531508649388327815,
		2342045607484699016,
		1620066450146860956,
		11377169993455069452,
		2540977865195863769,
		17348450683345756878,
		17186263394788526060,
		6201947716178609615,
		17202067101579572656,
		4785735741854398882,
		15247854379962343825,
		18087071098151902957,
		8653113494392550972,
		14955793999815731653,
		4872343810508933076,
		6189131757125368340,
		14949687095946609793,
		12591561874724486471,
		5697088879552708213,
		14189176341154855580,
		11250581893264834085,
		12434296984204002747,
		1766529277728850943,
	)
}

// Square z = x * x mod q
func (z *Element25) Square(x *Element25) *Element25 {
	return z.Mul(x, x)
}

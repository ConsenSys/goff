version: 2.1
jobs:
  build:
    docker:
      - image: circleci/golang:latest
    environment:
      TEST_RESULTS: /tmp/test-results
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-v1-{{ checksum "go.sum" }}
      - run: if [[ -n $(gofmt -l .) ]]; then echo "Please run gofmt"; exit 1; fi
      - run: go vet -v ./...
      - run: go test -v ./cmd/ -run=VersionIsGenerated # ensure version is generated
      - run: go get golang.org/x/tools/cmd/goimports
      - run: go generate ./...
      - run: go vet -v ./...
      - run: go build -v ./...
      - save_cache:
          key: go-mod-v1-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
  test:
    docker:
      - image: circleci/golang:latest
    environment:
    steps:
      - checkout
      - run: mkdir -p  /tmp/test-results
      - restore_cache:
          keys:
            - go-mod-v1-{{ checksum "go.sum" }}
      - run: go get golang.org/x/tools/cmd/goimports
      - run: go generate ./...
      - run: gotestsum --junitfile  /tmp/test-results/results.xml -- ./... -short -count=1
      - store_test_results:
          path: /tmp/test-results
workflows:
  version: 2
  test:
    jobs:
    - build
    - test:
        requires:
        - build